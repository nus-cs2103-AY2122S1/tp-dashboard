[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2122S1-CS2103T-T13-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"# TA\u003csup\u003e2\u003c/sup\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"* This is **a project done by Software Engineering (SE) students**.","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"* The project simulates an ongoing software project for a desktop application designed to help teaching assistants with organising their","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"  own modules as well as keeping track of their students\u0027 work.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"* It is named `TA^2` as it is designed to be the assistant to teaching assistants.","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"* This project is a **part of the se-education.org** initiative.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"  ","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"## Acknowledgement","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"* **This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).**","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"  * For the detailed documentation of  AddressBook-Level3 project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"yeo-yiheng":1,"weichang18":11,"-":5}},{"path":"config/checkstyle/suppressions.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\"?\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE suppressions PUBLIC","lastModifiedDate":"2017-08-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/suppressions_1_2.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003csuppressions\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003csuppress checks\u003d\"JavadocType\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethodCheck\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"  \u003csuppress checks\u003d\"CustomImportOrder\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"  \u003csuppress checks\u003d\"CustomImportOrder\" files\u003d\".java\"/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"  \u003csuppress checks\u003d\"AvoidStarImport\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"  \u003csuppress checks\u003d\"AvoidStarImport\" files\u003d\".java\"/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"  \u003csuppress checks\u003d\"MissingJavadocMethod\" files\u003d\".*Test\\.java\"/\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/suppressions\u003e","lastModifiedDate":"2017-08-20"}],"authorContributionMap":{"qinguorui2001":3,"yeo-yiheng":2,"-":10}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"### Lim Wei Chang","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"\u003cimg src\u003d\"images/weichang18.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"[[github](http://github.com/weichang18)]","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"[[portfolio](team/weichang18.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"### Clifford Kaleb Toh Jing Zhe","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"\u003cimg src\u003d\"images/droffilc13.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"[[github](http://github.com/droffilc13)]","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"[[portfolio](team/droffilc13.md)]","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"* Role: Developer","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"### QIN GUORUI","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"\u003cimg src\u003d\"images/qinguorui2001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"[[github](http://github.com/qinguorui2001)]","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"[[portfolio](team/qinguorui2001.md)]","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"* Role: Code quality reviewer","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"* Responsibilities: Looks after code quality, ensures adherence to coding standards, etc.","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"### Yeo Yiheng","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"\u003cimg src\u003d\"images/yeo-yiheng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"[[github](http://github.com/yeo-yiheng)] ","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"[[portfolio](team/yeo-yiheng.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"* Role: Developer and Documentation","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"* Responsibilities: Ensures proper code documentation and  adherence to the documentation standards.","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"### Zheng Tao Jun","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"\u003cimg src\u003d\"images/taojun99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"[[github](http://github.com/TaoJun99)]","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"[[portfolio](team/taojun99.md)]","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Droffilc13":6,"qinguorui2001":6,"yeo-yiheng":6,"TaoJun99":4,"weichang18":6,"-":33}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"* TA\u003csup\u003e2\u003c/sup\u003e is adapted from [AddressBook-Level3 (AB3)](https://github.com/nus-cs2103-AY2122S1/tp)","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `p-delete 1`.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"TaoJun99"},"content":"### Giveall feature","lastModifiedDate":"2021-10-20"},{"lineNumber":239,"author":{"gitId":"TaoJun99"},"content":"The giveall command allows users to add the specified assignment to all persons in the same module which are stored in ","lastModifiedDate":"2021-10-20"},{"lineNumber":240,"author":{"gitId":"TaoJun99"},"content":"the model. Persons who already have the specified assignment will not have a duplicated assignment added to them. The ","lastModifiedDate":"2021-10-20"},{"lineNumber":241,"author":{"gitId":"TaoJun99"},"content":"command is abstracted as `AddAssignmentToAllCommand` and extends `Command`. When the user inputs the command,","lastModifiedDate":"2021-10-20"},{"lineNumber":242,"author":{"gitId":"TaoJun99"},"content":"`Command#execute` is called and returns a `CommandResult`.","lastModifiedDate":"2021-10-20"},{"lineNumber":243,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":244,"author":{"gitId":"TaoJun99"},"content":"Given below is an example usage scenario and how the `AddAssignmentToAllCommand` is executed.","lastModifiedDate":"2021-10-20"},{"lineNumber":245,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":246,"author":{"gitId":"TaoJun99"},"content":"Step 1. The user executes `p-list` command to see the current list of persons.","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"TaoJun99"},"content":"Step 2. The user executes `giveall m/CS2100 d/Assignment 2 by/ 03/10/2021` command to add assignments to all persons in","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"TaoJun99"},"content":"the specified module. When `Command#execute` is called, the `giveall m/...` command will filter out persons in the current ","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"TaoJun99"},"content":"displayed list with the module field `CS2100`and add the specified assignment to them if they do not have the assignment.","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"TaoJun99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If there are no persons with the specified ","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"TaoJun99"},"content":"module field, it will return an error to the user. ","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"yeo-yiheng"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"TaoJun99"},"content":"The following sequence diagram shows how the removeall command is executed:","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"TaoJun99"},"content":"![GiveallSequenceDiagram](images/GiveAllSequenceDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":259,"author":{"gitId":"TaoJun99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddAssignmentToAllCommand` ","lastModifiedDate":"2021-10-20"},{"lineNumber":260,"author":{"gitId":"TaoJun99"},"content":"should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-20"},{"lineNumber":261,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":262,"author":{"gitId":"yeo-yiheng"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"TaoJun99"},"content":"Step 3. The user executes `a-show 1` to check that the specified assignment has been added for persons in the specified","lastModifiedDate":"2021-10-20"},{"lineNumber":265,"author":{"gitId":"TaoJun99"},"content":"module.","lastModifiedDate":"2021-10-20"},{"lineNumber":266,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"TaoJun99"},"content":"The following activity diagram summarizes what happens when a user executes the giveall command:","lastModifiedDate":"2021-10-20"},{"lineNumber":268,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":269,"author":{"gitId":"TaoJun99"},"content":"\u003cimg src\u003d\"images/GiveAllActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":270,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"TaoJun99"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"TaoJun99"},"content":"**Aspect: Adds assignment to persons in current displayed list or to all persons:**","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":274,"author":{"gitId":"TaoJun99"},"content":"* **Alternative 1:** Adds assignment of persons in current displayed list","lastModifiedDate":"2021-10-20"},{"lineNumber":275,"author":{"gitId":"TaoJun99"},"content":"    * Pros: If the displayed list is shorter, the addition of assignments will be faster.","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"TaoJun99"},"content":"    * Cons: User has to carry out `p-list` command first if addition of assignments is desired for all persons","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":278,"author":{"gitId":"TaoJun99"},"content":"* **Alternative 2 (current choice):** Add assignment to all persons in the module","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"TaoJun99"},"content":"    * Pros: Allows user to add assignment to all persons even when some persons are not displayed in the list","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"TaoJun99"},"content":"    * Cons: Might take longer to execute","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"TaoJun99"},"content":"* Considering the fact that the giveall command is meant for users to add assignments to all persons in the specified ","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"TaoJun99"},"content":"module, **alternative 2** was chosen as it meets this specification. Moreover, it will not duplicate the assignment for ","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"TaoJun99"},"content":"persons who already have the assignment.","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"TaoJun99"},"content":"**Alternative 1** requires an additional command `p-list` to ensure the displayed list contains all persons, which ","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"TaoJun99"},"content":"means it is less convenient for users as they have to do extra work. ","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"TaoJun99"},"content":"### [Proposed] Removeall feature","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"TaoJun99"},"content":"The removeall command allows users to remove the specified assignment of all persons in the same module displayed in the GUI.","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"TaoJun99"},"content":"It is abstracted as `DeleteAssignmentOfAllCommand` and extends `Command`. When the user inputs the command, ","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"TaoJun99"},"content":"`Command#execute` is called and returns a `CommandResult`. ","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"TaoJun99"},"content":"Given below is an example usage scenario and how the `DeleteAssignmentOfAllCommand` is executed.","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":296,"author":{"gitId":"TaoJun99"},"content":"Step 1. The user executes `p-list` command to see the current list of persons.","lastModifiedDate":"2021-10-20"},{"lineNumber":297,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"TaoJun99"},"content":"Step 2. The user executes `removeall m/CS2100 d/Assignment 2 by/ 03/10/2021` command to remove all the completed assignments.","lastModifiedDate":"2021-10-20"},{"lineNumber":299,"author":{"gitId":"TaoJun99"},"content":"When `Command#execute` is called, the `removeall m/...` command will filter out persons in the current displayed list ","lastModifiedDate":"2021-10-20"},{"lineNumber":300,"author":{"gitId":"TaoJun99"},"content":"with the module field `CS2100`and remove the specified assignment if the person has completed the assignment. ","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"TaoJun99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If there are no persons with the specified ","lastModifiedDate":"2021-10-20"},{"lineNumber":302,"author":{"gitId":"TaoJun99"},"content":"module field or there are no persons who have completed the assignment, it will return an error to the user. ","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"yeo-yiheng"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":306,"author":{"gitId":"TaoJun99"},"content":"The following sequence diagram shows how the removeall command is executed:","lastModifiedDate":"2021-10-20"},{"lineNumber":307,"author":{"gitId":"TaoJun99"},"content":"![GiveallSequenceDiagram](images/RemoveAllSequenceDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":309,"author":{"gitId":"TaoJun99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `RemoveAssignmentOfAllCommand` ","lastModifiedDate":"2021-10-20"},{"lineNumber":310,"author":{"gitId":"TaoJun99"},"content":"should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-20"},{"lineNumber":311,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":312,"author":{"gitId":"yeo-yiheng"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"TaoJun99"},"content":"Step 3. The user executes `a-show 1` to check that the specified assignment has been removed for persons in the specified ","lastModifiedDate":"2021-10-20"},{"lineNumber":315,"author":{"gitId":"TaoJun99"},"content":"module who has completed the assignment.","lastModifiedDate":"2021-10-20"},{"lineNumber":316,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":317,"author":{"gitId":"TaoJun99"},"content":"The following activity diagram summarizes what happens when a user executes the giveall command:","lastModifiedDate":"2021-10-20"},{"lineNumber":318,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"TaoJun99"},"content":"\u003cimg src\u003d\"images/RemoveAllActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":320,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":321,"author":{"gitId":"TaoJun99"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":322,"author":{"gitId":"TaoJun99"},"content":"**Aspect: Deletes assignment of persons in current displayed list or for all persons:**","lastModifiedDate":"2021-10-20"},{"lineNumber":323,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":324,"author":{"gitId":"TaoJun99"},"content":"* **Alternative 1 (current choice):** Deletes assignment of persons in current displayed list","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"TaoJun99"},"content":"    * Pros: Allows for a safer delete of assignments","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"TaoJun99"},"content":"    * Cons: User has to carry out `p-list` command first if deletion of assignments is desired for all persons","lastModifiedDate":"2021-10-20"},{"lineNumber":327,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":328,"author":{"gitId":"TaoJun99"},"content":"* **Alternative 2:** Deletes assignment of all persons ","lastModifiedDate":"2021-10-20"},{"lineNumber":329,"author":{"gitId":"TaoJun99"},"content":"    * Pros: Allows user to delete assignment of all persons without the need of additional commands","lastModifiedDate":"2021-10-20"},{"lineNumber":330,"author":{"gitId":"TaoJun99"},"content":"    * Cons: Undesired deletion of assignment of persons not in displayed list may occur","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":332,"author":{"gitId":"TaoJun99"},"content":"* Considering the fact that TA\u003csup\u003e2\u003c/sup\u003e is designed to be efficient in managing student submissions,**alternative 1** is ","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"TaoJun99"},"content":"chosen. The potential undesired deletion of assignments in **alternative 2** means the user has to manually recover the ","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"TaoJun99"},"content":"deleted assignment by adding the assignment again. Compared to the additional time taken to execute the `p-list` command","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"TaoJun99"},"content":"in **alternative 1**, it may take up much more time. ","lastModifiedDate":"2021-10-20"},{"lineNumber":336,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"yeo-yiheng"},"content":"### Friendlier Command Inputs","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"yeo-yiheng"},"content":"In striving to adopt a more user-centric approach in command recognition, additional commands are","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"yeo-yiheng"},"content":"included on top of the original commands which stuck by a strict and predefined prefix. This offered","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"yeo-yiheng"},"content":"very little flexibility to our users in an event they make a mistake.","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"yeo-yiheng"},"content":"Here are the commands that currently support a *friendly* input command:","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"yeo-yiheng"},"content":"1. `a-add`","lastModifiedDate":"2021-10-21"},{"lineNumber":348,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":349,"author":{"gitId":"yeo-yiheng"},"content":"The `a-add` command has the sole purpose of adding a single assignment to an individual in the list.","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"yeo-yiheng"},"content":"The following table contains the new *friendly* commands that a user may provide, instead of the","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"yeo-yiheng"},"content":"original command inputs.","lastModifiedDate":"2021-10-21"},{"lineNumber":352,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":353,"author":{"gitId":"yeo-yiheng"},"content":"| Friendly Command                            | Corresponding Command                         |   Example Usages                                                         |                                                ","lastModifiedDate":"2021-10-21"},{"lineNumber":354,"author":{"gitId":"yeo-yiheng"},"content":"| ------------------------------------------- | --------------------------------------------- | ------------------------------------------------------------------------ |","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"yeo-yiheng"},"content":"| tmr                                         | sets the date to be tomorrow                  | a-add n/name d/description by/tmr                                        |","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"yeo-yiheng"},"content":"| today                                       | sets the date to be the current date          | a-add n/name d/description by/today                                      |                                                                        |","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"yeo-yiheng"},"content":"| week                                        | sets the date to be a week from now           | a-add n/name d/description by/week                                       |","lastModifiedDate":"2021-10-21"},{"lineNumber":358,"author":{"gitId":"yeo-yiheng"},"content":"| mon                                         | sets the date to be the upcoming monday       | a-add n/name d/description by/mon                                        |","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"yeo-yiheng"},"content":"| tue                                         | sets the date to be the upcoming tuesday      | a-add n/name d/description by/tue                                        |                                                                         |","lastModifiedDate":"2021-10-21"},{"lineNumber":360,"author":{"gitId":"yeo-yiheng"},"content":"| wed                                         | sets the date to be the upcoming wednesday    | a-add n/name d/description by/wed                                        |","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"yeo-yiheng"},"content":"| thu                                         | sets the date to be the upcoming thursday     | a-add n/name d/description by/thu                                        |","lastModifiedDate":"2021-10-21"},{"lineNumber":362,"author":{"gitId":"yeo-yiheng"},"content":"| fri                                         | sets the date to be the upcoming friday       | a-add n/name d/description by/fri                                        | ","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"yeo-yiheng"},"content":"| sat                                         | sets the date to be the upcoming saturday     | a-add n/name d/description by/sat                                        |","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"yeo-yiheng"},"content":"| sun                                         | sets the date to be the upcoming sunday       | a-add n/name d/description by/sun                                        |","lastModifiedDate":"2021-10-21"},{"lineNumber":365,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":366,"author":{"gitId":"yeo-yiheng"},"content":"When the user enters a *friendly* command, the `AddressBookParser` class will recognize the command","lastModifiedDate":"2021-10-21"},{"lineNumber":367,"author":{"gitId":"yeo-yiheng"},"content":"to be an add assignment command. This triggers the `AddAssignmentParser#parse` method to be called with the","lastModifiedDate":"2021-10-21"},{"lineNumber":368,"author":{"gitId":"yeo-yiheng"},"content":"user input arguments. From there, the `AddAssignmentParser` parses each individual argument","lastModifiedDate":"2021-10-21"},{"lineNumber":369,"author":{"gitId":"yeo-yiheng"},"content":"token and for the *friendly* command, it will be recognized within the `DueDate` class as a date with","lastModifiedDate":"2021-10-21"},{"lineNumber":370,"author":{"gitId":"yeo-yiheng"},"content":"a *friendly* command format. This then calls the Java `TemporalAdjusters` class to return a `LocalDate` instance","lastModifiedDate":"2021-10-21"},{"lineNumber":371,"author":{"gitId":"yeo-yiheng"},"content":"that represents the desired *friendly* command input. From here, the `AddAssignmentCommand` class is then instantiated and","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"yeo-yiheng"},"content":"results actualized by the `Model` component.","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"yeo-yiheng"},"content":"The following activity diagram shows the possible paths whilst a user adds an assignment:","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"yeo-yiheng"},"content":"![AddAssignmentActivityDiagram](images/AddAssignmentActivityDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"yeo-yiheng"},"content":"The following sequence diagram shows the logic sequence of an AddAssignment command execution:","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"yeo-yiheng"},"content":"![AddAssignmentSequenceDiagram](images/AddAssignmentSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":383,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"yeo-yiheng"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"yeo-yiheng"},"content":"**Aspect: Rigidity in allowing users to add assignments correctly yet handle multiple short-form user inputs:**","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":387,"author":{"gitId":"yeo-yiheng"},"content":"* **Alternative 1 (current choice):** Allows users to add based on format and some *friendly* commands","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"yeo-yiheng"},"content":"    * Pros: Allows for a safer addition of assignment, ensuring strict adherence to format","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"yeo-yiheng"},"content":"    * Cons: User has to memorize the command usage or get it wrong the first time to view the error message","lastModifiedDate":"2021-10-21"},{"lineNumber":390,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":391,"author":{"gitId":"yeo-yiheng"},"content":"* **Alternative 2:** Simplify the rigid commands and make all commands user-friendly ","lastModifiedDate":"2021-10-21"},{"lineNumber":392,"author":{"gitId":"yeo-yiheng"},"content":"    * Pros: Users can perform more powerful addition of assignments without having to type too much or following too strict ","lastModifiedDate":"2021-10-21"},{"lineNumber":393,"author":{"gitId":"yeo-yiheng"},"content":"  of a guideline","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"yeo-yiheng"},"content":"    * Cons: Requires the application to recognize a lot of different words, be it short or long form, to allow","lastModifiedDate":"2021-10-21"},{"lineNumber":395,"author":{"gitId":"yeo-yiheng"},"content":"    maximum user-friendliness, which may not be too feasible to achieve","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"yeo-yiheng"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":397,"author":{"gitId":"yeo-yiheng"},"content":"#### [Proposed] Friendly Commands","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"yeo-yiheng"},"content":"1. `p-find`","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":400,"author":{"gitId":"yeo-yiheng"},"content":"#### [COMING SOON!!!]","lastModifiedDate":"2021-10-21"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":410,"author":{"gitId":"yeo-yiheng"},"content":"* ","lastModifiedDate":"2021-10-21"},{"lineNumber":411,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"TaoJun99"},"content":"**Target user**","lastModifiedDate":"2021-09-22"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"TaoJun99"},"content":"TA\u003csup\u003e2\u003c/sup\u003e is developed for Teaching Assistants(TA) and Professors in the School of Computing(SOC) at the National ","lastModifiedDate":"2021-09-22"},{"lineNumber":422,"author":{"gitId":"TaoJun99"},"content":"University of Singapore(NUS).","lastModifiedDate":"2021-09-22"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":424,"author":{"gitId":"TaoJun99"},"content":"**Profile:**","lastModifiedDate":"2021-09-22"},{"lineNumber":425,"author":{"gitId":"TaoJun99"},"content":"* has a need to manage student submissions","lastModifiedDate":"2021-09-22"},{"lineNumber":426,"author":{"gitId":"TaoJun99"},"content":"* has a need to take note of student inquiries","lastModifiedDate":"2021-09-22"},{"lineNumber":427,"author":{"gitId":"TaoJun99"},"content":"* has a need to organise information across modules","lastModifiedDate":"2021-09-22"},{"lineNumber":428,"author":{"gitId":"TaoJun99"},"content":"* (for TAs) has a need to organise own tasks and tasks as a TA","lastModifiedDate":"2021-09-22"},{"lineNumber":429,"author":{"gitId":"TaoJun99"},"content":"* has no time to organise information manually","lastModifiedDate":"2021-09-22"},{"lineNumber":430,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"TaoJun99"},"content":"**Value proposition**","lastModifiedDate":"2021-09-22"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"TaoJun99"},"content":"TA\u003csup\u003e2\u003c/sup\u003e aims to help SOC TAs and professors by managing student submissions in an ","lastModifiedDate":"2021-09-22"},{"lineNumber":435,"author":{"gitId":"TaoJun99"},"content":"efficient manner. Without the need to manually keep track of information in a separate document, they","lastModifiedDate":"2021-09-22"},{"lineNumber":436,"author":{"gitId":"TaoJun99"},"content":"will be able to save more time. As users who are able to type fast, they will be able to manage module","lastModifiedDate":"2021-09-22"},{"lineNumber":437,"author":{"gitId":"TaoJun99"},"content":"information(student submissions etc.) much faster than when using a mouse/GUI driven app.","lastModifiedDate":"2021-09-22"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"| Priority | As a …​                                  | I want to …​                               | So that I can…​                                                       |                                                ","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"TaoJun99"},"content":"| -------- | ------------------------------------------- | --------------------------------------------- | ------------------------------------------------------------------------ |","lastModifiedDate":"2021-10-20"},{"lineNumber":445,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor for the first use                     | see all commands available                    | recall commands and use them properly when I forget how to use the app   |","lastModifiedDate":"2021-09-24"},{"lineNumber":446,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor                                       | add a new student or professor                |                                                                          |","lastModifiedDate":"2021-09-24"},{"lineNumber":447,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor                                       | delete a student or professor                 | remove entries that I no longer need                                     |","lastModifiedDate":"2021-09-24"},{"lineNumber":448,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor                                       | find a person by name or module               | locate details of persons without having to go through the entire list   |","lastModifiedDate":"2021-09-24"},{"lineNumber":449,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor                                       | assign tasks to students                      |                                                                          |","lastModifiedDate":"2021-09-24"},{"lineNumber":450,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor                                       | delete tasks assigned before                  | remove the outdated assignments for students                             |","lastModifiedDate":"2021-09-24"},{"lineNumber":451,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor                                       | mark students\u0027 tasks as done                  | record students\u0027 progress more easily                                    |","lastModifiedDate":"2021-09-24"},{"lineNumber":452,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor teaching online                       | access the web links used for teaching        | access information from teaching websites immediately                    |","lastModifiedDate":"2021-09-24"},{"lineNumber":453,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor for several modules                   | organize student data according to module     | manage my tasks of different modules in an organised manner              |","lastModifiedDate":"2021-09-24"},{"lineNumber":454,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | student and tutor                           | organise my tasks in order of deadline        | manage my time better                                                    |","lastModifiedDate":"2021-09-24"},{"lineNumber":455,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | easily frustrated tutor                     | search up contacts on the search bar fuss-free| save time used for fighting the app over syntax issues                   |","lastModifiedDate":"2021-09-24"},{"lineNumber":456,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor with many persons in the contact book | sort persons by name                          | locate a person easily                                                   |","lastModifiedDate":"2021-09-24"},{"lineNumber":457,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | responsible tutor                           | track students\u0027 progress on their assignments | identify and reach out to those who need help                            |","lastModifiedDate":"2021-09-24"},{"lineNumber":458,"author":{"gitId":"qinguorui2001"},"content":"| `* * *`  | tutor                                       | list all students I am teaching               | ensure I added right and correct number of people before                 |","lastModifiedDate":"2021-09-24"},{"lineNumber":459,"author":{"gitId":"qinguorui2001"},"content":"| `* *`    | busy tutor                                  | list certain people I interacted frequently   | save time searching their name whenever I start app                      | ","lastModifiedDate":"2021-09-24"},{"lineNumber":460,"author":{"gitId":"qinguorui2001"},"content":"| `*`      | clumsy tutor                                | undo actions                                  | recover information that I accidentally delete                           |","lastModifiedDate":"2021-09-24"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":462,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"weichang18"},"content":"**Use case: UC01 - Find a person**","lastModifiedDate":"2021-09-25"},{"lineNumber":469,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":470,"author":{"gitId":"weichang18"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":471,"author":{"gitId":"weichang18"},"content":"1. User requests to find a person with the specified keyword(s)","lastModifiedDate":"2021-09-25"},{"lineNumber":472,"author":{"gitId":"weichang18"},"content":"2. TA\u003csup\u003e2\u003c/sup\u003e shows a list of persons with matching keyword(s)","lastModifiedDate":"2021-09-25"},{"lineNumber":473,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":474,"author":{"gitId":"weichang18"},"content":"   Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":475,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":476,"author":{"gitId":"weichang18"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":477,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":478,"author":{"gitId":"weichang18"},"content":"* 1a. The format of the command is invalid.","lastModifiedDate":"2021-09-25"},{"lineNumber":479,"author":{"gitId":"weichang18"},"content":"  * 1a1. TA\u003csup\u003e2\u003c/sup\u003e shows an error message.","lastModifiedDate":"2021-09-25"},{"lineNumber":480,"author":{"gitId":"weichang18"},"content":"  ","lastModifiedDate":"2021-09-25"},{"lineNumber":481,"author":{"gitId":"weichang18"},"content":"    Use case resumes at step 1","lastModifiedDate":"2021-09-25"},{"lineNumber":482,"author":{"gitId":"weichang18"},"content":"* 2a. No persons match the specified keyword(s).","lastModifiedDate":"2021-09-25"},{"lineNumber":483,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":484,"author":{"gitId":"weichang18"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":485,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":486,"author":{"gitId":"Droffilc13"},"content":"**Use case: UC02 - Delete a person**","lastModifiedDate":"2021-09-25"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"TaoJun99"},"content":"2.  TA\u003csup\u003e2\u003c/sup\u003e shows a list of persons","lastModifiedDate":"2021-09-24"},{"lineNumber":492,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"TaoJun99"},"content":"4.  TA\u003csup\u003e2\u003c/sup\u003e deletes the person","lastModifiedDate":"2021-09-24"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"TaoJun99"},"content":"    * 3a1. TA\u003csup\u003e2\u003c/sup\u003e shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":510,"author":{"gitId":"weichang18"},"content":"**Use case: UC03 - List all person in the address book**","lastModifiedDate":"2021-09-25"},{"lineNumber":511,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":512,"author":{"gitId":"TaoJun99"},"content":"**MSS**","lastModifiedDate":"2021-09-24"},{"lineNumber":513,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":514,"author":{"gitId":"weichang18"},"content":"1. User requests to list persons","lastModifiedDate":"2021-09-25"},{"lineNumber":515,"author":{"gitId":"weichang18"},"content":"2. TA\u003csup\u003e2\u003c/sup\u003e shows a list of persons","lastModifiedDate":"2021-09-25"},{"lineNumber":516,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":517,"author":{"gitId":"TaoJun99"},"content":"**Extensions**","lastModifiedDate":"2021-09-24"},{"lineNumber":518,"author":{"gitId":"weichang18"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-25"},{"lineNumber":519,"author":{"gitId":"TaoJun99"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":520,"author":{"gitId":"TaoJun99"},"content":"  ","lastModifiedDate":"2021-09-24"},{"lineNumber":521,"author":{"gitId":"TaoJun99"},"content":"  ","lastModifiedDate":"2021-09-26"},{"lineNumber":522,"author":{"gitId":"qinguorui2001"},"content":"**Use case: UC05 - Add a person**","lastModifiedDate":"2021-09-25"},{"lineNumber":523,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":524,"author":{"gitId":"qinguorui2001"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":525,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":526,"author":{"gitId":"qinguorui2001"},"content":"1. User enters a new person\u0027s information","lastModifiedDate":"2021-09-30"},{"lineNumber":527,"author":{"gitId":"qinguorui2001"},"content":"2. TA\u003csup\u003e2\u003c/sup\u003e shows the person is added","lastModifiedDate":"2021-09-30"},{"lineNumber":528,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":529,"author":{"gitId":"qinguorui2001"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":530,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":531,"author":{"gitId":"qinguorui2001"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":533,"author":{"gitId":"qinguorui2001"},"content":"* 1a. The given command format is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":534,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":535,"author":{"gitId":"qinguorui2001"},"content":"    * 1a1. TA\u003csup\u003e2\u003c/sup\u003e shows an error message related to invalid format.","lastModifiedDate":"2021-09-30"},{"lineNumber":536,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":537,"author":{"gitId":"qinguorui2001"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":538,"author":{"gitId":"qinguorui2001"},"content":"  ","lastModifiedDate":"2021-09-25"},{"lineNumber":539,"author":{"gitId":"qinguorui2001"},"content":"* 1b. The added person is already in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":540,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":541,"author":{"gitId":"qinguorui2001"},"content":"    * 1b1. TA\u003csup\u003e2\u003c/sup\u003e requests to add another person.","lastModifiedDate":"2021-09-30"},{"lineNumber":542,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":543,"author":{"gitId":"qinguorui2001"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-30"},{"lineNumber":544,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":545,"author":{"gitId":"qinguorui2001"},"content":"**Use case: UC06 - Add an assignment**","lastModifiedDate":"2021-10-03"},{"lineNumber":546,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":547,"author":{"gitId":"qinguorui2001"},"content":"**MSS**","lastModifiedDate":"2021-10-03"},{"lineNumber":548,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":549,"author":{"gitId":"qinguorui2001"},"content":"1. User enters the assignment information","lastModifiedDate":"2021-10-03"},{"lineNumber":550,"author":{"gitId":"qinguorui2001"},"content":"2. TA\u003csup\u003e2\u003c/sup\u003e shows the assignment information is added","lastModifiedDate":"2021-10-03"},{"lineNumber":551,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":552,"author":{"gitId":"qinguorui2001"},"content":"   Use case ends","lastModifiedDate":"2021-10-03"},{"lineNumber":553,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":554,"author":{"gitId":"qinguorui2001"},"content":"**Extensions**","lastModifiedDate":"2021-10-03"},{"lineNumber":555,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":556,"author":{"gitId":"qinguorui2001"},"content":"* 1a. The assignment information already exists in that person\u0027s assignment list.","lastModifiedDate":"2021-10-03"},{"lineNumber":557,"author":{"gitId":"qinguorui2001"},"content":"  ","lastModifiedDate":"2021-10-03"},{"lineNumber":558,"author":{"gitId":"qinguorui2001"},"content":"    * 1a1. TA\u003csup\u003e2\u003c/sup\u003e shows message that the assignment already exists.","lastModifiedDate":"2021-10-03"},{"lineNumber":559,"author":{"gitId":"qinguorui2001"},"content":"  ","lastModifiedDate":"2021-10-03"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-10-03"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":562,"author":{"gitId":"qinguorui2001"},"content":"* 1b. The given instruction format is invalid.","lastModifiedDate":"2021-10-03"},{"lineNumber":563,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":564,"author":{"gitId":"qinguorui2001"},"content":"    * 1b1 TA\u003csup\u003e2\u003c/sup\u003e shows an error message.","lastModifiedDate":"2021-10-03"},{"lineNumber":565,"author":{"gitId":"qinguorui2001"},"content":"  ","lastModifiedDate":"2021-10-03"},{"lineNumber":566,"author":{"gitId":"qinguorui2001"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-10-03"},{"lineNumber":567,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":568,"author":{"gitId":"qinguorui2001"},"content":"**Use case: UC07 - Delete an assignment**","lastModifiedDate":"2021-10-03"},{"lineNumber":569,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":570,"author":{"gitId":"qinguorui2001"},"content":"**MSS**","lastModifiedDate":"2021-10-03"},{"lineNumber":571,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":572,"author":{"gitId":"qinguorui2001"},"content":"1. User requests to list assignments of a person","lastModifiedDate":"2021-10-03"},{"lineNumber":573,"author":{"gitId":"qinguorui2001"},"content":"2. TA\u003csup\u003e2\u003c/sup\u003e shows a list of assignments","lastModifiedDate":"2021-10-03"},{"lineNumber":574,"author":{"gitId":"qinguorui2001"},"content":"3. User requests to delete a specific assignment in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":575,"author":{"gitId":"qinguorui2001"},"content":"4. TA\u003csup\u003e2\u003c/sup\u003e deletes the assignment","lastModifiedDate":"2021-10-03"},{"lineNumber":576,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":577,"author":{"gitId":"qinguorui2001"},"content":"   Use case ends","lastModifiedDate":"2021-10-03"},{"lineNumber":578,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":579,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-10-03"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":581,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-03"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":583,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-10-03"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":585,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-10-03"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":587,"author":{"gitId":"qinguorui2001"},"content":"    * 3a1. TA\u003csup\u003e2\u003c/sup\u003e shows an error message.","lastModifiedDate":"2021-10-03"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":589,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-03"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":591,"author":{"gitId":"qinguorui2001"},"content":"**Use case: UC08 - Mark an assignment**","lastModifiedDate":"2021-10-03"},{"lineNumber":592,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":593,"author":{"gitId":"qinguorui2001"},"content":"**MSS**","lastModifiedDate":"2021-10-03"},{"lineNumber":594,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":595,"author":{"gitId":"qinguorui2001"},"content":"1. User enters the information of assignment tends to be done","lastModifiedDate":"2021-10-03"},{"lineNumber":596,"author":{"gitId":"qinguorui2001"},"content":"2. TA\u003csup\u003e2\u003c/sup\u003e shows the assignment is done","lastModifiedDate":"2021-10-03"},{"lineNumber":597,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":598,"author":{"gitId":"qinguorui2001"},"content":"   Use case ends","lastModifiedDate":"2021-10-03"},{"lineNumber":599,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":600,"author":{"gitId":"qinguorui2001"},"content":"**Extensions**","lastModifiedDate":"2021-10-03"},{"lineNumber":601,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":602,"author":{"gitId":"qinguorui2001"},"content":"* 1a. The assignment doesn\u0027t exist in the assignment list.","lastModifiedDate":"2021-10-03"},{"lineNumber":603,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":604,"author":{"gitId":"qinguorui2001"},"content":"  Use case ends.","lastModifiedDate":"2021-10-03"},{"lineNumber":605,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":606,"author":{"gitId":"qinguorui2001"},"content":"* 1b. The given index is invalid.","lastModifiedDate":"2021-10-03"},{"lineNumber":607,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":608,"author":{"gitId":"qinguorui2001"},"content":"    * 1b1. TA\u003csup\u003e2\u003c/sup\u003e shows an error message.","lastModifiedDate":"2021-10-03"},{"lineNumber":609,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":610,"author":{"gitId":"qinguorui2001"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-03"},{"lineNumber":611,"author":{"gitId":"TaoJun99"},"content":"  ","lastModifiedDate":"2021-09-24"},{"lineNumber":612,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"Droffilc13"},"content":"4. System should respond within 2 seconds of user request.","lastModifiedDate":"2021-09-22"},{"lineNumber":620,"author":{"gitId":"Droffilc13"},"content":"5. Should be a single user product.","lastModifiedDate":"2021-09-22"},{"lineNumber":621,"author":{"gitId":"Droffilc13"},"content":"6. Data should be stored in a human editable text file.","lastModifiedDate":"2021-09-22"},{"lineNumber":622,"author":{"gitId":"Droffilc13"},"content":"7. Data cannot be stored in DBMS. ","lastModifiedDate":"2021-09-22"},{"lineNumber":623,"author":{"gitId":"Droffilc13"},"content":"8. Size of products should not exceed 100MB.","lastModifiedDate":"2021-09-22"},{"lineNumber":624,"author":{"gitId":"Droffilc13"},"content":"9. Size of documents should not exceed 15MB per file.","lastModifiedDate":"2021-09-22"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"yeo-yiheng"},"content":"* **a-**: Symbol for an assignment list related command","lastModifiedDate":"2021-10-09"},{"lineNumber":633,"author":{"gitId":"qinguorui2001"},"content":"* **p-**: Symbol for a person related command","lastModifiedDate":"2021-09-24"},{"lineNumber":634,"author":{"gitId":"qinguorui2001"},"content":"* **e/**: Symbol for a requirement to state email address","lastModifiedDate":"2021-09-24"},{"lineNumber":635,"author":{"gitId":"qinguorui2001"},"content":"* **m/**: Symbol for a requirement to state the module","lastModifiedDate":"2021-09-24"},{"lineNumber":636,"author":{"gitId":"qinguorui2001"},"content":"* **n/**: Symbol for a requirement to state a name","lastModifiedDate":"2021-09-24"},{"lineNumber":637,"author":{"gitId":"qinguorui2001"},"content":"* **TA**: Abbreviation for the tutor","lastModifiedDate":"2021-09-30"},{"lineNumber":638,"author":{"gitId":"qinguorui2001"},"content":"* **UC**: Abbreviation for the use case","lastModifiedDate":"2021-09-30"},{"lineNumber":639,"author":{"gitId":"qinguorui2001"},"content":"* **SOC**: Abbreviation for the school of computing","lastModifiedDate":"2021-09-30"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":641,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"TaoJun99"},"content":"   1. Prerequisites: List all persons using the `p-list` command. Multiple persons in the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"TaoJun99"},"content":"   1. Test case: `p-delete 1`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":676,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"TaoJun99"},"content":"   1. Test case: `p-delete 0`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":679,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"TaoJun99"},"content":"   1. Other incorrect delete commands to try: `p-delete`, `p-delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":682,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Droffilc13":7,"yeo-yiheng":70,"qinguorui2001":98,"TaoJun99":126,"weichang18":22,"-":369}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"Teaching Assistant\u0027s Assistant (TA\u003csup\u003e2\u003c/sup\u003e) is a **desktop app for managing School of Computing contacts and assignments, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TA\u003csup\u003e2\u003c/sup\u003e can get your contact and assignment management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"1. Download the latest `ta2.jar` from [here](https://github.com/Droffilc13/ip/releases/tag/A-Release).","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TA\u003csup\u003e2\u003c/sup\u003e.","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"   * **`p-list`** : Lists all contacts.","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"   * **`p-add`**`n/John Doe m/CS2100 e/e1234567@u.nus.edu` : Adds a contact named `John Doe` to the TA\u003csup\u003e2\u003c/sup\u003e.","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"   * **`p-delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"   * **`p-clear`** : Deletes all contacts.","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Droffilc13"},"content":"* `a-` specifies an assignment list related command, whereas `-p` specifies a person related command.","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"  e.g. in `p-add n/NAME`, `NAME` is a parameter which can be used as `p-add n/John Doe`.","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"  e.g. if the command specifies `n/NAME e/EMAIL`, `e/EMAIL n/NAME` is also acceptable.","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"* If a parameter is expected only once in the command but you specify it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"Droffilc13"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `p-list`, `exit` and `p-clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"TaoJun99"},"content":"### Adding a person: `p-add`","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Droffilc13"},"content":"Adds a person to the contact list.","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"TaoJun99"},"content":"Format: `p-add n/NAME e/EMAIL m/MODULES [t/TAG]…​`","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"A person can have any number of tags (including 0)\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"yeo-yiheng"},"content":"A person\u0027s module must follow XX[X]1111[X], where X is any letter,","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"yeo-yiheng"},"content":"1 is any number and values in square brackets are optional, and it","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"should not be blank.","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"TaoJun99"},"content":"* `p-add n/John Doe e/e1234567@u.nus.edu m/CS2100, CS1101S`","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"TaoJun99"},"content":"* `p-add n/Betsy Crowe e/e0234567@u.nus.edu m/CS2103T`","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"TaoJun99"},"content":"### Listing all persons : `p-list`","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"Droffilc13"},"content":"Shows a list of all persons in the contact list.","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"TaoJun99"},"content":"Format: `p-list`","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"TaoJun99"},"content":"### Editing a person : `p-edit`","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"TaoJun99"},"content":"####Implementing [coming soon]","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"TaoJun99"},"content":"### Locating persons by name: `p-find`","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"TaoJun99"},"content":"Format: `p-find n/NAME_KEYWORD... m/MODULE_KEYWORD...`","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"TaoJun99"},"content":"* The search is case-insensitive.\u003cbr\u003e e.g `cs1101s` will match `CS1101S`","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"TaoJun99"},"content":"* Can search by category.\u003cbr\u003e e.g. `n/NAME, m/MODULE`","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"yeo-yiheng"},"content":"* Partial names will be matched \u003cbr\u003e e.g. `n/Hans` will match `Hans Bo`","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search). \u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"  e.g. `n/Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"yeo-yiheng"},"content":"* We can search for multiple people at once, separated by a whitespace. \u003cbr\u003e ","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"yeo-yiheng"},"content":"  e.g. `n/Bernice James` will return `Bernice`, `James`","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"yeo-yiheng"},"content":"* We can search for multiple module at once, separated by a whitespace. \u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"yeo-yiheng"},"content":"  e.g. `m/CS1101S CS2103T` will return people who take either / or both modules.","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"yeo-yiheng"},"content":"* Combining categories during search will return everyone matching either names OR module. \u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"yeo-yiheng"},"content":"  e.g. `n/James m/MA1521` will return `James`, `Bernice` (assuming Bernice takes MA1521).","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"TaoJun99"},"content":"* `p-find n/John` returns `john` and `John Doe`","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"TaoJun99"},"content":"* `p-find n/alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"yeo-yiheng"},"content":"* `p-find n/bernice james m/ma1521 cs2103t` returns `bernice`, `james`, `christie`, `michael`, assuming christie and michael takes either module listed.","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"TaoJun99"},"content":"### Deleting a person : `p-delete`","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"Droffilc13"},"content":"Deletes the specified person from the contact list.","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"TaoJun99"},"content":"Format: `p-delete INDEX`","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Droffilc13"},"content":"* `p-list` followed by `p-delete 2` deletes the 2nd person in the contact list.","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"TaoJun99"},"content":"* `p-find n/Betsy` followed by `p-delete 1` deletes the 1st person in the results of the `p-find` command.","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Droffilc13"},"content":"### Adding an assignment with deadline: `a-add`","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"Droffilc13"},"content":"Adds an assignment with deadline to a person in the contact list.","lastModifiedDate":"2021-10-04"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"Format: `a-add n/NAME d/DESCRIPTION by/ D/M/YYYY,[HHMM]`","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"qinguorui2001"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"qinguorui2001"},"content":"* `a-add n/John Doe d/Lab1 by/ 21/8/2021`","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"qinguorui2001"},"content":"* `a-add n/Betsy Crowe d/Assignment2 by/ 22/9/2021,1200`","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"TaoJun99"},"content":"### Adding an assignment to all persons in the specified module: \"giveall\"","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"TaoJun99"},"content":"Adds an assignment with deadline to all persons in the specified module ","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"TaoJun99"},"content":"Format: `giveall m/MODULE d/DESCRIPTION by/ D/M/YYYY,[HHMM]`","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"TaoJun99"},"content":"Examples:","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"TaoJun99"},"content":"* `giveall m/CS2100 d/Assignment 2 by/ 15/10/2021,1300`","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"TaoJun99"},"content":"* `giveall m/CS2103T d/iP by/ 02/09/2021,2359`","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"Droffilc13"},"content":"### Deleting an assignment with deadline : `a-delete`","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"Droffilc13"},"content":"Deletes the specified assignment with deadline from a person in the contact list.","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"Droffilc13"},"content":"Format: `a-delete n/NAME INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"qinguorui2001"},"content":"* Deletes the deadline of person `NAME` at the specified `INDEX`.","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"qinguorui2001"},"content":"* The index refers to the index number shown in the displayed assignment list.","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"qinguorui2001"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"qinguorui2001"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"Droffilc13"},"content":"* `a-delete n/Wei Chang 10` deletes the 10th assignment in Wei Chang’s assignment list.","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"Droffilc13"},"content":"### Marking an assignment with deadline as done: `a-done`","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"Droffilc13"},"content":"Marks a specified assignment\u0027s deadline of a person as done.","lastModifiedDate":"2021-10-04"},{"lineNumber":180,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"Droffilc13"},"content":"Format: `a-done n/NAME INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"qinguorui2001"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"Droffilc13"},"content":"* `a-done n/John Doe 4` marks the 4th assignment in John Doe’s assignment list as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"TaoJun99"},"content":"### Showing a person’s assignment list: `a-show`","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"Droffilc13"},"content":"Shows the assignment list of the specified person in a separate assignment list window.","lastModifiedDate":"2021-10-04"},{"lineNumber":189,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"Droffilc13"},"content":"Format: `a-show INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"qinguorui2001"},"content":"Examples:","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"Droffilc13"},"content":"* `a-show 2` renders the 2nd person’s assignment list on the right side of the app.","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"qinguorui2001"},"content":"* The index refers to the index shown in the displayed person list.","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"qinguorui2001"},"content":"  ![result for \u0027show assignment list\u0027](images/showAssignmentListResult.png)","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Droffilc13"},"content":"Clears all entries from TA\u003csup\u003e2\u003c/sup\u003e.","lastModifiedDate":"2021-10-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"Droffilc13"},"content":"TA\u003csup\u003e2\u003c/sup\u003e data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"TaoJun99"},"content":"TA\u003csup\u003e2\u003c/sup\u003e data are saved as a JSON file `[JAR file location]/data/ta2.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"TaoJun99"},"content":"If your changes to the data file makes its format invalid, TA\u003csup\u003e2\u003c/sup\u003e will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"Droffilc13"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous TA\u003csup\u003e2\u003c/sup\u003e home folder.","lastModifiedDate":"2021-10-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"Droffilc13"},"content":"**p-add** | `p-add n/NAME e/EMAIL m/MODULES [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho m/CS2100 e/jamesho@example.com t/friend t/colleague`","lastModifiedDate":"2021-10-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"Droffilc13"},"content":"**p-delete** | `p-delete INDEX`\u003cbr\u003e e.g., `p-delete 3`","lastModifiedDate":"2021-10-04"},{"lineNumber":241,"author":{"gitId":"Droffilc13"},"content":"**p-edit** | `p-edit INDEX [n/NAME] [m/MODULE] [e/EMAIL] [t/TAG]…​`\u003cbr\u003e e.g.,`p-edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-10-04"},{"lineNumber":242,"author":{"gitId":"Droffilc13"},"content":"**p-find** | `p-find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `p-find James Jake`","lastModifiedDate":"2021-10-04"},{"lineNumber":243,"author":{"gitId":"Droffilc13"},"content":"**p-list** | `list`","lastModifiedDate":"2021-10-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"qinguorui2001"},"content":"**a-add** | `a-add n/NAME d/DESCRIPTION by/ D/M/YYYY [HHMM]` \u003cbr\u003e e.g., `a-add n/John Doe d/Lab1 by/ 21/8/2021`","lastModifiedDate":"2021-09-28"},{"lineNumber":246,"author":{"gitId":"Droffilc13"},"content":"**a-delete** | `a-delete n/NAME INDEX` \u003cbr\u003e e.g., `a-delete n/Wei Chang 10`","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"Droffilc13"},"content":"**a-done** | `a-done n/NAME INDEX` \u003cbr\u003e e.g., `a-done n/John Doe 4`","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"Droffilc13"},"content":"**a-list** | `a-show INDEX` \u003cbr\u003e e.g., `a-show 2`","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Droffilc13":36,"yeo-yiheng":14,"qinguorui2001":29,"TaoJun99":35,"-":134}},{"path":"docs/diagrams/AddAssignmentActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"start","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":":User adds an assignment to a specific person;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"if () then ([person assignment list does not","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"contain assignment])","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"    :Add the new assignment into","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"            the assignment list;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    :Sort assignment based on","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"                    due date;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"else ([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    :Show duplicate assignment","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"                error message;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"endif","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"stop","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yeo-yiheng":19}},{"path":"docs/diagrams/AddAssignmentSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"participant \":AddAssignmentCommandParser\" as AddAssignmentCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"participant \"d:AddAssignmentCommand\" as AddAssignmentCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"[-\u003e LogicManager : execute(\"a-add n/...\")","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"activate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"a-add n/...\")","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"create AddAssignmentCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"AddressBookParser -\u003e AddAssignmentCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"activate AddAssignmentCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"AddAssignmentCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"deactivate AddAssignmentCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"AddressBookParser -\u003e AddAssignmentCommandParser : parse(\"n/... d/... by/...\")","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"activate AddAssignmentCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"create AddAssignmentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"AddAssignmentCommandParser -\u003e AddAssignmentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"AddAssignmentCommand --\u003e AddAssignmentCommandParser : r","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"deactivate AddAssignmentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"AddAssignmentCommandParser --\u003e AddressBookParser : r","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"deactivate AddAssignmentCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"AddAssignmentCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"destroy AddAssignmentCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"AddressBookParser --\u003e LogicManager : r","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"LogicManager -\u003e AddAssignmentCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"activate AddAssignmentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"AddAssignmentCommand -\u003e Model : AddAssignment(...)","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"Model --\u003e AddAssignmentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"AddAssignmentCommand -\u003e CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"activate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"CommandResult --\u003e AddAssignmentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"AddAssignmentCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"deactivate AddAssignmentCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"yeo-yiheng":69}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"user -[USER_COLOR]\u003e ui : \"p-delete 1\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"p-delete 1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TaoJun99":2,"-":36}},{"path":"docs/diagrams/GiveAllActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":":User executes giveall command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"if () then ([persons in module without","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"assignment present])","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"    :Get persons in module;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"    :Filter out those","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"    without assignment;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"    :Add assignment","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"    for filtered persons;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"    :Show error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"endif","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"TaoJun99":19}},{"path":"docs/diagrams/GiveAllSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"participant \"r:AddAssignmentToAllCommand\" as AddAssignmentToAllCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"[-\u003e LogicManager : execute(giveall m/...)","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(giveall m/...)","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"create AddAssignmentToAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"AddressBookParser -\u003e AddAssignmentToAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"activate AddAssignmentToAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"AddAssignmentToAllCommand --\u003e AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"deactivate AddAssignmentToAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"LogicManager -\u003e AddAssignmentToAllCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"activate AddAssignmentToAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"AddAssignmentToAllCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"Model --\u003e AddAssignmentToAllCommand : filteredPersons","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"loop for each person in module without assignment","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"    AddAssignmentToAllCommand -\u003e Model : addAssignment(person, assignment)","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"    activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"    Model --\u003e AddAssignmentToAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"        deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"AddAssignmentToAllCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"deactivate AddAssignmentToAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"AddAssignmentToAllCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"destroy AddAssignmentToAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"TaoJun99":54}},{"path":"docs/diagrams/RemoveAllActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":":User executes removeall command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"if () then ([persons in module completed","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"assignment present])","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"    :Get persons in module;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"    :Filter out those who","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"    completed assignment;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"    :Delete assignment","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"    for filtered persons;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"    :Show corresponding","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"          error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"endif","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"TaoJun99":20}},{"path":"docs/diagrams/RemoveAllSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"participant \"r:RemoveAssignmentOfAllCommand\" as RemoveAssignmentOfAllCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"[-\u003e LogicManager : execute(removeall m/...)","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(removeall m/...)","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"create RemoveAssignmentOfAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"AddressBookParser -\u003e RemoveAssignmentOfAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"activate RemoveAssignmentOfAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"RemoveAssignmentOfAllCommand --\u003e AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"deactivate RemoveAssignmentOfAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"AddressBookParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"LogicManager -\u003e RemoveAssignmentOfAllCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"activate RemoveAssignmentOfAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"RemoveAssignmentOfAllCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"Model --\u003e RemoveAssignmentOfAllCommand : filteredPersons","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"loop for each person in module who has completed assignment","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"    RemoveAssignmentOfAllCommand -\u003e Model : deleteAssignment(person, assignment)","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"    activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"    Model --\u003e RemoveAssignmentOfAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"        deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"end","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"RemoveAssignmentOfAllCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"deactivate RemoveAssignmentOfAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"RemoveAssignmentOfAllCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"destroy RemoveAssignmentOfAllCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"TaoJun99":55}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"Class JsonAdaptedAssignment","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"JsonAdaptedPerson ---\u003e \"*\" JsonAdaptedAssignment","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"TaoJun99":2,"-":43}},{"path":"docs/team/droffilc13.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"layout: page","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"title: Clifford\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"### Project: TA\u003csup\u003e2\u003c/sup\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"TA\u003csup\u003e2\u003c/sup\u003e is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"* **Project management**:","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"  * User Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"* **Community**:","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"* **Tools**:","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Droffilc13":44,"TaoJun99":2}},{"path":"docs/team/qinguorui2001.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"title: QIN GUORUI\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"### Project: TA\u003csup\u003e2\u003c/sup\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"TA\u003csup\u003e2\u003c/sup\u003e is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"* **Project management**:","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"* **Community**:","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"* **Tools**:","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qinguorui2001":46}},{"path":"docs/team/taojun99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"title: Tao Jun\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"### Project: TA\u003csup\u003e2\u003c/sup\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"TA\u003csup\u003e2\u003c/sup\u003e is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"  * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"TaoJun99":46}},{"path":"docs/team/weichang18.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"title: Lim Wei Chang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"### Project: TA\u003csup\u003e2\u003c/sup\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"TA\u003csup\u003e2\u003c/sup\u003e is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"* **Project management**:","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"* **Community**:","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"* **Tools**:","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"weichang18":46}},{"path":"docs/team/yeo-yiheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"layout: page","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"title: Yeo Yiheng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"---","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"### Project: TA\u003csup\u003e2\u003c/sup\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"TA\u003csup\u003e2\u003c/sup\u003e is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"* **Project management**:","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"    * User Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"* **Community**:","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"* **Tools**:","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"yeo-yiheng":46}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.address class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"CS1010E\"","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"yeo-yiheng":2,"-":109}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"    public static final String MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX \u003d \"The assignment index provided is invalid\";","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_NAME \u003d \"The person name does not exist\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_MODULE \u003d \"The module does not exist!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Droffilc13":2,"TaoJun99":1,"-":13}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"    /** Returns an unmodifiable view of the filtered list of assignments */","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"    ObservableList\u003cAssignment\u003e getFilteredAssignmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Droffilc13":3,"weichang18":1,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"weichang18"},"content":"    public ObservableList\u003cAssignment\u003e getFilteredAssignmentList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"weichang18"},"content":"        return model.getFilteredAssignmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Droffilc13":4,"qinguorui2001":1,"weichang18":2,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DUEDATE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":" * Adds an assignment to the person\u0027s assignment list.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"public class AddAssignmentCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    public static final String COMMAND_WORD \u003d \"a-add\";","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String FRIENDLY_COMMAND_SYNTAX \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"            \"Here are some friendly command syntax for to replace d/M/yyyy:\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"today - sets due date to tonight 2359\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"tmr - sets due date to tomorrow\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"week - sets due date to a week (7 days) from now\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"mon - sets due date to the coming monday\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"tue - sets due date to the coming tuesday\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"wed - sets due date to the coming wednesday\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"thu - sets due date to the coming thursday\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"fri - sets due date to the coming friday\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"sat - sets due date to the coming saturday\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"                    + \"sun - sets due date to the coming sunday\\n\";","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an assignment to the person\u0027s assignment list. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_DUEDATE + \"DUEDATE\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_DESCRIPTION + \"assignment2 \"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"            + PREFIX_DUEDATE + \"11/11/2021 \\n\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"            + FRIENDLY_COMMAND_SYNTAX;","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New assignment added: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"    public static final String MESSAGE_DUPLICATE_ASSIGNMENT \u003d \"This assignment already exists in the assignment list\";","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"    private final Assignment toAdd;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"    private final Name name;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"     * Creates an AddAssignmentCommand to add the specified {@code Assignment}","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"    public AddAssignmentCommand(Name name, Assignment assignment) {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Droffilc13"},"content":"        toAdd \u003d assignment;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Droffilc13"},"content":"        // Get Person that match the name","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"Droffilc13"},"content":"        List\u003cPerson\u003e filteredPersonList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"Droffilc13"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"Droffilc13"},"content":"                        .stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"Droffilc13"},"content":"                        .filter(person -\u003e person.isSameName(name))","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"Droffilc13"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"Droffilc13"},"content":"        if (filteredPersonList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"Droffilc13"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"Droffilc13"},"content":"        Person selectedPerson \u003d filteredPersonList.get(0);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"Droffilc13"},"content":"        if (model.hasAssignment(selectedPerson, toAdd)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ASSIGNMENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Droffilc13"},"content":"        model.addAssignment(selectedPerson, toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"Droffilc13"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"                || (other instanceof AddAssignmentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"Droffilc13"},"content":"                \u0026\u0026 toAdd.equals(((AddAssignmentCommand) other).toAdd));","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Droffilc13":24,"qinguorui2001":57,"yeo-yiheng":15}},{"path":"src/main/java/seedu/address/logic/commands/AddAssignmentToAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_MODULE;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":" * Adds an assignment to the person\u0027s assignment list.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"public class AddAssignmentToAllCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"    public static final String COMMAND_WORD \u003d \"giveall\";","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"            + \": Adds an assignment to assignment list of all persons under same module \"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"            + PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"            + PREFIX_DUEDATE + \"DUEDATE\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"            + PREFIX_MODULE + \"CS2100 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"            + PREFIX_DESCRIPTION + \"assignment2 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"            + PREFIX_DUEDATE + \"11/11/2021 \";","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New assignment added to all persons in %1$s: %2$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"    private final Assignment toAdd;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"    private final Module module;","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"     * Creates an AddAssignmentCommand to add the specified {@code Assignment}","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"    public AddAssignmentToAllCommand(Module module, Assignment assignment) {","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"        toAdd \u003d assignment;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"        // Get Person that match the Module","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"        List\u003cPerson\u003e filteredPersonList \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"                        .stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"                        .filter(person -\u003e person.hasModule(module))","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"        if (filteredPersonList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_MODULE);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"        for (Person person: filteredPersonList) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"TaoJun99"},"content":"            if (!model.hasAssignment(person, toAdd)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"TaoJun99"},"content":"                model.addAssignment(person, toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"TaoJun99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"TaoJun99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, module, toAdd));","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"TaoJun99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"TaoJun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"TaoJun99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"TaoJun99"},"content":"                || (other instanceof AddAssignmentToAllCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"TaoJun99"},"content":"                \u0026\u0026 toAdd.equals(((AddAssignmentToAllCommand) other).toAdd)","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"TaoJun99"},"content":"                \u0026\u0026 module.equals(((AddAssignmentToAllCommand) other).module));","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"TaoJun99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"TaoJun99":79}},{"path":"src/main/java/seedu/address/logic/commands/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"    public static final String COMMAND_WORD \u003d \"p-add\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"            + PREFIX_MODULE + \"MODULE \"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"                \u0026\u0026 toAdd.equals(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yeo-yiheng":3,"TaoJun99":7,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":" * Deletes an assignment to the person\u0027s assignment list.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"public class DeleteAssignmentCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    public static final String COMMAND_WORD \u003d \"a-delete\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"            + \": Deletes the specified person\u0027s assignment identified by the \"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"            + \"index number used in the displayed assignment list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"            + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"            + \"1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"    public static final String MESSAGE_DELETE_ASSIGNMENT_SUCCESS \u003d \"Deleted Assignment: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"    private final Name name;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"     * Creates an DeleteAssignmentCommand to delete the specified {@code Assignment}","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"    public DeleteAssignmentCommand(Name name, Index targetIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"        // Get Person that match the name","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"        List\u003cPerson\u003e filteredPersonList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"                        .stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"                        .filter(person -\u003e person.isSameName(name))","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"Droffilc13"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"        if (filteredPersonList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Droffilc13"},"content":"        Person selectedPerson \u003d filteredPersonList.get(0);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Droffilc13"},"content":"        List\u003cAssignment\u003e lastShownList \u003d model.getFilteredAssignmentList(selectedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"Droffilc13"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Droffilc13"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        Assignment assignmentToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Droffilc13"},"content":"        model.deleteAssignment(selectedPerson, assignmentToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ASSIGNMENT_SUCCESS, assignmentToDelete));","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"                || (other instanceof DeleteAssignmentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteAssignmentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Droffilc13":18,"qinguorui2001":61}},{"path":"src/main/java/seedu/address/logic/commands/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"    public static final String COMMAND_WORD \u003d \"p-delete\";","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TaoJun99":5,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"    public static final String COMMAND_WORD \u003d \"p-edit\";","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"            + \"[\" + PREFIX_MODULE + \"MODULE] \"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"        Module updatedModule \u003d editPersonDescriptor.getModule().orElse(personToEdit.getModule());","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"TaoJun99"},"content":"        List\u003cAssignment\u003e assignmentList \u003d personToEdit.getAssignments().asUnmodifiableObservableList();","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"TaoJun99"},"content":"        return new Person(updatedName, updatedEmail, updatedModule, assignmentList, updatedTags);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"TaoJun99"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"yeo-yiheng"},"content":"        private Module module;","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":132,"author":{"gitId":"TaoJun99"},"content":"            setModule(toCopy.module);","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"yeo-yiheng"},"content":"            return CollectionUtil.isAnyNonNull(name, email, module, tags);","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"TaoJun99"},"content":"        public void setModule(Module module) {","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"yeo-yiheng"},"content":"            this.module \u003d module;","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"yeo-yiheng"},"content":"        public Optional\u003cModule\u003e getModule() {","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"yeo-yiheng"},"content":"            return Optional.ofNullable(module);","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"yeo-yiheng"},"content":"                    \u0026\u0026 getModule().equals(e.getModule())","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"yeo-yiheng":14,"TaoJun99":11,"-":181}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"public class FindPersonCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"    public static final String COMMAND_WORD \u003d \"p-find\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"            + \"Parameters: n/NAME_KEYWORD [MORE_KEYWORDS] m/MODULE_KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"            + \"Both types of keywords are optional, but at least one is necessary\\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice bob charlie m/CS1101S\";","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"    public FindPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"                || (other instanceof FindPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"                \u0026\u0026 predicate.equals(((FindPersonCommand) other).predicate)); // state check","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"yeo-yiheng":4,"TaoJun99":5,"-":34}},{"path":"src/main/java/seedu/address/logic/commands/ListPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"public class ListPersonCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"    public static final String COMMAND_WORD \u003d \"p-list\";","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TaoJun99":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/MarkAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":" * Marks an assignment to the person\u0027s assignment list.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"public class MarkAssignmentCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    public static final String COMMAND_WORD \u003d \"a-done\";","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"            + \": Marks the specified person\u0027s assignment identified by the \"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"            + \"index number used in the displayed assignment list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"            + \"INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"            + \"1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"    public static final String MESSAGE_MARK_ASSIGNMENT_SUCCESS \u003d \"Marked Assignment: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"    private final Name name;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"     * Creates an MarkAssignmentCommand to mark the specified {@code Assignment}","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"    public MarkAssignmentCommand(Name name, Index targetIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"        // Get Person that match the name","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"        List\u003cPerson\u003e filteredPersonList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"                model.getFilteredPersonList()","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"                        .stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"                        .filter(person -\u003e person.isSameName(name))","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"Droffilc13"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"        if (filteredPersonList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"Droffilc13"},"content":"        Person selectedPerson \u003d filteredPersonList.get(0);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"Droffilc13"},"content":"        List\u003cAssignment\u003e lastShownList \u003d model.getFilteredAssignmentList(selectedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"Droffilc13"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Droffilc13"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        Assignment assignmentToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"Droffilc13"},"content":"        model.markAssignment(selectedPerson, assignmentToMark);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_ASSIGNMENT_SUCCESS, assignmentToMark));","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"                || (other instanceof MarkAssignmentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 targetIndex.equals(((MarkAssignmentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Droffilc13":18,"qinguorui2001":61}},{"path":"src/main/java/seedu/address/logic/commands/ShowAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":" * Shows the assignment list of the person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"public class ShowAssignmentCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"    public static final String COMMAND_WORD \u003d \"a-show\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"            + \": Shows the assignments assigned to the person identified by the \"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"            + \"index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"    public static final String MESSAGE_SHOW_ASSIGNMENT_SUCCESS \u003d \"Showing assignments assigned to the person: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"    public ShowAssignmentCommand(Index targetIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"        Person personToShow \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"        model.updateFilteredAssignmentList(personToShow);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"        return new CommandResult(String.format(MESSAGE_SHOW_ASSIGNMENT_SUCCESS, personToShow.getName()));","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"                || (other instanceof ShowAssignmentCommand // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"                \u0026\u0026 targetIndex.equals(((ShowAssignmentCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"weichang18":54}},{"path":"src/main/java/seedu/address/logic/parser/AddAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":" * Parses input arguments and creates a new AddAssignmentCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"public class AddAssignmentCommandParser implements Parser\u003cAddAssignmentCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAssignmentCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"     * and returns an AddAssignmentCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"    public AddAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_DUEDATE);","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_DUEDATE)","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"        DueDate dueDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DUEDATE).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        Assignment assignment \u003d new Assignment(description, dueDate, Status.createPendingStatus());","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"        return new AddAssignmentCommand(name, assignment);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"qinguorui2001":50}},{"path":"src/main/java/seedu/address/logic/parser/AddAssignmentToAllCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddAssignmentToAllCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":" * Parses input arguments and creates a new AddAssignmentCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"public class AddAssignmentToAllCommandParser implements Parser\u003cAddAssignmentToAllCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAssignmentToAllCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"     * and returns an AddAssignmentToAllCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"    public AddAssignmentToAllCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MODULE, PREFIX_DESCRIPTION, PREFIX_DUEDATE);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MODULE, PREFIX_DESCRIPTION, PREFIX_DUEDATE)","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"                    AddAssignmentToAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"        Module module \u003d ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"        DueDate dueDate \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DUEDATE).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"        Assignment assignment \u003d new Assignment(description, dueDate, Status.createPendingStatus());","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"        return new AddAssignmentToAllCommand(module, assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"TaoJun99":51}},{"path":"src/main/java/seedu/address/logic/parser/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_MODULE, PREFIX_TAG);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_MODULE, PREFIX_EMAIL)","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"        Module module \u003d ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get().toUpperCase(Locale.ROOT));","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"        Person person \u003d new Person(name, email, module, tagList);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"yeo-yiheng":7,"TaoJun99":9,"-":40}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.DeleteAssignmentCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.MarkAssignmentCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"import seedu.address.logic.commands.ShowAssignmentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddAssignmentToAllCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"TaoJun99"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"TaoJun99"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"TaoJun99"},"content":"        case ListPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"TaoJun99"},"content":"            return new ListPersonCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"        case AddAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"            return new AddAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"TaoJun99"},"content":"        case AddAssignmentToAllCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"TaoJun99"},"content":"            return new AddAssignmentToAllCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"        case DeleteAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"            return new DeleteAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"        case MarkAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"            return new MarkAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"weichang18"},"content":"        case ShowAssignmentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"weichang18"},"content":"            return new ShowAssignmentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"qinguorui2001":11,"TaoJun99":20,"weichang18":4,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Prefix PREFIX_MODULE \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    public static final Prefix PREFIX_DUEDATE \u003d new Prefix(\"by/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"yeo-yiheng":1,"qinguorui2001":2,"-":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.DeleteAssignmentCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":" * Parses input arguments and creates a new DeleteAssignmentCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"public class DeleteAssignmentCommandParser implements Parser\u003cDeleteAssignmentCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteAssignmentCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"     * and returns an DeleteAssignmentCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    public DeleteAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"        String indexString \u003d args.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"        String argsWithoutIndex \u003d args.replaceAll(\"[0-9]\", \"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"                    ArgumentTokenizer.tokenize(argsWithoutIndex, PREFIX_NAME);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"                        DeleteAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"            Index index \u003d ParserUtil.parseIndex(indexString);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"            return new DeleteAssignmentCommand(name, index);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAssignmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"qinguorui2001":46,"weichang18":5}},{"path":"src/main/java/seedu/address/logic/parser/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"TaoJun99":8,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_EMAIL, PREFIX_MODULE, PREFIX_TAG);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"                    pe);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"        if (argMultimap.getValue(PREFIX_MODULE).isPresent()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"            editPersonDescriptor.setModule(ParserUtil.parseModule(argMultimap.getValue(PREFIX_MODULE).get()));","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"        return new EditPersonCommand(index, editPersonDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yeo-yiheng":5,"TaoJun99":11,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.model.person.Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.model.person.Module.VALIDATION_REGEX;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":" * Parses input arguments and creates a new FindPersonCommand object","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    // Serves as regex to match for name prefix","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    private final Prefix namePrefix \u003d new Prefix(\"n/\");","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"    // Serves as regex to match for module prefix","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"    private final Prefix modulePrefix \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"    // Serves as regex to match for any whitespace with an OR","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    private final String orWhitespace \u003d \"|\\\\s+\";","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"    // Serves as regex to match for any whitespace","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"    private final String whitespace \u003d \"\\\\s+\";","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"    // Serves as regex to match for both name and module prefix, along with whitespaces","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"    private final Prefix nameModulePrefix \u003d new Prefix(\"(\\\\s*([nm]/))+|(\\\\s+)\");","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"    // Serves as the constant values for different branches","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"    private enum Mode {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        NAME_MODULE,","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"        NAME,","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"        MODULE","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"        // Regex depends on user input","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"        String regex;","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"        Pattern namePattern \u003d Pattern.compile(namePrefix.getPrefix());","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"        Pattern modulePattern \u003d Pattern.compile(modulePrefix.getPrefix());","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"        Matcher nameMatcher \u003d namePattern.matcher(trimmedArgs);","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"        Matcher moduleMatcher \u003d modulePattern.matcher(trimmedArgs);","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"        boolean hasName \u003d nameMatcher.find();","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"        boolean hasModule \u003d moduleMatcher.find();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"        // Represents simply which branch it matches","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"        Mode mode;","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"        if (hasName \u0026\u0026 hasModule) {","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"            // Branch 0","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"            regex \u003d nameModulePrefix.getPrefix();","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"            mode \u003d Mode.NAME_MODULE;","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"        } else if (hasName) {","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"            // Branch 1","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"            regex \u003d namePrefix + orWhitespace;","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"            mode \u003d Mode.NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"        } else if (hasModule) {","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"            // Branch 2","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"yeo-yiheng"},"content":"            regex \u003d modulePrefix + orWhitespace;","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"            mode \u003d Mode.MODULE;","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"TaoJun99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"yeo-yiheng"},"content":"        String[] nameKeywords \u003d generateKeywords(trimmedArgs, regex, mode);","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"        for (String str : nameKeywords) {","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"yeo-yiheng"},"content":"            if (!Objects.equals(str, \"\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"yeo-yiheng"},"content":"                keywords.add(str);","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"TaoJun99"},"content":"        return new FindPersonCommand(new NameContainsKeywordsPredicate(keywords));","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"     * Generates the keywords based on the given user input, corresponding regex and","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"yeo-yiheng"},"content":"     * mode which defines what kind of input is further given by the user.","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"     * @param input user input in command line","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"yeo-yiheng"},"content":"     * @param regex chosen regex to parse user input","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"yeo-yiheng"},"content":"     * @param mode mode which defines what input the user has given","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"yeo-yiheng"},"content":"     * @return a String array that contains the generated keywords","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"yeo-yiheng"},"content":"     * @throws ParseException if the user input does not match defined command usage","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"yeo-yiheng"},"content":"    public String[] generateKeywords(String input, String regex, Mode mode) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"yeo-yiheng"},"content":"        String[] tempReturn \u003d input.split(regex);","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"yeo-yiheng"},"content":"        if (mode.equals(Mode.NAME_MODULE)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"yeo-yiheng"},"content":"            // Both name and module","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"yeo-yiheng"},"content":"            // Splits by module prefix","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"            String[] splitByModulePrefix \u003d input.split(modulePrefix.getPrefix());","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"yeo-yiheng"},"content":"            String[] splitByWhiteSpace;","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"yeo-yiheng"},"content":"            // Splits modules by whitespace if m/ comes after n/","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"yeo-yiheng"},"content":"            if (!splitByModulePrefix[0].equals(\"\") \u0026\u0026 splitByModulePrefix[0].charAt(0) \u003d\u003d \u0027n\u0027) {","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"yeo-yiheng"},"content":"                splitByWhiteSpace \u003d splitByModulePrefix[1].split(whitespace);","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"yeo-yiheng"},"content":"            } else {","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"yeo-yiheng"},"content":"                // Throw error and restate command use","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"TaoJun99"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"TaoJun99"},"content":"                        FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"yeo-yiheng"},"content":"            // Check each module fits the constraints","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"yeo-yiheng"},"content":"            checkModuleValidity(splitByWhiteSpace);","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"yeo-yiheng"},"content":"            // Past here, modules are all valid","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"yeo-yiheng"},"content":"        } else if (mode.equals(Mode.NAME)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"yeo-yiheng"},"content":"            // Only name","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"yeo-yiheng"},"content":"            return tempReturn;","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"yeo-yiheng"},"content":"        } else if (mode.equals(Mode.MODULE)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"yeo-yiheng"},"content":"            // Only module","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"yeo-yiheng"},"content":"            checkModuleValidity(tempReturn);","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"yeo-yiheng"},"content":"        return tempReturn;","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"yeo-yiheng"},"content":"     * Checks if the provided modules are valid.","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"yeo-yiheng"},"content":"     * @param modules an array of modules to be checked for validity","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"yeo-yiheng"},"content":"     * @throws ParseException if any one of the modules do not match a valid module code","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"yeo-yiheng"},"content":"    private void checkModuleValidity(String[] modules) throws ParseException {","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"yeo-yiheng"},"content":"        Pattern pattern;","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"yeo-yiheng"},"content":"        Matcher matcher;","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"yeo-yiheng"},"content":"        pattern \u003d Pattern.compile(VALIDATION_REGEX);","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"yeo-yiheng"},"content":"        for (String s : modules) {","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"yeo-yiheng"},"content":"            matcher \u003d pattern.matcher(s.toUpperCase(Locale.ROOT));","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"yeo-yiheng"},"content":"            if (!matcher.find() \u0026\u0026 !Objects.equals(s, \"\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"yeo-yiheng"},"content":"                throw new ParseException(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"yeo-yiheng":129,"TaoJun99":11,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/MarkAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.MarkAssignmentCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":" * Parses input arguments and creates a new MarkAssignmentCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"public class MarkAssignmentCommandParser implements Parser\u003cMarkAssignmentCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkAssignmentCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"     * and returns an MarkAssignmentCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    public MarkAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"        String indexString \u003d args.replaceAll(\"[^0-9]\", \"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"        String argsWithoutIndex \u003d args.replaceAll(\"[0-9]\", \"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"                    ArgumentTokenizer.tokenize(argsWithoutIndex, PREFIX_NAME);","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"            if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"                    || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"                        MarkAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"            Index index \u003d ParserUtil.parseIndex(indexString);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"            Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"            return new MarkAssignmentCommand(name, index);","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAssignmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"qinguorui2001":46,"weichang18":5}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"     * Parses a {@code String module} into an {@code Module}.","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"    public static Module parseModule(String module) throws ParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"        String trimmedModule \u003d module.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"        if (!Module.isValidModule(trimmedModule)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"            throw new ParseException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"        return new Module(trimmedModule);","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"     * Parses a {@code String dueDate} into a {@code dueDate}.","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"     * @throws ParseException if the given {@code dueDate} is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"    public static DueDate parseDate(String dueDate) throws ParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(dueDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"        String trimmedDueDate \u003d dueDate.trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"        String splitString \u003d \",\";","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"        if (!DueDate.isValidDueDate(trimmedDueDate)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"            throw new ParseException(DueDate.MESSAGE_CONSTRAINTS_DUE_DATE);","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"        } else if (!dueDate.contains(splitString)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"            return new DueDate(trimmedDueDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"            String[] dateAndTime \u003d trimmedDueDate.split(splitString);","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"            String date \u003d dateAndTime[0];","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"            String time \u003d dateAndTime[1];","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"            return new DueDate(date, time);","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"qinguorui2001":29,"yeo-yiheng":9,"-":109}},{"path":"src/main/java/seedu/address/logic/parser/ShowAssignmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"import seedu.address.logic.commands.ShowAssignmentCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":" * Parses input arguments and creates a new ShowAssignmentCommand Object.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"public class ShowAssignmentCommandParser implements Parser\u003cShowAssignmentCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"     * Parses the given {@code String} of arguments in the context of the ShowCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"     * and returns a ShowCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"    public ShowAssignmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"            return new ShowAssignmentCommand(index);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowAssignmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"weichang18":8,"-":20}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.UniqueAssignmentList;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"    /* The person whose assignment is displayed on the Ui */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"    private Person activePerson;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    private final UniqueAssignmentList assignments;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"        assignments \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"     * Replaces the contents of the person\u0027s assignment list with {@code assignments}.","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"     * {@code assignments} must not contain duplicate assignments.","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"    public void setAssignments(List\u003cAssignment\u003e assignments) {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        this.assignments.setAssignments(assignments);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"        setAssignments(newData.getAssignmentsList());","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"weichang18"},"content":"        activePerson \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"    //// assignment-level operations","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"     * Returns true if an assignment with the same identity as {@code assignment} exists in the person\u0027s assignment","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"     * list.","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"Droffilc13"},"content":"    public boolean hasAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(assignment);","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"Droffilc13"},"content":"        return person.getAssignments().contains(assignment);","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"     * Adds an assignment to the person\u0027s assignment list.","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"     * The assignment must not already exist in the person\u0027s assignment list.","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Droffilc13"},"content":"    public void addAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"Droffilc13"},"content":"        person.getAssignments().add(assignment);","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"qinguorui2001"},"content":"     * Removes {@code key} from this {@code AddressBook\u0027s person assignment list}.","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"qinguorui2001"},"content":"     * {@code key} must exist in the person assignment list.","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"Droffilc13"},"content":"    public void removeAssignment(Person person, Assignment key) {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"Droffilc13"},"content":"        person.getAssignments().delete(key);","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"     * Marks {@code key} from this {@code AddressBook\u0027s person assignment list}.","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"     * {@code key} must exist in the person assignment list.","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"Droffilc13"},"content":"    public void markAssignment(Person person, Assignment key) {","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"Droffilc13"},"content":"        person.getAssignments().done(key);","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"weichang18"},"content":"     * Retrieve the assignment list of the identified person {@code name} from this {@code AddressBook\u0027s person list}.","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"Droffilc13"},"content":"    public ObservableList\u003cAssignment\u003e getPersonAssignmentList(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"Droffilc13"},"content":"        return person.getAssignments().asUnmodifiableObservableList();","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"Droffilc13"},"content":"     * Changes the person whose assignment list is displayed. Changes {@code activePerson} to null which represents","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"Droffilc13"},"content":"     * no assignment list selected if the person indicated does not exist in {@code AddressBook\u0027s person list}.","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"Droffilc13"},"content":"     * @param person","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"Droffilc13"},"content":"    public void changeActivePerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"Droffilc13"},"content":"        if (!hasPerson(person)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"Droffilc13"},"content":"            this.activePerson \u003d null;","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"Droffilc13"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"Droffilc13"},"content":"            this.activePerson \u003d person;","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"Droffilc13"},"content":"     * Returns true if the active person is same as the person.","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"Droffilc13"},"content":"     * @param person the Person which is queried to find if he/she is the current activePerson","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"Droffilc13"},"content":"     * @return true if the person is the current activePerson","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"Droffilc13"},"content":"    public boolean isActivePerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"Droffilc13"},"content":"        return person.equals(activePerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":188,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"weichang18"},"content":"    public void updateAssignmentList(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"Droffilc13"},"content":"        if (activePerson \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"Droffilc13"},"content":"            this.assignments.clearAllAssignments();","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"Droffilc13"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"weichang18"},"content":"            this.assignments.setAssignments(person.getAssignments());","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"weichang18"},"content":"    public ObservableList\u003cAssignment\u003e getAssignmentsList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"weichang18"},"content":"        return assignments.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Droffilc13":42,"qinguorui2001":38,"weichang18":14,"-":119}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"weichang18"},"content":"    /** Returns an unmodifiable view of the filtered assignment list displayed in Ui. */","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"weichang18"},"content":"    ObservableList\u003cAssignment\u003e getFilteredAssignmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"Droffilc13"},"content":"    /** Returns an unmodifiable view of the filtered assignment list of the Person */","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"Droffilc13"},"content":"    List\u003cAssignment\u003e getFilteredAssignmentList(Person person);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"Droffilc13"},"content":"    boolean hasAssignment(Person person, Assignment toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"Droffilc13"},"content":"    void addAssignment(Person person, Assignment toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"Droffilc13"},"content":"    void deleteAssignment(Person person, Assignment toDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"Droffilc13"},"content":"    void markAssignment(Person person, Assignment toMark);","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"weichang18"},"content":"    void updateFilteredAssignmentList(Person person);","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Droffilc13":8,"qinguorui2001":6,"weichang18":4,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"    private ObservableList\u003cAssignment\u003e assignmentsList;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"        assignmentsList \u003d new FilteredList\u003c\u003e(this.addressBook.getAssignmentsList());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"weichang18"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"Droffilc13"},"content":"        if (addressBook.isActivePerson(target)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"Droffilc13"},"content":"            updateFilteredAssignmentList(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"weichang18"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Assignment \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"Droffilc13"},"content":"    public boolean hasAssignment(Person person, Assignment toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"Droffilc13"},"content":"        return addressBook.hasAssignment(person, toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"Droffilc13"},"content":"    public void addAssignment(Person person, Assignment toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"Droffilc13"},"content":"        addressBook.addAssignment(person, toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"Droffilc13"},"content":"        updateFilteredAssignmentList(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"Droffilc13"},"content":"    public void deleteAssignment(Person person, Assignment toDelete) {","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"Droffilc13"},"content":"        addressBook.removeAssignment(person, toDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"Droffilc13"},"content":"        updateFilteredAssignmentList(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"Droffilc13"},"content":"    public void markAssignment(Person person, Assignment toMark) {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"Droffilc13"},"content":"        addressBook.markAssignment(person, toMark);","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"Droffilc13"},"content":"        updateFilteredAssignmentList(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"weichang18"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Assignment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"weichang18"},"content":"     * Returns an unmodifiable view of the list of {@code Assignment} backed by the internal list of","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"weichang18"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":192,"author":{"gitId":"weichang18"},"content":"    public ObservableList\u003cAssignment\u003e getFilteredAssignmentList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"weichang18"},"content":"        return assignmentsList;","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":195,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"Droffilc13"},"content":"    public List\u003cAssignment\u003e getFilteredAssignmentList(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"Droffilc13"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"Droffilc13"},"content":"        return this.addressBook.getPersonAssignmentList(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":203,"author":{"gitId":"weichang18"},"content":"    public void updateFilteredAssignmentList(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":204,"author":{"gitId":"Droffilc13"},"content":"        this.addressBook.changeActivePerson(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"weichang18"},"content":"        this.addressBook.updateAssignmentList(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"weichang18"},"content":"        this.assignmentsList \u003d new FilteredList\u003c\u003e(this.addressBook.getAssignmentsList());","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Droffilc13":22,"qinguorui2001":17,"weichang18":18,"-":151}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"     * Updates the assignment list in AddressBook.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"    void updateAssignmentList(Person person);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"     * Returns an unmodifiable view of the assignment list.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"     * This list will not contain any duplicate assignments.","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"    ObservableList\u003cAssignment\u003e getAssignmentsList();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Droffilc13":5,"weichang18":7,"-":17}},{"path":"src/main/java/seedu/address/model/assignment/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":" * Represents an Assignment in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"public class Assignment implements Comparable\u003cAssignment\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"    private final Description description;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"    private final DueDate dueDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"    private final Status status;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"     * Initialises Assignment with every field needing to be present and not null.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"    public Assignment(Description description, DueDate dueDate, Status status) {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"        requireAllNonNull(description, dueDate, status);","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"     * Constructor used for loading assignments","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"    public Assignment(String[] strings) {","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"        this.description \u003d new Description(strings[0]);","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"        this.dueDate \u003d DueDate.createDueDate(strings[1]);","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"        this.status \u003d Status.createStatus(strings[2]);","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"        return description;","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"    public DueDate getDueDate() {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"        return dueDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"Droffilc13"},"content":"        return status;","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"     * Returns true if both assignments have the same description.","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"     * This defines a weaker notion of equality between two assignments.","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"    public boolean isSameAssignment(Assignment otherAssignment) {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"        if (otherAssignment \u003d\u003d this) {","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"Droffilc13"},"content":"            return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"        return otherAssignment !\u003d null","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"                \u0026\u0026 otherAssignment.getDescription().toString().toLowerCase(Locale.ROOT)","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"                .equals(getDescription().toString().toLowerCase(Locale.ROOT));","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"Droffilc13"},"content":"     * Returns true if both assignments have the same identity and data fields.","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"Droffilc13"},"content":"     * This defines a stronger notion of equality between two assignments.","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"Droffilc13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"Droffilc13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"Droffilc13"},"content":"            return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"Droffilc13"},"content":"        if (!(other instanceof Assignment)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"Droffilc13"},"content":"            return false;","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"Droffilc13"},"content":"        Assignment otherAssignment \u003d (Assignment) other;","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"Droffilc13"},"content":"        return otherAssignment.getDescription().equals(getDescription())","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"Droffilc13"},"content":"                \u0026\u0026 otherAssignment.getDueDate().equals(getDueDate())","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"Droffilc13"},"content":"                \u0026\u0026 otherAssignment.getStatus().equals(getStatus());","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"Droffilc13"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"Droffilc13"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"Droffilc13"},"content":"        return Objects.hash(description, dueDate, status);","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"Droffilc13"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"Droffilc13"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"Droffilc13"},"content":"        builder.append(getDescription())","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"TaoJun99"},"content":"                .append(\", DueDate: \")","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"Droffilc13"},"content":"                .append(getDueDate())","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"TaoJun99"},"content":"                .append(\", Status: \")","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"Droffilc13"},"content":"                .append(getStatus());","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"Droffilc13"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"weichang18"},"content":"    public int compareTo(Assignment a) {","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"weichang18"},"content":"        int statusCompare \u003d this.getStatus().compareTo(a.getStatus());","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"weichang18"},"content":"        int dueDateCompare \u003d this.getDueDate().compareTo(a.getDueDate());","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"weichang18"},"content":"        return (statusCompare \u003d\u003d 0)","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"weichang18"},"content":"                ? dueDateCompare","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"weichang18"},"content":"                : statusCompare;","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":85,"yeo-yiheng":3,"TaoJun99":12,"weichang18":10}},{"path":"src/main/java/seedu/address/model/assignment/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":" * Represents an Assignment\u0027s description in the address book.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"public class Description {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"            \"Assignments should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"    /*","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"    public final String description;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"    public Description(String description) {","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"        return description;","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"Droffilc13"},"content":"        return description.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":59}},{"path":"src/main/java/seedu/address/model/assignment/DueDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"public class DueDate implements Comparable\u003cDueDate\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String MESSAGE_CONSTRAINTS_TIME \u003d \"Due time should be in a format HHmm\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String MESSAGE_CONSTRAINTS_DATE \u003d \"Due date should be in a format d/M/yyyy\";","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String MESSAGE_CONSTRAINTS_DUE_DATE \u003d \"Due dates should be in a format d/M/yyyy,HHmm\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"            + AddAssignmentCommand.FRIENDLY_COMMAND_SYNTAX;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    public static final String OUTPUT_CONSTRAINTS \u003d \"Due dates saved should be in a format dd MMM yyyy, hh:mm a\";","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"    public static final String DATE_VALIDATION_REGEX \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"            \"^([1-9]|[0-2][0-9]|(3)[0-1])(/)([1-9]|((0)[0-9])|((1)[0-2]))(/)\\\\d{4}$\";","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"    public static final String TIME_VALIDATION_REGEX \u003d \"^(00|[0,1][0-9]|2[0-3])([0-5][0-9])$\";","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    public static final String DATE_AND_TIME_VALIDATION_REGEX \u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"              \"^([1-9]|[0-2][0-9]|(3)[0-1])(/)([1-9]|((0)[0-9])|((1)[0-2]))(/)\\\\d{4}(,)\"","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"                      + \"(00|[0,1][0-9]|2[0-3])([0-5][0-9])$\";","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"    public static final String LATEST_TIME_IN_DAY \u003d \"2359\";","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"    public static final ArrayList\u003cString\u003e FRIENDLY_COMMANDS \u003d initArrayList();","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"    protected static final DateTimeFormatter PARSE_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"    protected static final DateTimeFormatter PARSE_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"    protected static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\",","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"            Locale.ENGLISH);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(DueDate.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"    public final String value;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"     * Constructs a {@code DueDate}.","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"     * @param date Date of due date.","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"     * @param time Time of due date.","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"    public DueDate(String date, String time) {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS_TIME);","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"        logger.info(\"Date: \" + date + \"\\nTime: \" + time);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"        if (isValidFriendlyDate(date)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"            this.date \u003d friendlyToDate(date);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"            checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS_DATE);","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"weichang18"},"content":"            this.date \u003d LocalDate.parse(date, PARSE_DATE_FORMAT);","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"weichang18"},"content":"        this.time \u003d LocalTime.parse(time, PARSE_TIME_FORMAT);","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"weichang18"},"content":"        this.dateTime \u003d LocalDateTime.of(this.date, this.time);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"        this.value \u003d this.dateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"Droffilc13"},"content":"     * Constructs a {@code DueDate}.","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"Droffilc13"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"weichang18"},"content":"     * @param date Date of due date.","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"weichang18"},"content":"    public DueDate(String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"        this(date, LATEST_TIME_IN_DAY);","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"     * Constructs a {@code DueDate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"     * @param dateTime Date and time of dueDate","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"    public DueDate(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"        this.date \u003d dateTime.toLocalDate();","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"        this.time \u003d dateTime.toLocalTime();","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"        this.value \u003d this.dateTime.format(OUTPUT_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"weichang18"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"weichang18"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"weichang18"},"content":"        return test.matches(DATE_VALIDATION_REGEX);","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"weichang18"},"content":"     * Returns true if a given string is a valid Time.","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"weichang18"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"weichang18"},"content":"        return test.matches(TIME_VALIDATION_REGEX);","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"yeo-yiheng"},"content":"     * Checks if the given string is one of the valid friendly date commands.","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"yeo-yiheng"},"content":"     * @param date user input for a date.","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"yeo-yiheng"},"content":"     * @return true if the given string is a valid friendly date command.","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"yeo-yiheng"},"content":"    public static boolean isValidFriendlyDate(String date) {","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"yeo-yiheng"},"content":"        for (String s : FRIENDLY_COMMANDS) {","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"            if (s.equals(date)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"                return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"yeo-yiheng"},"content":"        return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"yeo-yiheng"},"content":"     * Returns true if a given string contains a valid Friendly Date and time.","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"yeo-yiheng"},"content":"     * @param date user input friendly date and time","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"yeo-yiheng"},"content":"     * @return true if matches regex","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"yeo-yiheng"},"content":"    public static boolean isValidFriendlyDateAndTime(String date) {","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"yeo-yiheng"},"content":"        String[] splitDate \u003d date.split(\",\");","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"yeo-yiheng"},"content":"        return isValidFriendlyDate(splitDate[0]) \u0026\u0026 splitDate[1].matches(TIME_VALIDATION_REGEX);","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"     * Returns true if a given string is a valid DueDate output.","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean isValidDueDateOutput(String test) {","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"            OUTPUT_FORMAT.parse(test);","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"        return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"     * Creates a due date based on the format in the Json file","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"     * @param dueDate dueDate in the Json file","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"qinguorui2001"},"content":"     * @return the corresponding dueDate","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"qinguorui2001"},"content":"    public static DueDate createDueDate(String dueDate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(dueDate);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"qinguorui2001"},"content":"        checkArgument(isValidDueDateOutput(dueDate), OUTPUT_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"qinguorui2001"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dueDate, OUTPUT_FORMAT);","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"qinguorui2001"},"content":"        return new DueDate(dateTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"qinguorui2001"},"content":"     * * Returns true if the date and time is valid.","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean isValidDateAndTime(String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"qinguorui2001"},"content":"        return date.matches(DATE_AND_TIME_VALIDATION_REGEX);","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"qinguorui2001"},"content":"     * Returns true if date is valid due date form.","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"qinguorui2001"},"content":"    public static boolean isValidDueDate(String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"yeo-yiheng"},"content":"        return isValidDate(date) || isValidDateAndTime(date) || isValidFriendlyDate(date)","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"yeo-yiheng"},"content":"                || isValidFriendlyDateAndTime(date);","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":173,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":174,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"yeo-yiheng"},"content":"     * Instantiates the global arraylist with the friendly commands.","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"yeo-yiheng"},"content":"     * @return an arraylist of String containing the friendly commands.","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":179,"author":{"gitId":"yeo-yiheng"},"content":"    public static ArrayList\u003cString\u003e initArrayList() {","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"yeo-yiheng"},"content":"        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"mon\");","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"tue\");","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"wed\");","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"thu\");","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"fri\");","lastModifiedDate":"2021-10-16"},{"lineNumber":186,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"sat\");","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"sun\");","lastModifiedDate":"2021-10-16"},{"lineNumber":188,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"tmr\");","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"today\");","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"yeo-yiheng"},"content":"        temp.add(\"week\");","lastModifiedDate":"2021-10-16"},{"lineNumber":191,"author":{"gitId":"yeo-yiheng"},"content":"        return temp;","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"yeo-yiheng"},"content":"     * Converts a friendly date into a LocalDate object.","lastModifiedDate":"2021-10-16"},{"lineNumber":196,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":197,"author":{"gitId":"yeo-yiheng"},"content":"     * @param friendlyDate user given friendly date.","lastModifiedDate":"2021-10-16"},{"lineNumber":198,"author":{"gitId":"yeo-yiheng"},"content":"     * @return user given friendly date in LocalDate format.","lastModifiedDate":"2021-10-16"},{"lineNumber":199,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":200,"author":{"gitId":"yeo-yiheng"},"content":"    public static LocalDate friendlyToDate(String friendlyDate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":201,"author":{"gitId":"yeo-yiheng"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-16"},{"lineNumber":202,"author":{"gitId":"yeo-yiheng"},"content":"        switch (friendlyDate) {","lastModifiedDate":"2021-10-16"},{"lineNumber":203,"author":{"gitId":"yeo-yiheng"},"content":"        case \"mon\":","lastModifiedDate":"2021-10-16"},{"lineNumber":204,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.with(TemporalAdjusters.next(DayOfWeek.MONDAY));","lastModifiedDate":"2021-10-16"},{"lineNumber":205,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":206,"author":{"gitId":"yeo-yiheng"},"content":"        case \"tue\":","lastModifiedDate":"2021-10-16"},{"lineNumber":207,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.with(TemporalAdjusters.next(DayOfWeek.TUESDAY));","lastModifiedDate":"2021-10-16"},{"lineNumber":208,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":209,"author":{"gitId":"yeo-yiheng"},"content":"        case \"wed\":","lastModifiedDate":"2021-10-16"},{"lineNumber":210,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.with(TemporalAdjusters.next(DayOfWeek.WEDNESDAY));","lastModifiedDate":"2021-10-16"},{"lineNumber":211,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":212,"author":{"gitId":"yeo-yiheng"},"content":"        case \"thu\":","lastModifiedDate":"2021-10-16"},{"lineNumber":213,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.with(TemporalAdjusters.next(DayOfWeek.THURSDAY));","lastModifiedDate":"2021-10-16"},{"lineNumber":214,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":215,"author":{"gitId":"yeo-yiheng"},"content":"        case \"fri\":","lastModifiedDate":"2021-10-16"},{"lineNumber":216,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.with(TemporalAdjusters.next(DayOfWeek.FRIDAY));","lastModifiedDate":"2021-10-16"},{"lineNumber":217,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":218,"author":{"gitId":"yeo-yiheng"},"content":"        case \"sat\":","lastModifiedDate":"2021-10-16"},{"lineNumber":219,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.with(TemporalAdjusters.next(DayOfWeek.SATURDAY));","lastModifiedDate":"2021-10-16"},{"lineNumber":220,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":221,"author":{"gitId":"yeo-yiheng"},"content":"        case \"sun\":","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.with(TemporalAdjusters.next(DayOfWeek.SUNDAY));","lastModifiedDate":"2021-10-16"},{"lineNumber":223,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":224,"author":{"gitId":"yeo-yiheng"},"content":"        case \"tmr\":","lastModifiedDate":"2021-10-16"},{"lineNumber":225,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.plusDays(1);","lastModifiedDate":"2021-10-16"},{"lineNumber":226,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":227,"author":{"gitId":"yeo-yiheng"},"content":"        case \"today\":","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"yeo-yiheng"},"content":"        case \"week\":","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"yeo-yiheng"},"content":"            currentDate \u003d currentDate.plusDays(7);","lastModifiedDate":"2021-10-16"},{"lineNumber":231,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-16"},{"lineNumber":232,"author":{"gitId":"yeo-yiheng"},"content":"        default:","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"yeo-yiheng"},"content":"            break;","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":235,"author":{"gitId":"yeo-yiheng"},"content":"        return currentDate;","lastModifiedDate":"2021-10-16"},{"lineNumber":236,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":237,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":238,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":240,"author":{"gitId":"Droffilc13"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":241,"author":{"gitId":"weichang18"},"content":"        return value;","lastModifiedDate":"2021-09-27"},{"lineNumber":242,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":243,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":244,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":245,"author":{"gitId":"Droffilc13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":246,"author":{"gitId":"Droffilc13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":247,"author":{"gitId":"Droffilc13"},"content":"                || (other instanceof DueDate // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":248,"author":{"gitId":"Droffilc13"},"content":"                \u0026\u0026 value.equals(((DueDate) other).value)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":249,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":250,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":251,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":252,"author":{"gitId":"Droffilc13"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":253,"author":{"gitId":"Droffilc13"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":254,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":255,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":256,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":257,"author":{"gitId":"weichang18"},"content":"    public int compareTo(DueDate d) {","lastModifiedDate":"2021-10-15"},{"lineNumber":258,"author":{"gitId":"weichang18"},"content":"        return this.dateTime.compareTo(d.dateTime);","lastModifiedDate":"2021-10-15"},{"lineNumber":259,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":260,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":32,"yeo-yiheng":117,"qinguorui2001":62,"weichang18":49}},{"path":"src/main/java/seedu/address/model/assignment/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"public class Status implements Comparable\u003cStatus\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Status of assignment should be clearly defined!\";","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"    enum StatusType {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"        COMPLETED(2),","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"        LATE(0),","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"        PENDING(1);","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"        private final int weight;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"        StatusType(int weight) {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"            this.weight \u003d weight;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"     * Initialises Status class","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"    private Status(StatusType value) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"        this.value \u003d value.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"    public static Status createCompletedStatus() {","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"        return new Status(StatusType.COMPLETED);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"    public static Status createPendingStatus() {","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"        return new Status(StatusType.PENDING);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"    public static Status createLateStatus() {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"        return new Status(StatusType.LATE);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"     * Creates a status based on the status string in the Json file","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"     * @param value the status string in the Json file","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"     * @return the corresponding Status","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"    public static Status createStatus(String value) {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"        StatusType currentStatus \u003d StatusType.PENDING;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"        for (StatusType status: StatusType.values()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"            if (value.equals(status.toString())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"                currentStatus \u003d status;","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"        return new Status(currentStatus);","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"     * Returns true if a given string is a valid Status.","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        for (StatusType status: StatusType.values()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"            if (test.equals(status.toString())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"                return true;","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"TaoJun99"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"TaoJun99"},"content":"        return false;","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"    public String getValue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"        return this.value;","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"Droffilc13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"Droffilc13"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"Droffilc13"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"Droffilc13"},"content":"                \u0026\u0026 value.equals(((Status) other).value)); // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"Droffilc13"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"Droffilc13"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"Droffilc13"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"Droffilc13"},"content":"    public String toString() {","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"Droffilc13"},"content":"        return \u0027[\u0027 + value.toUpperCase() + \u0027]\u0027;","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"weichang18"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"weichang18"},"content":"    public int compareTo(Status comparingStatus) {","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"weichang18"},"content":"        int thisStatusWeight \u003d 0;","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"weichang18"},"content":"        int comparingStatusWeight \u003d 0;","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"weichang18"},"content":"        for (StatusType status: StatusType.values()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"weichang18"},"content":"            if (this.value.equals(status.toString())) {","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"weichang18"},"content":"                thisStatusWeight \u003d status.weight;","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"weichang18"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"weichang18"},"content":"            if (comparingStatus.getValue().equals(status.toString())) {","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"weichang18"},"content":"                comparingStatusWeight \u003d status.weight;","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"weichang18"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"weichang18"},"content":"        return thisStatusWeight - comparingStatusWeight;","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":46,"TaoJun99":32,"weichang18":29}},{"path":"src/main/java/seedu/address/model/assignment/UniqueAssignmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":" * A list of assignments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":" * An assignment is considered unique by comparing using {@code Assignment#isSameAssignment(Assignment)}.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":" * As such, adding and updating of assignments uses Assignment#isSameAssignment(Assignment) for equality to ensure","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":" * that the assignment being added or updated is unique in terms of identity in the UniqueAssignmentList.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":" * However, the removal of an assignment uses Assignment#equals(Object)","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":" * to ensure that the assignment with exactly the same fields will be removed.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":" *","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":" * @see Assignment#isSameAssignment(Assignment)","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"public class UniqueAssignmentList implements Iterable\u003cAssignment\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"    private final ObservableList\u003cAssignment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"    private final ObservableList\u003cAssignment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"     * Returns the assignment list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"    public ObservableList\u003cAssignment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"     * Returns true if the list contains an equivalent assignment as the given argument.","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"    public boolean contains(Assignment toCheck) {","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAssignment);","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"     * Adds an assignment to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"    public void add(Assignment toAdd) {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"            throw new DuplicateAssignmentException();","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"     * Replaces the assignment {@code target} in the list with {@code editedAssignment}.","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"     * The assignment identity of {@code editedAssignment}","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"     * must not be the same as another existing assignment in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"    public void setAssignment(Assignment target, Assignment editedAssignment) {","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"        requireAllNonNull(target, editedAssignment);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssignmentNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"        if (!target.isSameAssignment(editedAssignment) \u0026\u0026 contains(editedAssignment)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"            throw new DuplicateAssignmentException();","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"        internalList.set(index, editedAssignment);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"     * Removes the equivalent assignment from the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"     * The assignment must exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"    public void delete(Assignment toDelete) {","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(toDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"        if (!internalList.remove(toDelete)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssignmentNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"     * Marks the equivalent assignment as done from the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"     * The assignment must exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"    public void done(Assignment toDone) {","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(toDone);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"        if (!internalList.contains(toDone)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssignmentNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"        setAssignment(toDone, new Assignment(toDone.getDescription(), toDone.getDueDate(),","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"                Status.createCompletedStatus()));","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"weichang18"},"content":"     * Replaces the contents of this list with {@code replacement}.","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"weichang18"},"content":"     * {@code replacement} must not contain duplicate assignments.","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"qinguorui2001"},"content":"    public void setAssignments(UniqueAssignmentList replacement) {","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"     * Replaces the contents of this list with {@code assignments}.","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"     * {@code assignments} must not contain duplicate assignments.","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"    public void setAssignments(List\u003cAssignment\u003e assignments) {","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"        requireAllNonNull(assignments);","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"qinguorui2001"},"content":"        if (!assignmentsAreUnique(assignments)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"            throw new DuplicateAssignmentException();","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"        internalList.setAll(assignments);","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"Droffilc13"},"content":"     * Removes all assignments within the UniqueAssignmentList","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"Droffilc13"},"content":"    public void clearAllAssignments() {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"Droffilc13"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"    public Iterator\u003cAssignment\u003e iterator() {","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"                || (other instanceof UniqueAssignmentList // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 internalList.equals(((UniqueAssignmentList) other).internalList));","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"qinguorui2001"},"content":"     * Returns true if {@code assignments} contains only unique assignments.","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"qinguorui2001"},"content":"    private boolean assignmentsAreUnique(List\u003cAssignment\u003e assignments) {","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"qinguorui2001"},"content":"        for (int i \u003d 0; i \u003c assignments.size() - 1; i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"qinguorui2001"},"content":"            for (int j \u003d i + 1; j \u003c assignments.size(); j++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"qinguorui2001"},"content":"                if (assignments.get(i).isSameAssignment(assignments.get(j))) {","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"qinguorui2001"},"content":"                    return false;","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"qinguorui2001"},"content":"                }","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"qinguorui2001"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"qinguorui2001"},"content":"        return true;","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"TaoJun99"},"content":"     * Returns true if {@code internalList} has no assignments","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"TaoJun99"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"TaoJun99"},"content":"        return internalList.isEmpty();","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"TaoJun99"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"TaoJun99"},"content":"    public Assignment get(int index) {","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"TaoJun99"},"content":"        return asUnmodifiableObservableList().get(index);","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"weichang18"},"content":"     * Sorts the assignment list by status.","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"weichang18"},"content":"     * Assignments with the same status are then sorted by date","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"weichang18"},"content":"    public void sort() {","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"yeo-yiheng"},"content":"        Comparator\u003cAssignment\u003e byStatusAndDate \u003d Comparator.naturalOrder();","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"weichang18"},"content":"        this.internalList.sort(byStatusAndDate);","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":187,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":20,"qinguorui2001":134,"yeo-yiheng":1,"TaoJun99":14,"weichang18":18}},{"path":"src/main/java/seedu/address/model/assignment/exceptions/AssignmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment.exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"public class AssignmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":3}},{"path":"src/main/java/seedu/address/model/assignment/exceptions/DuplicateAssignmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment.exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"public class DuplicateAssignmentException extends RuntimeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"    public DuplicateAssignmentException() {","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":7}},{"path":"src/main/java/seedu/address/model/person/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":" * Represents a Person\u0027s module in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModule(String)}","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"public class Module {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Modules must be in the form\"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"            + \" XX(X)1111(X), where X is any letter, 1 is any number and values in brackets\"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"            + \" are optional, and it should not be blank\";","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"     * The first character of the module must not be a whitespace,","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"     * otherwise \" \" (a blank string) becomes a valid input. Otherwise, detect","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"     * if the module code matches a 2/3 letter - 4 number - optional one letter pattern.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String VALIDATION_REGEX \u003d \"([A-Z]{2,3})([0-9]{4})([A-Z])?\";","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    public final String moduleCode;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"     * Constructs an {@code module}.","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"     * @param module A valid module.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"    public Module(String module) {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"        requireNonNull(module);","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        checkArgument(isValidModule(module), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"        moduleCode \u003d module;","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"     * Returns true if a given string is a valid module.","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"    public static boolean isValidModule(String test) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"        return moduleCode;","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"                || (other instanceof Module // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"                \u0026\u0026 moduleCode.equals(((Module) other).moduleCode)); // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yeo-yiheng":24,"-":37}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"        fullName \u003d capitalise(name);","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"     * Capitalise the first character of each part of the name.","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"    public static String capitalise(String fullName) {","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"        String[] arrOfName \u003d fullName.split(\" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"        StringBuilder capitaliseFullName \u003d new StringBuilder();","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"        for (String name : arrOfName) {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"            String capitalise \u003d name.substring(0, 1).toUpperCase() + name.substring(1).toLowerCase();","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"            capitaliseFullName.append(capitalise + \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"        return capitaliseFullName.toString().trim();","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weichang18":13,"-":58}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"                .anyMatch(keyword -\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"                    boolean result;","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"                    result \u003d StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword)","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"                            || StringUtil.containsWordIgnoreCase(person.getModule().moduleCode, keyword);","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"                    return result;","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"                });","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yeo-yiheng":6,"-":30}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import java.util.*;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.*;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"    private final Module module;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    private final UniqueAssignmentList assignments;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    public Person(Name name, Email email, Module module, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        requireAllNonNull(name, email, module, tags);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        assignments \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"     * Constructor for creating a person with assignments","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"    public Person(Name name, Email email, Module module, List\u003cAssignment\u003e assignmentList, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"        requireAllNonNull(name, email, module, tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"        assignments \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"        for (Assignment assignment:assignmentList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"            assignments.add(assignment);","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"    public Module getModule() {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"        return module;","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"    public UniqueAssignmentList getAssignments() {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"weichang18"},"content":"        assignments.sort();","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"Droffilc13"},"content":"        return assignments;","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"                \u0026\u0026 isSameName(otherPerson.getName());","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"    public boolean isSameName(Name name) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"        return this.getName().equals(name);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"TaoJun99"},"content":"    public boolean hasModule(Module module) {","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"TaoJun99"},"content":"        return this.getModule().equals(module);","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"                \u0026\u0026 otherPerson.getModule().equals(getModule())","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"TaoJun99"},"content":"                \u0026\u0026 otherPerson.getAssignments().equals(getAssignments())","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"        return Objects.hash(assignments, name, email, module, tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"yeo-yiheng"},"content":"                .append(\"; Module: \")","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"yeo-yiheng"},"content":"                .append(getModule());","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"TaoJun99"},"content":"        UniqueAssignmentList assignments \u003d getAssignments();","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"TaoJun99"},"content":"        if (!assignments.isEmpty()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"TaoJun99"},"content":"            builder.append(\"; Assignments: \");","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"TaoJun99"},"content":"            assignments.asUnmodifiableObservableList().forEach(builder::append);","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Droffilc13":1,"qinguorui2001":10,"yeo-yiheng":9,"TaoJun99":23,"weichang18":1,"-":105}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import java.util.*;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"qinguorui2001":1,"-":135}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"                new Module(\"CS2100\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"                getAssignmentList(new String[] {\"Assignment 1\", \"15 Sep 2021, 01:00 PM\", \"COMPLETED\"},","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"                                  new String[] {\"Assignment 2\", \"15 Oct 2021, 01:00 PM\", \"PENDING\"}),","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"            new Person(new Name(\"Bernice Yu\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"                new Module(\"CS2103T\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"                getAssignmentList(new String[] {\"iP\", \"17 Sep 2021, 11:59 PM\", \"COMPLETED\"}),","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"                new Module(\"MA1521\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"                getAssignmentList(new String[] {\"Homework 1\", \"13 Sep 2021, 11:59 PM\", \"LATE\"}),","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"            new Person(new Name(\"David Li\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"                new Module(\"GER1000\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"                getAssignmentList(new String[] {\"Tutorial 2\", \"16 Sep 2021, 11:59 PM\", \"COMPLETED\"}),","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"                new Module(\"CS3216\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"                getAssignmentList(new String[] {\"Assignment 1\", \"10 Sep 2021, 11:59 PM\", \"COMPLETED\"}),","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"                new Module(\"CM1417\"),","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"                getAssignmentList(new String[] {\"Lab 1\", \"20 Sep 2021, 11:59 PM\", \"COMPLETED\"}),","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"TaoJun99"},"content":"     * Returns an assignment list containing the list of strings given.","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"TaoJun99"},"content":"    public static List\u003cAssignment\u003e getAssignmentList(String[]... strings) {","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"TaoJun99"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"TaoJun99"},"content":"                .map(Assignment::new)","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"TaoJun99"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"yeo-yiheng":13,"TaoJun99":18,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"class JsonAdaptedAssignment {","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Assignment\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"    private final String description;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"    private final String dueDate;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"    private final String status;","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given assignment details.","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"    public JsonAdaptedAssignment(String assignment) {","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"        String[] details \u003d assignment.split(\"\\\\|\", 3);","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"        this.description \u003d details[0];","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"        this.dueDate \u003d details[1];","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"        this.status \u003d details[2];","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"     * Converts a given {@code Assignment} into this class for Jackson use.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"    public JsonAdaptedAssignment(Assignment source) {","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"        dueDate \u003d source.getDueDate().value;","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"        status \u003d source.getStatus().value;","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"    @JsonValue","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"    public String getAssignmentDetails() {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"        return description + \"|\" + dueDate + \"|\" + status;","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"    public Assignment toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"        if (dueDate \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"TaoJun99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"TaoJun99"},"content":"                    DueDate.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"TaoJun99"},"content":"        if (!DueDate.isValidDueDateOutput(dueDate)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"TaoJun99"},"content":"            throw new IllegalValueException(DueDate.OUTPUT_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"TaoJun99"},"content":"        final DueDate modelDueDate \u003d DueDate.createDueDate(dueDate);","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"TaoJun99"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"TaoJun99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"TaoJun99"},"content":"                    Status.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"TaoJun99"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"TaoJun99"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"TaoJun99"},"content":"        final Status modelStatus \u003d Status.createStatus(status);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"TaoJun99"},"content":"        return new Assignment(modelDescription, modelDueDate, modelStatus);","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"TaoJun99"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"TaoJun99":86}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"    private final String module;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"    private final List\u003cJsonAdaptedAssignment\u003e assignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"module\") String module,","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"            @JsonProperty(\"assignments\") List\u003cJsonAdaptedAssignment\u003e assignments,","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"        this.module \u003d module;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"        this.assignments.addAll(assignments);","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"        module \u003d source.getModule().moduleCode;","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"        assignments.addAll(source.getAssignments().asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"                .map(JsonAdaptedAssignment::new)","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"TaoJun99"},"content":"        final List\u003cAssignment\u003e modelAssignments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"TaoJun99"},"content":"        for (JsonAdaptedAssignment assignment : assignments) {","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"TaoJun99"},"content":"            modelAssignments.add(assignment.toModelType());","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"yeo-yiheng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName()));","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"        if (!Module.isValidModule(module)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"yeo-yiheng"},"content":"            throw new IllegalValueException(Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"yeo-yiheng"},"content":"        final Module modelModule \u003d new Module(module);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"TaoJun99"},"content":"        Person p \u003d new Person(modelName, modelEmail, modelModule, modelTags);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"TaoJun99"},"content":"        p.getAssignments().setAssignments(modelAssignments);","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"TaoJun99"},"content":"        return p;","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yeo-yiheng":10,"TaoJun99":20,"-":85}},{"path":"src/main/java/seedu/address/ui/AssignmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":" * An UI component that displays information of a {@code Assignment}.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"public class AssignmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"    private static final String FXML \u003d \"AssignmentListCard.fxml\";","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"    public final Assignment assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"    @FXML","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"    private Label description;","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"    @FXML","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"    private Label id;","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"    @FXML","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"    private Label dueDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"    @FXML","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"    private FlowPane status;","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentCard(Assignment assignment, int displayedIndex) {","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"        super(FXML);","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"        this.assignment \u003d assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"Droffilc13"},"content":"        description.setText(assignment.getDescription().description);","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"        dueDate.setText(assignment.getDueDate().toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Droffilc13"},"content":"        status.getChildren().add(new Label(assignment.getStatus().toString()));","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"        status.setId(assignment.getStatus().value);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"            return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"        if (!(other instanceof AssignmentCard)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"            return false;","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"Droffilc13"},"content":"        // state check","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"Droffilc13"},"content":"        AssignmentCard card \u003d (AssignmentCard) other;","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"Droffilc13"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"Droffilc13"},"content":"                \u0026\u0026 assignment.equals(card.assignment);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":67,"qinguorui2001":1}},{"path":"src/main/java/seedu/address/ui/AssignmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":" * Panel containing the list of assignments.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"public class AssignmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"    private static final String FXML \u003d \"AssignmentListPanel.fxml\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AssignmentListPanel.class);","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"    private ListView\u003cAssignment\u003e assignmentListView;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentListPanel(ObservableList\u003cAssignment\u003e assignmentList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"        super(FXML);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"        assignmentListView.setItems(assignmentList);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"        assignmentListView.setCellFactory(listView -\u003e new AssignmentListPanel.AssignmentListViewCell());","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Assignment} using a {@code AssignmentCard}.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"    class AssignmentListViewCell extends ListCell\u003cAssignment\u003e {","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"        @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"        protected void updateItem(Assignment assignment, boolean empty) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"            super.updateItem(assignment, empty);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"            if (empty || assignment \u003d\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"                setText(null);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"                setGraphic(new AssignmentCard(assignment, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Droffilc13":47}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"    private AssignmentListPanel assignmentListPanel;","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"    @FXML","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"    private StackPane assignmentListPanelPlaceholder;","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"weichang18"},"content":"        assignmentListPanel \u003d new AssignmentListPanel(logic.getFilteredAssignmentList());","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Droffilc13"},"content":"        assignmentListPanelPlaceholder.getChildren().add(assignmentListPanel.getRoot());","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Droffilc13":6,"weichang18":1,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"    private Label module;","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"        module.setText(person.getModule().moduleCode);","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yeo-yiheng":2,"-":72}},{"path":"src/main/resources/view/AssignmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"                \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$description\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"            \u003cFlowPane fx:id\u003d\"status\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"            \u003cLabel fx:id\u003d\"dueDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dueDate\" /\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Droffilc13":34}},{"path":"src/main/resources/view/AssignmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"    \u003cListView fx:id\u003d\"assignmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Droffilc13":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"Droffilc13"},"content":".header-stack-pane {","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"Droffilc13"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"Droffilc13"},"content":"     -fx-border-color: derive(#eeeeee, 10%);","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"Droffilc13"},"content":".header-text-labels {","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"Droffilc13"},"content":"     -fx-font-size: 28pt;","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"Droffilc13"},"content":"     -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"Droffilc13"},"content":"     -fx-text-fill: derive(#12d6e8, 20%);","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"Droffilc13"},"content":"     -fx-alignment: center-left;","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"Droffilc13"},"content":"     -fx-opacity: 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":367,"author":{"gitId":"Droffilc13"},"content":"#status {","lastModifiedDate":"2021-09-27"},{"lineNumber":368,"author":{"gitId":"Droffilc13"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-09-27"},{"lineNumber":369,"author":{"gitId":"Droffilc13"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-09-27"},{"lineNumber":370,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-27"},{"lineNumber":371,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":372,"author":{"gitId":"Droffilc13"},"content":"#status .label {","lastModifiedDate":"2021-09-27"},{"lineNumber":373,"author":{"gitId":"Droffilc13"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-09-27"},{"lineNumber":374,"author":{"gitId":"Droffilc13"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-09-27"},{"lineNumber":375,"author":{"gitId":"Droffilc13"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-09-27"},{"lineNumber":376,"author":{"gitId":"Droffilc13"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":377,"author":{"gitId":"Droffilc13"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":378,"author":{"gitId":"Droffilc13"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-09-27"},{"lineNumber":379,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-27"},{"lineNumber":380,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":381,"author":{"gitId":"TaoJun99"},"content":"#PENDING .label {","lastModifiedDate":"2021-10-06"},{"lineNumber":382,"author":{"gitId":"Droffilc13"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-09-27"},{"lineNumber":383,"author":{"gitId":"Droffilc13"},"content":"    -fx-background-color: #ff6600;","lastModifiedDate":"2021-09-27"},{"lineNumber":384,"author":{"gitId":"Droffilc13"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-09-27"},{"lineNumber":385,"author":{"gitId":"Droffilc13"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":386,"author":{"gitId":"Droffilc13"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":387,"author":{"gitId":"Droffilc13"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-09-27"},{"lineNumber":388,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-27"},{"lineNumber":389,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":390,"author":{"gitId":"TaoJun99"},"content":"#COMPLETED .label {","lastModifiedDate":"2021-10-06"},{"lineNumber":391,"author":{"gitId":"Droffilc13"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-09-27"},{"lineNumber":392,"author":{"gitId":"Droffilc13"},"content":"    -fx-background-color: #006400;","lastModifiedDate":"2021-09-27"},{"lineNumber":393,"author":{"gitId":"Droffilc13"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-09-27"},{"lineNumber":394,"author":{"gitId":"Droffilc13"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":395,"author":{"gitId":"Droffilc13"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":396,"author":{"gitId":"Droffilc13"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-09-27"},{"lineNumber":397,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-27"},{"lineNumber":398,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":399,"author":{"gitId":"TaoJun99"},"content":"#LATE .label {","lastModifiedDate":"2021-10-06"},{"lineNumber":400,"author":{"gitId":"Droffilc13"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-09-27"},{"lineNumber":401,"author":{"gitId":"Droffilc13"},"content":"    -fx-background-color: #ff0000;","lastModifiedDate":"2021-09-27"},{"lineNumber":402,"author":{"gitId":"Droffilc13"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-09-27"},{"lineNumber":403,"author":{"gitId":"Droffilc13"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":404,"author":{"gitId":"Droffilc13"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":405,"author":{"gitId":"Droffilc13"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-09-27"},{"lineNumber":406,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Droffilc13":51,"TaoJun99":3,"-":352}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"TA^2\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"           \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"100\" prefWidth\u003d\"153.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"            \u003cStackPane alignment\u003d\"TOP_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minWidth\u003d\"-Infinity\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"                  \u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"                          \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"Droffilc13"},"content":"                           \u003cStackPane fx:id\u003d\"personListHeaderContainer\" prefHeight\u003d\"80.0\" styleClass\u003d\"header-stack-pane\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"                                 \u003cLabel fx:id\u003d\"personListHeaderText\" styleClass\u003d\"header-text-labels\" text\u003d\"My SoC Contacts\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Droffilc13"},"content":"                           \u003c/StackPane\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"Droffilc13"},"content":"                        \u003cVBox fx:id\u003d\"assignmentList\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Droffilc13"},"content":"                            \u003cpadding\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Droffilc13"},"content":"                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Droffilc13"},"content":"                            \u003c/padding\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"Droffilc13"},"content":"                           \u003cStackPane fx:id\u003d\"assignmentListHeaderContainer\" prefHeight\u003d\"80.0\" styleClass\u003d\"header-stack-pane\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Droffilc13"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Droffilc13"},"content":"                                 \u003cLabel fx:id\u003d\"assignmentListHeaderText\" styleClass\u003d\"header-text-labels\" text\u003d\"Assignments\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Droffilc13"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Droffilc13"},"content":"                           \u003c/StackPane\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Droffilc13"},"content":"                              \u003cStackPane fx:id\u003d\"assignmentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Droffilc13"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Droffilc13"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Droffilc13"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Droffilc13"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"Droffilc13"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":80,"author":{"gitId":"Droffilc13"},"content":"                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" /\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Droffilc13":35,"-":49}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"      \u003cLabel fx:id\u003d\"module\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$module\" /\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"yeo-yiheng":1,"-":34}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"CS2103T\"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"    \"name\": \"Person With Invalid Module Field\",","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"\"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yeo-yiheng":3,"-":8}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"CS1101S\"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yeo-yiheng":1,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"CS1101S\",","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"    \"assignments\" : [ \"Assignment 1|15 Sep 2021, 01:00 PM|COMPLETED\" ],","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"    \"assignments\" : [ \"Assignment 1|15 Sep 2021, 01:00 PM|COMPLETED\" ],","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"CS1231S\"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yeo-yiheng":2,"TaoJun99":2,"-":10}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"    \"module\": \"CS1010J\",","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"    \"assignments\": [ \"Assignment 2||\" ]","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"TaoJun99":2,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"CS2103T\",","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"    \"assignments\" : [  ],","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"CS1101S\",","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    \"assignments\" : [\"Assignment 2|15 Oct 2021, 01:00 PM|PENDING\", \"Homework 1|13 Sep 2021, 11:59 PM|LATE\" ],","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"IS2101\",","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    \"assignments\" : [\"iP|17 Sep 2021, 11:59 PM|COMPLETED\", \"Assignment 2|15 Oct 2021, 01:00 PM|PENDING\" ],","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"CM1102\",","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"    \"assignments\" : [ \"Homework 1|13 Sep 2021, 11:59 PM|LATE\" ],","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"GER1000\",","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"    \"assignments\" : [ \"Tutorial 2|16 Sep 2021, 11:59 PM|COMPLETED\" ],","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"GET1031\",","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"    \"assignments\" : [ \"Assignment 1|10 Sep 2021, 11:59 PM|COMPLETED\", \"Assignment 2|11 Sep 2021, 11:58 PM|COMPLETED\", \"Lab 3|12 Nov 2021, 06:00 PM|PENDING\" ],","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"yeo-yiheng"},"content":"    \"module\": \"MA1101R\",","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"    \"assignments\" : [ \"Lab 1|20 Sep 2021, 11:59 PM|COMPLETED\" ],","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Droffilc13":1,"yeo-yiheng":7,"qinguorui2001":2,"TaoJun99":4,"-":32}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"        String deleteCommand \u003d \"p-delete 9\";","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"        String listCommand \u003d ListPersonCommand.COMMAND_WORD;","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(listCommand, ListPersonCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"TaoJun99"},"content":"        String addCommand \u003d AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"                + MODULE_DESC_AMY;","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"yeo-yiheng":11,"TaoJun99":6,"-":141}},{"path":"src/test/java/seedu/address/logic/commands/AddAssignmentCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.testutil.AssignmentBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"class AddAssignmentCommandIntegrationTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    private Model model;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    public void execute_newPersonAssignment_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"        Assignment validAssignment \u003d new AssignmentBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        Person validPersonForExpectedModel \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        Person validPersonForModel \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"        expectedModel.addPerson(validPersonForExpectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"        expectedModel.addAssignment(validPersonForExpectedModel, validAssignment);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        model.addPerson(validPersonForModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"        assertCommandSuccess(new AddAssignmentCommand(validPersonForModel.getName(), validAssignment), model,","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"                String.format(AddAssignmentCommand.MESSAGE_SUCCESS, validAssignment), expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"    public void execute_duplicateAssignment_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList()","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"                .get(TypicalIndexes.INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        model.updateFilteredAssignmentList(personInList);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"        Assignment assignmentInList \u003d model.getAddressBook().getAssignmentsList()","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"                .get(TypicalIndexes.INDEX_FIRST_ASSIGNMENT.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        assertCommandFailure(new AddAssignmentCommand(personInList.getName(), assignmentInList),","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"                model, AddAssignmentCommand.MESSAGE_DUPLICATE_ASSIGNMENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"qinguorui2001":51}},{"path":"src/test/java/seedu/address/logic/commands/AddAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.testutil.AssignmentBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"public class AddAssignmentCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAssignmentCommand(null,","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"                new AssignmentBuilder().build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"    public void constructor_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAssignmentCommand(new PersonBuilder().build().getName(),","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"                null));","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"    public void execute_assignmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        AddAssignmentCommandTest.ModelStubAcceptingAssignmentAdded modelStub \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"                new AddAssignmentCommandTest.ModelStubAcceptingAssignmentAdded();","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        Assignment validAssignment \u003d new AssignmentBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"                new AddAssignmentCommand(validPerson.getName(), validAssignment).execute(modelStub);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(String.format(AddAssignmentCommand.MESSAGE_SUCCESS, validAssignment),","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(Arrays.asList(validAssignment), modelStub.assignmentsAdded);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"    public void execute_duplicateAssignment_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"        Assignment validAssignment \u003d new AssignmentBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        AddAssignmentCommand addAssignmentCommand \u003d new AddAssignmentCommand(validPerson.getName(), validAssignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"        AddAssignmentCommandTest.ModelStub modelStub \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"                new AddAssignmentCommandTest.ModelStubWithAssignment(validPerson, validAssignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"                AddAssignmentCommand.MESSAGE_DUPLICATE_ASSIGNMENT, () -\u003e addAssignmentCommand.execute(modelStub));","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"        Assignment cs2100 \u003d new AssignmentBuilder().withDescription(\"CS2100\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"        Assignment cs2103 \u003d new AssignmentBuilder().withDescription(\"CS2103\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"        AddAssignmentCommand addCs2100Command \u003d new AddAssignmentCommand(alice.getName(), cs2100);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"        AddAssignmentCommand addCs2103Command \u003d new AddAssignmentCommand(alice.getName(), cs2103);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(addCs2100Command.equals(addCs2100Command));","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"        AddAssignmentCommand addCs2100CommandCopy \u003d new AddAssignmentCommand(alice.getName(), cs2100);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(addCs2100Command.equals(addCs2100CommandCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(addCs2100Command.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(addCs2100Command.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(addCs2100Command.equals(addCs2103Command));","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"qinguorui2001"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"qinguorui2001"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"qinguorui2001"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"qinguorui2001"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"qinguorui2001"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"qinguorui2001"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"qinguorui2001"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"qinguorui2001"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"qinguorui2001"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":172,"author":{"gitId":"qinguorui2001"},"content":"        public boolean hasAssignment(Person person, Assignment toAdd) {","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"qinguorui2001"},"content":"        public void addAssignment(Person person, Assignment toAdd) {","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"qinguorui2001"},"content":"        public void deleteAssignment(Person person, Assignment toDelete) {","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"qinguorui2001"},"content":"        public void markAssignment(Person person, Assignment toMark) {","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"qinguorui2001"},"content":"        public void updateFilteredAssignmentList(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"qinguorui2001"},"content":"        public ObservableList\u003cAssignment\u003e getFilteredAssignmentList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":202,"author":{"gitId":"qinguorui2001"},"content":"        public List\u003cAssignment\u003e getFilteredAssignmentList(Person person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"qinguorui2001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"qinguorui2001"},"content":"     * A Model stub that contains a person with single assignment.","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"qinguorui2001"},"content":"    private class ModelStubWithAssignment extends AddAssignmentCommandTest.ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"qinguorui2001"},"content":"        private final Assignment assignment;","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"qinguorui2001"},"content":"        private final Person person;","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"qinguorui2001"},"content":"        ModelStubWithAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"qinguorui2001"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"qinguorui2001"},"content":"            this.assignment \u003d assignment;","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"qinguorui2001"},"content":"            this.person \u003d person;","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"qinguorui2001"},"content":"            addAssignment(this.person, this.assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"qinguorui2001"},"content":"        public boolean hasAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"qinguorui2001"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"qinguorui2001"},"content":"            return person.getAssignments().contains(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"qinguorui2001"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"qinguorui2001"},"content":"            UniquePersonList persons \u003d new UniquePersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"qinguorui2001"},"content":"            persons.add(person);","lastModifiedDate":"2021-10-10"},{"lineNumber":231,"author":{"gitId":"qinguorui2001"},"content":"            return new FilteredList\u003c\u003e(persons.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-10"},{"lineNumber":232,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":233,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":234,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":235,"author":{"gitId":"qinguorui2001"},"content":"        public void addAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-10"},{"lineNumber":236,"author":{"gitId":"qinguorui2001"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":237,"author":{"gitId":"qinguorui2001"},"content":"            person.getAssignments().add(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":238,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":239,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":240,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":242,"author":{"gitId":"qinguorui2001"},"content":"     * A Model stub that always accept the assignment being added.","lastModifiedDate":"2021-10-10"},{"lineNumber":243,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":244,"author":{"gitId":"qinguorui2001"},"content":"    private class ModelStubAcceptingAssignmentAdded extends AddAssignmentCommandTest.ModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":245,"author":{"gitId":"qinguorui2001"},"content":"        final Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":246,"author":{"gitId":"qinguorui2001"},"content":"        final ArrayList\u003cAssignment\u003e assignmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":247,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"qinguorui2001"},"content":"        public boolean hasAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"qinguorui2001"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":251,"author":{"gitId":"qinguorui2001"},"content":"            person.getAssignments().contains(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":252,"author":{"gitId":"qinguorui2001"},"content":"            return assignmentsAdded.stream().anyMatch(assignment::isSameAssignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":253,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":254,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":255,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":256,"author":{"gitId":"qinguorui2001"},"content":"        public void addAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-10"},{"lineNumber":257,"author":{"gitId":"qinguorui2001"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"qinguorui2001"},"content":"            person.getAssignments().add(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":259,"author":{"gitId":"qinguorui2001"},"content":"            assignmentsAdded.add(assignment);","lastModifiedDate":"2021-10-10"},{"lineNumber":260,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":261,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":263,"author":{"gitId":"qinguorui2001"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":264,"author":{"gitId":"qinguorui2001"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-10"},{"lineNumber":265,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":266,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":267,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":268,"author":{"gitId":"qinguorui2001"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":269,"author":{"gitId":"qinguorui2001"},"content":"            UniquePersonList persons \u003d new UniquePersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":270,"author":{"gitId":"qinguorui2001"},"content":"            persons.add(person);","lastModifiedDate":"2021-10-10"},{"lineNumber":271,"author":{"gitId":"qinguorui2001"},"content":"            return new FilteredList\u003c\u003e(persons.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-10"},{"lineNumber":272,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":273,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":274,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"qinguorui2001":274}},{"path":"src/test/java/seedu/address/logic/commands/AddAssignmentToAllCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.testutil.AssignmentBuilder;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"class AddAssignmentToAllCommandIntegrationTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"    private Model model;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"    public void execute_newAssignmentToAll_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"        Assignment validAssignment \u003d new AssignmentBuilder().withDescription(\"Assignment 1\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"        Person amy \u003d new PersonBuilder().withModule(\"CS2106\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withModule(\"CS2106\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"        Module validModule \u003d amy.getModule();","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"        expectedModel.addPerson(amy);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"        expectedModel.addPerson(alice);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"        expectedModel.addAssignment(amy, validAssignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"        expectedModel.addAssignment(alice, validAssignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"        model.addPerson(amy);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"        model.addPerson(alice);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(new AddAssignmentToAllCommand(validModule, validAssignment), model,","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"                String.format(AddAssignmentToAllCommand.MESSAGE_SUCCESS, validModule, validAssignment), expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"    public void execute_duplicateNotAddedForExisting_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"        Assignment validAssignment \u003d new AssignmentBuilder().withDescription(\"Assignment 1\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"        Person amy \u003d new PersonBuilder().withModule(\"CS2106\")","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"                .withAssignmentList(new String[] {\"Assignment 1\", \"28 Sep 2021, 06:00 PM\", \"PENDING\"}).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").withModule(\"CS2106\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"        Module validModule \u003d amy.getModule();","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"        expectedModel.addPerson(amy);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"        expectedModel.addPerson(alice);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"        expectedModel.addAssignment(alice, validAssignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"        model.addPerson(amy);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"        model.addPerson(alice);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(new AddAssignmentToAllCommand(validModule, validAssignment), model,","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"                String.format(AddAssignmentToAllCommand.MESSAGE_SUCCESS, validModule, validAssignment), expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"TaoJun99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"TaoJun99":64}},{"path":"src/test/java/seedu/address/logic/commands/AddAssignmentToAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.testutil.AssignmentBuilder;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"public class AddAssignmentToAllCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"    public void constructor_nullModule_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAssignmentToAllCommand(null,","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"                new AssignmentBuilder().build()));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"    public void constructor_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAssignmentToAllCommand(","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"                new PersonBuilder().build().getModule(), null));","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"    public void execute_assignmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"        AddAssignmentToAllCommandTest.ModelStubWithTwoPerson modelStub \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"                new AddAssignmentToAllCommandTest.ModelStubWithTwoPerson();","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"        Module validModule \u003d new PersonBuilder().build().getModule();","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"        Assignment validAssignment \u003d new AssignmentBuilder().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"                new AddAssignmentToAllCommand(validModule, validAssignment).execute(modelStub);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(String.format(AddAssignmentToAllCommand.MESSAGE_SUCCESS, validModule, validAssignment),","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(Arrays.asList(validAssignment), modelStub.assignmentsAdded);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"    public void execute_assignmentNotDuplicated_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"        Person validPerson1 \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"        Person validPerson2 \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"        Module validModule \u003d new PersonBuilder().build().getModule();","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        Assignment validAssignment \u003d new AssignmentBuilder().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"        AddAssignmentToAllCommandTest.ModelStubWithAssignment modelStub \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"TaoJun99"},"content":"                new AddAssignmentToAllCommandTest.ModelStubWithAssignment(validPerson1, validPerson2, validAssignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"TaoJun99"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"TaoJun99"},"content":"                new AddAssignmentToAllCommand(validModule, validAssignment).execute(modelStub);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(String.format(AddAssignmentToAllCommand.MESSAGE_SUCCESS, validModule, validAssignment),","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"TaoJun99"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(Arrays.asList(validAssignment), modelStub.assignments1);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(Arrays.asList(validAssignment), modelStub.assignments2);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"TaoJun99"},"content":"        //assertEquals(Arrays.asList(validAssignment), modelStub.assignmentsAdded);","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"TaoJun99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"TaoJun99"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"TaoJun99"},"content":"        Person amy \u003d new PersonBuilder().withModule(\"CS2101\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"TaoJun99"},"content":"        Assignment assignment1 \u003d new AssignmentBuilder().withDescription(\"Assignment 1\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"TaoJun99"},"content":"        Assignment assignment2 \u003d new AssignmentBuilder().withDescription(\"Assignment 2\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"TaoJun99"},"content":"        AddAssignmentToAllCommand addAssignment1Command \u003d new AddAssignmentToAllCommand(alice.getModule(), assignment1);","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"TaoJun99"},"content":"        AddAssignmentToAllCommand addAssignment2Command \u003d new AddAssignmentToAllCommand(alice.getModule(), assignment2);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"TaoJun99"},"content":"        AddAssignmentToAllCommand addAssignment1DifferentModuleCommand \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"TaoJun99"},"content":"                new AddAssignmentToAllCommand(amy.getModule(), assignment1);","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"TaoJun99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(addAssignment1Command.equals(addAssignment1Command));","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"TaoJun99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"TaoJun99"},"content":"        AddAssignmentToAllCommand addAssignment1CommandCopy \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"TaoJun99"},"content":"                new AddAssignmentToAllCommand(alice.getModule(), assignment1);","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(addAssignment1Command.equals(addAssignment1CommandCopy));","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"TaoJun99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"TaoJun99"},"content":"        assertFalse(addAssignment1Command.equals(1));","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"TaoJun99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"TaoJun99"},"content":"        assertFalse(addAssignment1Command.equals(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"TaoJun99"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"TaoJun99"},"content":"        assertFalse(addAssignment1Command.equals(addAssignment2Command));","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"TaoJun99"},"content":"        //different modules -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"TaoJun99"},"content":"        assertFalse(addAssignment1Command.equals(addAssignment1DifferentModuleCommand));","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"TaoJun99"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"TaoJun99"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"TaoJun99"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"TaoJun99"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"TaoJun99"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"TaoJun99"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"TaoJun99"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"TaoJun99"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"TaoJun99"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"TaoJun99"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"TaoJun99"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"TaoJun99"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"TaoJun99"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"TaoJun99"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"TaoJun99"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"TaoJun99"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"TaoJun99"},"content":"        public boolean hasAssignment(Person person, Assignment toAdd) {","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"TaoJun99"},"content":"        public void addAssignment(Person person, Assignment toAdd) {","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"TaoJun99"},"content":"        public void deleteAssignment(Person person, Assignment toDelete) {","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"TaoJun99"},"content":"        public void markAssignment(Person person, Assignment toMark) {","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"TaoJun99"},"content":"        public void updateFilteredAssignmentList(Person person) {","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"TaoJun99"},"content":"        public ObservableList\u003cAssignment\u003e getFilteredAssignmentList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"TaoJun99"},"content":"        public List\u003cAssignment\u003e getFilteredAssignmentList(Person person) {","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"TaoJun99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"TaoJun99"},"content":"     * A Model stub that contains two persons with same module and no assignments","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"TaoJun99"},"content":"    private class ModelStubWithTwoPerson extends AddAssignmentToAllCommandTest.ModelStub {","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"TaoJun99"},"content":"        final Person person1 \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"TaoJun99"},"content":"        final Person person2 \u003d new PersonBuilder().withName(\"Dave Chia\").withEmail(\"dave@gmail.com\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"TaoJun99"},"content":"        final ArrayList\u003cAssignment\u003e assignmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"TaoJun99"},"content":"        public boolean hasAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"TaoJun99"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"TaoJun99"},"content":"            person.getAssignments().contains(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":234,"author":{"gitId":"TaoJun99"},"content":"            return assignmentsAdded.stream().anyMatch(assignment::isSameAssignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":235,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":236,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":237,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":238,"author":{"gitId":"TaoJun99"},"content":"        public void addAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-18"},{"lineNumber":239,"author":{"gitId":"TaoJun99"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"TaoJun99"},"content":"            person.getAssignments().add(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"TaoJun99"},"content":"            assignmentsAdded.add(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"TaoJun99"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"TaoJun99"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":249,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":250,"author":{"gitId":"TaoJun99"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":251,"author":{"gitId":"TaoJun99"},"content":"            UniquePersonList persons \u003d new UniquePersonList();","lastModifiedDate":"2021-10-18"},{"lineNumber":252,"author":{"gitId":"TaoJun99"},"content":"            persons.add(person1);","lastModifiedDate":"2021-10-18"},{"lineNumber":253,"author":{"gitId":"TaoJun99"},"content":"            persons.add(person2);","lastModifiedDate":"2021-10-18"},{"lineNumber":254,"author":{"gitId":"TaoJun99"},"content":"            return new FilteredList\u003c\u003e(persons.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":256,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":257,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":258,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":259,"author":{"gitId":"TaoJun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"TaoJun99"},"content":"     * A Model stub that contains 2 persons, with one person having an assignment","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"TaoJun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":262,"author":{"gitId":"TaoJun99"},"content":"    private class ModelStubWithAssignment extends AddAssignmentToAllCommandTest.ModelStub {","lastModifiedDate":"2021-10-18"},{"lineNumber":263,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"TaoJun99"},"content":"        private final Person person1;","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"TaoJun99"},"content":"        private final Person person2;","lastModifiedDate":"2021-10-18"},{"lineNumber":266,"author":{"gitId":"TaoJun99"},"content":"        private final ArrayList\u003cAssignment\u003e assignments1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":267,"author":{"gitId":"TaoJun99"},"content":"        private final ArrayList\u003cAssignment\u003e assignments2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":268,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":269,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":270,"author":{"gitId":"TaoJun99"},"content":"        ModelStubWithAssignment(Person person1, Person person2, Assignment assignment) {","lastModifiedDate":"2021-10-18"},{"lineNumber":271,"author":{"gitId":"TaoJun99"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":272,"author":{"gitId":"TaoJun99"},"content":"            this.person1 \u003d person1;","lastModifiedDate":"2021-10-18"},{"lineNumber":273,"author":{"gitId":"TaoJun99"},"content":"            this.person2 \u003d person2;","lastModifiedDate":"2021-10-18"},{"lineNumber":274,"author":{"gitId":"TaoJun99"},"content":"            assignments1.add(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":275,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":276,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":277,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":278,"author":{"gitId":"TaoJun99"},"content":"        public boolean hasAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-18"},{"lineNumber":279,"author":{"gitId":"TaoJun99"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":280,"author":{"gitId":"TaoJun99"},"content":"            if (person.equals(person1)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":281,"author":{"gitId":"TaoJun99"},"content":"                return assignments1.stream().anyMatch(assignment::isSameAssignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":282,"author":{"gitId":"TaoJun99"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":283,"author":{"gitId":"TaoJun99"},"content":"                return assignments2.stream().anyMatch(assignment::isSameAssignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":284,"author":{"gitId":"TaoJun99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":285,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":286,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":287,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":288,"author":{"gitId":"TaoJun99"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":289,"author":{"gitId":"TaoJun99"},"content":"            UniquePersonList persons \u003d new UniquePersonList();","lastModifiedDate":"2021-10-18"},{"lineNumber":290,"author":{"gitId":"TaoJun99"},"content":"            persons.add(person1);","lastModifiedDate":"2021-10-18"},{"lineNumber":291,"author":{"gitId":"TaoJun99"},"content":"            persons.add(person2);","lastModifiedDate":"2021-10-18"},{"lineNumber":292,"author":{"gitId":"TaoJun99"},"content":"            return new FilteredList\u003c\u003e(persons.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-18"},{"lineNumber":293,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":294,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":295,"author":{"gitId":"TaoJun99"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":296,"author":{"gitId":"TaoJun99"},"content":"        public void addAssignment(Person person, Assignment assignment) {","lastModifiedDate":"2021-10-18"},{"lineNumber":297,"author":{"gitId":"TaoJun99"},"content":"            requireNonNull(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":298,"author":{"gitId":"TaoJun99"},"content":"            if (person.equals(person1)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":299,"author":{"gitId":"TaoJun99"},"content":"                assignments1.add(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":300,"author":{"gitId":"TaoJun99"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":301,"author":{"gitId":"TaoJun99"},"content":"                assignments2.add(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":302,"author":{"gitId":"TaoJun99"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":303,"author":{"gitId":"TaoJun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":304,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":305,"author":{"gitId":"TaoJun99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"TaoJun99":305}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"TaoJun99":5,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"                AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addPersonCommand.execute(modelStub));","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"TaoJun99"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"Droffilc13"},"content":"        public boolean hasAssignment(Person person, Assignment toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"qinguorui2001"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"Droffilc13"},"content":"        public void addAssignment(Person person, Assignment toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"Droffilc13"},"content":"        public void deleteAssignment(Person person, Assignment toDelete) {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"Droffilc13"},"content":"        public void markAssignment(Person person, Assignment toMark) {","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":172,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":173,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"Droffilc13"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"qinguorui2001"},"content":"        public void updateFilteredAssignmentList(Person person) {","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"weichang18"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":177,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":179,"author":{"gitId":"weichang18"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"qinguorui2001"},"content":"        public ObservableList\u003cAssignment\u003e getFilteredAssignmentList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"Droffilc13"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"qinguorui2001"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"Droffilc13"},"content":"        public List\u003cAssignment\u003e getFilteredAssignmentList(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"weichang18"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"qinguorui2001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Droffilc13":10,"qinguorui2001":21,"TaoJun99":10,"weichang18":6,"-":185}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    public static final String VALID_NAME_CARL \u003d \"Carl Kurz\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_EMAIL_CARL \u003d \"carl@example.com\";","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_MODULE_AMY \u003d \"CS2106\";","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_MODULE_BOB \u003d \"CS1231\";","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_MODULE_CARL \u003d \"CS3230\";","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_TAG_CLASSMATE \u003d \"classmate\";","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALID_DESCRIPTION_CS2106_PROJECT \u003d \"CS2106 Final Network Project\";","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_DESCRIPTION_CS1231S_TUTORIAL \u003d \"CS1231S Tutorial 10\";","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALID_DESCRIPTION_CS3230_LAB \u003d \"CS3230 Lab Week 4\";","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String VALID_DESCRIPTION_CS2100_LAB \u003d \"CS2100 Lab Week 7\";","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String VALID_DESCRIPTION_GEQ1000_QUIZ \u003d \"GEQ1000 Economics Quiz\";","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"    public static final String VALID_DATE_CS1101S_MISSION \u003d \"30/09/2021\";","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALID_DATE_CS1231S_TUTORIAL \u003d \"01/02/2021\";","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"    public static final String VALID_DATE_CS2103_QUIZ \u003d \"30/11/2022\";","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALID_DATE_CS2106_PROJECT \u003d \"1/1/2020\";","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALID_DATE_CS3230_LAB \u003d \"11/01/2021\";","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String VALID_FRIENDLY_DATE_CS2100_LAB \u003d \"tmr\";","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String VALID_FRIENDLY_DATE_GEQ1000_QUIZ \u003d \"today\";","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALID_TIME_CS2106_PROJECT \u003d \"0001\";","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALID_TIME_CS1231S_TUTORIAL \u003d \"1800\";","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"    public static final String VALID_TIME_CS3230_LAB \u003d \"0800\";","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"weichang18"},"content":"    public static final String VALID_TIME_CS1101S_MISSION \u003d \"1800\";","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"weichang18"},"content":"    public static final String VALID_TIME_CS2100_TUTORIAL \u003d \"2200\";","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String VALID_TIME_CS2100_LAB \u003d \"1300\";","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String VALID_TIME_GEQ1000_QUIZ \u003d \"2359\";","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_DATE_TIME_CS2106_PROJECT \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"TaoJun99"},"content":"            VALID_DATE_CS2106_PROJECT + \",\" + VALID_TIME_CS2106_PROJECT;","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"    public static final String VALID_DATE_TIME_CS1231S_TUTORIAL \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"            VALID_DATE_CS1231S_TUTORIAL + \",\" + VALID_TIME_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"TaoJun99"},"content":"    public static final String VALID_DATE_TIME_CS3230_LAB \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"TaoJun99"},"content":"            VALID_DATE_CS3230_LAB + \",\" + VALID_TIME_CS3230_LAB;","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"    public static final String NAME_DESC_CARL \u003d \" \" + PREFIX_NAME + VALID_NAME_CARL;","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"TaoJun99"},"content":"    public static final String EMAIL_DESC_CARL \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_CARL;","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String MODULE_DESC_AMY \u003d \" \" + PREFIX_MODULE + VALID_MODULE_AMY;","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String MODULE_DESC_BOB \u003d \" \" + PREFIX_MODULE + VALID_MODULE_BOB;","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"TaoJun99"},"content":"    public static final String MODULE_DESC_CARL \u003d \" \" + PREFIX_MODULE + VALID_MODULE_CARL;","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"TaoJun99"},"content":"    public static final String ASSIGNMENT_DESC_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_CS2106_PROJECT;","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"    public static final String ASSIGNMENT_DESC_BOB \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"TaoJun99"},"content":"    public static final String ASSIGNMENT_DESC_CARL \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_CS3230_LAB;","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"TaoJun99"},"content":"    public static final String DATE_DESC_AMY \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"TaoJun99"},"content":"            \" \" + PREFIX_DUEDATE + VALID_DATE_TIME_CS2106_PROJECT;","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"qinguorui2001"},"content":"    public static final String DATE_DESC_BOB \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"qinguorui2001"},"content":"            \" \" + PREFIX_DUEDATE + VALID_DATE_TIME_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"TaoJun99"},"content":"    public static final String DATE_DESC_CARL \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"TaoJun99"},"content":"            \" \" + PREFIX_DUEDATE + VALID_DATE_TIME_CS3230_LAB;","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"TaoJun99"},"content":"    public static final String TAG_DESC_CLASSMATE \u003d \" \" + PREFIX_TAG + VALID_TAG_CLASSMATE;","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"    public static final String INVALID_DESCRIPTION_DESC \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"            \" \" + PREFIX_DESCRIPTION + \"assignment\u0026\"; // \u0027\u0026\u0027 not allowed in assignment names","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"    public static final String INVALID_DUEDATE_DESC \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"            \" \" + PREFIX_DUEDATE + \"1/1/2021 1450\"; // \u0027 \u0027 not allowed in due date","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String INVALID_MODULE_DESC \u003d \" \" + PREFIX_MODULE; // empty string not allowed for addresses","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"    public static final String INVALID_CS1231S_TUTORIAL_DESCRIPTION \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"qinguorui2001"},"content":"            \" \" + PREFIX_DESCRIPTION + \"CS1231S @ Tutorial 10\";","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"Droffilc13"},"content":"    public static final String INVALID_DESCRIPTION_CS3230_LAB \u003d \"CS3230: Lab Week 4\";","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"    public static final String INVALID_DATE_DESCRIPTION \u003d \" \" + PREFIX_DUEDATE + \"11/13/2021\";","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"TaoJun99"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"TaoJun99"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"TaoJun99"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_CARL;","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"yeo-yiheng"},"content":"                .withEmail(VALID_EMAIL_AMY).withModule(VALID_MODULE_AMY)","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"yeo-yiheng"},"content":"                .withEmail(VALID_EMAIL_BOB).withModule(VALID_MODULE_BOB)","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":129,"author":{"gitId":"TaoJun99"},"content":"        DESC_CARL \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_CARL)","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"TaoJun99"},"content":"                .withEmail(VALID_EMAIL_CARL).withModule(VALID_MODULE_CARL)","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"TaoJun99"},"content":"                .withTags(VALID_TAG_CLASSMATE).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"qinguorui2001"},"content":"            //assertEquals(expectedModel, actualModel);","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"qinguorui2001"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"qinguorui2001"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person\u0027s assignment at the given {@code targetIndex}","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"qinguorui2001"},"content":"     * in the {@code model}\u0027s address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"qinguorui2001"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"qinguorui2001"},"content":"    public static void showAssignmentAtIndex(Model model, Person person, Index targetIndex) {","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"qinguorui2001"},"content":"        //Assignment assignment \u003d TypicalAssignments.getTypicalAssignments().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"qinguorui2001"},"content":"        // person.getAssignments().add(assignment);","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"qinguorui2001"},"content":"        model.updateFilteredAssignmentList(person);","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredAssignmentList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(1, model.getFilteredAssignmentList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"Droffilc13"},"content":"     * Instantiates another person object with the same fields.","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"Droffilc13"},"content":"     * @param person the Person object","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"Droffilc13"},"content":"     * @return another instance of the same Person object","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"Droffilc13"},"content":"    public static Person clonePerson(Person person) {","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"Droffilc13"},"content":"        return new PersonBuilder(person).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"Droffilc13"},"content":"     * Replaces the person object within the current model with a clone of that person.","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"Droffilc13"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"Droffilc13"},"content":"     * @param inputModel the given model","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"Droffilc13"},"content":"     * @param selectedPerson the person to be replaced","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"Droffilc13"},"content":"     * @param clonedPerson the clone of the person that will replace the original person","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"Droffilc13"},"content":"     * @return the Model with the selected person replaced by a clone","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"Droffilc13"},"content":"    public static Model clonePersonInModel(Model inputModel, Person selectedPerson, Person clonedPerson) {","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"Droffilc13"},"content":"        inputModel.setPerson(selectedPerson, clonedPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"Droffilc13"},"content":"        return inputModel;","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":224,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":225,"author":{"gitId":"Droffilc13"},"content":"     * Creates a new Model with the selected person replaced with a clone.","lastModifiedDate":"2021-10-18"},{"lineNumber":226,"author":{"gitId":"Droffilc13"},"content":"     * @param selectedPerson the person to be replaced","lastModifiedDate":"2021-10-18"},{"lineNumber":227,"author":{"gitId":"Droffilc13"},"content":"     * @param clonedPerson the clone of the person that will replace the original person","lastModifiedDate":"2021-10-18"},{"lineNumber":228,"author":{"gitId":"Droffilc13"},"content":"     * @return a new Model with the selected person replaced by a clone","lastModifiedDate":"2021-10-18"},{"lineNumber":229,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":230,"author":{"gitId":"Droffilc13"},"content":"    public static Model setUpNewModelWithClonedPerson(Person selectedPerson, Person clonedPerson) {","lastModifiedDate":"2021-10-18"},{"lineNumber":231,"author":{"gitId":"Droffilc13"},"content":"        Model freshModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":232,"author":{"gitId":"Droffilc13"},"content":"        return clonePersonInModel(freshModel, selectedPerson, clonedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Droffilc13":42,"qinguorui2001":33,"yeo-yiheng":11,"TaoJun99":35,"weichang18":4,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.clonePerson;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.clonePersonInModel;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.setUpNewModelWithClonedPerson;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalIndexes.*;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"public class DeleteAssignmentCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"        /* The selectedPerson is cloned to avoid race conditions happening with JsonSerializableAddressBookTest","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"           and is cloned for both actual and expected models because a change in expectedModel will affect the actual","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"           model*/","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"        Person selectedPerson \u003d model.getFilteredPersonList().get(INDEX_SIXTH_PERSON.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"        Person clonedActualPerson \u003d clonePerson(selectedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"        Person clonedExpectedPerson \u003d clonePerson(selectedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"        Assignment assignmentToDelete \u003d selectedPerson.getAssignments()","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"                .asUnmodifiableObservableList().get(INDEX_SECOND_ASSIGNMENT.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"        Model actualModel \u003d clonePersonInModel(model, selectedPerson, clonedActualPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"        Model expectedModel \u003d setUpNewModelWithClonedPerson(selectedPerson, clonedExpectedPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"        expectedModel.deleteAssignment(clonedExpectedPerson, assignmentToDelete);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        DeleteAssignmentCommand deleteAssignmentCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"                new DeleteAssignmentCommand(clonedActualPerson.getName(), INDEX_SECOND_ASSIGNMENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"        String expectedMessage \u003d String.format(DeleteAssignmentCommand.MESSAGE_DELETE_ASSIGNMENT_SUCCESS,","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"                assignmentToDelete);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"        assertCommandSuccess(deleteAssignmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAssignmentList().size() + 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"        DeleteAssignmentCommand deleteAssignmentCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"                new DeleteAssignmentCommand(model.getFilteredPersonList()","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"                        .get(INDEX_FIRST_PERSON.getZeroBased()).getName(), outOfBoundIndex);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        assertCommandFailure(deleteAssignmentCommand, model, Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Droffilc13"},"content":"    public void execute_validIndexFilteredPersonList_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Droffilc13"},"content":"        Person selectedPerson \u003d model.getFilteredPersonList().get(INDEX_SIXTH_PERSON.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Droffilc13"},"content":"        Person clonedActualPerson \u003d clonePerson(selectedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Droffilc13"},"content":"        Person clonedExpectedPerson \u003d clonePerson(selectedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Droffilc13"},"content":"        Model expectedModel \u003d setUpNewModelWithClonedPerson(selectedPerson, clonedExpectedPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"Droffilc13"},"content":"        Model actualModel \u003d clonePersonInModel(model, selectedPerson, clonedActualPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"Droffilc13"},"content":"        Assignment assignmentToDelete \u003d selectedPerson.getAssignments()","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Droffilc13"},"content":"                .asUnmodifiableObservableList().get(INDEX_SECOND_ASSIGNMENT.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Droffilc13"},"content":"        showPersonAtIndex(actualModel, INDEX_SIXTH_PERSON);","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"Droffilc13"},"content":"        showPersonAtIndex(expectedModel, INDEX_SIXTH_PERSON);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"Droffilc13"},"content":"        expectedModel.deleteAssignment(clonedExpectedPerson, assignmentToDelete);","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"        DeleteAssignmentCommand deleteAssignmentCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Droffilc13"},"content":"                new DeleteAssignmentCommand(clonedActualPerson.getName(), INDEX_SECOND_ASSIGNMENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Droffilc13"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Droffilc13"},"content":"                String.format(DeleteAssignmentCommand.MESSAGE_DELETE_ASSIGNMENT_SUCCESS, assignmentToDelete);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Droffilc13"},"content":"        assertCommandSuccess(deleteAssignmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"Droffilc13"},"content":"    public void execute_invalidIndexFilteredPersonList_throwsCommandException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Droffilc13"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Droffilc13"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"Droffilc13"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book\u0027s person list","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Droffilc13"},"content":"        DeleteAssignmentCommand deleteAssignmentCommand \u003d new DeleteAssignmentCommand(","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"Droffilc13"},"content":"                model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()).getName(), outOfBoundIndex);","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"qinguorui2001"},"content":"        assertCommandFailure(deleteAssignmentCommand, model, Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"Droffilc13"},"content":"    public void execute_invalidPerson_throwsCommandException() {","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Droffilc13"},"content":"        Person personNotInList \u003d HOON;","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"qinguorui2001"},"content":"        DeleteAssignmentCommand deleteAssignmentCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"Droffilc13"},"content":"                new DeleteAssignmentCommand(personNotInList.getName(), INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"Droffilc13"},"content":"        assertCommandFailure(deleteAssignmentCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_NAME);","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"qinguorui2001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"qinguorui2001"},"content":"        DeleteAssignmentCommand deleteFirstCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"qinguorui2001"},"content":"                new DeleteAssignmentCommand(new PersonBuilder().build().getName(), INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"qinguorui2001"},"content":"        DeleteAssignmentCommand deleteSecondCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"qinguorui2001"},"content":"                new DeleteAssignmentCommand(new PersonBuilder().build().getName(), INDEX_SECOND_ASSIGNMENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"qinguorui2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"qinguorui2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"qinguorui2001"},"content":"        DeleteAssignmentCommand deleteFirstCommandCopy \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"qinguorui2001"},"content":"                new DeleteAssignmentCommand(new PersonBuilder().build().getName(), INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"qinguorui2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"Droffilc13"},"content":"        // different deleted assignment -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Droffilc13":53,"qinguorui2001":84,"TaoJun99":1}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":" * {@code DeletePersonCommand}.","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"TaoJun99"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"TaoJun99"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"TaoJun99"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"TaoJun99"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"TaoJun99"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"TaoJun99":15,"-":94}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":50,"author":{"gitId":"yeo-yiheng"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"                .withModule(VALID_MODULE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"                .withModule(VALID_MODULE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"TaoJun99"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"TaoJun99"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"TaoJun99"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"TaoJun99"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"TaoJun99"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"TaoJun99"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"TaoJun99"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"yeo-yiheng":2,"TaoJun99":32,"-":136}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withModule(VALID_MODULE_BOB).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yeo-yiheng":6,"TaoJun99":1,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"TaoJun99":7,"-":76}},{"path":"src/test/java/seedu/address/logic/commands/ListPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListPersonCommand.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"public class ListPersonCommandTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"        assertCommandSuccess(new ListPersonCommand(), model, ListPersonCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"TaoJun99":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/MarkAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.clonePerson;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.clonePersonInModel;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.logic.commands.CommandTestUtil.setUpNewModelWithClonedPerson;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalIndexes.*;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"public class MarkAssignmentCommandTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"    private Model model;","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"    private Person personToShow;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        personToShow \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"    void execute_validIndexAssignmentListSuccess() {","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        Person selectedPerson \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"        Person clonedActualPerson \u003d clonePerson(selectedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"        Person clonedExpectedPerson \u003d clonePerson(selectedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        Assignment assignmentToMark \u003d selectedPerson.getAssignments()","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"                .asUnmodifiableObservableList().get(INDEX_FIRST_ASSIGNMENT.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"        Model actualModel \u003d clonePersonInModel(model, selectedPerson, clonedActualPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"        Model expectedModel \u003d setUpNewModelWithClonedPerson(selectedPerson, clonedExpectedPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"        expectedModel.markAssignment(clonedExpectedPerson, assignmentToMark);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"        MarkAssignmentCommand markAssignmentCommand \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"                new MarkAssignmentCommand(clonedActualPerson.getName(), INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"                String.format(MarkAssignmentCommand.MESSAGE_MARK_ASSIGNMENT_SUCCESS,","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"                        assignmentToMark);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"        assertCommandSuccess(markAssignmentCommand, actualModel, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"    public void execute_invalidIndexAssignmentList_throwsCommandException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredAssignmentList(personToShow).size() + 1);","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        MarkAssignmentCommand markAssignmentCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"                new MarkAssignmentCommand(personToShow.getName(), outOfBoundIndex);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"        assertCommandFailure(markAssignmentCommand, model, Messages.MESSAGE_INVALID_ASSIGNMENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"        Person personInList \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        MarkAssignmentCommand markFirstCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"                new MarkAssignmentCommand(personInList.getName(), INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"        MarkAssignmentCommand markSecondCommand \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"                new MarkAssignmentCommand(personInList.getName(), INDEX_SECOND_ASSIGNMENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"        MarkAssignmentCommand markFirstCommandCopy \u003d","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"                new MarkAssignmentCommand(personInList.getName(), INDEX_FIRST_ASSIGNMENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2021-10-16"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"qinguorui2001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"qinguorui2001"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Droffilc13":4,"qinguorui2001":86}},{"path":"src/test/java/seedu/address/logic/commands/ShowAssignmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":" * {@code ShowAssignmentCommand}.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"class ShowAssignmentCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"    void execute_validIndexPersonListSuccess() {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"        Person personToShow \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"        ShowAssignmentCommand showAssignmentCommand \u003d new ShowAssignmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"                String.format(ShowAssignmentCommand.MESSAGE_SHOW_ASSIGNMENT_SUCCESS, personToShow.getName());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"        expectedModel.updateFilteredAssignmentList(personToShow);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"        assertCommandSuccess(showAssignmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"    public void execute_invalidIndexPersonList_throwsCommandException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"        ShowAssignmentCommand showAssignmentCommand \u003d new ShowAssignmentCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"        assertCommandFailure(showAssignmentCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"        ShowAssignmentCommand showAssignmentFirstCommand \u003d new ShowAssignmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"        ShowAssignmentCommand showAssignmentSecondCommand \u003d new ShowAssignmentCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"        assertTrue(showAssignmentFirstCommand.equals(showAssignmentFirstCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"weichang18"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"weichang18"},"content":"        ShowAssignmentCommand showAssignmentFirstCommandCopy \u003d new ShowAssignmentCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"weichang18"},"content":"        assertTrue(showAssignmentFirstCommand.equals(showAssignmentFirstCommandCopy));","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"weichang18"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"weichang18"},"content":"        assertFalse(showAssignmentFirstCommand.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"weichang18"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"weichang18"},"content":"        assertFalse(showAssignmentFirstCommand.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"        assertFalse(showAssignmentFirstCommand.equals(showAssignmentSecondCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"weichang18":72}},{"path":"src/test/java/seedu/address/logic/parser/AddAssignmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.AddAssignmentCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.testutil.TypicalAssignments;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalPersons.*;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"public class AddAssignmentCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    private AddAssignmentCommandParser parser \u003d new AddAssignmentCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"        Assignment expectedAssignment \u003d TypicalAssignments.ASSIGNMENT_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + ASSIGNMENT_DESC_BOB + DATE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"                new AddAssignmentCommand(expectedPerson.getName(), expectedAssignment));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"qinguorui2001"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + ASSIGNMENT_DESC_BOB + DATE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"qinguorui2001"},"content":"        // missing assignment description prefix","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_DESCRIPTION_CS1231S_TUTORIAL + DATE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"qinguorui2001"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"qinguorui2001"},"content":"        // missing due date prefix","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ASSIGNMENT_DESC_BOB + VALID_DATE_TIME_CS1231S_TUTORIAL,","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"qinguorui2001"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"qinguorui2001"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"qinguorui2001"},"content":"                VALID_NAME_BOB + VALID_DESCRIPTION_CS1231S_TUTORIAL + VALID_DATE_TIME_CS1231S_TUTORIAL,","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"qinguorui2001"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"qinguorui2001"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"qinguorui2001"},"content":"        // invalid name","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ASSIGNMENT_DESC_BOB + DATE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"qinguorui2001"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"qinguorui2001"},"content":"        // invalid assignment description","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_DESCRIPTION_DESC + DATE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"qinguorui2001"},"content":"                Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"        // invalid due date","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + ASSIGNMENT_DESC_BOB + INVALID_DATE_DESCRIPTION,","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"                DueDate.MESSAGE_CONSTRAINTS_DUE_DATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + ASSIGNMENT_DESC_BOB + INVALID_DATE_DESCRIPTION,","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + ASSIGNMENT_DESC_BOB","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"                        + DATE_DESC_BOB,","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"qinguorui2001":76}},{"path":"src/test/java/seedu/address/logic/parser/AddAssignmentToAllCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddAssignmentToAllCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.testutil.TypicalAssignments;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"public class AddAssignmentToAllCommandParserTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"    private AddAssignmentToAllCommandParser parser \u003d new AddAssignmentToAllCommandParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"        Module expectedModule \u003d new Module(VALID_MODULE_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"        Assignment expectedAssignment \u003d TypicalAssignments.ASSIGNMENT_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + MODULE_DESC_BOB + ASSIGNMENT_DESC_BOB + DATE_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"                new AddAssignmentToAllCommand(expectedModule, expectedAssignment));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentToAllCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, VALID_MODULE_BOB + ASSIGNMENT_DESC_BOB + DATE_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"        // missing assignment description prefix","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, MODULE_DESC_BOB + VALID_DESCRIPTION_CS1231S_TUTORIAL + DATE_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"        // missing due date prefix","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, MODULE_DESC_BOB + ASSIGNMENT_DESC_BOB + VALID_DATE_TIME_CS1231S_TUTORIAL,","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"                VALID_MODULE_BOB + VALID_DESCRIPTION_CS1231S_TUTORIAL + VALID_DATE_TIME_CS1231S_TUTORIAL,","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"        // invalid name","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, INVALID_MODULE_DESC + ASSIGNMENT_DESC_BOB + DATE_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"                Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"        // invalid assignment description","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, MODULE_DESC_BOB + INVALID_DESCRIPTION_DESC + DATE_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"                Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"        // invalid due date","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, MODULE_DESC_BOB + ASSIGNMENT_DESC_BOB + INVALID_DATE_DESCRIPTION,","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"                DueDate.MESSAGE_CONSTRAINTS_DUE_DATE);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"TaoJun99"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, INVALID_MODULE_DESC + ASSIGNMENT_DESC_BOB + INVALID_DATE_DESCRIPTION,","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"TaoJun99"},"content":"                Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"TaoJun99"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + MODULE_DESC_BOB + ASSIGNMENT_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"TaoJun99"},"content":"                        + DATE_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"TaoJun99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAssignmentToAllCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"TaoJun99"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"TaoJun99":73}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"                + MODULE_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"                + MODULE_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"                + MODULE_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_AMY","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"                + MODULE_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + EMAIL_DESC_AMY + MODULE_DESC_AMY,","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"TaoJun99"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB,","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_EMAIL_BOB + MODULE_DESC_BOB,","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + VALID_MODULE_BOB,","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_EMAIL_BOB + VALID_MODULE_BOB,","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_EMAIL_DESC + MODULE_DESC_BOB","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + INVALID_MODULE_DESC","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"yeo-yiheng"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Module.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + MODULE_DESC_BOB","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + EMAIL_DESC_BOB + INVALID_MODULE_DESC,","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"                + MODULE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"TaoJun99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yeo-yiheng":26,"TaoJun99":11,"-":68}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.ListPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"TaoJun99"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"                DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"TaoJun99"},"content":"                FindPersonCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(new FindPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(parser.parseCommand(ListPersonCommand.COMMAND_WORD) instanceof ListPersonCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(parser.parseCommand(ListPersonCommand.COMMAND_WORD + \" 3\") instanceof ListPersonCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"TaoJun99":18,"-":83}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.DeletePersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"TaoJun99":6,"-":27}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.TypicalIndexes.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MODULE_DESC, Module.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_MODULE_AMY,","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_DESC_HUSBAND","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"                + EMAIL_DESC_AMY + MODULE_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"                .withEmail(VALID_EMAIL_AMY).withModule(VALID_MODULE_AMY)","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":91,"author":{"gitId":"yeo-yiheng"},"content":"        String userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"TaoJun99"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"        // module","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"        userInput \u003d targetIndex.getOneBased() + MODULE_DESC_AMY;","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"yeo-yiheng"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withModule(VALID_MODULE_AMY).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"TaoJun99"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"TaoJun99"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"yeo-yiheng"},"content":"        String userInput \u003d targetIndex.getOneBased() + MODULE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"yeo-yiheng"},"content":"                + TAG_DESC_FRIEND + MODULE_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"yeo-yiheng"},"content":"                + MODULE_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"yeo-yiheng"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"yeo-yiheng"},"content":"                .withEmail(VALID_EMAIL_BOB).withModule(VALID_MODULE_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"yeo-yiheng"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_MODULE_DESC + VALID_MODULE_BOB;","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"yeo-yiheng"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withModule(VALID_MODULE_BOB).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"yeo-yiheng"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_MODULE_DESC + MODULE_DESC_BOB;","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"yeo-yiheng"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"yeo-yiheng"},"content":"                .withModule(VALID_MODULE_BOB).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"TaoJun99"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"TaoJun99"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yeo-yiheng":28,"TaoJun99":16,"-":126}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.model.person.Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand expectedFindCommand \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, \"n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, \"n/ \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"        //  finding a valid module","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand expectedFindCommandWithModule \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"CS1101S\")));","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, \"m/CS1101S\", expectedFindCommandWithModule);","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"yeo-yiheng"},"content":"        // finding both name and valid module","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"        FindPersonCommand expectedFindCommandWithBoth \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\", \"CS1101S\")));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseSuccess(parser, \"n/Alice Bob m/CS1101S\", expectedFindCommandWithBoth);","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"yeo-yiheng"},"content":"    public void parse_invalidArgs_returnsError() {","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"        // no prefix n/ or m/","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, \"Alice Bob CS1101S\",","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"yeo-yiheng"},"content":"        // invalid module codes","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, \"m/Alice\", MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"        // invalid module codes with valid name","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, \"n/Alice m/Bob\", MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"yeo-yiheng"},"content":"        // inverted prefixes","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"        assertParseFailure(parser, \"m/MA1521 n/Alice\",","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"yeo-yiheng":30,"TaoJun99":14,"-":19}},{"path":"src/test/java/seedu/address/logic/parser/MarkAssignmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"qinguorui2001"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_ASSIGNMENT;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.logic.commands.MarkAssignmentCommand;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"qinguorui2001"},"content":"public class MarkAssignmentCommandParserTest {","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"qinguorui2001"},"content":"    private final MarkAssignmentCommandParser parser \u003d new MarkAssignmentCommandParser();","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"qinguorui2001"},"content":"    private final Person personInList \u003d model.getFilteredPersonList().get(INDEX_THIRD_PERSON.getZeroBased());","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"qinguorui2001"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"qinguorui2001"},"content":"        assertParseSuccess(parser, \" n/\" + personInList.getName() + \"1\",","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"qinguorui2001"},"content":"                new MarkAssignmentCommand(personInList.getName(), INDEX_FIRST_ASSIGNMENT));","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"qinguorui2001"},"content":"        assertParseFailure(parser, \" n/\" + personInList.getName() + \"a\",","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"qinguorui2001":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"qinguorui2001"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"    private static final String INVALID_MODULE \u003d \" \";","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"qinguorui2001"},"content":"    private static final String INVALID_DATE \u003d \"41/12/2011\";","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"    private static final String VALID_MODULE \u003d \"CS1231S\";","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"    private static final String VALID_DATE \u003d \"11/11/2021\";","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"qinguorui2001"},"content":"    private static final String VALID_TIME \u003d \"1200\";","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"yeo-yiheng"},"content":"    public void parseModule_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"yeo-yiheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModule((String) null));","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"    public void parseModule_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModule(INVALID_MODULE));","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"    public void parseModule_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"yeo-yiheng"},"content":"        Module expectedModule \u003d new Module(VALID_MODULE);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expectedModule, ParserUtil.parseModule(VALID_MODULE));","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"    public void parseModule_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"yeo-yiheng"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_MODULE + WHITESPACE;","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"yeo-yiheng"},"content":"        Module expectedModule \u003d new Module(VALID_MODULE);","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(expectedModule, ParserUtil.parseModule(addressWithWhitespace));","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"qinguorui2001"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"qinguorui2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"qinguorui2001"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"qinguorui2001"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"qinguorui2001"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"qinguorui2001"},"content":"        DueDate expectedDueDate \u003d new DueDate(VALID_DATE);","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expectedDueDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"qinguorui2001"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDateAndTime() throws Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"qinguorui2001"},"content":"        DueDate expectedDueDate \u003d new DueDate(VALID_DATE, VALID_TIME);","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"qinguorui2001"},"content":"        String validDateAndTime \u003d VALID_DATE + \",\" + VALID_TIME;","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expectedDueDate, ParserUtil.parseDate(validDateAndTime));","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"qinguorui2001"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"qinguorui2001"},"content":"        String dueDateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"qinguorui2001"},"content":"        DueDate expectedDueDate \u003d new DueDate(VALID_DATE);","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"qinguorui2001"},"content":"        assertEquals(expectedDueDate, ParserUtil.parseDate(dueDateWithWhitespace));","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"qinguorui2001":23,"yeo-yiheng":13,"-":167}},{"path":"src/test/java/seedu/address/logic/parser/ShowAssignmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"import seedu.address.logic.commands.ShowAssignmentCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"public class ShowAssignmentCommandParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"    private ShowAssignmentCommandParser parser \u003d new ShowAssignmentCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"    public void parse_validArgs_returnsShowAssignmentCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"        assertParseSuccess(parser, \"1\", new ShowAssignmentCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowAssignmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"weichang18":26}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"yeo-yiheng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withModule(VALID_MODULE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withModule(VALID_MODULE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"weichang18"},"content":"    // TODO:","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"weichang18"},"content":"    public ObservableList\u003cAssignment\u003e getPersonAssignmentList(Name name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"weichang18"},"content":"        throw new AssertionError(\"This method does not have test cases for now\");","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"weichang18"},"content":"        private final ObservableList\u003cAssignment\u003e assignments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"Droffilc13"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"weichang18"},"content":"        public void updateAssignmentList(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"weichang18"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"weichang18"},"content":"        public ObservableList\u003cAssignment\u003e getAssignmentsList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"weichang18"},"content":"            return assignments;","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"weichang18"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Droffilc13":4,"yeo-yiheng":3,"weichang18":14,"-":99}},{"path":"src/test/java/seedu/address/model/assignment/AssignmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.testutil.AssignmentBuilder;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.TypicalAssignments.*;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS3230_LAB;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_CS3230_LAB;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS3230_LAB;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.testutil.TypicalAssignments.ASSIGNMENT_CS1101S_MISSION;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.testutil.TypicalAssignments.ASSIGNMENT_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.testutil.TypicalAssignments.ASSIGNMENT_CS2106_PROJECT;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.testutil.TypicalAssignments.ASSIGNMENT_CS3230_LAB;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"public class AssignmentTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"    public void isSameAssignment() {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(ASSIGNMENT_CS1101S_MISSION.isSameAssignment(ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(ASSIGNMENT_CS1101S_MISSION.isSameAssignment(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"yeo-yiheng"},"content":"        // same description, all other attributes different -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"        Assignment editedCs1101sAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"                .withLateStatus().withDueDate(VALID_DATE_CS1231S_TUTORIAL, VALID_TIME_CS1231S_TUTORIAL).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(ASSIGNMENT_CS1101S_MISSION.isSameAssignment(editedCs1101sAssignment));","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"        // different description, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"        editedCs1101sAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Droffilc13"},"content":"                .withDescription(\"I like CS\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(ASSIGNMENT_CS1101S_MISSION.isSameAssignment(editedCs1101sAssignment));","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"        // different status, all other attributes same -\u003e return true","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"        Assignment editedCs2106Lab \u003d new AssignmentBuilder(ASSIGNMENT_CS2106_PROJECT)","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"                .withPendingStatus().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(ASSIGNMENT_CS2106_PROJECT.isSameAssignment(editedCs2106Lab));","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"yeo-yiheng"},"content":"        // description differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"        Assignment editedCs3230Lab \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"                .withDescription(VALID_DESCRIPTION_CS3230_LAB.toLowerCase()).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(ASSIGNMENT_CS3230_LAB.isSameAssignment(editedCs3230Lab));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"        // description has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"        String nameWithTrailingSpaces \u003d VALID_DESCRIPTION_CS3230_LAB + \" \";","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"        editedCs3230Lab \u003d new AssignmentBuilder().withDescription(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(ASSIGNMENT_CS3230_LAB.isSameAssignment(editedCs3230Lab));","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"        // same description and same due date constructed using friendly commands -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"        Assignment cs2100LabDueTmr \u003d new AssignmentBuilder(ASSIGNMENT_CS2100_LAB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"        Assignment cs2100LabDueTmrManual \u003d new AssignmentBuilder().withDescription(VALID_DESCRIPTION_CS2100_LAB)","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"                .withDueDate(\"tmr\", \"1300\").withPendingStatus().build();","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(cs2100LabDueTmr, cs2100LabDueTmrManual);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"        // same description and same due date constructed using friendly commands manually -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"        Assignment geq1000QuizDueToday \u003d new AssignmentBuilder(ASSIGNMENT_GEQ1000_QUIZ).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"        String[] dateArr \u003d LocalDate.now().toString().split(\"-\");","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"        List\u003cString\u003e list \u003d Arrays.asList(dateArr);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"        Collections.reverse(list);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"        String date \u003d formatDate(list);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"yeo-yiheng"},"content":"        String[] args \u003d new String[]{","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"            VALID_DESCRIPTION_GEQ1000_QUIZ,","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"            new DueDate(date, \"2359\").toString(),","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"yeo-yiheng"},"content":"            String.valueOf(Status.createPendingStatus())};","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"yeo-yiheng"},"content":"        Assignment geq1000QuizDueTodayManual \u003d new Assignment(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(geq1000QuizDueToday, geq1000QuizDueTodayManual);","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"yeo-yiheng"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"yeo-yiheng"},"content":"     * Reverses a list containing YYYY/MM/DD to form DD/MM/YYYY","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"yeo-yiheng"},"content":"     * @param list containing wrong format local date","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"yeo-yiheng"},"content":"     * @return String in the form of DD/MM/YYYY","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"    private String formatDate(List\u003cString\u003e list) {","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"yeo-yiheng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"yeo-yiheng"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"yeo-yiheng"},"content":"        for (String s : list) {","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"            sb.append((s));","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"yeo-yiheng"},"content":"            if (index \u003c 2) {","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"yeo-yiheng"},"content":"                sb.append(\"/\");","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"yeo-yiheng"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"yeo-yiheng"},"content":"            index++;","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"yeo-yiheng"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"Droffilc13"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"Droffilc13"},"content":"    public void equals() {","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Droffilc13"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"Droffilc13"},"content":"        Assignment cs3230LabCopy \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(cs3230LabCopy, ASSIGNMENT_CS3230_LAB);","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"Droffilc13"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"yeo-yiheng"},"content":"        assertEquals(ASSIGNMENT_CS3230_LAB, ASSIGNMENT_CS3230_LAB);","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"Droffilc13"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(null, ASSIGNMENT_CS3230_LAB);","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"Droffilc13"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(5, ASSIGNMENT_CS3230_LAB);","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"Droffilc13"},"content":"        // different assignment -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS3230_LAB, ASSIGNMENT_CS1231S_TUTORIAL);","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"Droffilc13"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"Droffilc13"},"content":"        Assignment editedCs1231sTutorial \u003d new AssignmentBuilder(ASSIGNMENT_CS1231S_TUTORIAL)","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"Droffilc13"},"content":"                .withDescription(VALID_DESCRIPTION_CS3230_LAB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS1231S_TUTORIAL, editedCs1231sTutorial);","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"Droffilc13"},"content":"        // different status, change from pending to late -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"Droffilc13"},"content":"        editedCs1231sTutorial \u003d new AssignmentBuilder(ASSIGNMENT_CS1231S_TUTORIAL).withLateStatus().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS1231S_TUTORIAL, editedCs1231sTutorial);","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"Droffilc13"},"content":"        // different status, change from pending to completed -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"weichang18"},"content":"        editedCs1231sTutorial \u003d new AssignmentBuilder(ASSIGNMENT_CS1231S_TUTORIAL).withCompletedStatus().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS1231S_TUTORIAL, editedCs1231sTutorial);","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"weichang18"},"content":"        // different status, change from completed to late -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"Droffilc13"},"content":"        Assignment editedCs3230Lab \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB).withLateStatus().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS3230_LAB, editedCs3230Lab);","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"Droffilc13"},"content":"        // different status, change from late to pending -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"Droffilc13"},"content":"        Assignment editedCs2106Project \u003d new AssignmentBuilder(ASSIGNMENT_CS2106_PROJECT).withPendingStatus().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS2106_PROJECT, editedCs2106Project);","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"Droffilc13"},"content":"        // different due date -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"Droffilc13"},"content":"        editedCs3230Lab \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"Droffilc13"},"content":"                .withDueDate(VALID_DATE_CS1231S_TUTORIAL, VALID_TIME_CS1231S_TUTORIAL).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS3230_LAB, editedCs3230Lab);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"Droffilc13"},"content":"        // same time but different date -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"Droffilc13"},"content":"        editedCs3230Lab \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"Droffilc13"},"content":"                .withDueDate(VALID_DATE_CS1231S_TUTORIAL, VALID_TIME_CS3230_LAB).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS3230_LAB, editedCs3230Lab);","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"Droffilc13"},"content":"        // same date but different time -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"Droffilc13"},"content":"        editedCs3230Lab \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"Droffilc13"},"content":"                .withDueDate(VALID_DATE_CS3230_LAB, VALID_TIME_CS1231S_TUTORIAL).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"yeo-yiheng"},"content":"        assertNotEquals(ASSIGNMENT_CS3230_LAB, editedCs3230Lab);","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"weichang18"},"content":"    void compareTo() {","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"weichang18"},"content":"        //Assignment with date: 11/01/2021, time: 0800, status: completed","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"weichang18"},"content":"        Assignment comparingAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"weichang18"},"content":"        //Same values has equal weight","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"weichang18"},"content":"        Assignment assignmentCopy \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"weichang18"},"content":"        assertTrue(comparingAssignment.compareTo(assignmentCopy) \u003d\u003d 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"weichang18"},"content":"        //Same time and status with later date(01/02/2021) has more weight-\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"weichang18"},"content":"        Assignment laterDateAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS1231S_TUTORIAL, VALID_TIME_CS3230_LAB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"weichang18"},"content":"        assertTrue(laterDateAssignment.compareTo(comparingAssignment) \u003e 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"weichang18"},"content":"        //Same date and status with later time(1800) has more weight-\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"weichang18"},"content":"        Assignment laterTimeAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS3230_LAB, VALID_TIME_CS1231S_TUTORIAL).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"weichang18"},"content":"        assertTrue(laterTimeAssignment.compareTo(comparingAssignment) \u003e 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"weichang18"},"content":"        //Same date and time with pending status has less weight-\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"weichang18"},"content":"        Assignment pendingStatusAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"weichang18"},"content":"                .withPendingStatus().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"weichang18"},"content":"        assertTrue(pendingStatusAssignment.compareTo(comparingAssignment) \u003c 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"weichang18"},"content":"        //Same time with later date(01/02/2021) and pending status has less weight-\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"weichang18"},"content":"        Assignment laterDateAndPendingAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS1231S_TUTORIAL, VALID_TIME_CS3230_LAB).withPendingStatus().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"weichang18"},"content":"        assertTrue(laterDateAndPendingAssignment.compareTo(comparingAssignment) \u003c 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"weichang18"},"content":"        //Same date with later time(1800) and pending status has less weight-\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"weichang18"},"content":"        Assignment laterTimeAndPendingAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS3230_LAB, VALID_TIME_CS1231S_TUTORIAL).withPendingStatus().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"weichang18"},"content":"        assertTrue(laterTimeAndPendingAssignment.compareTo(comparingAssignment) \u003c 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"weichang18"},"content":"        //later date(01/02/2021) and time(1800) and pending status has less weight-\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"weichang18"},"content":"        Assignment earlierDateTimeAndPendingAssignment \u003d new AssignmentBuilder(ASSIGNMENT_CS3230_LAB)","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS1231S_TUTORIAL, VALID_TIME_CS1231S_TUTORIAL).withPendingStatus().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"weichang18"},"content":"        assertTrue(earlierDateTimeAndPendingAssignment.compareTo(comparingAssignment) \u003c 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Droffilc13":79,"yeo-yiheng":64,"qinguorui2001":1,"weichang18":52}},{"path":"src/test/java/seedu/address/model/assignment/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"        // null description","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"        // invalid description","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(Description.isValidDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(Description.isValidDescription(\"do cs210*0\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"        // valid description","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(Description.isValidDescription(\"Do Tutorial\")); // alphabets only","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(Description.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(Description.isValidDescription(\"cs2100 homework\")); // alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(Description.isValidDescription(\"CS2100 homework\")); // with capital letters","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(Description.isValidDescription(\"Finish Cs3230 tutorial and assignment\")); // long Descriptions","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Droffilc13":40}},{"path":"src/test/java/seedu/address/model/assignment/DueDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qinguorui2001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"class DueDateTest {","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"    public void constructor_invalidDueDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"        String invalidDueDate \u003d \"\";","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DueDate(invalidDueDate));","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"        // null Date","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e DueDate.isValidDate(null));","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"        // invalid DueDate","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidDate(\" \")); // spaces only","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidDate(\"32/12/2021\")); // invalid day","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidDate(\"12/13/2021\")); // invalid month","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidDate(\"99/99/2021\")); // invalid day and month","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"        // valid DueDate","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(DueDate.isValidDate(\"11/11/2021\")); // double-digit for day and month","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidDate(\"1/1/2021\")); // single digit for day and month","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(DueDate.isValidDate(\"1/11/2021\")); // single digit for day and double-digit for month","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(DueDate.isValidDate(\"11/1/2021\")); // double-digit for day and double-digit for month","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidDate(\"31/12/9999\")); // maximum values for day, month and year","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidDate(\"01/02/2021\")); // day and month with prefix 0","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidDate(\"01/1/2021\")); // day with prefix 0 with single digit month","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidDate(\"1/01/2021\")); // month with prefix 0 with single digit day","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(DueDate.isValidDate(\"11/01/2021\")); // month with prefix 0 with double-digit day","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"        assertTrue(DueDate.isValidDate(\"01/11/2021\")); // day with prefix 0 with double-digit month","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"        // null Date","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e DueDate.isValidTime(null));","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"        // invalid DueDate","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidDate(\" \")); // spaces only","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidTime(\"2400\")); // invalid hour","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidTime(\"0060\")); // invalid minutes","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"        assertFalse(DueDate.isValidTime(\"2460\")); // invalid hour and minutes","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"        // valid DueDate","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidTime(\"2359\")); // maximum hour and minutes","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidTime(\"0000\")); // minimum hour and minutes","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidTime(\"0059\")); // minimum hour and maximum minutes","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"        assertTrue(DueDate.isValidTime(\"2300\")); // maximum hour and minimum minutes","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"qinguorui2001"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"qinguorui2001"},"content":"    public void isValidDueDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"qinguorui2001"},"content":"        // null dueDate","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"qinguorui2001"},"content":"        assertThrows(NullPointerException.class, () -\u003e DueDate.isValidDueDate(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"qinguorui2001"},"content":"        // invalid dueDate","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(DueDate.isValidDueDate(\"\")); // empty string","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(DueDate.isValidDueDate(\" \")); // spaces only","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(DueDate.isValidDueDate(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(DueDate.isValidDueDate(\"11/11/2021*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(DueDate.isValidDueDate(\"11/11/2021,1588\")); // contains invalid time","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(DueDate.isValidDueDate(\"111/188/2021*\")); // contains invalid day and month","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(DueDate.isValidDueDate(\"11/11/2021 1444\")); // no comma but space between time and date","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"qinguorui2001"},"content":"        assertFalse(DueDate.isValidDueDate(\"11/11/2021,744\")); // invalid format for time","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidDueDate(\"11/11/2023, 744\")); // spacing after comma","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"qinguorui2001"},"content":"        // valid dueDate","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(DueDate.isValidDueDate(\"11/11/2021\")); // date only","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(DueDate.isValidDueDate(\"02/02/2011,1650\")); // prefix 0 for day and month","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(DueDate.isValidDueDate(\"11/1/2021,1541\")); // single digit for month","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"qinguorui2001"},"content":"        assertTrue(DueDate.isValidDueDate(\"1/11/2021,1400\")); // single digit for day","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"qinguorui2001"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"yeo-yiheng"},"content":"    public void isValidFriendlyDate() {","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"yeo-yiheng"},"content":"        // Valid friendly dates","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"mon\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"tue\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"wed\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"thu\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"fri\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"sat\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"sun\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"tmr\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"today\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDate(\"week\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"yeo-yiheng"},"content":"        // Invalid friendly dates","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidFriendlyDate(\"not a date\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidFriendlyDate(\"123\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidFriendlyDate(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidFriendlyDate(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"yeo-yiheng"},"content":"    public void isValidFriendlyDateAndTime() {","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"yeo-yiheng"},"content":"        // valid friendly date and time","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDateAndTime(\"tmr,2359\")); // tmr and maximum time","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDateAndTime(\"week,1200\")); // week and middle time","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDateAndTime(\"mon,0700\")); // mon and morning","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDateAndTime(\"fri,2234\")); // fri and night","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(DueDate.isValidFriendlyDateAndTime(\"today,0000\")); // today and minimum time","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"yeo-yiheng"},"content":"        // invalid friendly date and time","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidFriendlyDateAndTime(\"tmr, 2359\")); // space after comma","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidFriendlyDateAndTime(\"tomorrow,2359\")); // invalid friendly format","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidFriendlyDateAndTime(\"02/02/2021,1000\")); // valid date but invalid friendly date","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(DueDate.isValidFriendlyDateAndTime(\",1000\")); // missing friendly command","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"qinguorui2001":23,"yeo-yiheng":40,"TaoJun99":8,"weichang18":53}},{"path":"src/test/java/seedu/address/model/assignment/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"public class StatusTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"        Status completedStatus \u003d Status.createCompletedStatus();","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"        Status pendingStatus \u003d Status.createPendingStatus();","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"        Status lateStatus \u003d Status.createLateStatus();","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"        // check null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(completedStatus.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(lateStatus.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(pendingStatus.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"        // check same status -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(completedStatus.equals(completedStatus));","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(pendingStatus.equals(pendingStatus));","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"        assertTrue(lateStatus.equals(lateStatus));","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"        // check different status -\u003e return false","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(completedStatus.equals(lateStatus));","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(completedStatus.equals(pendingStatus));","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"        assertFalse(pendingStatus.equals(lateStatus));","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"    public void compareTo() {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"        Status completedStatus \u003d Status.createCompletedStatus();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"        Status pendingStatus \u003d Status.createPendingStatus();","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"        Status lateStatus \u003d Status.createLateStatus();","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"        // comparing status: completed status","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"        assertTrue(completedStatus.compareTo(completedStatus) \u003d\u003d 0); // equal weight as completed status","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"        assertTrue(completedStatus.compareTo(pendingStatus) \u003e 0); // more weight than pending status","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"        assertTrue(completedStatus.compareTo(lateStatus) \u003e 0); // more weight than late status","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"        // comparing status: pending status","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"        assertTrue(pendingStatus.compareTo(completedStatus) \u003c 0); // less weight than completed status","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"        assertTrue(pendingStatus.compareTo(pendingStatus) \u003d\u003d 0); // equal weight as pending status","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"        assertTrue(pendingStatus.compareTo(lateStatus) \u003e 0); // more weight than late status","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"        // comparing status: late status","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"        assertTrue(lateStatus.compareTo(completedStatus) \u003c 0); // less weight than completed status","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"        assertTrue(lateStatus.compareTo(pendingStatus) \u003c 0); // less weight than completed status","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"        assertTrue(lateStatus.compareTo(lateStatus) \u003d\u003d 0); // equal weight as late status","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Droffilc13":31,"weichang18":22}},{"path":"src/test/java/seedu/address/model/assignment/UniqueAssignmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weichang18"},"content":"package seedu.address.model.assignment;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS1101S_MISSION;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS2106_PROJECT;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS2103_QUIZ;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS1101S_MISSION;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS2100_TUTORIAL;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"weichang18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS2106_PROJECT;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"weichang18"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"weichang18"},"content":"import static seedu.address.testutil.TypicalAssignments.ASSIGNMENT_CS1101S_MISSION;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"weichang18"},"content":"import static seedu.address.testutil.TypicalAssignments.ASSIGNMENT_CS2103_QUIZ;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"weichang18"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"weichang18"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"weichang18"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"weichang18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.assignment.exceptions.AssignmentNotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"weichang18"},"content":"import seedu.address.model.assignment.exceptions.DuplicateAssignmentException;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"weichang18"},"content":"import seedu.address.testutil.AssignmentBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"weichang18"},"content":"class UniqueAssignmentListTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"weichang18"},"content":"    private final UniqueAssignmentList uniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"weichang18"},"content":"    public void contains_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAssignmentList.contains(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"weichang18"},"content":"    public void contains_assignmentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"weichang18"},"content":"        assertFalse(uniqueAssignmentList.contains(ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"weichang18"},"content":"    public void contains_assignmentInList_returnsTrue() {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"        assertTrue(uniqueAssignmentList.contains(ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"    public void contains_assignmentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"        Assignment editedCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION).withCompletedStatus()","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS2106_PROJECT, VALID_TIME_CS2106_PROJECT).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"        assertTrue(uniqueAssignmentList.contains(editedCS1101SMission));","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"    public void add_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAssignmentList.add(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"weichang18"},"content":"    public void add_duplicateAssignment_throwsDuplicateAssignmentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"weichang18"},"content":"        assertThrows(DuplicateAssignmentException.class, () -\u003e uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"weichang18"},"content":"    public void setAssignment_nullTargetAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"weichang18"},"content":"                uniqueAssignmentList.setAssignment(null, ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"weichang18"},"content":"    public void setAssignment_nullEditedAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"weichang18"},"content":"                uniqueAssignmentList.setAssignment(ASSIGNMENT_CS1101S_MISSION, null));","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"weichang18"},"content":"    public void setAssignment_targetAssignmentNotInList_throwsAssignmentNotFoundException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"weichang18"},"content":"        assertThrows(AssignmentNotFoundException.class, () -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"weichang18"},"content":"                uniqueAssignmentList.setAssignment(ASSIGNMENT_CS1101S_MISSION, ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"weichang18"},"content":"    public void setAssignment_editedAssignmentIsSameAssignment_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.setAssignment(ASSIGNMENT_CS1101S_MISSION, ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"weichang18"},"content":"    public void setAssignment_editedAssignmentHasSameIdentity_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"weichang18"},"content":"        Assignment editedCS1101Mission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION).withCompletedStatus()","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS2106_PROJECT, VALID_TIME_CS2106_PROJECT).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.setAssignment(ASSIGNMENT_CS1101S_MISSION, editedCS1101Mission);","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(editedCS1101Mission);","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"weichang18"},"content":"    public void setAssignment_editedAssignmentHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.setAssignment(ASSIGNMENT_CS1101S_MISSION, ASSIGNMENT_CS2103_QUIZ);","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(ASSIGNMENT_CS2103_QUIZ);","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"weichang18"},"content":"    public void setAssignment_editedAssignmentHasNonUniqueIdentity_throwsDuplicateAssignmentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS2103_QUIZ);","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"weichang18"},"content":"        assertThrows(DuplicateAssignmentException.class, () -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"weichang18"},"content":"                uniqueAssignmentList.setAssignment(ASSIGNMENT_CS1101S_MISSION, ASSIGNMENT_CS2103_QUIZ));","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"weichang18"},"content":"    public void delete_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAssignmentList.delete(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"weichang18"},"content":"    public void delete_assignmentDoesNotExist_throwsAssignmentNotFoundException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"weichang18"},"content":"        assertThrows(AssignmentNotFoundException.class, () -\u003e uniqueAssignmentList.delete(ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"weichang18"},"content":"    public void delete_existingAssignment_deletesAssignment() {","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.delete(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"weichang18"},"content":"    public void done_nullAssignment_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAssignmentList.done(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"weichang18"},"content":"    public void done_assignmentDoesNotExist_throwsAssignmentNotFoundException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"weichang18"},"content":"        assertThrows(AssignmentNotFoundException.class, () -\u003e uniqueAssignmentList.done(ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"weichang18"},"content":"    public void done_existingAssignment_markDoneAssignment() {","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.done(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"weichang18"},"content":"        Assignment completedCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION).withCompletedStatus()","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"weichang18"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(completedCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"weichang18"},"content":"    public void setAssignments_nullUniqueAssignmentList_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"weichang18"},"content":"                uniqueAssignmentList.setAssignments((UniqueAssignmentList) null));","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"weichang18"},"content":"    public void setAssignments_uniqueAssignmentList_replacesOwnListWithProvidedUniqueAssignmentList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(ASSIGNMENT_CS2103_QUIZ);","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.setAssignments(expectedUniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"weichang18"},"content":"    public void setAssignments_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueAssignmentList.setAssignments((List\u003cAssignment\u003e) null));","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"weichang18"},"content":"    public void setAssignments_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"weichang18"},"content":"        List\u003cAssignment\u003e assignmentList \u003d Collections.singletonList(ASSIGNMENT_CS2103_QUIZ);","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.setAssignments(assignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(ASSIGNMENT_CS2103_QUIZ);","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"weichang18"},"content":"    public void setAssignments_listWithDuplicateAssignments_throwsDuplicateAssignmentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"weichang18"},"content":"        List\u003cAssignment\u003e listWithDuplicateAssignments \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"weichang18"},"content":"                Arrays.asList(ASSIGNMENT_CS1101S_MISSION, ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"weichang18"},"content":"        assertThrows(DuplicateAssignmentException.class, () -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"weichang18"},"content":"                uniqueAssignmentList.setAssignments(listWithDuplicateAssignments));","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"weichang18"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"weichang18"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"weichang18"},"content":"                uniqueAssignmentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"weichang18"},"content":"    public void clearAllAssignment_listWithAssignments_clearAssignmentList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS2103_QUIZ);","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.clearAllAssignments();","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"weichang18"},"content":"    public void sort_assignmentsWithDifferentStatusOnly_completedAssignmentsAtBottomOfList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"weichang18"},"content":"        Assignment completedCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"weichang18"},"content":"                .withDescription(\"completedCS1101SMission\").withCompletedStatus().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"weichang18"},"content":"        Assignment lateCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"weichang18"},"content":"                .withDescription(\"lateCS1101SMission\").withLateStatus().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(completedCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(lateCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.sort();","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(lateCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(completedCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"weichang18"},"content":"    public void sort_assignmentsWithDifferentDateOnly_laterAssignmentsAtBottomOfList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"weichang18"},"content":"        Assignment earlierDateCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"weichang18"},"content":"                .withDescription(\"earlierDateCS1101SMission\")","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS2106_PROJECT, VALID_TIME_CS1101S_MISSION).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"weichang18"},"content":"        Assignment laterDateCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"weichang18"},"content":"                .withDescription(\"laterDateCS1101SMission\")","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS2103_QUIZ, VALID_TIME_CS1101S_MISSION).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(laterDateCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(earlierDateCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.sort();","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(earlierDateCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(laterDateCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"weichang18"},"content":"    public void sort_assignmentsWithDifferentTimeOnly_laterAssignmentsAtBottomOfList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"weichang18"},"content":"        Assignment earlierTimeCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"weichang18"},"content":"                .withDescription(\"earlierTimeCS1101SMission\")","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS1101S_MISSION, VALID_TIME_CS2106_PROJECT).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"weichang18"},"content":"        Assignment laterTimeCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"weichang18"},"content":"                .withDescription(\"laterTimeCS1101SMission\")","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS1101S_MISSION, VALID_TIME_CS2100_TUTORIAL).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(laterTimeCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(earlierTimeCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.sort();","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(earlierTimeCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(laterTimeCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"weichang18"},"content":"    public void sort_assignmentsWithDifferentDateTimeAndStatus_sortedListByCompletedStatusAndDate() {","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"weichang18"},"content":"        Assignment earlierDateTimeCompletedCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"weichang18"},"content":"                .withDescription(\"earlierDateTimeCompletedCS1101SMission\")","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS2106_PROJECT, VALID_TIME_CS2106_PROJECT).withCompletedStatus().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"weichang18"},"content":"        Assignment laterDateTimeLateCS1101SMission \u003d new AssignmentBuilder(ASSIGNMENT_CS1101S_MISSION)","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"weichang18"},"content":"                .withDescription(\"laterDateTimeLateCS1101SMission\")","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"weichang18"},"content":"                .withDueDate(VALID_DATE_CS1101S_MISSION, VALID_TIME_CS2100_TUTORIAL).withLateStatus().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(earlierDateTimeCompletedCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.add(laterDateTimeLateCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"weichang18"},"content":"        uniqueAssignmentList.sort();","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"weichang18"},"content":"        UniqueAssignmentList expectedUniqueAssignmentList \u003d new UniqueAssignmentList();","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(laterDateTimeLateCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(ASSIGNMENT_CS1101S_MISSION);","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"weichang18"},"content":"        expectedUniqueAssignmentList.add(earlierDateTimeCompletedCS1101SMission);","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"weichang18"},"content":"        assertEquals(expectedUniqueAssignmentList, uniqueAssignmentList);","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"weichang18"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"weichang18":283}},{"path":"src/test/java/seedu/address/model/person/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yeo-yiheng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"public class ModuleTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"    public void constructor_invalidModule_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"        String invalidModule \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Module(invalidModule));","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    public void isValidModule() {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"weichang18"},"content":"        // null Module","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"        assertThrows(NullPointerException.class, () -\u003e Module.isValidModule(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"weichang18"},"content":"        // invalid Modules","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(Module.isValidModule(\"\")); // empty string","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(Module.isValidModule(\" \")); // spaces only","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"weichang18"},"content":"        // valid Modules","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(Module.isValidModule(\"GER1000\")); // 3 letter prefix","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(Module.isValidModule(\"CS1231\")); // 2 letter prefix","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(Module.isValidModule(\"CS2103T\")); // 1 postfix","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"yeo-yiheng"},"content":"        assertTrue(Module.isValidModule(\"ACC2232T\")); // 3 letter prefix + 1 postfix","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"yeo-yiheng"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"yeo-yiheng":34,"weichang18":3}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"        // Keywords match email, but does not match name and module","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"CS2103T\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\")","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"yeo-yiheng"},"content":"                .withEmail(\"alice@email.com\").withModule(\"CS2103\").build()));","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"yeo-yiheng":4,"-":71}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"weichang18"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"weichang18"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"weichang18"},"content":"    public void capitalise() {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"weichang18"},"content":"        // null name","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"weichang18"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"weichang18"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"a b c d e\"), \"A B C D E\");","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"alex\"), \"Alex\");","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"Alex\"), \"Alex\");","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"ALEX\"), \"Alex\");","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"aLEX\"), \"Alex\");","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"aLeX\"), \"Alex\");","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"AlEx\"), \"Alex\");","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"Alex  \"), \"Alex\");","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"weichang18"},"content":"        assertEquals(Name.capitalise(\"CLIffOrd KAlEB toh jiNg zHe\"), \"Clifford Kaleb Toh Jing Zhe\");","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"weichang18"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"weichang18":17,"-":40}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"yeo-yiheng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"yeo-yiheng"},"content":"                .withModule(VALID_MODULE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"        // different module -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withModule(VALID_MODULE_BOB).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yeo-yiheng":8,"-":65}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"yeo-yiheng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withModule(VALID_MODULE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withModule(VALID_MODULE_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yeo-yiheng":3,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAssignmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TaoJun99"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"TaoJun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"TaoJun99"},"content":"public class JsonAdaptedAssignmentTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"TaoJun99"},"content":"    private static final String INVALID_DESCRIPTION \u003d \"#Assignment 1|17 Sep 2021, 11:59 PM|PENDING\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"TaoJun99"},"content":"    private static final String INVALID_DUE_DATE \u003d \"Assignment 1|32 Sep 2021, 11:59 PM|PENDING\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"TaoJun99"},"content":"    private static final String INVALID_STATUS \u003d \"Assignment 1|17 Sep 2021, 11:59 PM|FINISHED\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"TaoJun99"},"content":"    public void toModelType_validAssignmentDetails_returnsAssignment() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedAssignment assignment \u003d new JsonAdaptedAssignment(BENSON.getAssignments().get(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"TaoJun99"},"content":"        assertEquals(BENSON.getAssignments().get(0), assignment.toModelType());","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedAssignment assignment \u003d new JsonAdaptedAssignment(INVALID_DESCRIPTION);","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"TaoJun99"},"content":"    public void toModelType_invalidDueDate_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedAssignment assignment \u003d new JsonAdaptedAssignment(INVALID_DUE_DATE);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d DueDate.OUTPUT_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"TaoJun99"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"TaoJun99"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedAssignment assignment \u003d new JsonAdaptedAssignment(INVALID_STATUS);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, assignment::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"TaoJun99"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"TaoJun99":44}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"    private static final String INVALID_MODULE \u003d \" \";","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"TaoJun99"},"content":"    private static final String INVALID_ASSIGNMENT \u003d \"Assignment 2| |\";","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"    private static final String VALID_MODULE \u003d BENSON.getModule().toString();","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"    private static final List\u003cJsonAdaptedAssignment\u003e VALID_ASSIGNMENTS \u003d BENSON.getAssignments()","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"TaoJun99"},"content":"            .asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"            .map(JsonAdaptedAssignment::new)","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"TaoJun99"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_EMAIL, VALID_MODULE, VALID_ASSIGNMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"TaoJun99"},"content":"                VALID_ASSIGNMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"TaoJun99"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_EMAIL, VALID_MODULE,","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"                        VALID_ASSIGNMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_MODULE,","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"TaoJun99"},"content":"                VALID_ASSIGNMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"TaoJun99"},"content":"    public void toModelType_invalidModule_throwsIllegalValueException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"TaoJun99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, INVALID_MODULE,","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"TaoJun99"},"content":"                        VALID_ASSIGNMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"yeo-yiheng"},"content":"        String expectedMessage \u003d Module.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, null,","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"TaoJun99"},"content":"                VALID_ASSIGNMENTS, VALID_TAGS);","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"yeo-yiheng"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Module.class.getSimpleName());","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"TaoJun99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_MODULE, VALID_ASSIGNMENTS, invalidTags);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"TaoJun99"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"TaoJun99"},"content":"    public void toModelType_invalidAssignmentList_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"TaoJun99"},"content":"        List\u003cJsonAdaptedAssignment\u003e invalidAssignmentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedAssignment invalidAssignment \u003d new JsonAdaptedAssignment(INVALID_ASSIGNMENT);","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"TaoJun99"},"content":"        invalidAssignmentList.add(invalidAssignment);","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"TaoJun99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"TaoJun99"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_EMAIL, VALID_MODULE, invalidAssignmentList, VALID_TAGS);","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"yeo-yiheng":13,"TaoJun99":25,"-":72}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"qinguorui2001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"qinguorui2001":1,"-":46}},{"path":"src/test/java/seedu/address/testutil/AssignmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Description;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.DueDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Status;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"public class AssignmentBuilder {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Droffilc13"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Assignment description\";","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Droffilc13"},"content":"    public static final String DEFAULT_DATE \u003d \"28/09/2021\";","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Droffilc13"},"content":"    public static final String DEFAULT_TIME \u003d \"1800\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"    public static final Status DEFAULT_STATUS \u003d Status.createPendingStatus();","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Droffilc13"},"content":"    private Description description;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Droffilc13"},"content":"    private DueDate dueDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Droffilc13"},"content":"    private Status status;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Droffilc13"},"content":"     * Creates a {@code AssignmentBuilder} with the default details.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentBuilder() {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Droffilc13"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Droffilc13"},"content":"        dueDate \u003d new DueDate(DEFAULT_DATE, DEFAULT_TIME);","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Droffilc13"},"content":"        status \u003d DEFAULT_STATUS;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"     * Initializes the AssignmentBuilder with the data of {@code assignmentToCopy}.","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentBuilder(Assignment assignmentToCopy) {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"        description \u003d assignmentToCopy.getDescription();","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"        dueDate \u003d assignmentToCopy.getDueDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"        status \u003d assignmentToCopy.getStatus();","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"     * Sets the {@code Description} of the {@code Assignment} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentBuilder withDescription(String description) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"     * Sets the {@code DueDate} of the {@code Assignment} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentBuilder withDueDate(String date, String time) {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"        this.dueDate \u003d new DueDate(date, time);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"     * Sets the {@code Status} to completed of the {@code Assignment} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentBuilder withCompletedStatus() {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Droffilc13"},"content":"        this.status \u003d Status.createCompletedStatus();","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Droffilc13"},"content":"     * Sets the {@code Status} to pending of the {@code Assignment} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentBuilder withPendingStatus() {","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"Droffilc13"},"content":"        this.status \u003d Status.createPendingStatus();","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Droffilc13"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Droffilc13"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Droffilc13"},"content":"     * Sets the {@code Status} to late of the {@code Assignment} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Droffilc13"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Droffilc13"},"content":"    public AssignmentBuilder withLateStatus() {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Droffilc13"},"content":"        this.status \u003d Status.createLateStatus();","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Droffilc13"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Droffilc13"},"content":"    public Assignment build() {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Droffilc13"},"content":"        return new Assignment(description, dueDate, status);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Droffilc13":81}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"        descriptor.setModule(person.getModule());","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"yeo-yiheng"},"content":"     * Sets the {@code Module} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"yeo-yiheng"},"content":"    public EditPersonDescriptorBuilder withModule(String module) {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"TaoJun99"},"content":"        descriptor.setModule(new Module(module));","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yeo-yiheng":3,"TaoJun99":3,"-":71}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"TaoJun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"TaoJun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import seedu.address.model.person.Module;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"    public static final String DEFAULT_MODULE \u003d \"CS2103T\";","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"yeo-yiheng"},"content":"    private Module module;","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"TaoJun99"},"content":"    private List\u003cAssignment\u003e assignmentList;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"yeo-yiheng"},"content":"        module \u003d new Module(DEFAULT_MODULE);","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"TaoJun99"},"content":"        assignmentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"        module \u003d personToCopy.getModule();","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"        assignmentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"        for (Assignment assignment: personToCopy.getAssignments()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"            assignmentList.add(assignment);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"yeo-yiheng"},"content":"     * Sets the {@code Module} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"yeo-yiheng"},"content":"    public PersonBuilder withModule(String address) {","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"yeo-yiheng"},"content":"        this.module \u003d new Module(address);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"TaoJun99"},"content":"     * Parses the {@code assignmentList} into a {@code List\u003cAssignment\u003e}","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"TaoJun99"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"TaoJun99"},"content":"    public PersonBuilder withAssignmentList(String[]... assignmentList) {","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"TaoJun99"},"content":"        this.assignmentList \u003d SampleDataUtil.getAssignmentList(assignmentList);","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":99,"author":{"gitId":"TaoJun99"},"content":"        return new Person(name, email, module, assignmentList, tags);","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Droffilc13":5,"yeo-yiheng":8,"TaoJun99":10,"-":79}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.AddPersonCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"TaoJun99"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"TaoJun99"},"content":"        return AddPersonCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"        sb.append(PREFIX_MODULE + person.getModule().moduleCode + \" \");","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"        descriptor.getModule().ifPresent(address -\u003e sb.append(PREFIX_MODULE).append(address.moduleCode).append(\" \"));","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yeo-yiheng":3,"TaoJun99":3,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalAssignments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Droffilc13"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Droffilc13"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Droffilc13"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Droffilc13"},"content":"import java.util.List;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Droffilc13"},"content":"import seedu.address.model.assignment.Assignment;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS2106_PROJECT;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_CS2106_PROJECT;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_CS3230_LAB;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_CS3230_LAB;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS1231S_TUTORIAL;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS2106_PROJECT;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS3230_LAB;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_CS2100_LAB;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIENDLY_DATE_CS2100_LAB;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_CS2100_LAB;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_GEQ1000_QUIZ;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FRIENDLY_DATE_GEQ1000_QUIZ;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_GEQ1000_QUIZ;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"Droffilc13"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Droffilc13"},"content":" * A utility class containing a list of {@code Assignment} objects to be used in tests.","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Droffilc13"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Droffilc13"},"content":"public class TypicalAssignments {","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Droffilc13"},"content":"    public static final Assignment ASSIGNMENT_CS1101S_MISSION \u003d new AssignmentBuilder()","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Droffilc13"},"content":"            .withDescription(\"Do CS1101S Mission Week 6\")","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Droffilc13"},"content":"            .withDueDate(\"30/09/2021\", \"1800\")","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Droffilc13"},"content":"            .withPendingStatus().build();","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Droffilc13"},"content":"    public static final Assignment ASSIGNMENT_CS2103_QUIZ \u003d new AssignmentBuilder()","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Droffilc13"},"content":"            .withDescription(\"Do CS2103 quiz week 7\")","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Droffilc13"},"content":"            .withDueDate(\"30/11/2022\", \"0819\")","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Droffilc13"},"content":"            .withPendingStatus().build();","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Droffilc13"},"content":"    public static final Assignment ASSIGNMENT_CS2100_TUTORIAL \u003d new AssignmentBuilder()","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Droffilc13"},"content":"            .withDescription(\"Do CS2100 tutorial 4\")","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Droffilc13"},"content":"            .withDueDate(\"5/10/2021\", \"2200\")","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Droffilc13"},"content":"            .withPendingStatus().build();","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Droffilc13"},"content":"    public static final Assignment ASSIGNMENT_MA1521_TUTORIAL \u003d new AssignmentBuilder()","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Droffilc13"},"content":"            .withDescription(\"Do MA1521 Tutorial 3\")","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Droffilc13"},"content":"            .withDueDate(\"4/10/2020\", \"2100\")","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Droffilc13"},"content":"            .withPendingStatus().build();","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Droffilc13"},"content":"    // Manually added - Assignment\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Droffilc13"},"content":"    public static final Assignment ASSIGNMENT_CS1231S_TUTORIAL \u003d new AssignmentBuilder()","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Droffilc13"},"content":"            .withDescription(VALID_DESCRIPTION_CS1231S_TUTORIAL)","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Droffilc13"},"content":"            .withPendingStatus()","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"            .withDueDate(VALID_DATE_CS1231S_TUTORIAL, VALID_TIME_CS1231S_TUTORIAL).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"    public static final Assignment ASSIGNMENT_CS3230_LAB \u003d new AssignmentBuilder()","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"            .withDescription(VALID_DESCRIPTION_CS3230_LAB)","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"            .withCompletedStatus()","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Droffilc13"},"content":"            .withDueDate(VALID_DATE_CS3230_LAB, VALID_TIME_CS3230_LAB)","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Droffilc13"},"content":"            .build();","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Droffilc13"},"content":"    public static final Assignment ASSIGNMENT_CS2106_PROJECT \u003d new AssignmentBuilder()","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Droffilc13"},"content":"            .withDescription(VALID_DESCRIPTION_CS2106_PROJECT)","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Droffilc13"},"content":"            .withLateStatus()","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Droffilc13"},"content":"            .withDueDate(VALID_DATE_CS2106_PROJECT, VALID_TIME_CS2106_PROJECT)","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Droffilc13"},"content":"            .build();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Assignment ASSIGNMENT_CS2100_LAB \u003d new AssignmentBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"yeo-yiheng"},"content":"            .withDescription(VALID_DESCRIPTION_CS2100_LAB)","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"            .withPendingStatus()","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"yeo-yiheng"},"content":"            .withDueDate(VALID_FRIENDLY_DATE_CS2100_LAB, VALID_TIME_CS2100_LAB)","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"yeo-yiheng"},"content":"            .build();","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Assignment ASSIGNMENT_GEQ1000_QUIZ \u003d new AssignmentBuilder()","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"yeo-yiheng"},"content":"            .withDescription(VALID_DESCRIPTION_GEQ1000_QUIZ)","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"            .withPendingStatus()","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"            .withDueDate(VALID_FRIENDLY_DATE_GEQ1000_QUIZ, VALID_TIME_GEQ1000_QUIZ)","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"            .build();","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"Droffilc13"},"content":"    // prevents instantiation","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"Droffilc13"},"content":"    private TypicalAssignments() {}","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"Droffilc13"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"Droffilc13"},"content":"    public static List\u003cAssignment\u003e getTypicalAssignments() {","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"Droffilc13"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ASSIGNMENT_MA1521_TUTORIAL, ASSIGNMENT_CS2100_TUTORIAL,","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"Droffilc13"},"content":"                ASSIGNMENT_CS2103_QUIZ, ASSIGNMENT_CS1101S_MISSION));","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"Droffilc13"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"Droffilc13"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Droffilc13":53,"yeo-yiheng":28}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"Droffilc13"},"content":"    public static final Index INDEX_SIXTH_PERSON \u003d Index.fromOneBased(6);","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"qinguorui2001"},"content":"    public static final Index INDEX_FIRST_ASSIGNMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"qinguorui2001"},"content":"    public static final Index INDEX_SECOND_ASSIGNMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"qinguorui2001"},"content":"    public static final Index INDEX_THIRD_ASSIGNMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Droffilc13":1,"qinguorui2001":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_AMY;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"yeo-yiheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_BOB;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"TaoJun99"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"TaoJun99"},"content":"            .withModule(\"CS2103T\")","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"yeo-yiheng"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"TaoJun99"},"content":"            .withModule(\"CS1101S\")","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"qinguorui2001"},"content":"            .withAssignmentList(new String[] {\"Assignment 2\", \"15 Oct 2021, 01:00 PM\", \"PENDING\"},","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"qinguorui2001"},"content":"                    new String[] {\"Homework 1\", \"13 Sep 2021, 11:59 PM\", \"LATE\"})","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"TaoJun99"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"TaoJun99"},"content":"            .withModule(\"IS2101\")","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"qinguorui2001"},"content":"            .withAssignmentList(new String[] {\"iP\", \"17 Sep 2021, 11:59 PM\", \"COMPLETED\"},","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"qinguorui2001"},"content":"                    new String[] {\"Assignment 2\", \"15 Oct 2021, 01:00 PM\", \"PENDING\"}).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"TaoJun99"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"TaoJun99"},"content":"            .withModule(\"CM1102\")","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"TaoJun99"},"content":"            .withAssignmentList(new String[] {\"Homework 1\", \"13 Sep 2021, 11:59 PM\", \"LATE\"})","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"TaoJun99"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"TaoJun99"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"TaoJun99"},"content":"            .withModule(\"GER1000\")","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"TaoJun99"},"content":"            .withAssignmentList(new String[] {\"Tutorial 2\", \"16 Sep 2021, 11:59 PM\", \"COMPLETED\"}).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"TaoJun99"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"TaoJun99"},"content":"            .withModule(\"GET1031\")","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"Droffilc13"},"content":"            .withAssignmentList(new String[] {\"Assignment 1\", \"10 Sep 2021, 11:59 PM\", \"COMPLETED\"},","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Droffilc13"},"content":"                    new String[] {\"Assignment 2\", \"11 Sep 2021, 11:58 PM\", \"COMPLETED\"},","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Droffilc13"},"content":"                    new String[] {\"Lab 3\", \"12 Nov 2021, 06:00 PM\", \"PENDING\"})","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Droffilc13"},"content":"            .build();","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"TaoJun99"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"TaoJun99"},"content":"            .withModule(\"MA1101R\")","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"TaoJun99"},"content":"            .withAssignmentList(new String[] {\"Lab 1\", \"20 Sep 2021, 11:59 PM\", \"COMPLETED\"}).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"TaoJun99"},"content":"            .withEmail(\"stefan@example.com\").withModule(\"CP2106\")","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"TaoJun99"},"content":"            .withAssignmentList(new String[] {\"Lab 1\", \"20 Sep 2021, 11:59 PM\", \"COMPLETED\"}).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"TaoJun99"},"content":"            .withEmail(\"hans@example.com\").withModule(\"EG2201A\")","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"TaoJun99"},"content":"            .withAssignmentList(new String[] {\"iP\", \"17 Sep 2021, 11:59 PM\", \"COMPLETED\"}).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"yeo-yiheng"},"content":"            .withEmail(VALID_EMAIL_AMY).withModule(VALID_MODULE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"yeo-yiheng"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"yeo-yiheng"},"content":"            .withEmail(VALID_EMAIL_BOB).withModule(VALID_MODULE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Droffilc13":4,"yeo-yiheng":14,"qinguorui2001":4,"TaoJun99":21,"-":50}}]
