[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T11-1/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"![Ui](docs/images/Ui1.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"![Ui](docs/images/Ui2.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"This is the Team Project for CS2103T, done by T11-1.","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"The code is adapted from **[Address Book](https://se-education.org/addressbook-level3)** which provides a **reasonably","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules.","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"We present NUSTracker. This application targets events directors / administrative personnel of NUS student organizations.","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"We aim to address these problems:","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"1. Easier management of NUSâ€™s huge undergraduate base.","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"2. Store event details and attendance information all in 1 app.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"3. Convenient event management.","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"syoopie":14,"TLChicken":1,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"mainClassName \u003d \u0027nustracker.Main\u0027","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"    archiveBaseName \u003d \u0027nustracker.jar\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    archiveVersion \u003d \u00271.2\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"wowsiddanth":5,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"### Siddanth","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"\u003cimg src\u003d\"images/wowsiddanth.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"[[github](https://github.com/wowsiddanth)]","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"* Responsibilities: Ensure code is elegant and meets the coding conventions.","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"### Rehad","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"\u003cimg src\u003d\"images/rehad-a.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"[[github](http://github.com/rehad-a)]","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"[[portfolio](team/rehad-a.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"* Role: Testing","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"### Elvis Teo","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"\u003cimg src\u003d\"images/tlchicken.png\" width\u003d\"200px\" height\u003d\"236px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"[[github](http://github.com/TLChicken)]","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"[[portfolio](team/tlchicken.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"* Role: Scheduling and Tracking","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"* Responsibilities:","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"### Joel Sung","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"\u003cimg src\u003d\"images/joel-sung.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"[[github](http://github.com/joelsung)]","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"[[portfolio](team/joelsung.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"* Role: Team lead","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"* Responsibilities: Overall project coordination + Project documentation quality","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"### Sun Yu Pei","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"\u003cimg src\u003d\"images/syoopie.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"[[github](http://github.com/syoopie)]","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"[[portfolio](team/syoopie.md)]","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"* Role: Integration","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"* Responsibilities: In charge of versioning of the code, maintaining the code repository, integrating various parts of the software to create a whole.","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"syoopie":7,"TLChicken":6,"Joel-Sung":6,"wowsiddanth":5,"rehad-a":5,"-":31}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"# Developer Guide - NUSTracker","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"## **Introduction**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"NUSTracker is a standalone desktop app that aims to help event directors and administrative personnel of","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"NUS student organisations to manage the organisation of undergraduate student events more easily.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"As this app is geared towards the tech-literate generation, it is designed to use","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"a Command-Line Interface (CLI) to speed up usage for fast typists, while still making use of a","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"clean Graphical User Interface (GUI).","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"NUSTracker allows event directors to manage student events attendance information of the large undergraduate","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"student base.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `StudentListPanel`, `EventListPanel` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"The `UI` component uses the JavaFx UI framework and heavily utilizes CSS as well. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-T11-1/tp/blob/master/src/main/resources/view/MainWindow.fxml) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-T11-1/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"The \u0027UI\u0027 component makes use of .css files to change the theme of the application.","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"* depends on some classes in the `Model` component, as it displays `Student` object residing in the `Model`.","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"syoopie"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a student).","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"syoopie"},"content":"Step 2. The user executes `delete 5` command to delete the 5th student in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"syoopie"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new student. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"syoopie"},"content":"Step 4. The user now decides that adding the student was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"syoopie"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the student being deleted).","lastModifiedDate":"2021-10-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"wowsiddanth"},"content":"* manpower and administrative personnel of student organisations.","lastModifiedDate":"2021-09-30"},{"lineNumber":281,"author":{"gitId":"wowsiddanth"},"content":"* has a need to manage a significant number of NUS undergraduate students attendance information.","lastModifiedDate":"2021-09-30"},{"lineNumber":282,"author":{"gitId":"wowsiddanth"},"content":"* needs an app to collate NUS student events and their corresponding manpower","lastModifiedDate":"2021-09-30"},{"lineNumber":283,"author":{"gitId":"wowsiddanth"},"content":"  information in one place.","lastModifiedDate":"2021-09-30"},{"lineNumber":284,"author":{"gitId":"wowsiddanth"},"content":"* prefer desktop apps over other types.","lastModifiedDate":"2021-09-30"},{"lineNumber":285,"author":{"gitId":"wowsiddanth"},"content":"* can type fast.","lastModifiedDate":"2021-09-30"},{"lineNumber":286,"author":{"gitId":"wowsiddanth"},"content":"* prefers typing to mouse interactions.","lastModifiedDate":"2021-09-30"},{"lineNumber":287,"author":{"gitId":"wowsiddanth"},"content":"* is reasonably comfortable using CLI apps.","lastModifiedDate":"2021-09-30"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"wowsiddanth"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-30"},{"lineNumber":290,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":291,"author":{"gitId":"wowsiddanth"},"content":"* able to store NUS undergraduate student information.","lastModifiedDate":"2021-09-30"},{"lineNumber":292,"author":{"gitId":"wowsiddanth"},"content":"* create and track attendance for NUS student events.","lastModifiedDate":"2021-09-30"},{"lineNumber":293,"author":{"gitId":"wowsiddanth"},"content":"* manage attendance more efficiently and faster than a typical mouse/GUI driven app.","lastModifiedDate":"2021-09-30"},{"lineNumber":294,"author":{"gitId":"wowsiddanth"},"content":"* automates a bulk of attendance management processes.","lastModifiedDate":"2021-09-30"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                    | I want to â€¦â€‹                     | So that I canâ€¦â€‹                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | potential user                             | easily get the app running                  | quickly start using the App                 |","lastModifiedDate":"2021-09-30"},{"lineNumber":304,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | new user                                   | view a tutorial of basic commands           | learn how to use the software quickly |","lastModifiedDate":"2021-09-30"},{"lineNumber":305,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | new user                                   | view help screen                            | quickly refer to commands |","lastModifiedDate":"2021-09-30"},{"lineNumber":306,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | user                                       | view all the student data                   | keep track of all NUS undergraduate students                                   |","lastModifiedDate":"2021-09-30"},{"lineNumber":307,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | user                                       | view all events                             | keep track of the student events that the user manages                                   |","lastModifiedDate":"2021-09-30"},{"lineNumber":308,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | user                                       | exit the software                           | close the software |","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | user                                       | create a new student                        | add students newly admitted to NUS into the database |","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | user                                       | delete a student                            | delete students who have graduated from the database |","lastModifiedDate":"2021-09-30"},{"lineNumber":311,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | user                                       | create a new event                          | add new events to be managed using the app |","lastModifiedDate":"2021-09-30"},{"lineNumber":312,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | user                                       | delete an event                             | remove events that are no longer relevant |","lastModifiedDate":"2021-09-30"},{"lineNumber":313,"author":{"gitId":"wowsiddanth"},"content":"| `* * *`  | user                                       | test the app using sample data              | test the app and its commands easily before loading in real student data |","lastModifiedDate":"2021-09-30"},{"lineNumber":314,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | intermediate user                          | edit student data                           | update previous mistake in data entry or update a change in student data |","lastModifiedDate":"2021-09-30"},{"lineNumber":315,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | expert user                                | export email of selected students           | use the email list to mass email relevant students |","lastModifiedDate":"2021-09-30"},{"lineNumber":316,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | expert user                                | export event data file                      | easily share or transfer event data to load in another computer |","lastModifiedDate":"2021-09-30"},{"lineNumber":317,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | expert user                                | export student data file                    | easily share or transfer the student database to load in another computer |","lastModifiedDate":"2021-09-30"},{"lineNumber":318,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | blacklist students from events              | track which students are blacklisted from attending events |","lastModifiedDate":"2021-09-30"},{"lineNumber":319,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | load student data from external file        | quickly add a large number of students |","lastModifiedDate":"2021-09-30"},{"lineNumber":320,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | load event data file                        | update the list of events being managed in database |","lastModifiedDate":"2021-09-30"},{"lineNumber":321,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | filter students by event                    | find students attending a particular event |","lastModifiedDate":"2021-09-30"},{"lineNumber":322,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | view list of Telegram ID                    | get a list of Telegram IDs corresponding to selected students |","lastModifiedDate":"2021-09-30"},{"lineNumber":323,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | filter students by location                 | view addresses of students attending an event to help plan a convenient location |","lastModifiedDate":"2021-09-30"},{"lineNumber":324,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | filter students by year                     | select students who have certain years of seniority in NUS |","lastModifiedDate":"2021-09-30"},{"lineNumber":325,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | view event list of student                  | see what events a student has attended before or are attending |","lastModifiedDate":"2021-09-30"},{"lineNumber":326,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | filter students by major                    | find students of a particular major |","lastModifiedDate":"2021-09-30"},{"lineNumber":327,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | filter students by faculty                  | find students from a particular faculty |","lastModifiedDate":"2021-09-30"},{"lineNumber":328,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | open settings menu                          | adjust settings |","lastModifiedDate":"2021-09-30"},{"lineNumber":329,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | toggle autosave                             | choose whether to save data automatically or manually             |","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"wowsiddanth"},"content":"| `* *  `  | user                                       | use autosave                                | save the database constantly and automatically                             |","lastModifiedDate":"2021-09-30"},{"lineNumber":331,"author":{"gitId":"wowsiddanth"},"content":"| `*    `  | expert user                                | mass edit student data         | update data of similar students more efficiently |","lastModifiedDate":"2021-09-30"},{"lineNumber":332,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"wowsiddanth"},"content":"(For all use cases below, the _System_ is **NUSTracker** and the _Actor_ is the **user**, unless specified otherwise)","lastModifiedDate":"2021-09-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"wowsiddanth"},"content":"**\u003cu\u003eUse case UC1 - Add a student\u003c/u\u003e**","lastModifiedDate":"2021-09-27"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"wowsiddanth"},"content":"**Preconditions:** -","lastModifiedDate":"2021-09-27"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":344,"author":{"gitId":"wowsiddanth"},"content":"**Guarantees:** New student info is saved, and displayed.","lastModifiedDate":"2021-09-27"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":346,"author":{"gitId":"wowsiddanth"},"content":"**MSS:**","lastModifiedDate":"2021-09-27"},{"lineNumber":347,"author":{"gitId":"wowsiddanth"},"content":"1. User types in command","lastModifiedDate":"2021-09-27"},{"lineNumber":348,"author":{"gitId":"wowsiddanth"},"content":"2. AddressBook adds the user to the address book","lastModifiedDate":"2021-09-27"},{"lineNumber":349,"author":{"gitId":"wowsiddanth"},"content":"3. AddressBook displays that user has been added, and corresponding details","lastModifiedDate":"2021-09-27"},{"lineNumber":350,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":351,"author":{"gitId":"wowsiddanth"},"content":"   Use case ends","lastModifiedDate":"2021-09-27"},{"lineNumber":352,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":353,"author":{"gitId":"wowsiddanth"},"content":"**Extensions:**","lastModifiedDate":"2021-09-27"},{"lineNumber":354,"author":{"gitId":"wowsiddanth"},"content":"* 1a. User types in an invalid format","lastModifiedDate":"2021-09-27"},{"lineNumber":355,"author":{"gitId":"wowsiddanth"},"content":"    * 1a1. AddressBook shows an error messages, and displays the correct format to use.","lastModifiedDate":"2021-09-27"},{"lineNumber":356,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":357,"author":{"gitId":"wowsiddanth"},"content":"      Use case ends.","lastModifiedDate":"2021-09-27"},{"lineNumber":358,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":359,"author":{"gitId":"wowsiddanth"},"content":"**\u003cu\u003eUse case UC2 - Delete a student\u003c/u\u003e**","lastModifiedDate":"2021-09-27"},{"lineNumber":360,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":361,"author":{"gitId":"wowsiddanth"},"content":"**Preconditions:** -","lastModifiedDate":"2021-09-27"},{"lineNumber":362,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":363,"author":{"gitId":"wowsiddanth"},"content":"**Guarantees:** Student is deleted from program, and saved data","lastModifiedDate":"2021-09-27"},{"lineNumber":364,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":365,"author":{"gitId":"wowsiddanth"},"content":"**MSS:**","lastModifiedDate":"2021-09-27"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"syoopie"},"content":"1.  User requests to list students","lastModifiedDate":"2021-10-07"},{"lineNumber":368,"author":{"gitId":"syoopie"},"content":"2.  AddressBook shows a list of students","lastModifiedDate":"2021-10-07"},{"lineNumber":369,"author":{"gitId":"syoopie"},"content":"3.  User requests to delete a specific student in the list","lastModifiedDate":"2021-10-07"},{"lineNumber":370,"author":{"gitId":"syoopie"},"content":"4.  AddressBook deletes the student","lastModifiedDate":"2021-10-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"wowsiddanth"},"content":"**Extensions:**","lastModifiedDate":"2021-09-27"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"rehad-a"},"content":"**\u003cu\u003eUse case UC3 - Filter students by name\u003c/u\u003e**","lastModifiedDate":"2021-10-11"},{"lineNumber":386,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":387,"author":{"gitId":"rehad-a"},"content":"**Preconditions:** -","lastModifiedDate":"2021-10-11"},{"lineNumber":388,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":389,"author":{"gitId":"rehad-a"},"content":"**Guarantees:** The list of students is not altered","lastModifiedDate":"2021-10-11"},{"lineNumber":390,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":391,"author":{"gitId":"rehad-a"},"content":"**MSS:**","lastModifiedDate":"2021-10-11"},{"lineNumber":392,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":393,"author":{"gitId":"rehad-a"},"content":"1.  User requests to filter students by multiple names","lastModifiedDate":"2021-10-11"},{"lineNumber":394,"author":{"gitId":"rehad-a"},"content":"2.  AddressBook displays a list of students whose names contain the specified keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":395,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":396,"author":{"gitId":"rehad-a"},"content":"    Use case ends.","lastModifiedDate":"2021-10-11"},{"lineNumber":397,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":398,"author":{"gitId":"rehad-a"},"content":"**Extensions:**","lastModifiedDate":"2021-10-11"},{"lineNumber":399,"author":{"gitId":"rehad-a"},"content":"* 2a. The list of students is empty.","lastModifiedDate":"2021-10-11"},{"lineNumber":400,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":401,"author":{"gitId":"rehad-a"},"content":"  Use case ends.","lastModifiedDate":"2021-10-11"},{"lineNumber":402,"author":{"gitId":"rehad-a"},"content":" ","lastModifiedDate":"2021-10-11"},{"lineNumber":403,"author":{"gitId":"rehad-a"},"content":"* 2b. The AddressBook does not find any students with from the given keywords.","lastModifiedDate":"2021-10-11"},{"lineNumber":404,"author":{"gitId":"rehad-a"},"content":" ","lastModifiedDate":"2021-10-11"},{"lineNumber":405,"author":{"gitId":"rehad-a"},"content":"    * 2b1. AddressBook displays an empty list.","lastModifiedDate":"2021-10-11"},{"lineNumber":406,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":407,"author":{"gitId":"rehad-a"},"content":"        Use case ends.","lastModifiedDate":"2021-10-11"},{"lineNumber":408,"author":{"gitId":"rehad-a"},"content":"     ","lastModifiedDate":"2021-10-11"},{"lineNumber":409,"author":{"gitId":"rehad-a"},"content":"* 2c. User types multiple prefixes to filter by.","lastModifiedDate":"2021-10-11"},{"lineNumber":410,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":411,"author":{"gitId":"rehad-a"},"content":"    * 2c1. Address book shows an error message.","lastModifiedDate":"2021-10-11"},{"lineNumber":412,"author":{"gitId":"rehad-a"},"content":"    ","lastModifiedDate":"2021-10-11"},{"lineNumber":413,"author":{"gitId":"rehad-a"},"content":"        Use case ends.","lastModifiedDate":"2021-10-11"},{"lineNumber":414,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":415,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":416,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":417,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":418,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":419,"author":{"gitId":"TLChicken"},"content":"**\u003cu\u003eUse case UC8 - Enroll a student into an event\u003c/u\u003e**","lastModifiedDate":"2021-10-22"},{"lineNumber":420,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":421,"author":{"gitId":"TLChicken"},"content":"**Preconditions:** -","lastModifiedDate":"2021-10-22"},{"lineNumber":422,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":423,"author":{"gitId":"TLChicken"},"content":"**Guarantees:** The student gets enrolled into the specified event if both the student and event exist. ","lastModifiedDate":"2021-10-22"},{"lineNumber":424,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":425,"author":{"gitId":"TLChicken"},"content":"**MSS:**","lastModifiedDate":"2021-10-22"},{"lineNumber":426,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":427,"author":{"gitId":"TLChicken"},"content":"1.  User requests to enroll a student into an event.","lastModifiedDate":"2021-10-22"},{"lineNumber":428,"author":{"gitId":"TLChicken"},"content":"2.  AddressBook updates the event to have this student as a participant.","lastModifiedDate":"2021-10-22"},{"lineNumber":429,"author":{"gitId":"TLChicken"},"content":"3.  AddressBook updates the student to be enrolled into this event.","lastModifiedDate":"2021-10-22"},{"lineNumber":430,"author":{"gitId":"TLChicken"},"content":"4.  AddressBook shows that the student has now been enrolled.","lastModifiedDate":"2021-10-22"},{"lineNumber":431,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":432,"author":{"gitId":"TLChicken"},"content":"    Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":433,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":434,"author":{"gitId":"TLChicken"},"content":"**Extensions:**","lastModifiedDate":"2021-10-22"},{"lineNumber":435,"author":{"gitId":"TLChicken"},"content":"* 1a. User types in an invalid format.","lastModifiedDate":"2021-10-22"},{"lineNumber":436,"author":{"gitId":"TLChicken"},"content":"    * 1a1. AddressBook shows an error message, and displays the correct format to use.","lastModifiedDate":"2021-10-22"},{"lineNumber":437,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":438,"author":{"gitId":"TLChicken"},"content":"      Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":439,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":440,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":441,"author":{"gitId":"TLChicken"},"content":"* 1b. The specified student does not exist in the AddressBook.","lastModifiedDate":"2021-10-22"},{"lineNumber":442,"author":{"gitId":"TLChicken"},"content":"    * 1b1. AddressBook shows an error message, informing the user that the specified student does not exist.","lastModifiedDate":"2021-10-22"},{"lineNumber":443,"author":{"gitId":"TLChicken"},"content":"    ","lastModifiedDate":"2021-10-22"},{"lineNumber":444,"author":{"gitId":"TLChicken"},"content":"    Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":445,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":446,"author":{"gitId":"TLChicken"},"content":"* 1c. The specified event does not exist in the AddressBook.","lastModifiedDate":"2021-10-22"},{"lineNumber":447,"author":{"gitId":"TLChicken"},"content":"    * 1c1. AddressBook shows an error message, informing the user that the specified event does not exist.","lastModifiedDate":"2021-10-22"},{"lineNumber":448,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":449,"author":{"gitId":"TLChicken"},"content":"  Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":450,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":451,"author":{"gitId":"TLChicken"},"content":"* 1d. The specified student is currently already enrolled into the event.","lastModifiedDate":"2021-10-22"},{"lineNumber":452,"author":{"gitId":"TLChicken"},"content":"    * 1d1. AddressBook shows an error message, informing the user that the specified student is already currently enrolled.","lastModifiedDate":"2021-10-22"},{"lineNumber":453,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":454,"author":{"gitId":"TLChicken"},"content":"  Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":455,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":456,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":457,"author":{"gitId":"TLChicken"},"content":"**\u003cu\u003eUse case UC9 - Remove a student from an event\u003c/u\u003e**","lastModifiedDate":"2021-10-22"},{"lineNumber":458,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":459,"author":{"gitId":"TLChicken"},"content":"**Preconditions:** -","lastModifiedDate":"2021-10-22"},{"lineNumber":460,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":461,"author":{"gitId":"TLChicken"},"content":"**Guarantees:** The student is not enrolled into the specified event after the use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":462,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":463,"author":{"gitId":"TLChicken"},"content":"**MSS:**","lastModifiedDate":"2021-10-22"},{"lineNumber":464,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":465,"author":{"gitId":"TLChicken"},"content":"1.  User requests to remove a student from an event.","lastModifiedDate":"2021-10-22"},{"lineNumber":466,"author":{"gitId":"TLChicken"},"content":"2.  AddressBook updates the event to remove this student from being a participant.","lastModifiedDate":"2021-10-22"},{"lineNumber":467,"author":{"gitId":"TLChicken"},"content":"3.  AddressBook updates the student to not be enrolled into this event anymore.","lastModifiedDate":"2021-10-22"},{"lineNumber":468,"author":{"gitId":"TLChicken"},"content":"4.  AddressBook shows that the student has now been removed from the event.","lastModifiedDate":"2021-10-22"},{"lineNumber":469,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":470,"author":{"gitId":"TLChicken"},"content":"    Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":471,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":472,"author":{"gitId":"TLChicken"},"content":"**Extensions:**","lastModifiedDate":"2021-10-22"},{"lineNumber":473,"author":{"gitId":"TLChicken"},"content":"* 1a. User types in an invalid format.","lastModifiedDate":"2021-10-22"},{"lineNumber":474,"author":{"gitId":"TLChicken"},"content":"    * 1a1. AddressBook shows an error message, and displays the correct format to use.","lastModifiedDate":"2021-10-22"},{"lineNumber":475,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":476,"author":{"gitId":"TLChicken"},"content":"      Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":477,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":478,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":479,"author":{"gitId":"TLChicken"},"content":"* 1b. The specified student does not exist in the AddressBook.","lastModifiedDate":"2021-10-22"},{"lineNumber":480,"author":{"gitId":"TLChicken"},"content":"    * 1b1. AddressBook shows an error message, informing the user that the specified student does not exist.","lastModifiedDate":"2021-10-22"},{"lineNumber":481,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":482,"author":{"gitId":"TLChicken"},"content":"  Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":483,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":484,"author":{"gitId":"TLChicken"},"content":"* 1c. The specified event does not exist in the AddressBook.","lastModifiedDate":"2021-10-22"},{"lineNumber":485,"author":{"gitId":"TLChicken"},"content":"    * 1c1. AddressBook shows an error message, informing the user that the specified event does not exist.","lastModifiedDate":"2021-10-22"},{"lineNumber":486,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":487,"author":{"gitId":"TLChicken"},"content":"  Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":488,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":489,"author":{"gitId":"TLChicken"},"content":"* 1d. The specified student is not currently enrolled into the event.","lastModifiedDate":"2021-10-22"},{"lineNumber":490,"author":{"gitId":"TLChicken"},"content":"    * 1d1. AddressBook shows an error message, informing the user that the specified student cannot be removed from the event as the student is not a participant.","lastModifiedDate":"2021-10-22"},{"lineNumber":491,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":492,"author":{"gitId":"TLChicken"},"content":"  Use case ends.","lastModifiedDate":"2021-10-22"},{"lineNumber":493,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":494,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":495,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":496,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":497,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"wowsiddanth"},"content":"1.  Should be able to hold up to 40000 students and still be able to respond to user input within 2 seconds.","lastModifiedDate":"2021-09-30"},{"lineNumber":503,"author":{"gitId":"wowsiddanth"},"content":"1.  Should be able to hold a reasonable amount of events without any degradation in performance.","lastModifiedDate":"2021-09-30"},{"lineNumber":504,"author":{"gitId":"wowsiddanth"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-30"},{"lineNumber":505,"author":{"gitId":"wowsiddanth"},"content":"1.  Should be able to save all data on local storage.","lastModifiedDate":"2021-09-30"},{"lineNumber":506,"author":{"gitId":"wowsiddanth"},"content":"1.  The application should work without having to be installed first.","lastModifiedDate":"2021-09-30"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"wowsiddanth"},"content":"* **Command-Line Interface**: A text-based user interface allowing users to interact with applications by typing commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":514,"author":{"gitId":"wowsiddanth"},"content":"* **Graphical User Interface**: A graphical user interface that allows users to interact with applications through the use of interactive visuals.","lastModifiedDate":"2021-09-30"},{"lineNumber":515,"author":{"gitId":"wowsiddanth"},"content":"* **NUS**: An abbreviation for National University of Singapore.","lastModifiedDate":"2021-09-30"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"syoopie"},"content":"### Deleting a student","lastModifiedDate":"2021-10-07"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"syoopie"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2021-10-07"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"syoopie"},"content":"    1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"syoopie"},"content":"       Expected: No student is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-07"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"syoopie":13,"TLChicken":81,"wowsiddanth":99,"rehad-a":31,"-":344}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"   1. Run the `nustracker.Main` and try a few commands.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBookâ€™s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"syoopie":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"   e.g. `nustracker.commons.StringUtilTest`","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"   e.g. `nustracker.storage.StorageManagerTest`","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"   e.g. `nustracker.logic.LogicManagerTest`","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"syoopie":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"**NUSTracker** is a desktop application for managing large NUS-based student organizations, and is optimized","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"for use via the CLI or Command Line Interface. Nonetheless, it is supported by a detailed and elegant","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"Graphical User Interface (GUI).","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"1. Ensure you have `Java 11` or above installed in your Computer.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"2. Download the latest `nustracker.jar`, found under Releases","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for NUSTracker.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"   ![Ui](images/Ui1.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"   * **`list`** : Lists all students.","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"   * **`add n/John Doe m/CS id/e1283011 y/2 p/81231293 e/johndoe@example.com`** : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"## Student Commands","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"### Adding a student: `add`","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"Adds a student to NUSTracker","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"Command: `add n/STUDENT_NAME m/MAJOR id/STUDENT_ID y/YEAR p/NUMBER e/EMAIL [ev/EVENT]`","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"* add n/John Doe m/CS id/e1283011 y/2 p/81231293 e/johndoe@example.com","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"**Formatting**:","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"- Major are to be specified via acronyms. The following acronyms are valid:","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"  1. CS (Computer Science)","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"  2. BZA (Business Analytics)","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"  3. IS (Information Systems)","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"  4. ISEC (Information Security)","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"rehad-a"},"content":"- The Student ID must be specified exactly. {eXXXXXXX}","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"- Year must be specified as a single number.","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"### Listing all students: `students`","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"Shows all students in the app.","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"Command: `students`","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"### Editing a student : `edit`","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"Edits an existing student in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"Command: `edit id/ID_OF_STUDENT_TO_EDIT [n/NEW_NAME] [m/NEW_MAJOR] [id/NEW_STUDENT_ID] [y/NEW_YEAR] [p/NEW_PHONE] [e/NEW_EMAIL]`","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"* Edits the student who currently has the specified `STUDENT_ID`.","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"* Events of a student cannot be directly edited with the `edit` command, the `enroll` and `remove` commands serve this purpose.","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"Examples:","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"* `edit id/e0322322 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the student with Student ID `e0322322` to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"* `edit id/e0542341 n/Betsy Crower id/e0543212` Edits the name of the student with Student ID `e0542341` to be `Betsy Crower` and edits that student\u0027s Student ID to be `e0543212`.","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"### Deleting a student : `delete`","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"syoopie"},"content":"Deletes the specified student.","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"syoopie"},"content":"Command: `delete id/STUDENT_ID`","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"* Deletes the student with the specified `STUDENT_ID`.","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"syoopie"},"content":"Examples:","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"syoopie"},"content":"* `delete id/e1234567` deletes the student with the Student ID `e1234567`.","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"syoopie"},"content":"* `delete id/0589162` deletes the student with the Student ID `e0589162`.","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"rehad-a"},"content":"### Filter students: `filter`","lastModifiedDate":"2021-10-13"},{"lineNumber":134,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"rehad-a"},"content":"Filters students whose data contains the given field.","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"rehad-a"},"content":"Command: `filter [id/STUDENT_ID [MORE_STUDENT_IDs]...] [n/STUDENT_NAME [MORE_STUDENT_NAMES]...] [m/MAJOR [MORE_MAJORS]...] [y/YEAR [MORE_YEARS]...] [ev/EVENT_NAME]`","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"rehad-a"},"content":"* You can filter by:","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"rehad-a"},"content":"    - Multiple student IDs. (case-insensitive)","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"rehad-a"},"content":"    - Multiple Student names. (case-insensitive)","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"rehad-a"},"content":"    - Multiple Majors. (case-insensitive)","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"rehad-a"},"content":"    - Multiple Years.","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"rehad-a"},"content":"    - **A single** Event name. (case-sensitive)","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"rehad-a"},"content":"* You can only filter by one field (i.e. filter only by student ID, student name, year, major, or event name).","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"rehad-a"},"content":"* The search is case-insensitive, except for events. e.g. `n/john` will match with `n/JOHN`, but `ev/ifg` will **not** match `ev/IFG`","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"rehad-a"},"content":"* You can search using multiple keywords except for events.","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"rehad-a"},"content":"* You can search by partial keywords for names and student IDs. e.g. `n/al` will match with `n/alice` and `id/e12` will match with `id/e1234567`","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"rehad-a"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"rehad-a"},"content":"* `filter id/e1234567` returns the student with the id e1234567 if that student exists in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"rehad-a"},"content":"* `filter id/e1234567 e2345678` returns two students whose student IDs are e1234567 and e2345678 if they exist in the address book.","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"rehad-a"},"content":"* `filter id/e09` returns all students with student IDs that contain e09.","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"rehad-a"},"content":"* `filter n/John` returns the students whose names contain John.","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"rehad-a"},"content":"* `filter n/John alice` returns the students whose names contain John OR Alice.","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"rehad-a"},"content":"* `filter m/CS IS` returns the students majoring in CS or IS.","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"rehad-a"},"content":"* `filter y/1 2 3` returns the students in years 1, 2, or 3.","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"rehad-a"},"content":"* `filter ev/IFG` returns a list of students who are tagged to the IFG event.","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"rehad-a"},"content":"_**Coming soon:** Additional fields to filter by._","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"rehad-a"},"content":"_**Coming soon:** Filter by multiple fields._","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"syoopie"},"content":"## Event Commands","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"syoopie"},"content":"### Creating an event: `create`","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"syoopie"},"content":"Adds an event to NUSTracker","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"syoopie"},"content":"Command: `create n/EVENT_NAME d/EVENT_DATE t/EVENT_TIME`","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"syoopie"},"content":"* create n/Orientation Camp d/01-08-2022 t/1000","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"syoopie"},"content":"**Formatting**:","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"syoopie"},"content":"- Event name cannot be empty.","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"syoopie"},"content":"- Event date is in the format `DD-MM-YYYY`.","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"syoopie"},"content":"    - DD represents the day (from 01-31 inclusive)","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"syoopie"},"content":"    - MM represents the month (from 01-12 inclusive)","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"syoopie"},"content":"    - YYYY represents the year","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"syoopie"},"content":"- Event time is in 24 hour time `HHMM`.","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"syoopie"},"content":"    - HH represents the hour (from 00-24 inclusive)","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"syoopie"},"content":"    - MM represents the minute (from 00-59 inclusive)","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"syoopie"},"content":"    - **Note:** if HH is `24`, MM has to be `00`. (`2400`)","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"syoopie"},"content":"### List all events : `events`","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"syoopie"},"content":"Shows all events in the app.","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"syoopie"},"content":"Format: `events`","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":203,"author":{"gitId":"TLChicken"},"content":"### Enroll a student : `enroll`","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"TLChicken"},"content":"Enrolls the specified student into the specified event.","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"TLChicken"},"content":"Command: `enroll id/STUDENT_ID ev/EVENT`","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"syoopie"},"content":"* Enrolls the student specified by Student ID into the event specified by its event name.","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"syoopie"},"content":"* `enroll id/e0544111 ev/CS1101S Mock PE` enrolls the specified student with Student ID e0544111 into the event \"CS1101S Mock PE\".","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"syoopie"},"content":"* `enroll id/e0322322 ev/Orientation Camp` enrolls the specified student with Student ID e0322322 into the event \"Orientation Camp\".","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"TLChicken"},"content":"### Remove a student : `remove`","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"TLChicken"},"content":"Removes the specified student from the specified event.","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"TLChicken"},"content":"Command: `remove id/STUDENT_ID ev/EVENT`","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"syoopie"},"content":"* Removes the student specified by Student ID from the event specified by its event name.","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"rehad-a"},"content":"* `remove id/e0986472 ev/Tea Making Workshop` removes the specified student with student ID e0986472 from the event \"Tea Making Workshop\".","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"rehad-a"},"content":"* `remove id/e0264853 ev/Fun Run` removes the specified student with student ID e0264853 into the event \"Fun Run\".","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"syoopie"},"content":"### Deleting an event : `delete`","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"syoopie"},"content":"Deletes the specified event from the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"syoopie"},"content":"Command: `delete ev/EVENT_NAME`","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"syoopie"},"content":"* Deletes the event with the specified `EVENT_NAME`.","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"syoopie"},"content":"* `delete ev/Orientation` deletes the event with the name `Orientation`.","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"syoopie"},"content":"* `delete ev/Sports Camp` deletes the event with the name `Sports Camp`.","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"syoopie"},"content":"## Other Commands","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"syoopie"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"syoopie"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"syoopie"},"content":"Command: `help`","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"syoopie"},"content":"### Exporting Emails : `export`","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":257,"author":{"gitId":"syoopie"},"content":"Exports the emails of the students that are currently being displayed.","lastModifiedDate":"2021-10-22"},{"lineNumber":258,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"syoopie"},"content":"Command: `export fn/FILE_NAME`","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":261,"author":{"gitId":"syoopie"},"content":"Filenames cannot contain the characters `\\:*?\"\u003c\u003e|`","lastModifiedDate":"2021-10-22"},{"lineNumber":262,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"syoopie"},"content":"The file will be located in the `data` directory, the same place where the app\u0027s save files are located.","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"syoopie"},"content":"Examples:","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"syoopie"},"content":"* `export fn/StudentsAttendingOrientation`","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"syoopie"},"content":"* `export fn/AllStudents`","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"wowsiddanth"},"content":"Command: `exit`","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"syoopie"},"content":"\u003cbr\u003e\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"syoopie"},"content":"---------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"syoopie"},"content":"## Misc","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"wowsiddanth"},"content":"NUSTracker data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":286,"author":{"gitId":"wowsiddanth"},"content":"NUSTracker data is saved as a JSON file. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-30"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"wowsiddanth"},"content":"_Please edit carefully! NUSTracker will start a fresh run if errors are present!_","lastModifiedDate":"2021-09-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"wowsiddanth"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous NUSTracker home folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"syoopie"},"content":"### Student Commands","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"syoopie"},"content":"**Command** | **Description** | **Example** |","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"syoopie"},"content":"----------------------------|------------------------------|-------------------------------------------------------|","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"TLChicken"},"content":"**add** | adds a student | `add n/STUDENT_NAME m/MAJOR id/STUDENT_ID y/YEAR p/NUMBER e/EMAIL` |","lastModifiedDate":"2021-10-20"},{"lineNumber":306,"author":{"gitId":"Joel-Sung"},"content":"**students** | lists students | `students` |","lastModifiedDate":"2021-10-15"},{"lineNumber":307,"author":{"gitId":"TLChicken"},"content":"**edit** | edit a student | `edit [id/ID_OF_STUDENT_TO_EDIT] [n/NAME] [m/MAJOR] [id/NEW_STUDENT_ID] [y/YEAR] [p/PHONE] [e/EMAIL]` |","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"syoopie"},"content":"**delete** | delete a student | `delete id/STUDENT_ID` |","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"syoopie"},"content":"**filter** | filter by field  | `filter [n/STUDENT_NAME [MORE_STUDENT_NAMES]...]` \u003cbr\u003e `filter [id/STUDENT_ID [MORE_STUDENT_IDS]...]` \u003cbr\u003e  `filter [ev/EVENT_NAME]` |","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"syoopie"},"content":"### Event Commands","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"syoopie"},"content":"**Command** | **Description** | **Example** |","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"syoopie"},"content":"----------------|-------------------------|-----------------|","lastModifiedDate":"2021-10-22"},{"lineNumber":315,"author":{"gitId":"syoopie"},"content":"**create**  | create an event | `create n/EVENT_NAME d/EVENT_DATE t/EVENT_TIME` _\u003cbr\u003e Date format: DD-MM-YYYY \u003cbr\u003e Time format: HHHH_ |","lastModifiedDate":"2021-10-13"},{"lineNumber":316,"author":{"gitId":"Joel-Sung"},"content":"**events**  | lists events | `events` |","lastModifiedDate":"2021-10-15"},{"lineNumber":317,"author":{"gitId":"syoopie"},"content":"**enroll**  | adds a student to an event | `enroll id/STUDENT_ID ev/EVENT_NAME` |","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"syoopie"},"content":"**remove**  | removes a student from an event | `remove id/STUDENT_ID ev/EVENT_NAME` |","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"syoopie"},"content":"**delete**  | deletes an event | `delete ev/EVENT_NAME` |","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"syoopie"},"content":"### Other Commands","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"syoopie"},"content":"**Command** | **Description** | **Example** |","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"syoopie"},"content":"-------------------------|------------------------------------------|----------------------------------|","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"syoopie"},"content":"**help** | opens the help window | `help` |","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"syoopie"},"content":"**export** | exports the emails of the students that are currently displayed | `export fn/FILE_NAME` |","lastModifiedDate":"2021-10-22"},{"lineNumber":327,"author":{"gitId":"syoopie"},"content":"**exit** | exits the app | `exit` |","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"syoopie":112,"Joel-Sung":17,"TLChicken":19,"wowsiddanth":18,"rehad-a":34,"-":127}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"Class SettingsWindow","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"Class StudentListPanel","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"Class EventListPanel","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"Class StudentCard","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"Class EventCard","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"MainWindow *-down-\u003e \"1\" StudentListPanel","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"MainWindow -down-\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"MainWindow -down-\u003e \"0..1\" SettingsWindow","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"StudentListPanel -down-\u003e \"*\" StudentCard","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"StudentListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"SettingsWindow --|\u003e UiPart","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"EventCard ..\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"StudentCard ..\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"HelpWindow -[hidden]right- CommandBox","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"EventListPanel -[hidden]left- ResultDisplay","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"wowsiddanth":18,"-":50}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"ecp -\u003e ec ++: index, editStudentDescriptor","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"syoopie":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"title: NUSTracker","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T11-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T11-1/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T11-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2122S1-CS2103T-T11-1/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"![Ui](images/Ui1.png)","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"**NUSTracker is a desktop application for managing NUS student events.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"* If you are interested in using NUSTracker, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"* If you are interested about developing NUSTracker, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"syoopie":1,"TLChicken":5,"-":13}},{"path":"docs/team/joelsung.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"title: Joel Sung\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"### Project: NUS Tracker","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"NUS Tracker - (to include description of project here)","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"* **New Feature**: Added the ability to create Events for students to enroll in.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"  * Highlights: This feature was challenging to implement as a brand new entity/class was introduced to the application. That required the AddressBook to now contain an event list, the GUI had to display the event list, the storage had to now store events and utility test classes had to be created to test event related classes and functions.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"* **New Feature**: Added the ability to delete Events","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"  * Highlights: The DeleteCommand was made into an abstract class which DeleteStudentCommand and DeleteEventCommand inherit from. The DeleteCommandParser had to now account for the difference.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"* * **New Feature**: Added the ability to list Events and Students","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"* Highlights: Created new commands and edited Help Window.","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"* **Code contributed**:","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"* **Enhancements to existing features**: Changed delete student by index to by student ID","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"  * Highlights: Whole implementation of delete student command had to be changed. New variables for testing were created to accommodate the new changes.","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"Joel-Sung":32,"rehad-a":1}},{"path":"docs/team/rehad-a.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"title: rehad-a\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"NUSTracker - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"* **New Feature**: Added the ability to filter commands.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"  * What it does: allows the user to filter the students by name, student ID, or the events that they are attending.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"* **New Feature**:","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":" ","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"* **Code contributed**:","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"  * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"    * Added documentation for the `filter` feature","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"    * Added use cases for the `filter` feature","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"rehad-a":31}},{"path":"docs/team/syoopie.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"title: Yu Pei\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"### Project: NUSTracker","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"  * Maintained the help function, updated it with all the new features implemented","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"  * Improved the GUI of the help function, make it easy for the user to copy commands to assist those who are more unfamiliar with the app","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"  * Did a full refactoring of Person -\u003e Student to bring the language of the code more in line with our project","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"* **Community**:","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"  * Helped with PR reviews and pushed for merging to forward the progress of the application","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"  * Pointed out bugs / cosmetic issues in peers code and approached them to correct it","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"syoopie":18}},{"path":"docs/team/tlchicken.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"title: Elvis Teo\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"### Project: NUSTracker","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"NUSTracker is a standalone desktop app that aims to help event directors and administrative personnel of","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"NUS student organisations to manage the organisation of undergraduate student events more easily.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"It is built on top of **[AddressBook - Level 3](https://se-education.org/addressbook-level3)**, which is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"* **New Feature**: Added the ability to enroll students into events.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"  * What it does: Allows the user to enroll students into the events that they want to participate in.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"  * Justification: This feature forms part of the base product as it allows students to be used together with events.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"  * Highlights: The implementation was challenging as it required interacting between 2 different sets of classes which have a wide array of subclasses - Student and Event, and making them work together.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"  It was also tricky to devise a way to load the enrolled events of a student from the JSON file, as all students and events have to be loaded first before this can happen.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"* **New Feature**: Added the ability to remove students from events.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"  * What it does: Allows the user to remove students from the events that they are currently enrolled in.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"  * Justification: This feature forms part of the base product as it allows students to be used together with events.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"  * Highlights: The implementation was of similar type and difficulty to that of the enroll feature.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"* **Project management**:","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"  \u003c!--- * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub ---\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"  \u003c!--- Changed the edit command to identify students by student ID instead of by index in the GUI\u0027s list.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]()) ---\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"  * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"    * Added documentation for the features `enroll` and `remove`","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"    * Added Introduction section.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"    * Added Target User Profile and Value Proposition. (From Team Discussions)","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    * Adapted discussed User Stories into Markdown table form and added it.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"    * Added Non-Functional Requirements and Glossary.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"  \u003c!---","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"  ---\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"  \u003c!---","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"  ---\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"TLChicken":57,"rehad-a":1}},{"path":"docs/team/wowsiddanth.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"layout: page","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"title: wowsiddanth\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"---","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"### Project: NUSTracker","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"_NUSTracker_ is an event-management software that was built specifically for the NUS student/manpower executive in mind. It is","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"a brownfield project that extends the AddressBook3 project, which is around 10kLoC.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"* **New Feature**: Redesign Person class to behave like a Student class","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"  * **What it does**: Adds the necessary fields and methods so that the Person class behaves like a Student (_has a student ID, email, etc_)","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"  * **Justification**: This features redesigns the Person, so that it meets the specification of an NUS student, taking part in an event.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"  * **Highlights**: This change affected almost many other class, as Person class is a fundamental component of the initial AddressBook3 project. It","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"  was definitely challenging adding these new attributes and tracing and fixing these regressions.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"  * **Credits**: -","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"* **New Feature**: Ability to add/delete student information","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"  * **What it does**: Adds the relevant methods and attributes that allowed for the deletion of every attribute of a student","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"  * **Justification**: This allows for the user to edit a specific wrong inputted field, instead of deleting and re-entering that particular student.","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"  * **Highlights**: This change affected many other classes, especially so the test cases. It was tough remaking a plethora of test cases and adding in new ones, to ensure stability.","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"  * **Credits**: -","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"* **New Feature**: Remake GUI to match mockup","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"  * **What it does**: Remakes the current GUI so that it matches the mockup proposed in _Figma_.","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"  * **Justification**: To beautify the product, and allow the user to have an elegant user experience.","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"  * **Highlights**: JavaFX, unlike many other frameworks for designing GUIs, is not as active as the rest. Thus, it was definitely","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"  tedious reading many articles and documentations posted by Oracle to gain an intuitive understanding. Additionally, it was also","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"  difficult as I had to learn CSS from scratch, from resources such as the Mozilla Foundation, etc.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"  * **Credits**: JavaFX documentation by Oracle, and the CSS resources by the Mozilla Foundation.","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"   ","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dwowsiddanth\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~test-code~other~functional-code\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"  * Updated the GUI to match mockup on _Figma._","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"  * Modified Person class to be Student class.","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"  * User Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    * Added documentation for the features `add` and `delete` [\\#27](https://github.com/AY2122S1-CS2103T-T11-1/tp/pull/27)A ","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    * Edit Developer Guide to add use cases for add/delete student information","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"* **Community**:","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#58](https://github.com/AY2122S1-CS2103T-T11-1/tp/pull/58), [\\#48](https://github.com/AY2122S1-CS2103T-T11-1/tp/pull/48), [\\#46](https://github.com/AY2122S1-CS2103T-T11-1/tp/pull/46), [\\#33](https://github.com/AY2122S1-CS2103T-T11-1/tp/pull/33).","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"* **Tools**:","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"wowsiddanth":54,"rehad-a":1}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/nustracker/logic/command` directory.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":" * Changes the remark of an existing student in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"            + \": Edits the remark of the student identified \"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"            + \"by the index number used in the last student listing. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"import static nustracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"     * @param index of the student in the filtered student list to edit the remark","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"syoopie"},"content":"     * @param remark of the student to be updated to","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"syoopie"},"content":"Create a `RemarkCommandParser` class in the `nustracker.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"syoopie"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of student data. We achieve that by working with the `Student` model. Each field in a Student is implemented as a separate class (e.g. a `Name` object represents the studentâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a student.","lastModifiedDate":"2021-10-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"syoopie"},"content":"Create a new `Remark` in `nustracker.model.student`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"syoopie"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each student.","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"syoopie"},"content":"Simply add the following to [`nustracker.ui.StudentCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"syoopie"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2021-10-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"syoopie"},"content":"Then insert the following into [`main/resources/view/StudentListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-10-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"syoopie"},"content":"**`StudentListCard.fxml`:**","lastModifiedDate":"2021-10-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"syoopie"},"content":"## Modify `Student` to support a `Remark` field","lastModifiedDate":"2021-10-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"syoopie"},"content":"Since `StudentCard` displays data from a `Student`, we need to update `Student` to get our `Remark` displayed!","lastModifiedDate":"2021-10-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"syoopie"},"content":"### Modify `Student`","lastModifiedDate":"2021-10-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"syoopie"},"content":"We change the constructor of `Student` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-10-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"syoopie"},"content":"### Update other usages of `Student`","lastModifiedDate":"2021-10-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"syoopie"},"content":"Unfortunately, a change to `Student` will cause other commands to break, you will have to modify these commands to use the updated `Student`!","lastModifiedDate":"2021-10-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"syoopie"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Student` class to find these commands.","lastModifiedDate":"2021-10-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"syoopie"},"content":"AddressBook stores data by serializing `JsonAdaptedStudent` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedStudent` to work with our new `Student`!","lastModifiedDate":"2021-10-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"syoopie"},"content":"Now that we have finalized the `Student` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-10-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"syoopie"},"content":"**`StudentCard.java`:**","lastModifiedDate":"2021-10-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"syoopie"},"content":"public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"syoopie"},"content":"    remark.setText(student.getRemark().value);","lastModifiedDate":"2021-10-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"syoopie"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Student`. Since all fields in a `Student` are immutable, we create a new instance of a `Student` with the values that we want and","lastModifiedDate":"2021-10-08"},{"lineNumber":329,"author":{"gitId":"syoopie"},"content":"save it with `Model#setStudent()`.","lastModifiedDate":"2021-10-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Student: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":336,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Student: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"syoopie"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"syoopie"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"syoopie"},"content":"        Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":347,"author":{"gitId":"syoopie"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-08"},{"lineNumber":348,"author":{"gitId":"syoopie"},"content":"                studentToEdit.getName(), studentToEdit.getPhone(), studentToEdit.getEmail(),","lastModifiedDate":"2021-10-07"},{"lineNumber":349,"author":{"gitId":"syoopie"},"content":"                studentToEdit.getAddress(), remark, studentToEdit.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"syoopie"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":352,"author":{"gitId":"syoopie"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"syoopie"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"syoopie"},"content":"     * {@code studentToEdit}.","lastModifiedDate":"2021-10-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"syoopie"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2021-10-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"syoopie"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2021-10-07"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"syoopie":45,"-":356}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `name` field from `Student` class.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `name` field can be done similarly.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"## Safely deleting `Name`","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"The `name` field in `Student` is actually an instance of the `nustracker.model.student.Name` class. Since removing the `Name` class will break the application, we start by identifying `Name`\u0027s usages. This allows us to see code that depends on `Name` to function properly and edit them on a case-by-case basis. Right-click the `Name` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Name` class is used.","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"Remove usages of `Name` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Name`. Functions like `ParserUtil#parseName()` can be safely removed but its usages must be removed as well. Other usages like in `EditStudentDescriptor` may require more careful inspection.","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"Letâ€™s try removing references to `Name` in `EditStudentDescriptor`.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"1. Safe delete the field `name` in `EditStudentDescriptor`.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"1. Remove the usages of `name` and select `Do refactor` when you are done.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `name` field from the `Student` class will require you to modify its constructor.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"1. Repeat the steps for the remaining usages of `Name`","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"Unfortunately, there are usages of `Name` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `name` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$name` in each `StudentCard` that has not been removed nor identified.","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"![$name](../images/remove/$name.png)","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"A quick look at the `StudentCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"**`StudentCard.java`**","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"private Label name;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"**`StudentCard.fxml`**","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"\u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Name` in test data and documentation.","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"syoopie"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `name` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"**`invalidStudentNameBook.json`:**","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"    \"name\": \"Student with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"You can go through each individual `json` file and manually remove the `name` field.","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"syoopie":25,"-":87}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `nustracker.Logic`.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"A quick look at the `nustracker.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"syoopie"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditStudentDescriptor`. Recall that we can verify the contents of `editStudentDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"syoopie"},"content":"       Student studentToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"syoopie"},"content":"       Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"syoopie"},"content":"       if (!studentToEdit.isSameStudent(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"syoopie"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"syoopie"},"content":"       model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"syoopie"},"content":"       model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"syoopie"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"syoopie"},"content":"   * it uses the `setStudent()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the student data.","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"syoopie"},"content":"   * it uses the `updateFilteredStudentList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ students.\u003cbr\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"syoopie"},"content":"     FYI, The \u0027filtered list\u0027 is the list of students resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the students so that the user can see the edited student along with all other students. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"syoopie"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of students is being tracked.","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"syoopie"},"content":"        students.addAll(","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"syoopie"},"content":"            source.getStudentList()","lastModifiedDate":"2021-10-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"syoopie"},"content":"                  .map(JsonAdaptedStudent::new)","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"syoopie"},"content":"1. It appears that a `JsonAdaptedStudent` is created for each `Student` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-10-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"syoopie"},"content":"    5.  Add a new field to `Student`","lastModifiedDate":"2021-10-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"syoopie":19,"-":282}},{"path":"src/main/java/nustracker/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.FileUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"syoopie":3,"-":61}},{"path":"src/main/java/nustracker/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":" * as a named module. We don\u0027t use JavaFX via the module system because it can\u0027t","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"syoopie":2,"-":23}},{"path":"src/main/java/nustracker/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Config;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Version;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.StringUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.Logic;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.LogicManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"import nustracker.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.AddressBookStorage;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.Storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.StorageManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"import nustracker.ui.Ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"import nustracker.ui.UiManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":25,"-":159}},{"path":"src/main/java/nustracker/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"        sb.append(\"Current log level : \").append(logLevel);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"        sb.append(\"\\nPreference file Location : \").append(userPrefsFilePath);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":3,"-":60}},{"path":"src/main/java/nustracker/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    private static final String DEFAULT_GLOW_HEX_CODE \u003d \"#E9AFFF\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private final boolean isLightMode;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    private final String glowHexCode;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        glowHexCode \u003d DEFAULT_GLOW_HEX_CODE;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        isLightMode \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, boolean isLightMode,","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"                       String glowHexCode) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        this.glowHexCode \u003d glowHexCode;","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        this.isLightMode \u003d isLightMode;","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    public String getGlowHexCode() {","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"        return glowHexCode;","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    public boolean getIsLightMode() {","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"        return isLightMode;","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"                \u0026\u0026 isLightMode \u003d\u003d o.getIsLightMode()","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"                \u0026\u0026 Objects.equals(glowHexCode, o.getGlowHexCode())","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates, glowHexCode, isLightMode);","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"        sb.append(\"Width : \").append(windowWidth).append(\"\\n\");","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"        sb.append(\"Height : \").append(windowHeight).append(\"\\n\");","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"        sb.append(\"Position : \").append(windowCoordinates).append(\"\\n\");","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"        sb.append(\"Using light mode?: \").append(isLightMode).append(\"\\n\");","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"        sb.append(\"Color: \").append(glowHexCode);","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":3,"wowsiddanth":23,"-":73}},{"path":"src/main/java/nustracker/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5 MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":1,"-":111}},{"path":"src/main/java/nustracker/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"    public static final String MESSAGE_INVALID_STUDENTID \u003d \"No student has the student ID: %1$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_INVALID_EVENT_NAME \u003d \"The event %1$s does not exist\";","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"    public static final String MESSAGE_INVALID_MAJOR \u003d \"The major %1$s is invalid\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"    public static final String MESSAGE_INVALID_YEAR \u003d \"The year %1$s is invalid\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_STUDENTS_LISTED_OVERVIEW \u003d \"%1$d students listed!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"    public static final String MESSAGE_MULTIPLE_FILTER_FIELDS \u003d \"Cannot filter by multiple fields!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":2,"Joel-Sung":1,"rehad-a":4,"-":9}},{"path":"src/main/java/nustracker/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"                versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":2,"-":114}},{"path":"src/main/java/nustracker/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core.index;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"syoopie":1,"-":53}},{"path":"src/main/java/nustracker/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":1,"-":10}},{"path":"src/main/java/nustracker/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":1,"-":20}},{"path":"src/main/java/nustracker/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.MainApp;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"syoopie":2,"-":40}},{"path":"src/main/java/nustracker/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":1,"-":34}},{"path":"src/main/java/nustracker/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Config;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"syoopie":4,"-":20}},{"path":"src/main/java/nustracker/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":1,"-":82}},{"path":"src/main/java/nustracker/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":4,"-":140}},{"path":"src/main/java/nustracker/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":3,"-":65}},{"path":"src/main/java/nustracker/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"     * @see nustracker.model.Model#getAddressBook()","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"syoopie":10,"Joel-Sung":3,"-":41}},{"path":"src/main/java/nustracker/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.AddressBookParser;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.Storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"    public void setGuiSettings(GuiSettings guiSettings) throws IllegalArgumentException {","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        if (guiSettings \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"            logger.log(Level.INFO, \"guiSettings cannot be null!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"            throw new IllegalArgumentException(\"guiSettings cannot be null!\");","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"syoopie":14,"Joel-Sung":4,"wowsiddanth":6,"-":68}},{"path":"src/main/java/nustracker/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":" * Adds a student to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a student to the address book. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"            + PREFIX_YEAR + \"YEAR \"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"            + PREFIX_MAJOR + \"MAJOR \"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"            + PREFIX_STUDENTID + \"STUDENTID \"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"            + PREFIX_YEAR + \"1 \"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"            + PREFIX_MAJOR + \"CS \"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"            + PREFIX_STUDENTID + \"e1234567 \";","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book\";","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"    private final Student toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"     * Creates an AddCommand to add the specified {@code Student}","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"    public AddCommand(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"        toAdd \u003d student;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":21,"wowsiddanth":4,"rehad-a":3,"-":41}},{"path":"src/main/java/nustracker/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":3,"-":20}},{"path":"src/main/java/nustracker/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":3,"-":17}},{"path":"src/main/java/nustracker/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    /** The student list should be displayed. */","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    private final boolean toggleStudents;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    /** The event list should be displayed. */","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    private final boolean toggleEvents;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit,","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"                         boolean toggleStudents, boolean toggleEvents) {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        // Cannot toggle both the student and event list at the same time.","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        if (toggleStudents || toggleEvents) {","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"            assert toggleStudents !\u003d toggleEvents;","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        this.toggleStudents \u003d toggleStudents;","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        this.toggleEvents \u003d toggleEvents;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        this(feedbackToUser,","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"                false, false, false, false);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    public boolean isToggleStudents() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"        return toggleStudents;","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"    public boolean isToggleEvents() {","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"        return toggleEvents;","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 toggleStudents \u003d\u003d otherCommandResult.toggleStudents","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 toggleEvents \u003d\u003d otherCommandResult.toggleEvents;","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, toggleStudents, toggleEvents);","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":1,"Joel-Sung":29,"-":66}},{"path":"src/main/java/nustracker/logic/commands/CreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":" * Creates a new Event.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"public class CreateCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"            + \": Creates an Event. Students can now be enrolled into this event. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"            + PREFIX_NAME + \"EVENT_NAME \"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"            + PREFIX_DATE + \"EVENT_DATE (DD-MM-YYYY) \"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"            + PREFIX_TIME + \"EVENT_TIME (24HR TIME)\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"            + PREFIX_NAME + \"Orientation \"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"            + PREFIX_DATE + \"09-10-2022 \"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"            + PREFIX_TIME + \"2137 \";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Created event: %1$s\";","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    private final Event event;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"     * Creates an CreateCommand to add the specified {@code event}","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"    public CreateCommand(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        requireAllNonNull(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"        if (model.hasEvent(event)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        model.addEvent(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, event));","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"                || (other instanceof CreateCommand // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 event.equals(((CreateCommand) other).event));","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":61}},{"path":"src/main/java/nustracker/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":" * A command used to delete a student or an event.","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"            + \": Deletes the student identified by his/her Student ID \"","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"            + \"or an event by name.\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"            + \"Parameters: \" + PREFIX_STUDENTID + \"[Student ID]\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_STUDENTID + \"e1234567\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"            + \"Parameters:\" + PREFIX_EVENT + \"[Event name]\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_EVENT + \"Orientation\";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":1,"Joel-Sung":10,"-":9}},{"path":"src/main/java/nustracker/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_EVENT_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":" * Deletes an event identified by its name.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"public class DeleteEventCommand extends DeleteCommand {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_USAGE \u003d DeleteCommand.COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"            + \": Deletes an event by name.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"            + \"Parameters: \" + DeleteCommand.COMMAND_WORD + \"[Event name] (must not be empty)\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"            + \"Example: \" + DeleteCommand.COMMAND_WORD + PREFIX_EVENT + \"Orientation\";","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    private final EventName eventName;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    public DeleteEventCommand(EventName eventName) {","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        Event toDelete \u003d model.getEvent(eventName);","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        if (toDelete \u003d\u003d null) {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_EVENT_NAME, eventName));","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        model.deleteEvent(toDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventName));","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"                || (other instanceof DeleteEventCommand // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 eventName.equals(((DeleteEventCommand) other).eventName)); // state check","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Joel-Sung":52}},{"path":"src/main/java/nustracker/logic/commands/DeleteStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":" * Deletes a student identified by his/her student ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"public class DeleteStudentCommand extends DeleteCommand {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_USAGE \u003d DeleteCommand.COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"            + \": Deletes a student identified by Student ID.\\n\"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"            + \"Parameters: \" + DeleteCommand.COMMAND_WORD + \"[Student ID]\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"            + \"Example: \" + DeleteCommand.COMMAND_WORD + PREFIX_STUDENTID + \"e1234567\";","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"    private final StudentId studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"    public DeleteStudentCommand(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        Student toDelete \u003d model.getStudent(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        if (toDelete \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_STUDENTID, studentId));","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        model.deleteStudent(toDelete);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, toDelete));","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"                || (other instanceof DeleteStudentCommand // instanceof handles nulls","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 studentId.equals(((DeleteStudentCommand) other).studentId)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Joel-Sung":40,"rehad-a":10}},{"path":"src/main/java/nustracker/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Participant;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":" * Edits the details of an existing student in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified \"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"            + \"by the student\u0027s student ID. \"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"            + PREFIX_STUDENTID + \"ID_OF_STUDENT_TO_EDIT \"","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"            + \"[\" + PREFIX_NAME + \"NEW_NAME] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"            + \"[\" + PREFIX_PHONE + \"NEW_PHONE] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"            + \"[\" + PREFIX_EMAIL + \"NEW_EMAIL] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"            + \"[\" + PREFIX_YEAR + \"NEW_YEAR] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"            + \"[\" + PREFIX_MAJOR + \"NEW_MAJOR] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"            + \"[\" + PREFIX_STUDENTID + \"NEW_STUDENT_ID] \"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"            + \" \" + PREFIX_STUDENTID + \"e0322322 \"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com \"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"            + PREFIX_STUDENTID + \"e0322323\";","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited Student: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"This student already exists in the address book.\";","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"    private final StudentId studentIdToEdit;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"    private final EditStudentDescriptor editStudentDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"rehad-a"},"content":"     * @param studentId the student ID of the student to be edited.","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"     * @param editStudentDescriptor details to edit the student with.","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"rehad-a"},"content":"    public EditCommand(StudentId studentId, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"        requireNonNull(editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"rehad-a"},"content":"        this.studentIdToEdit \u003d studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"        this.editStudentDescriptor \u003d new EditStudentDescriptor(editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"        Student studentToEdit \u003d model.getStudent(studentIdToEdit);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"        if (studentToEdit \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"rehad-a"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_STUDENTID,","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"rehad-a"},"content":"                    studentIdToEdit.getStudentIdString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit, editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        if (!studentToEdit.hasDuplicateCredentials(editedStudent) \u0026\u0026 model.hasStudent(editedStudent)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"        editStudentIdInEventList(studentToEdit, editedStudent, model);","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"        model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"     * Creates and returns a {@code Student} with the details of {@code studentToEdit}","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"     * edited with {@code editStudentDescriptor}.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"    private static Student createEditedStudent(Student studentToEdit, EditStudentDescriptor editStudentDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"        assert studentToEdit !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"syoopie"},"content":"        Name updatedName \u003d editStudentDescriptor.getName().orElse(studentToEdit.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"        Phone updatedPhone \u003d editStudentDescriptor.getPhone().orElse(studentToEdit.getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"        Email updatedEmail \u003d editStudentDescriptor.getEmail().orElse(studentToEdit.getEmail());","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"syoopie"},"content":"        Year updatedYear \u003d editStudentDescriptor.getYear().orElse(studentToEdit.getYear());","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"syoopie"},"content":"        Major updatedMajor \u003d editStudentDescriptor.getMajor().orElse(studentToEdit.getMajor());","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"rehad-a"},"content":"        StudentId updatedStudentId \u003d editStudentDescriptor.getStudentId().orElse(studentToEdit.getStudentId());","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"        // Enrolled Events should not be updated using Edit Command","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents notUpdatedEvents \u003d studentToEdit.getEvents();","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"        return new Student(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"rehad-a"},"content":"                updatedYear, updatedMajor, updatedStudentId, notUpdatedEvents);","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"     * Externally looks like it edits the Student Ids of the Participant object in the Events that this Student","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"     * is enrolled in, if this Student\u0027s Student Id is being edited. Internally it deletes the old Event","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"     * and creates a new Event with the updated Student so that the ObservableList of Events would trigger","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"     * an update to GUI.","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"     * @param studentToEdit the Student whose Student Id is being edited.","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"TLChicken"},"content":"     * @param newStudent the new Student which has an edited Student Id.","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"TLChicken"},"content":"     * @param model the Model that the Student is being updated in.","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"TLChicken"},"content":"    private void editStudentIdInEventList(Student studentToEdit, Student newStudent, Model model) {","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"TLChicken"},"content":"        Optional\u003cStudentId\u003e studentIdFromDesc \u003d editStudentDescriptor.getStudentId();","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"TLChicken"},"content":"        StudentId editedStudentId \u003d studentIdFromDesc.orElse(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":135,"author":{"gitId":"TLChicken"},"content":"        if (editedStudentId \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"TLChicken"},"content":"            // This Edit Command does not edit the Student Id.","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"TLChicken"},"content":"            return;","lastModifiedDate":"2021-10-21"},{"lineNumber":138,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":139,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":140,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents currEnrolledEvents \u003d studentToEdit.getEvents();","lastModifiedDate":"2021-10-21"},{"lineNumber":141,"author":{"gitId":"TLChicken"},"content":"        Set\u003cEvent\u003e allEventSet \u003d currEnrolledEvents.getAllEventsEnrolledIn(model);","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"TLChicken"},"content":"        for (Event currEvent : allEventSet) {","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"TLChicken"},"content":"            Set\u003cParticipant\u003e currParticipants \u003d currEvent.getParticipants();","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"TLChicken"},"content":"            Set\u003cParticipant\u003e newParticipants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"TLChicken"},"content":"            for (Participant currParticipant : currParticipants) {","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"TLChicken"},"content":"                if (currParticipant.getStudentId().equals(studentIdToEdit)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"TLChicken"},"content":"                    // Update Student Id by creating new Participant with the updated Id and adding to the Set","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"TLChicken"},"content":"                    Participant updParticipant \u003d new Participant(newStudent.getStudentId().getStudentIdString());","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"TLChicken"},"content":"                    newParticipants.add(updParticipant);","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"TLChicken"},"content":"                } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"TLChicken"},"content":"                    // Otherwise use the existing Participant object since they are not being modified.","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"TLChicken"},"content":"                    newParticipants.add(currParticipant);","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"TLChicken"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"TLChicken"},"content":"            Event newUpdatedEvent \u003d currEvent.getNewEventWithUpdatedParticipants(newParticipants);","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"TLChicken"},"content":"            model.setEvent(currEvent, newUpdatedEvent);","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":166,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":167,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"rehad-a"},"content":"        return studentIdToEdit.equals(e.studentIdToEdit)","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"syoopie"},"content":"                \u0026\u0026 editStudentDescriptor.equals(e.editStudentDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"syoopie"},"content":"     * Stores the details to edit the student with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"syoopie"},"content":"     * corresponding field value of the student.","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"syoopie"},"content":"    public static class EditStudentDescriptor {","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"wowsiddanth"},"content":"        private Year year;","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"wowsiddanth"},"content":"        private Major major;","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"rehad-a"},"content":"        private StudentId studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"syoopie"},"content":"        public EditStudentDescriptor() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"syoopie"},"content":"        public EditStudentDescriptor(EditStudentDescriptor toCopy) {","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":207,"author":{"gitId":"wowsiddanth"},"content":"            setYear(toCopy.year);","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"wowsiddanth"},"content":"            setMajor(toCopy.major);","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"rehad-a"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"rehad-a"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, major, year, studentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"wowsiddanth"},"content":"        public void setYear(Year year) {","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"wowsiddanth"},"content":"            this.year \u003d year;","lastModifiedDate":"2021-09-25"},{"lineNumber":245,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":246,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":247,"author":{"gitId":"wowsiddanth"},"content":"        public Optional\u003cYear\u003e getYear() {","lastModifiedDate":"2021-09-25"},{"lineNumber":248,"author":{"gitId":"wowsiddanth"},"content":"            return Optional.ofNullable(year);","lastModifiedDate":"2021-09-25"},{"lineNumber":249,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":250,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":251,"author":{"gitId":"wowsiddanth"},"content":"        public void setMajor(Major major) {","lastModifiedDate":"2021-09-25"},{"lineNumber":252,"author":{"gitId":"wowsiddanth"},"content":"            this.major \u003d major;","lastModifiedDate":"2021-09-25"},{"lineNumber":253,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":254,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":255,"author":{"gitId":"wowsiddanth"},"content":"        public Optional\u003cMajor\u003e getMajor() {","lastModifiedDate":"2021-09-25"},{"lineNumber":256,"author":{"gitId":"wowsiddanth"},"content":"            return Optional.ofNullable(major);","lastModifiedDate":"2021-09-25"},{"lineNumber":257,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":258,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":259,"author":{"gitId":"rehad-a"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":260,"author":{"gitId":"rehad-a"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":261,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":262,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":263,"author":{"gitId":"rehad-a"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2021-10-18"},{"lineNumber":264,"author":{"gitId":"rehad-a"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":265,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":266,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"syoopie"},"content":"            if (!(other instanceof EditStudentDescriptor)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"syoopie"},"content":"            EditStudentDescriptor e \u003d (EditStudentDescriptor) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":285,"author":{"gitId":"wowsiddanth"},"content":"                    \u0026\u0026 getYear().equals(e.getYear())","lastModifiedDate":"2021-09-25"},{"lineNumber":286,"author":{"gitId":"rehad-a"},"content":"                    \u0026\u0026 getStudentId().equals(e.getStudentId())","lastModifiedDate":"2021-10-18"},{"lineNumber":287,"author":{"gitId":"wowsiddanth"},"content":"                    \u0026\u0026 getMajor().equals(e.getMajor());","lastModifiedDate":"2021-10-16"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"syoopie":48,"Joel-Sung":1,"TLChicken":74,"wowsiddanth":26,"rehad-a":23,"-":118}},{"path":"src/main/java/nustracker/logic/commands/EnrollCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_EVENT_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Participant;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":" * Adds a student to an existing event.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"public class EnrollCommand extends Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    public static final String COMMAND_WORD \u003d \"enroll\";","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"            + \": Adds the person identified by student ID to an event \"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"            + \"identified by its name.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"            + PREFIX_STUDENTID + \"STUDENTID \"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"            + PREFIX_EVENT + \"EVENT_NAME\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"            + PREFIX_STUDENTID + \"e0322322 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"            + PREFIX_EVENT + \"Orientation Camp\";","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"    public static final String MESSAGE_ADD_TO_EVENT_SUCCESS \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"            \"Enrolled Student: %1$s with student ID %2$s into the Event: %3$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"    public static final String MESSAGE_STUDENT_ALREADY_ENROLLED \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"            \"The Student %1$s with student ID %2$s is already enrolled into the event: %3$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"    private final StudentId studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    private final EventName eventName;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"     * @param studentId of the student to enroll into the event","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"     * @param eventName the person is to be added to","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"    public EnrollCommand(StudentId studentId, EventName eventName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"        requireAllNonNull(studentId, eventName);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"        // Enroll Student to event (4 Cases)","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"        // 1. Success","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"        // 2. Student does not exist","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"        // 3. Event does not exist","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"        // 4. Student already in event","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"        // Check if a student with this student ID exists in the list","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"        Student currStudent \u003d model.getStudent(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"        if (currStudent \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"rehad-a"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_STUDENTID, studentId.getStudentIdString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"        // Check if an event with this event name exists","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"        Event currEvent \u003d model.getEvent(eventName);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"        if (currEvent \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_EVENT_NAME, eventName.getEventName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"        // Check if student is already in event","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"rehad-a"},"content":"        boolean isAlreadyInEvent \u003d currEvent.isInEvent(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"        if (isAlreadyInEvent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"            throw new CommandException(String.format(MESSAGE_STUDENT_ALREADY_ENROLLED,","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"                    currStudent.getName().toString(),","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"rehad-a"},"content":"                    currStudent.getStudentId().getStudentIdString(),","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"                    currEvent.getName().getEventName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"        // Enroll the student into the event by:","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"        // 1. Add into this student\u0027s EnrolledEvents in model","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"        // 2. Add to event list","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents currentlyEnrolledEvents \u003d currStudent.getEvents();","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents updatedEnrolledEvents \u003d currentlyEnrolledEvents.enrollIntoEvent(currEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"                currStudent.getName(), currStudent.getPhone(), currStudent.getEmail(),","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"rehad-a"},"content":"                currStudent.getYear(), currStudent.getMajor(), currStudent.getStudentId(),","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"                updatedEnrolledEvents);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"        model.setStudent(currStudent, editedStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"        Set\u003cParticipant\u003e oldParticipants \u003d currEvent.getParticipants();","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"        Set\u003cParticipant\u003e updatedParticipants \u003d new HashSet\u003c\u003e(oldParticipants);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"rehad-a"},"content":"        updatedParticipants.add(new Participant(currStudent.getStudentId().getStudentIdString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"                currEvent.getName(), currEvent.getDate(), currEvent.getTime(), updatedParticipants","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"        model.setEvent(currEvent, updatedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_TO_EVENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"                editedStudent.getName().toString(),","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"rehad-a"},"content":"                editedStudent.getStudentId().getStudentIdString(),","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"TLChicken"},"content":"                updatedEvent.getName().getEventName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"        if (!(other instanceof EnrollCommand)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"TLChicken"},"content":"        EnrollCommand e \u003d (EnrollCommand) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"rehad-a"},"content":"        return studentId.equals(e.studentId)","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"TLChicken"},"content":"                \u0026\u0026 eventName.equals(e.eventName);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"Joel-Sung":10,"TLChicken":70,"wowsiddanth":1,"rehad-a":22,"-":37}},{"path":"src/main/java/nustracker/logic/commands/EventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":" * Displays the events list.","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"public class EventsCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    public static final String COMMAND_WORD \u003d \"events\";","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_SHOW_EVENTS_SUCCESS \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"            \"Here is the list of events.\";","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        return new CommandResult(MESSAGE_SHOW_EVENTS_SUCCESS, false, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"                false, true);","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        if (!(other instanceof EventsCommand)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"            return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        // state check","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"Joel-Sung":36}},{"path":"src/main/java/nustracker/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false);","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"syoopie":2,"Joel-Sung":1,"-":16}},{"path":"src/main/java/nustracker/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_FILENAME;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.Exporting;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":" * Exports the emails of the students in the current displayed list.","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Emails exported\";","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"            + \": Exports the email of all the current displayed students as a csv file.\\n\"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"            + PREFIX_FILENAME + \"FILE_NAME\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"            + \" \"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"            + PREFIX_FILENAME + \"exportedEmails\";","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"    private final Path pathToExport;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"     * Constructor.","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"     * @param fileName name of file to export to","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"    public ExportCommand(String fileName) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"        requireNonNull(fileName);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        this.pathToExport \u003d Path.of(\"data\\\\\" + fileName + \".csv\");","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"        ObservableList\u003cStudent\u003e filteredStudents \u003d model.getFilteredStudentList();","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        Exporting.exportEmails(","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"                pathToExport,","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"                filteredStudents.stream().map(Student::getEmail).collect(Collectors.toList()));","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"syoopie":56}},{"path":"src/main/java/nustracker/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":" * Filters and lists all students whose data contain a specific field.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"public abstract class FilterCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"            + \": Filters all students by name, student ID, major, year,or Events\"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"            + \"by the specified keywords.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"            + \"Parameters: \" + PREFIX_NAME + \"STUDENT_NAME [MORE_STUDENT_NAMES]... \\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"alice bob charlie\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"            + \"Parameters: \" + PREFIX_STUDENTID + \"STUDENT_ID [MORE_STUDENT_IDS]...\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_STUDENTID + \"e1234567 e234567 e3456789\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"            + \"Parameters: \" + PREFIX_EVENT + \"EVENT_NAME\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_EVENT + \"Orientation\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"            + \"Parameters: \" + PREFIX_MAJOR + \"MAJOR [MORE_MAJORS]...\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_MAJOR + \"CS IS\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"            + \"Parameters: \" + PREFIX_YEAR + \"YEAR [MORE_YEARS]...\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_YEAR + \"2\\n\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rehad-a":36}},{"path":"src/main/java/nustracker/logic/commands/FilterEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_EVENT_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.EnrolledEventsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":" * Filters and lists all students in address book attending the event in the argument.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"public class FilterEventCommand extends FilterCommand {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"    private final EnrolledEventsContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"    public FilterEventCommand(EnrolledEventsContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"        Event event \u003d model.getEvent(new EventName(predicate.getKeyword()));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"        //event does not exist","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"        if (event \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_EVENT_NAME, predicate.getKeyword()));","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof FilterEventCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 predicate.equals(((FilterEventCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rehad-a":45}},{"path":"src/main/java/nustracker/logic/commands/FilterIdCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":" * Filters and lists all students in address book whose student ID contains any of the argument keywords.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"public class FilterIdCommand extends FilterCommand {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"    private final StudentIdContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public FilterIdCommand(StudentIdContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof FilterIdCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 predicate.equals(((FilterIdCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rehad-a":35}},{"path":"src/main/java/nustracker/logic/commands/FilterMajorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.MajorContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":" * Filters and lists all students in address book whose major contains any of the argument keywords.","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"public class FilterMajorCommand extends FilterCommand {","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"    private final MajorContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public FilterMajorCommand(MajorContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof FilterMajorCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 predicate.equals(((FilterMajorCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"rehad-a":35}},{"path":"src/main/java/nustracker/logic/commands/FilterNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":" * Filters and lists all students in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"public class FilterNameCommand extends FilterCommand {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public FilterNameCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof FilterNameCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 predicate.equals(((FilterNameCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"syoopie":6,"rehad-a":7,"-":22}},{"path":"src/main/java/nustracker/logic/commands/FilterYearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.YearContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":" * Filters and lists all students in address book whose year contains any of the argument keywords.","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"public class FilterYearCommand extends FilterCommand {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"    private final YearContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"    public FilterYearCommand(YearContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, model.getFilteredStudentList().size()));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof FilterYearCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 predicate.equals(((FilterYearCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"rehad-a":34}},{"path":"src/main/java/nustracker/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":2,"Joel-Sung":1,"-":18}},{"path":"src/main/java/nustracker/logic/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_EVENT_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import static nustracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Participant;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":" * Removes a student from an existing event.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"            + \": Removes the person identified by student ID from an event \"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"            + \"identified by its name. \\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"            + PREFIX_STUDENTID + \"STUDENTID \"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"            + PREFIX_EVENT + \"EVENT_NAME\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"            + PREFIX_STUDENTID + \"e0322322 \"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"            + PREFIX_EVENT + \"Orientation Camp\";","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"    public static final String MESSAGE_REMOVE_EVENT_SUCCESS \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"            \"Removed Student: %1$s with student ID %2$s from the Event: %3$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"    public static final String MESSAGE_STUDENT_NOT_ALREADY_ENROLLED \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"            \"The Student %1$s with student ID %2$s cannot be removed from the event: %3$s as he was not enrolled yet\";","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"    private final StudentId studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"    private final EventName eventName;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"     * @param studentId of the student to remove from the event","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"     * @param eventName the person is to be removed","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"    public RemoveCommand(StudentId studentId, EventName eventName) {","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"rehad-a"},"content":"        requireAllNonNull(studentId, eventName);","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"        // Remove Student from event (4 Cases)","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"        // 1. Success","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"        // 2. Student does not exist","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"        // 3. Event does not exist","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"        // 4. Student not already in event","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"        // Check if a student with this student ID exists in the list","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"rehad-a"},"content":"        Student currStudent \u003d model.getStudent(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"        if (currStudent \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"rehad-a"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_STUDENTID, studentId.getStudentIdString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"        // Check if an event with this event name exists","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"        Event currEvent \u003d model.getEvent(eventName);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"        if (currEvent \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_EVENT_NAME, eventName.getEventName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"        // Check if student is already in event","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"rehad-a"},"content":"        boolean isAlreadyInEvent \u003d currEvent.isInEvent(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"        if (!isAlreadyInEvent) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"            throw new CommandException(String.format(MESSAGE_STUDENT_NOT_ALREADY_ENROLLED,","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"                    currStudent.getName().toString(),","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"rehad-a"},"content":"                    currStudent.getStudentId().getStudentIdString(),","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"                    currEvent.getName().getEventName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"        // Remove the student into the event by:","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"        // 1. Remove from this student\u0027s EnrolledEvents in model","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"        // 2. Remove from event list","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents currentlyEnrolledEvents \u003d currStudent.getEvents();","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents updatedEnrolledEvents \u003d currentlyEnrolledEvents.removeFromEvent(currEvent);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"        Student editedStudent \u003d new Student(","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"                currStudent.getName(), currStudent.getPhone(), currStudent.getEmail(),","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"rehad-a"},"content":"                currStudent.getYear(), currStudent.getMajor(), currStudent.getStudentId(),","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"                updatedEnrolledEvents);","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"        model.setStudent(currStudent, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"        Set\u003cParticipant\u003e oldParticipants \u003d currEvent.getParticipants();","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"        Set\u003cParticipant\u003e updatedParticipants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"        for (Participant currParticipant : oldParticipants) {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"rehad-a"},"content":"            if (currParticipant.getStudentId().equals(studentId)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"                // Do not add this participant to remove it.","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"                updatedParticipants.add(currParticipant);","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"TLChicken"},"content":"                currEvent.getName(), currEvent.getDate(), currEvent.getTime(), updatedParticipants","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"TLChicken"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"        model.setEvent(currEvent, updatedEvent);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_EVENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"                editedStudent.getName().toString(),","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"rehad-a"},"content":"                editedStudent.getStudentId().getStudentIdString(),","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"                updatedEvent.getName().getEventName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"TLChicken"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"TLChicken"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"TLChicken"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"TLChicken"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"TLChicken"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"TLChicken"},"content":"        if (!(other instanceof RemoveCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"TLChicken"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"TLChicken"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"TLChicken"},"content":"        RemoveCommand e \u003d (RemoveCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"rehad-a"},"content":"        return studentId.equals(e.studentId)","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"TLChicken"},"content":"                \u0026\u0026 eventName.equals(e.eventName);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"TLChicken":126,"wowsiddanth":1,"rehad-a":22}},{"path":"src/main/java/nustracker/logic/commands/StudentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":" * Displays the students list.","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"public class StudentsCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    public static final String COMMAND_WORD \u003d \"students\";","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_SHOW_STUDENTS_SUCCESS \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"            \"Here is the list of students.\";","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        return new CommandResult(MESSAGE_SHOW_STUDENTS_SUCCESS, false, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"                true, false);","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        if (!(other instanceof StudentsCommand)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"            return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        // state check","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"Joel-Sung":37}},{"path":"src/main/java/nustracker/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"syoopie":2,"-":17}},{"path":"src/main/java/nustracker/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"                        PREFIX_YEAR, PREFIX_MAJOR, PREFIX_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"                PREFIX_YEAR, PREFIX_MAJOR, PREFIX_STUDENTID)","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        Year year \u003d ParserUtil.parseYear(argMultimap.getValue(PREFIX_YEAR).get());","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        Major major \u003d ParserUtil.parseMajor(argMultimap.getValue(PREFIX_MAJOR).get());","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents enrolledEvents \u003d new EnrolledEvents();","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"        Student student \u003d new Student(name, phone, email, year, major, studentId, enrolledEvents);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"        return new AddCommand(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"syoopie":18,"TLChicken":5,"wowsiddanth":3,"rehad-a":5,"-":28}},{"path":"src/main/java/nustracker/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.EnrollCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.EventsCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"import nustracker.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.StudentsCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"rehad-a"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"        case CreateCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"            return new CreateCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"        case EnrollCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"            return new EnrollCommandParser().parse(arguments);","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"            return new RemoveCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        case EventsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"            return new EventsCommand();","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"        case StudentsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"            return new StudentsCommand();","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":15,"Joel-Sung":13,"TLChicken":7,"rehad-a":3,"-":56}},{"path":"src/main/java/nustracker/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in this ArgumentMultimap.","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"    public boolean arePrefixesPresent(Prefix... prefixes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"syoopie":1,"TLChicken":9,"-":59}},{"path":"src/main/java/nustracker/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"syoopie":1,"-":147}},{"path":"src/main/java/nustracker/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    public static final Prefix PREFIX_YEAR \u003d new Prefix(\"y/\");","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    public static final Prefix PREFIX_MAJOR \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    public static final Prefix PREFIX_STUDENTID \u003d new Prefix(\"id/\");","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"ev/\");","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"    public static final Prefix PREFIX_FILENAME \u003d new Prefix(\"fn/\");","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"syoopie":2,"Joel-Sung":4,"wowsiddanth":2,"-":12}},{"path":"src/main/java/nustracker/logic/parser/CreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"public class CreateCommandParser implements Parser\u003cCreateCommand\u003e {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateCommand","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"     * and returns an CreateCommand object for execution.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    public CreateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_NAME, PREFIX_DATE, PREFIX_TIME)","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        EventName name \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        EventDate date \u003d ParserUtil.parseEventDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        EventTime time \u003d ParserUtil.parseEventTime(argMultimap.getValue(PREFIX_TIME).get());","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        Event event \u003d new Event(name, date, time);","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        return new CreateCommand(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":40,"TLChicken":2}},{"path":"src/main/java/nustracker/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_STUDENTID, PREFIX_EVENT);","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTID).isPresent()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"            StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"            return new DeleteStudentCommand(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        } else if (argMultimap.getValue(PREFIX_EVENT).isPresent()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"            EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"            return new DeleteEventCommand(eventName);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"syoopie":4,"Joel-Sung":21,"rehad-a":2,"-":18}},{"path":"src/main/java/nustracker/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"                        PREFIX_YEAR, PREFIX_STUDENTID, PREFIX_MAJOR);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_STUDENTID) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"        StudentId studentIdToEdit \u003d ParserUtil.parseStudentId(argMultimap.getAllValues(PREFIX_STUDENTID).get(0));","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor editStudentDescriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"            editStudentDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"            editStudentDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"            editStudentDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"        if (argMultimap.getValue(PREFIX_YEAR).isPresent()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"            editStudentDescriptor.setYear(ParserUtil.parseYear(argMultimap.getValue(PREFIX_YEAR).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        if (argMultimap.getValue(PREFIX_MAJOR).isPresent()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"            editStudentDescriptor.setMajor(ParserUtil.parseMajor(argMultimap.getValue(PREFIX_MAJOR).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTID).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"            editStudentDescriptor.setStudentId(ParserUtil.parseStudentId(","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"                    argMultimap.getValue(PREFIX_STUDENTID).get()));","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"        if (!editStudentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"rehad-a"},"content":"        return new EditCommand(studentIdToEdit, editStudentDescriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"syoopie":12,"TLChicken":10,"wowsiddanth":6,"rehad-a":8,"-":33}},{"path":"src/main/java/nustracker/logic/parser/EnrollCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.EnrollCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"public class EnrollCommandParser implements Parser\u003cEnrollCommand\u003e {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    public EnrollCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"                PREFIX_STUDENTID,","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                PREFIX_EVENT);","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_STUDENTID, PREFIX_EVENT) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EnrollCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        return new EnrollCommand(studentId, eventName);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"syoopie":1,"Joel-Sung":7,"TLChicken":6,"rehad-a":6,"-":15}},{"path":"src/main/java/nustracker/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_FILENAME;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FILENAME);","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_FILENAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"                    ExportCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"        String fileName \u003d ParserUtil.parseExportFileName(argMultimap.getValue(PREFIX_FILENAME).get());","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        return new ExportCommand(fileName);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"syoopie":30}},{"path":"src/main/java/nustracker/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_MAJOR;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_YEAR;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import static nustracker.commons.core.Messages.MESSAGE_MULTIPLE_FILTER_FIELDS;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_YEAR;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterIdCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterMajorCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterNameCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterYearCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.EnrolledEventsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.MajorContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.YearContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_STUDENTID, PREFIX_MAJOR, PREFIX_YEAR,","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"                        PREFIX_EVENT);","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"rehad-a"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"        List\u003cPrefix\u003e prefixes \u003d Arrays.asList(PREFIX_NAME, PREFIX_STUDENTID, PREFIX_MAJOR, PREFIX_YEAR, PREFIX_EVENT);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"        long arguments \u003d prefixes.stream().filter(prefix -\u003e argMultimap.getValue(prefix).isPresent()).count();","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"rehad-a"},"content":"        if (arguments \u003e 1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"rehad-a"},"content":"            throw new ParseException(MESSAGE_MULTIPLE_FILTER_FIELDS);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"            String trimmedArgs \u003d getTrimmedArgs(args, PREFIX_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"            String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"            return new FilterNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"        } else if (argMultimap.getValue(PREFIX_STUDENTID).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"rehad-a"},"content":"            String trimmedArgs \u003d getTrimmedArgs(args, PREFIX_STUDENTID);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"            String[] idKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"            return new FilterIdCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(idKeywords)));","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"rehad-a"},"content":"        } else if (argMultimap.getValue(PREFIX_MAJOR).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"rehad-a"},"content":"            String trimmedArgs \u003d getTrimmedArgs(args, PREFIX_MAJOR);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"rehad-a"},"content":"            String[] splitMajors \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"rehad-a"},"content":"            Major[] majors \u003d getMajors(splitMajors);","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"rehad-a"},"content":"            return new FilterMajorCommand(new MajorContainsKeywordsPredicate(Arrays.asList(majors)));","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"rehad-a"},"content":"        } else if (argMultimap.getValue(PREFIX_YEAR).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"rehad-a"},"content":"            String trimmedArgs \u003d getTrimmedArgs(args, PREFIX_YEAR);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"rehad-a"},"content":"            String[] yearKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"rehad-a"},"content":"            Year[] years \u003d getYears(yearKeywords);","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"rehad-a"},"content":"            return new FilterYearCommand(new YearContainsKeywordsPredicate(Arrays.asList(years)));","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"rehad-a"},"content":"        } else if (argMultimap.getValue(PREFIX_EVENT).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"rehad-a"},"content":"            String trimmedArgs \u003d getTrimmedArgs(args, PREFIX_EVENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"            return new FilterEventCommand(new EnrolledEventsContainsKeywordsPredicate(trimmedArgs));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"rehad-a"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"rehad-a"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"rehad-a"},"content":"    public String getTrimmedArgs(String args, Prefix prefix) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"rehad-a"},"content":"        ArgumentMultimap argMap \u003d ArgumentTokenizer.tokenize(args, prefix);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"rehad-a"},"content":"        String trimmedArgs \u003d argMap.getValue(prefix).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"rehad-a"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"rehad-a"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"rehad-a"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"rehad-a"},"content":"        return trimmedArgs.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"rehad-a"},"content":"    public Major[] getMajors(String[] splitMajors) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"rehad-a"},"content":"        Major[] majors \u003d new Major[splitMajors.length];","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"rehad-a"},"content":"        for (int i \u003d 0; i \u003c majors.length; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"rehad-a"},"content":"            try {","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"rehad-a"},"content":"                majors[i] \u003d ParserUtil.parseMajor(splitMajors[i]);","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"rehad-a"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"rehad-a"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"rehad-a"},"content":"                        String.format(MESSAGE_INVALID_MAJOR + \"\\n\" + e.getMessage(), splitMajors[i]));","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"rehad-a"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"rehad-a"},"content":"        return majors;","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"rehad-a"},"content":"    public Year[] getYears(String[] splitMajors) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"rehad-a"},"content":"        Year[] years \u003d new Year[splitMajors.length];","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"rehad-a"},"content":"        for (int i \u003d 0; i \u003c years.length; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"rehad-a"},"content":"            try {","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"rehad-a"},"content":"                years[i] \u003d ParserUtil.parseYear(splitMajors[i]);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"rehad-a"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"rehad-a"},"content":"                throw new ParseException(","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"rehad-a"},"content":"                        String.format(MESSAGE_INVALID_YEAR + \"\\n\" + e.getMessage(), splitMajors[i]));","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"rehad-a"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"rehad-a"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"rehad-a"},"content":"        return years;","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rehad-a":127}},{"path":"src/main/java/nustracker/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"syoopie":3,"-":13}},{"path":"src/main/java/nustracker/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.StringUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"     * Parses a {@code String year} into an {@code Year}.","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"     * @throws ParseException if the given {@code year} is invalid.","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    public static Year parseYear(String year) throws ParseException {","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"        requireNonNull(year);","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"        String trimmedYear \u003d year.trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"        if (!Year.isValidYear(trimmedYear)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"            throw new ParseException(Year.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"        return new Year(trimmedYear);","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"     * Parses a {@code String major} into an {@code Major}.","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"     * @throws ParseException if the given {@code major} is invalid.","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"    public static Major parseMajor(String major) throws ParseException {","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"        requireNonNull(major);","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"        String trimmedMajor \u003d major.trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"        if (!Major.isValidMajor(trimmedMajor)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"            throw new ParseException(Major.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"        return new Major(trimmedMajor);","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"rehad-a"},"content":"     * Parses a {@code String studentId} into an {@code StudentId}.","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"rehad-a"},"content":"     * @throws ParseException if the given {@code StudentId} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"rehad-a"},"content":"        String trimmedStudentId \u003d studentId.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"rehad-a"},"content":"        if (!StudentId.isValidStudentId(trimmedStudentId)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"rehad-a"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"rehad-a"},"content":"        return new StudentId(trimmedStudentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"     * Parses a {@code String name} into a {@code EventName}.","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"    public static EventName parseEventName(String name) throws ParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"Joel-Sung"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"Joel-Sung"},"content":"        if (!EventName.isValidName(trimmedName)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"Joel-Sung"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"        return new EventName(trimmedName);","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"     * Parses a {@code String date} into a {@code EventDate}.","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"Joel-Sung"},"content":"    public static EventDate parseEventDate(String date) throws ParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"        if (!EventDate.isValidDate(date)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"        return new EventDate(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"Joel-Sung"},"content":"     * Parses a {@code String time} into a {@code EventTime}.","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"Joel-Sung"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"Joel-Sung"},"content":"    public static EventTime parseEventTime(String time) throws ParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"Joel-Sung"},"content":"        if (!EventTime.isValidTime(time)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"Joel-Sung"},"content":"            throw new ParseException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"Joel-Sung"},"content":"        return new EventTime(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":168,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"syoopie"},"content":"     * Parses a fileName.","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"syoopie"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"syoopie"},"content":"     * @throws ParseException if the given fileName contains illegal characters","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"syoopie"},"content":"    public static String parseExportFileName(String fileName) throws ParseException {","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"syoopie"},"content":"        requireNonNull(fileName);","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"syoopie"},"content":"        if (fileName.contains(\"/\")","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"syoopie"},"content":"                || fileName.contains(\"\\\\\")","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"syoopie"},"content":"                || fileName.contains(\":\")","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"syoopie"},"content":"                || fileName.contains(\"*\")","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"syoopie"},"content":"                || fileName.contains(\"?\")","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"syoopie"},"content":"                || fileName.contains(\"\\\"\")","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"syoopie"},"content":"                || fileName.contains(\"\u003c\")","lastModifiedDate":"2021-10-22"},{"lineNumber":183,"author":{"gitId":"syoopie"},"content":"                || fileName.contains(\"\u003e\")","lastModifiedDate":"2021-10-22"},{"lineNumber":184,"author":{"gitId":"syoopie"},"content":"                || fileName.contains(\"|\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":185,"author":{"gitId":"syoopie"},"content":"            throw new ParseException(\"Invalid file name.\\nFilenames cannot contain \\\\:*?\\\"\u003c\u003e|\");","lastModifiedDate":"2021-10-22"},{"lineNumber":186,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":187,"author":{"gitId":"syoopie"},"content":"        return fileName;","lastModifiedDate":"2021-10-22"},{"lineNumber":188,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"syoopie":31,"Joel-Sung":42,"wowsiddanth":37,"rehad-a":8,"-":71}},{"path":"src/main/java/nustracker/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"syoopie":1,"wowsiddanth":1,"-":38}},{"path":"src/main/java/nustracker/logic/parser/RemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TLChicken"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"import nustracker.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"public class RemoveCommandParser implements Parser\u003cRemoveCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"    public RemoveCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"                PREFIX_STUDENTID,","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"                PREFIX_EVENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_STUDENTID, PREFIX_EVENT) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get());","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        return new RemoveCommand(studentId, eventName);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"syoopie":1,"TLChicken":27,"rehad-a":6}},{"path":"src/main/java/nustracker/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"syoopie":2,"-":15}},{"path":"src/main/java/nustracker/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"import nustracker.logic.commands.CommandResult;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"import nustracker.logic.commands.RemoveCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Participant;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.UniqueEventList;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.UniqueStudentList;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":" * Duplicates are not allowed (by .isSameStudent comparison)","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"     * Creates an AddressBook using the Students in the {@code toBeCopied}","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"     * {@code events} must not contain duplicate persons.","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"        setStudents(newData.getStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"    //// student-level operations","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"        return students.contains(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"        return events.contains(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"     * Adds a student to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"syoopie"},"content":"     * The student must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"    public void addStudent(Student p) {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"        students.add(p);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"        events.add(e);","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"rehad-a"},"content":"     * Gets a student from the address book by his/her student ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"rehad-a"},"content":"     * @param studentId the relevant student ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"rehad-a"},"content":"     * @return the {@code Student} with this studentId, null if the student does not exist.","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"rehad-a"},"content":"    public Student getStudent(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"rehad-a"},"content":"        return students.get(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"     * Gets an event from the address book by its name.","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"     * Returns null if event does not exist.","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"    public Event getEvent(EventName name) {","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"        return events.get(name);","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"syoopie"},"content":"     * Replaces the given student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":136,"author":{"gitId":"syoopie"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"syoopie"},"content":"     * in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"syoopie"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"syoopie"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"syoopie"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"Joel-Sung"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"syoopie"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"syoopie"},"content":"        students.remove(key);","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"Joel-Sung"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"Joel-Sung"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"TLChicken"},"content":"    public void removeEvent(Event key, Model currModel) {","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"TLChicken"},"content":"        // Before removing the event, we remove all students from this event first.","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"TLChicken"},"content":"        Set\u003cParticipant\u003e participantsOfThisEvent \u003d key.getParticipants();","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"TLChicken"},"content":"        Set\u003cStudentId\u003e studentIdInThisEvent \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"TLChicken"},"content":"        for (Participant currParticipant : participantsOfThisEvent) {","lastModifiedDate":"2021-10-21"},{"lineNumber":174,"author":{"gitId":"TLChicken"},"content":"            studentIdInThisEvent.add(currParticipant.getStudentId());","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":176,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"TLChicken"},"content":"        for (StudentId currStudentId : studentIdInThisEvent) {","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"TLChicken"},"content":"            // Use a RemoveCommand to do this because it does exactly what we want which is to","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"TLChicken"},"content":"            // remove the Event from the Student\u0027s EnrolledEvents (while also removing from Event\u0027s Participants)","lastModifiedDate":"2021-10-21"},{"lineNumber":181,"author":{"gitId":"TLChicken"},"content":"            RemoveCommand currRemoveCmd \u003d new RemoveCommand(currStudentId, key.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":182,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"TLChicken"},"content":"            try {","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"TLChicken"},"content":"                CommandResult currCmdResult \u003d currRemoveCmd.execute(currModel);","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"TLChicken"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":186,"author":{"gitId":"TLChicken"},"content":"                // Means either Invalid Student ID (Not possible)","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"TLChicken"},"content":"                // or invalid event name (Not possible)","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"TLChicken"},"content":"                // or the student does not have this event in its EnrolledEvents","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"TLChicken"},"content":"                // (Then just skip because this is the desired result anyway)","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"Joel-Sung"},"content":"        events.remove(key);","lastModifiedDate":"2021-09-27"},{"lineNumber":194,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"Joel-Sung"},"content":"        return students.asUnmodifiableObservableList().size() + \" students\"","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"Joel-Sung"},"content":"                + events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"syoopie"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":208,"author":{"gitId":"syoopie"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":211,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":212,"author":{"gitId":"Joel-Sung"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":213,"author":{"gitId":"Joel-Sung"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-27"},{"lineNumber":214,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":215,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 students.equals(((AddressBook) other).students))","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 events.equals(((AddressBook) other).events);","lastModifiedDate":"2021-09-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":226,"author":{"gitId":"Joel-Sung"},"content":"        return Objects.hash(students.hashCode(), events.hashCode());","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":228,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":31,"TLChicken":37,"Joel-Sung":68,"rehad-a":6,"-":87}},{"path":"src/main/java/nustracker/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"     * Deletes the given student.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"     * The student must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"     * Deletes the given event.","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"     * Adds the given student.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"    void addStudent(Student student);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"     * Adds the given event.","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"    void addEvent(Event event);","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"rehad-a"},"content":"     * Gets a Student by his/her studentId.","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"rehad-a"},"content":"     * Null is returned if {@code StudentId} does not exist in the address book.","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"rehad-a"},"content":"     * @param studentId The student\u0027s studentId","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"rehad-a"},"content":"     * @return The student that has the same studentId as the given ID.","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"rehad-a"},"content":"    Student getStudent(StudentId studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"     * Gets an event by its name.","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"     * Null is returned if {@code name} does not exist in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"     * @param name The name of the event","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"     * @return The event that has the same EventName as the given name.","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"    Event getEvent(EventName name);","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"syoopie"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"syoopie"},"content":"     * in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"syoopie"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"syoopie"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"syoopie"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"syoopie"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"Joel-Sung"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"syoopie":20,"Joel-Sung":40,"TLChicken":11,"rehad-a":6,"-":68}},{"path":"src/main/java/nustracker/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"        CollectionUtil.requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"        requireNonNull(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"syoopie"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"syoopie"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"        Major.removeStudent(target);","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"        addressBook.removeEvent(event, this);","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"syoopie"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"syoopie"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"syoopie"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"rehad-a"},"content":"    public Student getStudent(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"rehad-a"},"content":"        return addressBook.getStudent(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"Joel-Sung"},"content":"    public Event getEvent(EventName name) {","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"        return addressBook.getEvent(name);","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":143,"author":{"gitId":"syoopie"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"syoopie"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"syoopie"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"TLChicken"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"TLChicken"},"content":"        CollectionUtil.requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"TLChicken"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"syoopie"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Student List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"syoopie"},"content":"     * Returns an unmodifiable view of the list of {@code Student} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"syoopie"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"syoopie"},"content":"        return filteredStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"Joel-Sung"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"Joel-Sung"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"Joel-Sung"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"Joel-Sung"},"content":"        return filteredEvents;","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"syoopie"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"syoopie"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":180,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"Joel-Sung"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"Joel-Sung"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-09-28"},{"lineNumber":184,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":202,"author":{"gitId":"syoopie"},"content":"                \u0026\u0026 filteredStudents.equals(other.filteredStudents);","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":27,"Joel-Sung":40,"TLChicken":10,"wowsiddanth":1,"rehad-a":3,"-":124}},{"path":"src/main/java/nustracker/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":5,"Joel-Sung":7,"-":12}},{"path":"src/main/java/nustracker/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"syoopie":2,"-":14}},{"path":"src/main/java/nustracker/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":2,"-":85}},{"path":"src/main/java/nustracker/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"public class Event {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    private final EventName name;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    private final EventDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    private final EventTime time;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    private final Set\u003cParticipant\u003e participants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     * Create an Event with no participants.","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     * @param name Event name","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     * @param date Event date","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * @param time Event time","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    public Event(EventName name, EventDate date, EventTime time) {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        requireAllNonNull(name, date, time);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     * Create an Event with a set of Participants.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"     * @param name Event name","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"     * @param date Event date","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"     * @param time Event time","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"     * @param participants Event participants","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    public Event(EventName name, EventDate date, EventTime time, Set\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"        requireAllNonNull(name, date, time, participants);","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"        this.participants.addAll(participants);","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"    public EventName getName() {","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"        return name;","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"    public EventDate getDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"        return date;","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"    public EventTime getTime() {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"        return time;","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"     * Returns an immutable participant set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    public Set\u003cParticipant\u003e getParticipants() {","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"        return Collections.unmodifiableSet(participants);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"     * Returns an immutable {@code Student} set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"     * @param addressBook to find the students from.","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"     * @return the set of {@code Student} from this model that are in this {@code Event}.","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"    public Set\u003cStudent\u003e getParticipantsAsStudents(AddressBook addressBook) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"        HashSet\u003cStudent\u003e returnThis \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"        for (Participant currParticipant : participants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"            Student currStudent \u003d addressBook.getStudent(currParticipant.getStudentId());","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"            returnThis.add(currStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"        return returnThis;","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"rehad-a"},"content":"     * Checks if a student with a certain student ID is currently enrolled in this event.","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"rehad-a"},"content":"     * @param studentId the {@code StudentId} of the student to check.","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"     * @return true if the student is currently enrolled, false otherwise.","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"rehad-a"},"content":"    public boolean isInEvent(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"        for (Participant currParticipant : participants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"rehad-a"},"content":"            if (currParticipant.getStudentId().equals(studentId)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"                return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"        return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"            return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName());","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"     * Creates an new Event object that has the same details but different participants.","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"     * @param newParticipants the new Set of {@code Participants} that are attending this {@code Event}.","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"     * @return the newly created {@code Event}.","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"    public Event getNewEventWithUpdatedParticipants(Set\u003cParticipant\u003e newParticipants) {","lastModifiedDate":"2021-10-21"},{"lineNumber":127,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":128,"author":{"gitId":"TLChicken"},"content":"        return new Event(getName(), getDate(), getTime(), newParticipants);","lastModifiedDate":"2021-10-21"},{"lineNumber":129,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":131,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"     * Wraps the EventName in an Event for easy re-usability with other methods.","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"Joel-Sung"},"content":"     * @param eventName The event name","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"Joel-Sung"},"content":"     * @return An Event with the given EventName, and a pseudo EventDate and EventTime.","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"Joel-Sung"},"content":"    public static Event pseudoEvent(EventName eventName) {","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"        String validEventDate \u003d \"09-10-2021\";","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"Joel-Sung"},"content":"        String validEventTime \u003d \"1115\";","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"        return new Event(eventName,","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"                new EventDate(validEventDate),","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"Joel-Sung"},"content":"                new EventTime(validEventTime));","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"Joel-Sung"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"     * Participants enrolled in the two events are not compared.","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"Joel-Sung"},"content":"            return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"Joel-Sung"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"Joel-Sung"},"content":"            return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"Joel-Sung"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"Joel-Sung"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime());","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"Joel-Sung"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"Joel-Sung"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"TLChicken"},"content":"        return Objects.hash(name, date, time);","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"Joel-Sung"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"Joel-Sung"},"content":"        builder.append(getName())","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"Joel-Sung"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"Joel-Sung"},"content":"                .append(getDate())","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"Joel-Sung"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"Joel-Sung"},"content":"                .append(getTime());","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"Joel-Sung"},"content":"        Set\u003cParticipant\u003e participants \u003d getParticipants();","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"Joel-Sung"},"content":"        if (!participants.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"Joel-Sung"},"content":"            builder.append(\"; Participants: \");","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"Joel-Sung"},"content":"            participants.forEach(builder::append);","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"Joel-Sung"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":142,"TLChicken":45,"rehad-a":6}},{"path":"src/main/java/nustracker/model/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":" * Represents an Event\u0027s Date.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"public class EventDate {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"            \"EventDates should be in the format DD-MM-YYYY. E.g. 09-10-2021.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    public final LocalDate eventDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     * Constructs an {@code EventDate}.","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     * @param date A valid date.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    public EventDate(String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        eventDate \u003d LocalDate.parse(date, INPUT_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"     * Check if date input is valid.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"     * @param date Date input","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     * @return True if valid; false if invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"            LocalDate.parse(date, INPUT_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"            return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"            return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"     * Return the event date in the Input format.","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"     * @return date in Input format","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    public String getEventDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"        return eventDate.format(INPUT_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"                || (other instanceof EventDate // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 eventDate.equals(((EventDate) other).eventDate)); // state check","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        return eventDate.format(OUTPUT_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"        return eventDate.hashCode();","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":74}},{"path":"src/main/java/nustracker/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":" * Represents an Event\u0027s name.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"public class EventName {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"            \"EventNames should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    /*","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"     * The first character of the event name must not be a whitespace,","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    public final String eventName;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"     * Constructs an {@code EventName}.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    public EventName(String name) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        eventName \u003d name;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    public String getEventName() {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        return eventName;","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"                || (other instanceof EventName // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 eventName.equals(((EventName) other).eventName)); // state check","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"        return eventName;","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"        return eventName.hashCode();","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":60}},{"path":"src/main/java/nustracker/model/event/EventTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":" * Represents an Event\u0027s Timing.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"public class EventTime {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"            \"EventTimes should be in the format HHmm. E.g. 1600.\";","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter INPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    private static final DateTimeFormatter OUTPUT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"hh:mm a\");","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    public final LocalTime eventTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"     * Constructs an {@code EventTime}.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     * @param time A valid timing.","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    public EventTime(String time) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        eventTime \u003d LocalTime.parse(time, INPUT_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"     * Check if time input is valid.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"     * @param time Time input","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"     * @return True if valid; false if invalid.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    public static boolean isValidTime(String time) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"            LocalTime.parse(time, INPUT_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"            return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"            return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"     * Return the event time in the Input format.","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"     * @return time in Input format","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"    public String getEventTime() {","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"        return eventTime.format(INPUT_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"                || (other instanceof EventTime // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 eventTime.equals(((EventTime) other).eventTime)); // state check","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"        return eventTime.format(OUTPUT_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        return eventTime.hashCode();","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":73}},{"path":"src/main/java/nustracker/model/event/Participant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":" * Represents an Event\u0027s participant. Participants are stored by their student ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"public class Participant {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"    public final String studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"     * @param studentId A valid student ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    public Participant(String studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     * Returns true if a given string is a valid participant.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    public static boolean isValidParticipant(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"        return StudentId.isValidStudentId(test);","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"     * Gets the participant\u0027s student ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"     * @return the StudentId object.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"        return new StudentId(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"        return studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 studentId.equals(((StudentId) other).value)); //Check internal attributes","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"        return studentId.hashCode();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Joel-Sung":35,"TLChicken":4,"rehad-a":16}},{"path":"src/main/java/nustracker/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.List;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a person uses Event#equals(Event) so","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":" *","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":" *","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"     * Adds an event to the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"     * Gets an event from the list by its name.","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"     * Returns null if event does not exist.","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"     * @param name The name of the Event","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"     * @return The event from the list that has the same EventName as the given name.","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    public Event get(EventName name) {","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        Event pseudoEvent \u003d Event.pseudoEvent(name);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"            if (internalList.get(i).isSameEvent(pseudoEvent)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"                return internalList.get(i);","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"        return null;","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"     * {@code events} must not contain duplicate persons.","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"Joel-Sung"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"Joel-Sung"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"Joel-Sung"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"Joel-Sung"},"content":"                    return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"        return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":155}},{"path":"src/main/java/nustracker/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":" * identity).","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":11}},{"path":"src/main/java/nustracker/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event.exceptions;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":7}},{"path":"src/main/java/nustracker/model/student/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.AppUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":" * Represents a Student\u0027s email in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"        AppUtil.checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":4,"-":68}},{"path":"src/main/java/nustracker/model/student/EnrolledEvents.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":" * This class represent any event(s) that a person is a part of.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"public class EnrolledEvents {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Events can take any values, and it should not be blank\";","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"TLChicken"},"content":"    // Design:","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"    // We use a HashMap with EventName as keys because events are usually found by it\u0027s name.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"TLChicken"},"content":"    // If we use a Set, we have to get the event object first in order to search for it.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"    // We can do this because all events have unique names.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"    // CAUTION: THE EVENT LIST HERE MAY BE OUTDATED, THE MOST UPDATED ONE IS IN MODEL","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"    // BECAUSE WHEN SETTING NEW EVENT OBJECT THIS DOES NOT GET EDITED","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"    private HashMap\u003cEventName, Event\u003e eventsEnrolledIn;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"     * Constructs a new {@code EnrolledEvents}.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"    public EnrolledEvents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"        eventsEnrolledIn \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"     * Gets a new EnrolledEvents with this student\u0027s enrolled events as well as the specified {@code Event} added.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"     * @param event A valid event to be added.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"     * @return new instance of EnrolledEvents that contains the new event.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    public EnrolledEvents enrollIntoEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"        EventName eventName \u003d event.getName();","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"        HashMap\u003cEventName, Event\u003e updatedEventHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"        for (Event currEvent : eventsEnrolledIn.values()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"            updatedEventHashMap.put(currEvent.getName(), currEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"        updatedEventHashMap.put(eventName, event);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"        return of(updatedEventHashMap);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    private EnrolledEvents of(HashMap\u003cEventName, Event\u003e eventsEnrolledIn) {","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents enrolledEvents \u003d new EnrolledEvents();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"        enrolledEvents.eventsEnrolledIn \u003d eventsEnrolledIn;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"        return enrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"     * Gets a new EnrolledEvents with the specified {@code Event} removed.","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"     * @param event A valid event to be removed.","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"     * @return the new instance of EnrolledEvents.","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"    public EnrolledEvents removeFromEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"        EventName eventName \u003d event.getName();","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"        HashMap\u003cEventName, Event\u003e updatedEventHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"        for (Event currEvent : eventsEnrolledIn.values()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"            updatedEventHashMap.put(currEvent.getName(), currEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"        updatedEventHashMap.remove(eventName);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"        return of(updatedEventHashMap);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"     * Checks if there are enrolled events.","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"     * @return true if there is 1 or more events enrolled.","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"    public boolean hasEvents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"        return eventsEnrolledIn.size() \u003e 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"     * Gets a String that lists out all the events that are enrolled in.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"     * @return the String with event names delimited using commas.","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"    public String getEventNamesString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"        return eventsEnrolledIn.values().stream().map(Event::getName).map(EventName::getEventName)","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"                .collect(Collectors.joining(\", \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"     * Returns an immutable {@code Event} Set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"     * @param model the model to get the most up-to-date {@code Event} from.","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"     * @return the Set of {@code Event} that is in this {@code EnrolledEvents}.","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"    public Set\u003cEvent\u003e getAllEventsEnrolledIn(Model model) {","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"        Set\u003cEvent\u003e allEventSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"        for (Event currEvent : eventsEnrolledIn.values()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"            Event upToDateEvent \u003d model.getEvent(currEvent.getName());","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"            allEventSet.add(upToDateEvent);","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"        return allEventSet;","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"rehad-a"},"content":"     * Checks if the student is enrolled in a specific event.","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"rehad-a"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"rehad-a"},"content":"     * @param eventName the name of the event.","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"rehad-a"},"content":"     * @return true if student is enrolled in event, false otherwise.","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"rehad-a"},"content":"    public boolean isEnrolledInEvent(EventName eventName) {","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"rehad-a"},"content":"        return eventsEnrolledIn.containsKey(eventName);","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"TLChicken"},"content":"        // Prints list of events nicely separated by commas","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"TLChicken"},"content":"        return getEventNamesString();","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"                || (other instanceof EnrolledEvents // instanceof handles nulls","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"TLChicken"},"content":"                \u0026\u0026 eventsEnrolledIn.equals(((EnrolledEvents) other).eventsEnrolledIn)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"TLChicken"},"content":"    // If 2 students are enrolled in the same set of events they will have the same hash code.","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"TLChicken"},"content":"        return eventsEnrolledIn.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"Joel-Sung":4,"TLChicken":105,"wowsiddanth":1,"rehad-a":11,"-":27}},{"path":"src/main/java/nustracker/model/student/EnrolledEventsContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":" * Tests that a {@code Student}\u0027s {@code EnrolledEvents} matches the keyword given.","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"public class EnrolledEventsContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"    private final String keyword;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"     * Constructs an {@code EnrolledEventsContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"     * @param keyword A valid event name.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    public EnrolledEventsContainsKeywordsPredicate(String keyword) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"        return student.getEvents().isEnrolledInEvent(new EventName(keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"     * Returns the keyword.","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"     * @return the keyword.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"    public String getKeyword() {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        return keyword;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof EnrolledEventsContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 keyword.equals(((EnrolledEventsContainsKeywordsPredicate) other).keyword)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rehad-a":44}},{"path":"src/main/java/nustracker/model/student/Major.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Optional;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.AppUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMajor(String)}","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"public class Major {","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"The valid computing majors are: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"            + \"\\n CS (Computer Science), IS (Information Systems)\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"            + \", ISEC (Information Security), and BZA (Business Analytics)\";","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    /*","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}]*\";","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    /*","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     * The HashMap that maps the major, to the list of students that are currently","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"     * in that major.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"    private static final HashMap\u003cMajor, ArrayList\u003cStudent\u003e\u003e studentsToMajors \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    public final String value;","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     * @param major A valid major.","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    public Major(String major) {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        requireNonNull(major);","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"        AppUtil.checkArgument(isValidMajor(major), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        value \u003d major.toUpperCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     * Adds a student to the array list corresponding to that student\u0027s major","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"     * @param student The student to be added","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"    public static void addStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        Major majorOfStudent \u003d student.getMajor();","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"        Optional\u003cArrayList\u003cStudent\u003e\u003e currStudents \u003d Optional.ofNullable(studentsToMajors.get(majorOfStudent));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        if (currStudents.isEmpty()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"            ArrayList\u003cStudent\u003e studentsInMajor \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"            studentsInMajor.add(student);","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"            studentsToMajors.put(majorOfStudent, studentsInMajor);","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"        } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"            currStudents.get().add(student);","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"            studentsToMajors.put(majorOfStudent, currStudents.get());","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"     * Remove student from the arraylist corresponding to the student\u0027s major","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"     * @param student The student to be removed","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"    public static void removeStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"        Major majorOfStudent \u003d student.getMajor();","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"        ArrayList\u003cStudent\u003e currStudents \u003d studentsToMajors.get(majorOfStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"        currStudents.remove(student);","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"    public static boolean isValidMajor(String test) {","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        boolean matchesRegex \u003d test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"        boolean validCourse \u003d isValidMajorName(test);","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"        return matchesRegex \u0026\u0026 validCourse;","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"     * Checks if the given major string is a valid major name","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"     * @param major The major given","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"     * @return True if valid, false if invalid","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"    public static boolean isValidMajorName(String major) {","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"        String nameOfMajor \u003d major.toUpperCase(); //Not case-sensitive","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"        return nameOfMajor.equals(\"CS\") || nameOfMajor.equals(\"IS\")","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"                || nameOfMajor.equals(\"ISEC\") || nameOfMajor.equals(\"BZA\");","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"        return value;","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"                || (other instanceof Major // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"                \u0026\u0026 value.equals(((Major) other).value)); // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"syoopie":14,"wowsiddanth":99,"rehad-a":2}},{"path":"src/main/java/nustracker/model/student/MajorContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":" * Tests that a {@code Student}\u0027s {@code Major} matches any of the keywords given.","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"public class MajorContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"    private final List\u003cMajor\u003e keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"     * Constructs an {@code MajorContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"     * @param keywords A list of Majors as keywords.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public MajorContainsKeywordsPredicate(List\u003cMajor\u003e keywords) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"                .anyMatch(keyword -\u003e student.getMajor().equals(keyword));","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof MajorContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 keywords.equals(((MajorContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"rehad-a":34}},{"path":"src/main/java/nustracker/model/student/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.AppUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":4,"-":56}},{"path":"src/main/java/nustracker/model/student/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"     * Constructs an {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"     * @param keywords A list of names as keywords.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"                .anyMatch(keyword -\u003e student.getName().fullName.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"syoopie":4,"rehad-a":6,"-":24}},{"path":"src/main/java/nustracker/model/student/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.AppUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":" * Represents a Student\u0027s phone number in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":4,"-":50}},{"path":"src/main/java/nustracker/model/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":" * Represents a Student in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"public class Student {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private final Year year;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    private final Major major;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"    private final StudentId studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"TLChicken"},"content":"    private final EnrolledEvents enrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"    public Student(Name name, Phone phone, Email email, Year year, Major major,","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"                   StudentId studentId, EnrolledEvents enrolledEvents) {","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"        CollectionUtil.requireAllNonNull(name, phone, email, year, major, studentId, enrolledEvents);","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        this.year \u003d year;","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        this.major \u003d major;","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"        this.enrolledEvents \u003d enrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        Major.addStudent(this);","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    public Year getYear() {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        return year;","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    public Major getMajor() {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        return major;","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"        return studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    public EnrolledEvents getEvents() {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"        return enrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"     * Returns true if the other student has the same credentials in the fields","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"rehad-a"},"content":"     * where having the same ones is not allowed like the student ID, email, \u0026 phone.","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"    public boolean hasDuplicateCredentials(Student otherStudent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"        boolean notNull \u003d otherStudent !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"        boolean sameId \u003d notNull \u0026\u0026 otherStudent.getStudentId().equals(getStudentId());","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"        boolean sameEmail \u003d notNull \u0026\u0026 otherStudent.getEmail().equals(getEmail());","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"        boolean samePhone \u003d notNull \u0026\u0026 otherStudent.getPhone().equals(getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        return sameId || sameEmail || samePhone;","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"rehad-a"},"content":"     * Wraps the studentId in a Student for easy re-usability with other methods.","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"rehad-a"},"content":"     * @param studentId The studentId","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"rehad-a"},"content":"     * @return A Student with the given studentId, and pseudo details.","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"rehad-a"},"content":"    public static Student pseudoStudent(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"        String validName \u003d \"Pseudo Student\";","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"        String validPhone \u003d \"00000000\";","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"        String validEmail \u003d \"pseudoStudent@gmail.com\";","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        String validYear \u003d \"1\";","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"        String validMajor \u003d \"CS\";","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"        EnrolledEvents validEnrolledEvents \u003d new EnrolledEvents();","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"        return new Student(new Name(validName),","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"                new Phone(validPhone),","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"                new Email(validEmail),","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"                new Year(validYear),","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"                new Major(validMajor),","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"rehad-a"},"content":"                studentId,","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"                validEnrolledEvents);","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"syoopie"},"content":"     * Returns true if both students have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"syoopie"},"content":"     * This defines a stronger notion of equality between two students.","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"syoopie"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"syoopie"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"                \u0026\u0026 otherStudent.getPhone().equals(getPhone())","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"syoopie"},"content":"                \u0026\u0026 otherStudent.getEmail().equals(getEmail())","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"syoopie"},"content":"                \u0026\u0026 otherStudent.getYear().equals(getYear())","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"syoopie"},"content":"                \u0026\u0026 otherStudent.getMajor().equals(getMajor())","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 otherStudent.getStudentId().equals(getStudentId())","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"TLChicken"},"content":"                \u0026\u0026 otherStudent.getEvents().equals(getEvents());","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"rehad-a"},"content":"        return Objects.hash(name, phone, email, year, major, studentId);","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"wowsiddanth"},"content":"                .append(getEmail())","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"wowsiddanth"},"content":"                .append(\"; Year: \")","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"TLChicken"},"content":"                .append(getYear())","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"wowsiddanth"},"content":"                .append(\"; Major: \")","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"wowsiddanth"},"content":"                .append(getMajor())","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"rehad-a"},"content":"                .append(\"; StudentId: \")","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"rehad-a"},"content":"                .append(getStudentId());","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"TLChicken"},"content":"        if (enrolledEvents.hasEvents()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"TLChicken"},"content":"            builder.append(\"; Events:\");","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"TLChicken"},"content":"            builder.append(enrolledEvents.getEventNamesString());","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"syoopie":19,"Joel-Sung":21,"TLChicken":11,"wowsiddanth":22,"rehad-a":18,"-":69}},{"path":"src/main/java/nustracker/model/student/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.AppUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":" * Represents a student ID in the address book.","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentId(String)}","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"public class StudentId {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"            \"Student ID should start with \u0027e\u0027, should be followed by 7 digits, and it should not be blank!\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    /*","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * The first character of the address must a lowercase \u0027e\u0027, in line with","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     * current NUS guidelines for ids, followed by 7 numerical digits","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public static final String VALIDATION_REGEX \u003d \"e[\\\\p{Nd}]{7}\";","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    public final String value;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"     * Constructs a {@code StudentId}.","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"     * @param studentId A valid student ID","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"        AppUtil.checkArgument(isValidStudentId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"        value \u003d studentId.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"     * Returns true if a given string is a valid student Id.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"    public static boolean isValidStudentId(String test) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"     * Gets the student Id in String form.","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"     * @return the student Id in String form.","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"    public String getStudentIdString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"        return value;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        return value;","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof StudentId // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 value.equals(((StudentId) other).value)); //Check internal attributes","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"syoopie":4,"TLChicken":5,"wowsiddanth":41,"rehad-a":17}},{"path":"src/main/java/nustracker/model/student/StudentIdContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":" * Tests that a {@code Student}\u0027s {@code StudentId} matches any of the keywords given.","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"public class StudentIdContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"     * Constructs an {@code StudentIdContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"     * @param keywords A list of StudentIds as keywords.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"    public StudentIdContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"                .anyMatch(keyword -\u003e student.getStudentId().value.toLowerCase().contains(keyword.toLowerCase()));","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof StudentIdContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 keywords.equals(((StudentIdContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"rehad-a":35}},{"path":"src/main/java/nustracker/model/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":" * A list of students that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":" * A student is considered unique by comparing using {@code Student#isSameStudent(Student)}.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":" * As such, adding and updating of students uses Student#isSameStudent(Student) for equality","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":" * to ensure that the student being added or updated is unique in terms of identity in the UniqueStudentList.","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":" * However, the removal of a student uses Student#equals(Object) to ensure that the student with exactly the","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":" * same fields will be removed.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":" *","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":" * @see Student#hasDuplicateCredentials(Student)","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"    /** Fast retrieval of students by StudentId. */","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"    private final HashMap\u003cStudentId, Student\u003e studentIdStudentHashMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"     * Returns true if the list contains an equivalent student as the given argument.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        return internalList.stream().anyMatch(toCheck::hasDuplicateCredentials);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"     * Adds a student to the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"     * The student must not already exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"rehad-a"},"content":"        studentIdStudentHashMap.put(toAdd.getStudentId(), toAdd);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"     * Gets a student from the address book by his/her studentId.","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"     * Returns null if student does not exist.","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"     * @param studentId The student\u0027s student ID.","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"     * @return The student from the list that has the same studentId as the given ID.","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"    public Student get(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"rehad-a"},"content":"        Student returnThis \u003d studentIdStudentHashMap.get(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"        return returnThis;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"     * Replaces the student {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"        CollectionUtil.requireAllNonNull(target, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"syoopie"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        if (!target.hasDuplicateCredentials(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"rehad-a"},"content":"        studentIdStudentHashMap.put(editedStudent.getStudentId(), editedStudent);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"     * Removes the equivalent student from the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"syoopie"},"content":"     * The student must exist in the list.","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"        // Does not throw error for missing student so we remove from HashMap first","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"rehad-a"},"content":"        studentIdStudentHashMap.remove(toRemove.getStudentId());","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"syoopie"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"            throw new StudentNotFoundException();","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"syoopie"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"syoopie"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"     * Replaces the contents of this list with {@code students}.","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"syoopie"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"syoopie"},"content":"        CollectionUtil.requireAllNonNull(students);","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"syoopie"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"syoopie"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"        internalList.setAll(students);","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"rehad-a"},"content":"        // Set to student ID to Student HashMap as well","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"rehad-a"},"content":"        studentIdStudentHashMap.clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"rehad-a"},"content":"        internalList.stream().forEach(student -\u003e studentIdStudentHashMap.put(student.getStudentId(), student));","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"syoopie"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"syoopie"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"syoopie"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"syoopie"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"syoopie"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"syoopie"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"syoopie"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"syoopie"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"syoopie"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"syoopie"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"syoopie"},"content":"                        \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"syoopie"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"syoopie"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"syoopie"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"syoopie"},"content":"     * Returns true if {@code students} contains only unique students.","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"syoopie"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"syoopie"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"syoopie"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"syoopie"},"content":"                if (students.get(i).hasDuplicateCredentials(students.get(j))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"syoopie"},"content":"                    return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"syoopie"},"content":"                }","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"syoopie"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"syoopie"},"content":"        return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":138,"TLChicken":16,"Joel-Sung":2,"rehad-a":14}},{"path":"src/main/java/nustracker/model/student/Year.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.AppUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":" * Represents a Student\u0027s name in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidYear(String)}","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"public class Year {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"            \"Year must be a single digit number, that is between 1 and 6!\";","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    /*","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"     * Year must be a number that is between 1 and 6, inclusive","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[1-6]\";","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    public final String value;","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"     * @param year A valid year.","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    public Year(String year) {","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        requireNonNull(year);","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"        AppUtil.checkArgument(isValidYear(year), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        value \u003d year;","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    public static boolean isValidYear(String year) {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        return year.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        return value;","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"                || (other instanceof Year // instanceof handles nulls","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"                \u0026\u0026 value.equals(((Year) other).value)); // state check","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"syoopie":6,"wowsiddanth":51}},{"path":"src/main/java/nustracker/model/student/YearContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":" * Tests that a {@code Student}\u0027s {@code Year} matches any of the keywords given.","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"public class YearContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"    private final List\u003cYear\u003e keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"     * Constructs an {@code YearContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"     * @param keywords A list of years as keywords.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public YearContainsKeywordsPredicate(List\u003cYear\u003e keywords) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"                .anyMatch(keyword -\u003e student.getYear().equals(keyword));","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"                || (other instanceof YearContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"                \u0026\u0026 keywords.equals(((YearContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"rehad-a":34}},{"path":"src/main/java/nustracker/model/student/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":" * the same identity).","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"        super(\"Operation would result in duplicate students\");","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":11}},{"path":"src/main/java/nustracker/model/student/exceptions/StudentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student.exceptions;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":" * Signals that the operation is unable to find the specified student.","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"public class StudentNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":6}},{"path":"src/main/java/nustracker/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Participant;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"public class SampleDataUtil {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    public static Student[] getSampleStudents() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"        return new Student[] {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"            new Student(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"                new Year(\"1\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"                new Major(\"CS\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"                new StudentId(\"e1111111\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"                new EnrolledEvents()),","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"            new Student(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"                new Year(\"2\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"                new Major(\"CS\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"                new StudentId(\"e3223223\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"                new EnrolledEvents()),","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"            new Student(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"                new Year(\"3\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"                new Major(\"CS\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"                new StudentId(\"e1783902\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"                new EnrolledEvents()),","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"            new Student(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"                new Year(\"4\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"                new Major(\"CS\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"                new StudentId(\"e7307307\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"                new EnrolledEvents()),","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"            new Student(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"                new Year(\"1\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"                new Major(\"CS\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"                new StudentId(\"e9654321\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"                new EnrolledEvents()),","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"            new Student(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"                new Year(\"2\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"                new Major(\"CS\"),","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"                new StudentId(\"e0542362\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"                new EnrolledEvents())","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"        };","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"        for (Student sampleStudent : getSampleStudents()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"            sampleAb.addStudent(sampleStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"        return sampleAb;","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"rehad-a"},"content":"     * Returns a student ID set containing the list of strings given.","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    public static Set\u003cParticipant\u003e getParticipantSet(String... strings) {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"                .map(Participant::new)","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":51,"Joel-Sung":8,"TLChicken":7,"rehad-a":8}},{"path":"src/main/java/nustracker/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"syoopie":5,"-":41}},{"path":"src/main/java/nustracker/storage/Exporting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.FileUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"public class Exporting {","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"     * Exports a given email list to a given destination.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"     * @param pathToExport path to save the file in","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"     * @param listOfEmails list of emails to save","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"     * @throws CommandException command exception","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"    public static void exportEmails(Path pathToExport, List\u003cEmail\u003e listOfEmails) throws CommandException {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"            FileUtil.createIfMissing(pathToExport);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"            String stringToSave \u003d listOfEmails.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"            stringToSave \u003d stringToSave.substring(1, stringToSave.length() - 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"            // Overwrites File all the time","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"            FileUtil.writeToFile(","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"                    pathToExport,","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"                    stringToSave);","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"            throw new CommandException(\"Could not export data properly: \" + ioe, ioe);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"syoopie":33}},{"path":"src/main/java/nustracker/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import java.util.List;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Participant;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    private final String name;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    private final String date;","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    private final String time;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    private final List\u003cJsonAdaptedParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"                            @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"                            @JsonProperty(\"time\") String time,","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"                            @JsonProperty(\"participants\") List\u003cJsonAdaptedParticipant\u003e participants) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"        if (participants !\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"            this.participants.addAll(participants);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        name \u003d source.getName().getEventName();","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"        date \u003d source.getDate().getEventDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"        time \u003d source.getTime().getEventTime();","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"        participants.addAll(source.getParticipants().stream()","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"                .map(JsonAdaptedParticipant::new)","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"                    EventName.class.getSimpleName()));","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"        if (!EventName.isValidName(name)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"        final EventName modelName \u003d new EventName(name);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"                    EventDate.class.getSimpleName()));","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"        if (!EventDate.isValidDate(date)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"            throw new IllegalValueException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"        final EventDate modelDate \u003d new EventDate(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"                    EventTime.class.getSimpleName()));","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"        if (!EventTime.isValidTime(time)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"            throw new IllegalValueException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"        final EventTime modelTime \u003d new EventTime(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        final List\u003cParticipant\u003e eventParticipants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"        for (JsonAdaptedParticipant participant : participants) {","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"            eventParticipants.add(participant.toModelType());","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        final Set\u003cParticipant\u003e modelParticipants \u003d new HashSet\u003c\u003e(eventParticipants);","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"        return new Event(modelName, modelDate, modelTime, modelParticipants);","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":101}},{"path":"src/main/java/nustracker/storage/JsonAdaptedParticipant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Participant;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":" * Jackson-friendly version of {@link Participant}.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"public class JsonAdaptedParticipant {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"    private final String studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"     * Constructs a {@code JsonAdaptedParticipant} with the given {@code StudentId}.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    public JsonAdaptedParticipant(String participantName) {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"        this.studentId \u003d participantName;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"     * Converts a given {@code JsonAdaptedParticipant} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    public JsonAdaptedParticipant(Participant source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"        studentId \u003d source.studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    @JsonValue","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"    public String getStudentId() {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        return studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     * Converts this Jackson-friendly adapted participant object into the model\u0027s {@code JsonAdaptedParticipant} object.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted participant.","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    public Participant toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"        if (!StudentId.isValidStudentId(studentId)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"        return new Participant(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Joel-Sung":38,"rehad-a":10}},{"path":"src/main/java/nustracker/storage/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"class JsonAdaptedStudent {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private final String year;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"    private final String major;","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"    private final String studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given student details.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"                              @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"                              @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"                              @JsonProperty(\"year\") String year,","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"                              @JsonProperty(\"major\") String major,","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"                              @JsonProperty(\"studentId\") String studentId) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        this.year \u003d year;","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        this.major \u003d major;","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"     * Converts a given {@code Student} into this class for Jackson use.","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"    public JsonAdaptedStudent(Student source) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        year \u003d source.getYear().value;","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        major \u003d source.getMajor().value;","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"        studentId \u003d source.getStudentId().value;","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"     * Converts this Jackson-friendly adapted student object into the model\u0027s {@code Student} object.","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted student.","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"        if (year \u003d\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Year.class.getSimpleName()));","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"        if (!Year.isValidYear(year)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"            throw new IllegalValueException(Year.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"        final Year modelYear \u003d new Year(year);","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"        if (major \u003d\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Major.class.getSimpleName()));","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"        if (!Major.isValidMajor(major)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"            throw new IllegalValueException(Major.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"        final Major modelMajor \u003d new Major(major);","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"rehad-a"},"content":"        if (studentId \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"rehad-a"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"rehad-a"},"content":"        if (!StudentId.isValidStudentId(studentId)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"rehad-a"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"rehad-a"},"content":"        final StudentId modelStudentId \u003d new StudentId(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"        final EnrolledEvents enrolledEvents \u003d new EnrolledEvents();","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"        return new Student(modelName, modelPhone, modelEmail, modelYear, modelMajor,","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"rehad-a"},"content":"                modelStudentId, enrolledEvents);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":17,"TLChicken":4,"Joel-Sung":2,"wowsiddanth":28,"rehad-a":11,"-":59}},{"path":"src/main/java/nustracker/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.FileUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.JsonUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":7,"-":73}},{"path":"src/main/java/nustracker/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"    public static final String MESSAGE_DUPLICATE_STUDENT \u003d \"Students list contains duplicate student(s).\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given students and events.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students,","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"                @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"        this.students.addAll(students);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"            if (addressBook.hasStudent(student)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"            addressBook.addStudent(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"            Set\u003cStudent\u003e studentParticipants \u003d event.getParticipantsAsStudents(addressBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"            for (Student currStudent : studentParticipants) {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"                if (currStudent \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"                    continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"                EnrolledEvents currentlyEnrolledEvents \u003d currStudent.getEvents();","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"                EnrolledEvents updatedEnrolledEvents \u003d currentlyEnrolledEvents.enrollIntoEvent(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"                Student enrolledStudent \u003d new Student(","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"                        currStudent.getName(), currStudent.getPhone(), currStudent.getEmail(),","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"                        currStudent.getYear(), currStudent.getMajor(), currStudent.getStudentId(),","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"                        updatedEnrolledEvents);","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"                // Have to set student or GUI will not update","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"                // From documentation of ObservableList:","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"                // \"Note that mutation operations made directly to the underlying list are not reported to","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"                // observers of any ObservableList that wraps it.\"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"                addressBook.setStudent(currStudent, enrolledStudent);","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":14,"TLChicken":22,"Joel-Sung":15,"wowsiddanth":1,"rehad-a":1,"-":44}},{"path":"src/main/java/nustracker/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.JsonUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"syoopie":5,"-":42}},{"path":"src/main/java/nustracker/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"syoopie":5,"-":27}},{"path":"src/main/java/nustracker/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":6,"-":73}},{"path":"src/main/java/nustracker/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":" * Represents a storage for {@link nustracker.model.UserPrefs}.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"     * Saves the given {@link nustracker.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"syoopie":6,"-":30}},{"path":"src/main/java/nustracker/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"         * @see nustracker.logic.Logic#execute(String)","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"syoopie":5,"-":80}},{"path":"src/main/java/nustracker/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":" * A UI component that displays information of an {@code Event}.","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    public final Event event;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private Text name;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    private Text date;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    private Text time;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    private FlowPane participants;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"     * Creates an {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    public EventCard(Event event) {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        super(FXML);","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        name.setText(event.getName().getEventName());","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        date.setText(event.getDate().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        time.setText(event.getTime().toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        event.getParticipants().stream()","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"                .sorted(Comparator.comparing(participant -\u003e participant.studentId))","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"                .forEach(participant -\u003e participants.getChildren().add(","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"rehad-a"},"content":"                        new Label(participant.studentId)));","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        //Ensures that the participants will be evenly spaced out","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"        participants.setVgap(4.0);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        participants.setHgap(4.0);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"        // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"        return event.equals(card.event);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"wowsiddanth":71,"rehad-a":2}},{"path":"src/main/java/nustracker/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":" * Panel containing the list of events.","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        super(FXML);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        focusOnItem(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"     * Selects the first event, upon execution","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    public void focusOnItem(int index) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        eventListView.getSelectionModel().select(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        eventListView.getFocusModel().focus(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        eventListView.scrollTo(index);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"                setText(null);","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"            } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"                setGraphic(new EventCard(event).getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"wowsiddanth":56}},{"path":"src/main/java/nustracker/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import java.net.URI;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2122s1-cs2103t-t11-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USER_GUIDE_URL;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    public static final String COPY_LINK_TEXT \u003d \"Open User Guide\";","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"    public static final String ADD_COMMAND \u003d \"add\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    public static final String ADD_COMMAND_EXAMPLE \u003d ADD_COMMAND","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"            + \" n/STUDENT_NAME m/MAJOR id/STUDENT_ID y/YEAR p/NUMBER e/EMAIL [ev/EVENT]\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"    public static final String FILTER_COMMAND \u003d \"filter\";","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"    public static final String FILTER_COMMAND_EXAMPLE \u003d FILTER_COMMAND","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"            + \" [id/STUDENT_ID] [ev/EVENT_NAME] [n/STUDENT_NAME]\";","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"    public static final String EDIT_COMMAND \u003d \"edit\";","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"    public static final String EDIT_COMMAND_EXAMPLE \u003d EDIT_COMMAND","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            + \" INDEX [n/NAME] [m/MAJOR] [id/Student ID] [y/YEAR] [p/PHONE] [e/EMAIL] [ev/EVENT]\";","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"    public static final String CREATE_COMMAND \u003d \"create\";","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"    public static final String CREATE_COMMAND_EXAMPLE \u003d CREATE_COMMAND;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"    public static final String ENROLL_COMMAND \u003d \"enroll\";","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"    public static final String ENROLL_COMMAND_EXAMPLE \u003d ENROLL_COMMAND;","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"    public static final String DELETE_COMMAND_EXAMPLE \u003d DELETE_COMMAND + \" INDEX\";","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"    public static final String LIST_COMMAND_EXAMPLE \u003d LIST_COMMAND;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"    public static final String EXIT_COMMAND \u003d \"exit\";","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"    public static final String EXIT_COMMAND_EXAMPLE \u003d EXIT_COMMAND;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    public static final String STUDENTS_COMMAND \u003d \"students\";","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    public static final String EVENTS_COMMAND \u003d \"events\";","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    private VBox helpWindow;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    private Text helpMessage;","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    private Text addCommandExample;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"    private Text listCommandExample;","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"    private Text filterCommandExample;","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"    private Text editCommandExample;","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"    private Text deleteCommandExample;","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"    private Text exitCommandExample;","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"    private Text createCommandExample;","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    private Text enrollCommandExample;","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"    private Text studentsCommandExample;","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"    private Text eventsCommandExample;","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"        addCommandExample.setText(ADD_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"        filterCommandExample.setText(FILTER_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"syoopie"},"content":"        editCommandExample.setText(EDIT_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"syoopie"},"content":"        deleteCommandExample.setText(DELETE_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"        listCommandExample.setText(LIST_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"syoopie"},"content":"        exitCommandExample.setText(EXIT_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"        createCommandExample.setText(CREATE_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"syoopie"},"content":"        enrollCommandExample.setText(ENROLL_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"        studentsCommandExample.setText(STUDENTS_COMMAND);","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"        eventsCommandExample.setText(EVENTS_COMMAND);","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":174,"author":{"gitId":"wowsiddanth"},"content":"    private void openUserGuide() {","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"wowsiddanth"},"content":"        Desktop desktop \u003d java.awt.Desktop.getDesktop();","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"wowsiddanth"},"content":"        try {","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"wowsiddanth"},"content":"            URI url \u003d new URI(USER_GUIDE_URL);","lastModifiedDate":"2021-10-16"},{"lineNumber":179,"author":{"gitId":"wowsiddanth"},"content":"            desktop.browse(url);","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"wowsiddanth"},"content":"        } catch (IOException | URISyntaxException e) {","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"wowsiddanth"},"content":"            logger.log(Level.INFO, \"The user guide could not be opened!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"syoopie"},"content":"     * Copies the AddCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"syoopie"},"content":"    private void copyAddCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"syoopie"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"syoopie"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"syoopie"},"content":"        url.putString(ADD_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"syoopie"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"syoopie"},"content":"     * Copies the ListCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"syoopie"},"content":"    private void copyListCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"syoopie"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"syoopie"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"syoopie"},"content":"        url.putString(LIST_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"syoopie"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"syoopie"},"content":"     * Copies the FilterCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"syoopie"},"content":"    private void copyFilterCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"syoopie"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"syoopie"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"syoopie"},"content":"        url.putString(FILTER_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"syoopie"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"syoopie"},"content":"     * Copies the EditCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"syoopie"},"content":"    private void copyEditCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"syoopie"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"syoopie"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"syoopie"},"content":"        url.putString(EDIT_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"syoopie"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"syoopie"},"content":"     * Copies the DeleteCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"syoopie"},"content":"    private void copyDeleteCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"syoopie"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"syoopie"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"syoopie"},"content":"        url.putString(DELETE_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"syoopie"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"syoopie"},"content":"     * Copies the ExitCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"syoopie"},"content":"    private void copyExitCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"syoopie"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"syoopie"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"syoopie"},"content":"        url.putString(EXIT_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":250,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"syoopie"},"content":"     * Copies the CreateCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"syoopie"},"content":"    private void copyCreateCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":256,"author":{"gitId":"syoopie"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-09"},{"lineNumber":257,"author":{"gitId":"syoopie"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-09"},{"lineNumber":258,"author":{"gitId":"syoopie"},"content":"        url.putString(CREATE_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":259,"author":{"gitId":"syoopie"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-09"},{"lineNumber":260,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":263,"author":{"gitId":"syoopie"},"content":"     * Copies the EnrollCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-09"},{"lineNumber":264,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":265,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"syoopie"},"content":"    private void copyEnrollCommand() {","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"syoopie"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-09"},{"lineNumber":268,"author":{"gitId":"syoopie"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-09"},{"lineNumber":269,"author":{"gitId":"syoopie"},"content":"        url.putString(ENROLL_COMMAND_EXAMPLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":270,"author":{"gitId":"syoopie"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-09"},{"lineNumber":271,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":272,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":273,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":274,"author":{"gitId":"Joel-Sung"},"content":"     * Copies the StudentsCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-15"},{"lineNumber":275,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":276,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-10-15"},{"lineNumber":277,"author":{"gitId":"Joel-Sung"},"content":"    private void copyStudentsCommand() {","lastModifiedDate":"2021-10-15"},{"lineNumber":278,"author":{"gitId":"Joel-Sung"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-15"},{"lineNumber":279,"author":{"gitId":"Joel-Sung"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-15"},{"lineNumber":280,"author":{"gitId":"Joel-Sung"},"content":"        url.putString(STUDENTS_COMMAND);","lastModifiedDate":"2021-10-15"},{"lineNumber":281,"author":{"gitId":"Joel-Sung"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-15"},{"lineNumber":282,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":283,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":284,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":285,"author":{"gitId":"Joel-Sung"},"content":"     * Copies the EventsCommand to the user guide to the clipboard.","lastModifiedDate":"2021-10-15"},{"lineNumber":286,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":287,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-10-15"},{"lineNumber":288,"author":{"gitId":"Joel-Sung"},"content":"    private void copyEventsCommand() {","lastModifiedDate":"2021-10-15"},{"lineNumber":289,"author":{"gitId":"Joel-Sung"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-15"},{"lineNumber":290,"author":{"gitId":"Joel-Sung"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-10-15"},{"lineNumber":291,"author":{"gitId":"Joel-Sung"},"content":"        url.putString(EVENTS_COMMAND);","lastModifiedDate":"2021-10-15"},{"lineNumber":292,"author":{"gitId":"Joel-Sung"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-10-15"},{"lineNumber":293,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"syoopie":123,"Joel-Sung":32,"wowsiddanth":50,"-":89}},{"path":"src/main/java/nustracker/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.Logic;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":" * the top bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    public static final double MIN_HEIGHT \u003d 747.0;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    public static final double MIN_WIDTH \u003d 914.0;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    private final Logic logic;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    private final ThemeApplier themeApplier;","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    private final SettingsWindow settingsWindow;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    private Button helpButton;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    private HBox topContainer; //This space is for the NUSTracker logo, and the help and exit button","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    private Button exitButton;","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    private Button changeThemeButton;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    private Button eventsButton;","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    private Button studentsButton;","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    private Button settingsButton;","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"    private StackPane statusBarPlaceholder;","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"        GuiSettings guiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"        settingsWindow \u003d new SettingsWindow(guiSettings);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"        themeApplier \u003d new ThemeApplier(this, helpWindow, settingsWindow, guiSettings.getIsLightMode());","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"        // Configure the UI","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        setWindowSize(guiSettings);","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"        fillInnerParts(guiSettings);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"        settingsWindow.setStudentListPanel(studentListPanel);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        themeApplier.applyOnStartUp();","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"    void fillInnerParts(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList(), guiSettings.getGlowHexCode());","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"        listPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"        listPanelPlaceholder.managedProperty().bind(listPanelPlaceholder.visibleProperty());","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"        statusBarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"    private void setWindowSize(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"        //Prevents user from setting height/width smaller than limits","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"        primaryStage.setMinHeight(MIN_HEIGHT);","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"        primaryStage.setMinWidth(MIN_WIDTH);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"        //User defined height and width (if different)","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"     * Opens the settings window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"    public void handleSettings() {","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"wowsiddanth"},"content":"        if (!settingsWindow.isShowing()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"wowsiddanth"},"content":"            settingsWindow.show();","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"wowsiddanth"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"wowsiddanth"},"content":"            settingsWindow.focus();","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"Joel-Sung"},"content":"     * Toggles the students list.","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"Joel-Sung"},"content":"    public void handleStudents() {","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"wowsiddanth"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"wowsiddanth"},"content":"        listPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"Joel-Sung"},"content":"     * Toggles the events list.","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"Joel-Sung"},"content":"    @FXML","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"Joel-Sung"},"content":"    public void handleEvents() {","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"wowsiddanth"},"content":"        listPanelPlaceholder.getChildren().clear();","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"wowsiddanth"},"content":"        listPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-10-10"},{"lineNumber":171,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"wowsiddanth"},"content":"        boolean isLightMode \u003d themeApplier.themeOnExit();","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"wowsiddanth"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), isLightMode, settingsWindow.getGlowHexCode());","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":189,"author":{"gitId":"wowsiddanth"},"content":"     * Changes the current theme of the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":190,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"wowsiddanth"},"content":"     * @see ThemeApplier#switchTheme()","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"wowsiddanth"},"content":"    private void changeTheme() {","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"wowsiddanth"},"content":"        themeApplier.switchTheme();","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"wowsiddanth"},"content":"    void show() {","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"wowsiddanth"},"content":"        primaryStage.show();","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"syoopie"},"content":"     * @see nustracker.logic.Logic#execute(String)","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"Joel-Sung"},"content":"            if (commandResult.isToggleStudents()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":222,"author":{"gitId":"Joel-Sung"},"content":"                handleStudents();","lastModifiedDate":"2021-10-15"},{"lineNumber":223,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":224,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":225,"author":{"gitId":"Joel-Sung"},"content":"            if (commandResult.isToggleEvents()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":226,"author":{"gitId":"Joel-Sung"},"content":"                handleEvents();","lastModifiedDate":"2021-10-15"},{"lineNumber":227,"author":{"gitId":"Joel-Sung"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":228,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"syoopie":11,"Joel-Sung":24,"wowsiddanth":82,"-":119}},{"path":"src/main/java/nustracker/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"     * Instantiates a ResultDisplay, that contains","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"     * the result of a user\u0027s command search.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"syoopie":1,"wowsiddanth":5,"-":27}},{"path":"src/main/java/nustracker/ui/SettingsWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.control.ColorPicker;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"public class SettingsWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SettingsWindow.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private static final String FXML \u003d \"SettingsWindow.fxml\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    private VBox container;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private ColorPicker glowColorPicker;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private Button doneButton;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    private SettingsWindow(Stage root) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"     * Creates a new SettingsWindow.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    public SettingsWindow(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        glowColorPicker.setOnAction(e -\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"            updateGlowColor(getGlowHexCode());","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        });","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        setCurrentColor(guiSettings.getGlowHexCode());","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    public void setStudentListPanel(StudentListPanel studentListPanel) throws IllegalArgumentException {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        if (studentListPanel \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"            logger.log(Level.INFO, \"studentListPanel cannot be null!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"            throw new IllegalArgumentException(\"studentListPanel cannot be null!\");","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"        this.studentListPanel \u003d studentListPanel;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"     * Updates the glow colour whenever a change is detected in the glow color picker. Passes","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"     * on the hex code to studentListPanel.","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"     * @param color The updated color","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"     * @see nustracker.ui.StudentListPanel#updateGlow(String)","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"    private void updateGlowColor(String color) {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        if (isValidColorHexCode(color)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"            studentListPanel.updateGlow(color);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"     * Sets the previously saved glow color as the current color in","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"     * the color picker (this color refers to the starting color when","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"     * the user first opens the color picker).","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"     * @param colorHexCode The hex code of the glow color","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"    private void setCurrentColor(String colorHexCode) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"        if (isValidColorHexCode(colorHexCode)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"            Color currentColour \u003d Color.web(colorHexCode);","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"            glowColorPicker.setValue(currentColour);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"     * Checks if the given string color hex code is a valid one or not.","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"     * @param colorHexCode The string color hex code","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"     * @return True if valid, false if not.","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"    private boolean isValidColorHexCode(String colorHexCode) {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"        return colorHexCode.matches(\"[#][0-9a-fA-F]{6}\");","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"     * Getter method, but formats the color from the color selector in a string","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"     * hex format e.g #FFFFFF","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"     * @return String color hex code","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"    public String getGlowHexCode() {","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"        //Current color in the color picker","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"        Color currColor \u003d glowColorPicker.getValue();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"        int redValue \u003d (int) (currColor.getRed() * 255);","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"        int greenValue \u003d (int) (currColor.getGreen() * 255);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"        int blueValue \u003d (int) (currColor.getBlue() * 255);","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"        return String.format(\"#%02X%02X%02X\", redValue, greenValue, blueValue);","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"     * Shows the settings window","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"    public void show() {","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":"        logger.fine(\"Showing settings of the application\");","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"wowsiddanth"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"wowsiddanth"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"     * Returns ture if the help window is currently being seen","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"wowsiddanth"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"     * Hides the Settings window","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"    public void hide() {","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"wowsiddanth"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"wowsiddanth"},"content":"     * Focuses on the Settings window","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"wowsiddanth"},"content":"    public void focus() {","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"wowsiddanth"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"wowsiddanth":153}},{"path":"src/main/java/nustracker/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"    private Text saveLocationStatus;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":1,"wowsiddanth":2,"-":25}},{"path":"src/main/java/nustracker/ui/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.io.File;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":" * An UI component that displays information of a {@code Student}.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"    private static final String FXML \u003d \"StudentListCard.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    public final Student student;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    private Text name;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"    private Text phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"    private Text email;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"TLChicken"},"content":"    private Text year;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"    private Text major;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"    private Text studentId;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"    private Text enrolledEvents;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"    @FXML","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    private Circle profilePicture;","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    //Represents the default profile picture for the student to be used","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    private Image studentImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"            .getResourceAsStream(\"/images/default.png\")));","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     * Creates a {@code StudentCode} with the given {@code Student}","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    public StudentCard(Student student) {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        this.student \u003d student;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        setStudentFields();","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"        setProfilePicture();","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"     * Sets the student\u0027s fields to be displayed on the student card","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    private void setStudentFields() {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"        phone.setText(student.getPhone().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"        year.setText(student.getYear().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"        major.setText(student.getMajor().value);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"        studentId.setText(student.getStudentId().value);","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"        enrolledEvents.setText(student.getEvents().getEventNamesString());","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"     * Sets the profile picture\u0027s glow","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"    public void setGlow(String hexCode) {","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"        profilePicture.setRadius(60);","lastModifiedDate":"2021-10-16"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"        profilePicture.setStroke(Color.web(hexCode));","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"        profilePicture.setStrokeWidth(4);","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"        DropShadow borderGlow \u003d new DropShadow();","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setOffsetY(0f);","lastModifiedDate":"2021-10-16"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setOffsetX(0f);","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setColor(Color.web(hexCode));","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setWidth(100);","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        borderGlow.setHeight(100);","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"        profilePicture.setEffect(borderGlow);","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"     * Selects the student image to be used as the profile picture.","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"     * It checks to see if a profile picture with the student\u0027s name exists within the","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"     * images folder. If it exists, reassigns image. If not, the image remains as the default image.","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"     * Accepts both .png and .jpg file formats.","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"    private void selectStudentImage() {","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"        String newStudentName \u003d matchImageName(student.getName().fullName);","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"        String pathOfProfilePictureJpg \u003d \"src/main/resources/images/\" + newStudentName + \".jpg\";","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"        String pathOfProfilePicturePng \u003d \"src/main/resources/images/\" + newStudentName + \".png\";","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"        File jpg \u003d new File(pathOfProfilePictureJpg);","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"        File png \u003d new File(pathOfProfilePicturePng);","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"        //Checks if an image with the student\u0027s name exists","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"        if (jpg.isFile()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"            studentImage \u003d new Image(Objects.requireNonNull(getClass()","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"                    .getResourceAsStream(\"/images/\" + newStudentName + \".jpg\")), 400,","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"                    400, true, true);","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"        } else if (png.isFile()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"            studentImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"                    .getResourceAsStream(\"/images/\" + newStudentName + \".png\")), 400,","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"                   400, true, true);","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"     * Sets the profile picture with the student image","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"    private void setProfilePicture() {","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"        selectStudentImage();","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":"        profilePicture.setFill(new ImagePattern(studentImage));","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":125,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":"     * Replaces student\u0027s full name to match student image\u0027s name (if valid).","lastModifiedDate":"2021-10-16"},{"lineNumber":128,"author":{"gitId":"wowsiddanth"},"content":"     * For example, if the student\u0027s name is John Doe, it changes it to","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"wowsiddanth"},"content":"     * john-doe.","lastModifiedDate":"2021-10-16"},{"lineNumber":130,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":"     * @param studentName The student name to be changed","lastModifiedDate":"2021-10-16"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"     * @return Student name but whitespaces are replaced with dashes and is in lowercase","lastModifiedDate":"2021-10-16"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"    private String matchImageName(String studentName) {","lastModifiedDate":"2021-10-16"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"        return studentName.toLowerCase().replace(\u0027 \u0027, \u0027-\u0027);","lastModifiedDate":"2021-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":146,"author":{"gitId":"syoopie"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":151,"author":{"gitId":"syoopie"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"TLChicken"},"content":"        return student.equals(card.student);","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"syoopie":9,"TLChicken":15,"wowsiddanth":95,"-":35}},{"path":"src/main/java/nustracker/ui/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":" * Panel containing the list of students.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    private String glowColorHexCode;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    private ObservableList\u003cStudent\u003e studentList;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"     * Creates a {@code StudentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList, String glowColor) {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        this.glowColorHexCode \u003d glowColor;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        this.studentList \u003d studentList;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        fillPanelWithCells(studentList);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     * Updates the glow color of the containing student cards according to the colour changed in the","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     * color picker in the Settings Window","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"     * @param newGlowColorHexCode The string hex code of color","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"    public void updateGlow(String newGlowColorHexCode) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        glowColorHexCode \u003d newGlowColorHexCode;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"        fillPanelWithCells(studentList);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"     * Fills the panel with the {@code ListCells}, each containing a {@link StudentCard}.","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"     * @param studentList The student list to be used.","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    public void fillPanelWithCells(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListViewCell());","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"        focusOnItem(0); //Select first item upon startup","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"     * Focuses on the first student, upon execution","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"    public void focusOnItem(int index) {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"        studentListView.getSelectionModel().select(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        studentListView.getFocusModel().focus(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"        studentListView.scrollTo(index);","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Student} using a {@code StudentCard}.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"                setText(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"                StudentCard currentStudent \u003d new StudentCard(student);","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"                currentStudent.setGlow(glowColorHexCode);","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"                setGraphic(currentStudent.getRoot());","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":47,"wowsiddanth":43}},{"path":"src/main/java/nustracker/ui/ThemeApplier.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"public class ThemeApplier {","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    private final SettingsWindow settingsWindow;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"    private Theme currentTheme;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"     * An enum that represents the themes of the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    public enum Theme {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"        DARK {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"            @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"            public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"                return \"view/DarkTheme.css\";","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        },","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"        LIGHT {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"            @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"            public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"                return \"view/LightTheme.css\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    /***","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"     * Instantiates a new ThemeApplier instance.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"    public ThemeApplier(MainWindow mainWindow, HelpWindow helpWindow, SettingsWindow settingsWindow,","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"                        boolean isLightTheme) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        this.helpWindow \u003d helpWindow;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        this.settingsWindow \u003d settingsWindow;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        currentTheme \u003d isLightTheme ? Theme.LIGHT : Theme.DARK;","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"     * Applies a theme on startup, as defined in the preferences.json file.","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    public void applyOnStartUp() {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        if (currentTheme \u003d\u003d Theme.DARK) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"            applyDarkTheme();","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"     * Applies the Light Theme to the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"    private void applyLightTheme() {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"        currentTheme \u003d Theme.LIGHT;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        removeTheme(Theme.DARK);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"        applyTheme(Theme.LIGHT);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"     * Applies the Dark Theme to the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"    private void applyDarkTheme() {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        currentTheme \u003d Theme.DARK;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"        removeTheme(Theme.LIGHT);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"        applyTheme(Theme.DARK);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"     * Removes the theme that corresponds to the enum passed as an argument.","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"     * @param removeTheme The Theme to be removed","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"    private void removeTheme(Theme removeTheme) {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"        mainWindow.getRoot().getScene().getStylesheets().remove(removeTheme.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"        helpWindow.getRoot().getScene().getStylesheets().remove(removeTheme.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"        settingsWindow.getRoot().getScene().getStylesheets().remove(removeTheme.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"     * Applies the theme that corresponds to the enum passed as an argument.","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"     * @param addTheme The Theme to be applied","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"    private void applyTheme(Theme addTheme) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"        mainWindow.getRoot().getScene().getStylesheets().add(addTheme.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        helpWindow.getRoot().getScene().getStylesheets().add(addTheme.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"        settingsWindow.getRoot().getScene().getStylesheets().add(addTheme.toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"     * Switches the current theme of the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"    public void switchTheme() {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"        switch (currentTheme) {","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"        case LIGHT:","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"            applyDarkTheme();","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"        case DARK:","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"            applyLightTheme();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"            break;","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"            //Don\u0027t do anything here","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"     * Returns a boolean that corresponds to whether the application is using the light theme or not.","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"     * @return True if using Light Theme, false if using Dark Theme.","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"    public boolean themeOnExit() {","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"        return currentTheme \u003d\u003d Theme.LIGHT;","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"wowsiddanth":115}},{"path":"src/main/java/nustracker/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"syoopie":1,"-":12}},{"path":"src/main/java/nustracker/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.MainApp;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.LogsCenter;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.StringUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.Logic;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/nustracker.png\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    private final Logic logic;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"        return new Image(Objects.requireNonNull(MainApp.class.getResourceAsStream(imagePath)));","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/LightTheme.css\");","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"syoopie":5,"wowsiddanth":8,"-":79}},{"path":"src/main/java/nustracker/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.MainApp;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"syoopie":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" alignment\u003d\"CENTER\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"44.0\" prefWidth\u003d\"479.0\" promptText\u003d\"Enter your command here...\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"      \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"         \u003cFont name\u003d\"System Italic\" size\u003d\"30.0\"/\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"      \u003c/font\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"  \u003c/TextField\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"wowsiddanth":7,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of Student Card \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/* The container for the student card cells */","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"/** Bottom most cell */","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"/** Individual student cell */","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":".list-cell:filled {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #515151;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-color: #FDB703;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 4px;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of Student Card \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of Placeholder \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"#commandBoxPlaceholder, #resultDisplayPlaceholder, #statusBarPlaceholder,","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"#topContainer, #container, #listPanelPlaceholder, #status-bar, #studentList, #helpWindow {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"#phone, #major, #year, #studentId, #email, #enrolledEvents {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    -fx-fill: white;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of Placeholder \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of Result Display \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-family: \"Open Sans Light Bold\";","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":".pane-with-border {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of Result Display \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of buttons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-radius: 50;","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #515151;","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-family: \"Roboto Thin\";","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-size: 20;","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: #779CFF;","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-family: Roboto-Bold;","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"    -fx-effect: dropshadow(gaussian, #E9AFFF, 2, 1, 0, 0);","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of buttons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of ScrollBar \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: derive(#C4C4C4, 20%);","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 4px;","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: derive(#ffffff, 100%);","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dEnd of ScrollBar \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of CommandBox \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 8px;","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":159,"author":{"gitId":"wowsiddanth"},"content":".stack-pane { /** Command box **/","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":163,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dEnd of CommandBox \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of Result Display ---\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"wowsiddanth"},"content":"#resultDisplay .content { /**results**/","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":172,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of Result Display \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of participant label \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"wowsiddanth"},"content":"#participants .label {","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":184,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dEnd of participant label \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"wowsiddanth":68,"-":117}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"                \u003cText fx:id\u003d\"name\" fill\u003d\"#779cff\" text\u003d\"\\$first\"  \u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cFont name\u003d\"System Bold Italic\" size\u003d\"24.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"            \u003cText fx:id\u003d\"date\" fill\u003d\"#e9afff\" text\u003d\"\\$date $time\" \u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"                \u003cfont\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cFont name\u003d\"System Bold\" size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/font\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            \u003cText fx:id\u003d\"time\" fill\u003d\"#e9afff\" text\u003d\"\\$time\" \u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"                \u003cfont\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cFont size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/font\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"            \u003cFlowPane fx:id\u003d\"participants\"/\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"wowsiddanth":45}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    \u003cListView fx:id\u003d\"eventListView\" style\u003d\"-fx-background-color: transparent\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wowsiddanth":1,"-":7}},{"path":"src/main/resources/view/Fonts.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans\";","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Regular.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Light.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-BoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBold.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Extra Bold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-ExtraBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-Italic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans Light Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-LightItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@font-face {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    font-family: \"Open Sans SemiBold Italic\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    src: url(\"/fonts/open-sans/OpenSans-SemiBoldItalic.ttf\");","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"@font-face {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    font-family: \"Roboto-Thin\";","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    src: url(\"/fonts/roboto/Roboto-Thin.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"    font-family: \"Roboto-Bold\";","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"    src: url(\"/fonts/roboto/Roboto-Bold.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"    font-family: \"Roboto-Bold-Italics\";","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    src: url(\"/fonts/roboto/Roboto-BoldItalic.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"@font-face {","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"    font-family: \"Spartan-Bold\";","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"    src: url(\"/fonts/spartan/Spartan-Bold.ttf\");","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"@font-face {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"    font-family: \"Spartan-ExtraBold\";","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"    src: url(\"/fonts/spartan/Spartan-ExtraBold.ttf\");","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"wowsiddanth":25,"-":44}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":".button{","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"    -fx-focus-traversable: false;","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":".button:hover {","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":".button:default {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"    -fx-base: -fx-accent ;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":".text {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-family: Roboto-Bold;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"syoopie":14,"wowsiddanth":4,"-":1}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"                \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"                \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"            \u003cVBox fx:id\u003d\"helpWindow\" alignment\u003d\"CENTER\" prefHeight\u003d\"800.0\" prefWidth\u003d\"1200.0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fill\u003d\"#fdb703\" text\u003d\"help\" translateX\u003d\"8.0\" translateY\u003d\"-5.0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/Text\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fill\u003d\"#377adf\" text\u003d\"window\" translateX\u003d\"8.0\" translateY\u003d\"-5.0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/Text\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"                \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cInsets bottom\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"helpMessage\" fill\u003d\"#e9afff\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"                            \u003cFont name\u003d\"System Bold Italic\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#openUserGuide\" text\u003d\"Open User Guide\" translateX\u003d\"10.0\" translateY\u003d\"-4\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"                \u003cGridPane gridLinesVisible\u003d\"true\" prefHeight\u003d\"800.0\" prefWidth\u003d\"784.0\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"                    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cColumnConstraints fillWidth\u003d\"false\" hgrow\u003d\"ALWAYS\" maxWidth\u003d\"392.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cColumnConstraints fillWidth\u003d\"false\" hgrow\u003d\"ALWAYS\" maxWidth\u003d\"726.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cColumnConstraints fillWidth\u003d\"false\" hgrow\u003d\"ALWAYS\" maxWidth\u003d\"240.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"                    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"                    \u003crowConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"                        \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"                    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fill\u003d\"#e9afff\" text\u003d\" Command\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fill\u003d\"#e9afff\" text\u003d\" Example\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText style\u003d\"-fx-fill: #779CFF;\" text\u003d\" Add\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"addCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyAddCommand\" text\u003d\"Copy Command\" translateX\u003d\"26.0\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"1\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText style\u003d\"-fx-fill: #779CFF;\" text\u003d\" Filter\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"filterCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"2\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyFilterCommand\" text\u003d\"Copy Command\" translateX\u003d\"26.0\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"2\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText style\u003d\"-fx-fill: #779CFF;\" text\u003d\" Edit\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"editCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyEditCommand\" text\u003d\"Copy Command\" translateX\u003d\"26.0\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"3\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText style\u003d\"-fx-fill: #779CFF;\" text\u003d\" Delete\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"deleteCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"4\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyDeleteCommand\" text\u003d\"Copy Command\" translateX\u003d\"26.0\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"4\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText style\u003d\"-fx-fill: #779CFF;\" text\u003d\" List\" GridPane.rowIndex\u003d\"5\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"listCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"5\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyListCommand\" text\u003d\"Copy Command\" translateX\u003d\"26.0\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText style\u003d\"-fx-fill: #779CFF;\" text\u003d\" Exit\" GridPane.rowIndex\u003d\"6\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"exitCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"6\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyExitCommand\" text\u003d\"Copy Command\" translateX\u003d\"26.0\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"6\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText style\u003d\"-fx-fill: #779CFF;\" text\u003d\" Create\" GridPane.rowIndex\u003d\"7\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"createCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"7\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyCreateCommand\" text\u003d\"Copy Command\" translateX\u003d\"26.0\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"7\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText style\u003d\"-fx-fill: #779CFF;\" text\u003d\" Enroll\" GridPane.rowIndex\u003d\"8\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/Text\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":165,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fx:id\u003d\"enrollCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"8\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":170,"author":{"gitId":"wowsiddanth"},"content":"                \u003cText fx:id\u003d\"eventsCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"9\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":171,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":172,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":173,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/Text\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":175,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":176,"author":{"gitId":"wowsiddanth"},"content":"                \u003cText fx:id\u003d\"studentsCommandExample\" style\u003d\"-fx-fill: #779CFF;\" translateX\u003d\"4.0\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"9\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":177,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cfont\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":178,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cFont name\u003d\"System Bold\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":179,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/font\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":180,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/Text\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":181,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":182,"author":{"gitId":"wowsiddanth"},"content":"                \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#copyEnrollCommand\" text\u003d\"Copy Command\" translateX\u003d\"26.0\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"8\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"syoopie"},"content":"                \u003c/GridPane\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"syoopie"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"syoopie":19,"wowsiddanth":144,"-":24}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of Student Card \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"/* The container for the student card cells */","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":".list-view {","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"/** Bottom most cell */","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":".list-cell {","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #FFFFFF ;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"/** Individual student cell */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":".list-cell:filled {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":".list-cell:filled:selected {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #f2f2f2;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-color: #FDB703;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-width: 2px;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 4px;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of Student Card \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of Placeholder \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"#commandBoxPlaceholder, #resultDisplayPlaceholder, #statusBarPlaceholder, #listPanelPlaceholder,","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"#topContainer, #container, #status-bar, #studentList, #helpWindow {","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #FFFFFF","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"#phone, #major, #year, #studentId, #email, #enrolledEvents  {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"    -fx-fill: black;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of Placeholder \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of Result Display \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":".result-display {","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-family: \"Open Sans Light Bold\";","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":".result-display .label {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":".pane-with-border {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #d6d6d3;","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of Result Display \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of buttons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"/*","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":" * Metro style Push Button","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":".button {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-family: \"Roboto Thin\";","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-radius: 50;","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 20;","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-color: #FDB703;","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-size: 20;","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: #779CFF;","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-family: Roboto-Bold;","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"wowsiddanth"},"content":".button:default {","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":".button:default:hover {","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d End of buttons \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of ScrollBar \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":".scroll-bar {","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #FFFFFF;","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 4px;","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #f6f6f6;","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"wowsiddanth"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"wowsiddanth"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"wowsiddanth"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"wowsiddanth"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"wowsiddanth"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"wowsiddanth"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"wowsiddanth"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"wowsiddanth"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"wowsiddanth"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dEnd of ScrollBar \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of CommandBox \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"wowsiddanth"},"content":"#commandTextField {","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: transparent #FFFFFF transparent #FFFFFF;","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-color:#FDB703;","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 8px;","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"wowsiddanth"},"content":".stack-pane { /** Command box **/","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #FFFFFF","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dEnd of CommandBox \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Start of Result Display ---\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"wowsiddanth"},"content":"#resultDisplay .content { /**results**/","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: transparent, #FFFFFF, transparent, #FFFFFF;","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of Result Display \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dStart of participant label \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"wowsiddanth"},"content":"#participants .label {","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"wowsiddanth"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"wowsiddanth"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"wowsiddanth"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"wowsiddanth"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"wowsiddanth"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"wowsiddanth"},"content":"/**\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dEnd of participant label \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d*/","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"wowsiddanth":180}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"NUSTracker\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    \u003cImage url\u003d\"@/images/nustracker.png\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        \u003cHBox fx:id\u003d\"topContainer\" minHeight\u003d\"50\" prefWidth\u003d\"340\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"            \u003cInsets left\u003d\"10\" right\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"          \u003cText fill\u003d\"#fdb703\" text\u003d\"nus\" translateY\u003d\"-5.0\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"                     \u003cFont name\u003d\"System Bold\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"          \u003c/Text\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"          \u003cText fill\u003d\"#377adf\" text\u003d\"tracker\" translateY\u003d\"-5.0\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"              \u003cFont name\u003d\"System Bold\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"          \u003c/Text\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"          \u003cPane prefHeight\u003d\"54.0\" prefWidth\u003d\"59.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"          \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#changeTheme\" prefHeight\u003d\"38.0\" prefWidth\u003d\"65.0\" translateX\u003d\"-26.0\" translateY\u003d\"8.0\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"            \u003cgraphic\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"              \u003cImageView fitHeight\u003d\"30.0\" fitWidth\u003d\"22.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"                \u003cImage url\u003d\"@../images/theme.png\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"              \u003c/ImageView\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/graphic\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"          \u003cButton fx:id\u003d\"settingsButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSettings\" text\u003d\"Settings\" translateX\u003d\"-22.0\" translateY\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"          \u003cButton fx:id\u003d\"studentsButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleStudents\" text\u003d\"Students\" translateX\u003d\"-18.0\" translateY\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"          \u003cButton fx:id\u003d\"eventsButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleEvents\" text\u003d\"Events\" translateX\u003d\"-14.0\" translateY\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"          \u003cButton fx:id\u003d\"helpButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" translateX\u003d\"-10.0\" translateY\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"          \u003cButton fx:id\u003d\"exitButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" translateX\u003d\"-6.0\" translateY\u003d\"8.0\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"        \u003cVBox fx:id\u003d\"studentList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"          \u003cStackPane fx:id\u003d\"listPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"        \u003cStackPane fx:id\u003d\"statusBarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"wowsiddanth":50,"-":34}},{"path":"src/main/resources/view/SettingsWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.control.ColorPicker?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Settings\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"                \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"            \u003cVBox fx:id\u003d\"container\" prefHeight\u003d\"400\" prefWidth\u003d\"1000\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fill\u003d\"#fdb703\" text\u003d\"settings\" translateX\u003d\"8.0\" translateY\u003d\"-5.0\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/Text\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fill\u003d\"#377adf\" text\u003d\"window\" translateX\u003d\"8.0\" translateY\u003d\"-5.0\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"                    \u003c/Text\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cText fill\u003d\"#779cff\" text\u003d\"Profile picture glow\" textAlignment\u003d\"CENTER\" translateX\u003d\"10.0\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"                            \u003cFont name\u003d\"System Bold\" size\u003d\"24.0\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"                        \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cPane prefHeight\u003d\"54.0\" prefWidth\u003d\"59.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"                    \u003cColorPicker fx:id\u003d\"glowColorPicker\" translateX\u003d\"-10.0\" translateY\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"                \u003cButton fx:id\u003d\"doneButton\" onAction\u003d\"#hide\" text\u003d\"Done\" translateX\u003d\"467.0\" translateY\u003d\"226.0\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"wowsiddanth":49}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    \u003cURL value\u003d\"@LightTheme.css\"/\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"  \u003cText fx:id\u003d\"saveLocationStatus\" fill\u003d\"#E9AFFF\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"    \u003cfont\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"      \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"wowsiddanth":11,"-":11}},{"path":"src/main/resources/view/StudentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fx:id\u003d\"name\" fill\u003d\"#779cff\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cFont name\u003d\"System Bold Italic\" size\u003d\"24.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fill\u003d\"#e9afff\" text\u003d\"Phone number: \"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fx:id\u003d\"phone\" fill\u003d\"WHITE\" style\u003d\"-fx-font-size: 18px\" text\u003d\"\\$phone\" translateY\u003d\"3.8\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cFont size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fill\u003d\"#e9afff\" text\u003d\"Major: \"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fx:id\u003d\"major\" fill\u003d\"WHITE\" style\u003d\"-fx-font-size: 18px\" text\u003d\"\\$major\" translateY\u003d\"3.8\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"                   \u003cFont size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"wowsiddanth"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fill\u003d\"#e9afff\" text\u003d\"Year: \"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fx:id\u003d\"year\" fill\u003d\"WHITE\" style\u003d\"-fx-font-size: 18px\" text\u003d\"\\$year\" translateY\u003d\"3.8\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"                \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"                   \u003cFont size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/font\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"wowsiddanth"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fill\u003d\"#e9afff\" text\u003d\"Student ID: \"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fx:id\u003d\"studentId\" fill\u003d\"WHITE\" style\u003d\"-fx-font-size: 18px\" text\u003d\"\\$studentId\" translateY\u003d\"3.8\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"                \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"                   \u003cFont size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"                \u003c/font\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fill\u003d\"#e9afff\" text\u003d\"Email: \"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"wowsiddanth"},"content":"        \u003cText fx:id\u003d\"email\" fill\u003d\"WHITE\" style\u003d\"-fx-font-size: 18px\" text\u003d\"\\$email\" translateY\u003d\"3.8\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"               \u003cfont\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"                   \u003cFont size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"               \u003c/font\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"        \u003c/Text\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"wowsiddanth"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"        \u003cHBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"            \u003cText fill\u003d\"#e9afff\" text\u003d\"Enrolled Events: \"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"                \u003cfont\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"                    \u003cFont name\u003d\"System Bold\" size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"                \u003c/font\u003e\u003c/Text\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"            \u003cText fx:id\u003d\"enrolledEvents\" fill\u003d\"WHITE\" style\u003d\"-fx-font-size: 18px\" text\u003d\"\\$email\" translateY\u003d\"3.8\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"                \u003cfont\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"                    \u003cFont size\u003d\"22.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"                \u003c/font\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"            \u003c/Text\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"   \u003cCircle fx:id\u003d\"profilePicture\" GridPane.halignment\u003d\"RIGHT\" translateX\u003d\"-15\"/\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TLChicken":12,"wowsiddanth":81,"-":19}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"  \u003cListView fx:id\u003d\"studentListView\" style\u003d\"-fx-background-color: transparent\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wowsiddanth":3,"-":6}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"{","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Valid Student\",","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e8123832\",","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"    \"major\": \"CS\",","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"    \"year\": \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"  } ],","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"      \"name\": \"Valid event\",","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"      \"date\": \"09-10-2021\",","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"      \"time\": \"1900\"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"  }, {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Invalid event\",","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"@20213127\",","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"abcd\"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"  } ]","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":19,"rehad-a":1}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"    \"name\": \"Valid Student\",","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e8123832\",","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"    \"major\": \"CS\",","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    \"year\": \"1\",","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"    \"name\": \"Student With Invalid Phone Field\",","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e8123183\",","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    \"major\": \"IS\",","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    \"year\": \"1\",","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"  } ],","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Valid event\",","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"09-10-2021\",","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"1900\"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":3,"Joel-Sung":5,"wowsiddanth":4,"rehad-a":2,"-":10}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"{","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"  } ],","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Invalid event\",","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"@20213127\",","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"abcd\"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"  }]","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":13}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"  } ],","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Valid event\",","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"09-10-2021\",","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"1900\"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Joel-Sung":5,"-":8}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"{","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"    \"year\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"    \"major\" : \"CS\",","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e9034800\"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"  }],","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Valid event\",","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"09-10-2021\",","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"1900\",","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    \"participants\": [ \"e9034800\" ]","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"  }, {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Valid event\",","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"09-10-2021\",","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"1900\",","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    \"participants\": [ \"e9034800\" ]","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"  }]","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":20,"rehad-a":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"1\",","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    \"major\" : \"CS\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e1234567\"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"1\",","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    \"major\" : \"CS\",","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e1234567\"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"  } ],","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Valid event\",","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"09-10-2021\",","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"1900\",","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    \"participants\" : [ \"e1234567\" ]","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":1,"Joel-Sung":6,"wowsiddanth":4,"rehad-a":2,"-":10}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"{","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"    \"year\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"    \"major\" : \"CS\",","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e9034800\"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"  }],","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Invalid event\",","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    \"extrafield\": \"@20213127\",","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    \"participants\": [ \"e9831818\" ]","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"  }]","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":13,"rehad-a":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidStudentAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"  \"students\": [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"    \"extrafield\": \"invalid@email!3e\",","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"    \"year\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    \"major\" : \"CS\"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"  } ],","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Valid event\",","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"09-10-2021\",","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"1900\",","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"    \"participants\" : [ ]","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":1,"Joel-Sung":8,"wowsiddanth":1,"-":5}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalStudentsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"  \"_comment\": \"AddressBook save file which contains the same Student values as in TypicalStudents#getTypicalAddressBook()\",","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"  \"students\" : [ {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"1\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"    \"major\" : \"CS\",","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e9034800\"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"3\",","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"    \"major\": \"IS\",","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e8123198\"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"4\",","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    \"major\": \"ISEC\",","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e8123081\",","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    \"email\" : \"heinz@example.com\"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"2\",","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    \"major\": \"BZA\",","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e9012390\"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"    \"phone\" : \"94822248\",","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"3\",","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    \"major\": \"CS\",","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e9831818\"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"    \"phone\" : \"94824271\",","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"4\",","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"    \"major\": \"CS\",","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e9192390\"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"    \"phone\" : \"94824112\",","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"    \"year\" : \"2\",","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"    \"major\": \"IS\",","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e9123119\"","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"  \t\"name\" : \"God Water\",","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"    \"phone\" : \"96227231\",","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"    \"email\" : \"god@example.com\",","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"    \"year\" : \"6\",","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"    \"major\": \"CS\",","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e0123456\"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"  \t\"name\" : \"Hans Thrower\",","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"    \"phone\" : \"96322322\",","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"    \"email\" : \"hans@example.com\",","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"    \"year\" : \"1\",","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"    \"major\": \"CS\",","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"    \"studentId\": \"e0322322\"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"  } ],","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Orientation Camp\",","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"01-08-2022\",","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"0900\",","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    \"participants\": [ \"e9123119\", \"e9192390\" ]","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"  }, {","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"    \"name\": \"Sports Camp\",","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"    \"date\": \"10-09-2021\",","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"    \"time\": \"1200\",","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"    \"participants\": [ \"e9831818\" ]","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"  }, {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"    \"name\": \"Math Olympiad\",","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"    \"date\": \"05-03-2017\",","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"    \"time\": \"1615\",","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"    \"participants\": [ \"e0322322\", \"e0544224\", \"e0123456\" ]","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  }]","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":1,"Joel-Sung":12,"TLChicken":17,"wowsiddanth":18,"rehad-a":9,"-":26}},{"path":"src/test/java/nustracker/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"syoopie":1,"-":57}},{"path":"src/test/java/nustracker/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"syoopie":1,"-":26}},{"path":"src/test/java/nustracker/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":4,"-":132}},{"path":"src/test/java/nustracker/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.core.index;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"syoopie":5,"-":56}},{"path":"src/test/java/nustracker/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"        assertNotNull(AppUtil.getImage(\"/images/nustracker.png\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"                false, errorMessage));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"syoopie":7,"wowsiddanth":1,"-":30}},{"path":"src/test/java/nustracker/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"syoopie":6,"-":102}},{"path":"src/test/java/nustracker/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Config;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"syoopie":8,"-":108}},{"path":"src/test/java/nustracker/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":4,"-":20}},{"path":"src/test/java/nustracker/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TestUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":3,"-":42}},{"path":"src/test/java/nustracker/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.commons.util;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"                \"typical sentence\", null));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"                StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"                \"Word parameter should be a single word\", () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"                        StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"                StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"syoopie"},"content":"                \"\", \"abc\")); // Boundary case","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"syoopie"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"syoopie"},"content":"                \"    \", \"123\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"syoopie"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"                \"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"syoopie"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"syoopie"},"content":"                \"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"syoopie"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"                \"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"syoopie"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"syoopie"},"content":"                \"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"syoopie"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"syoopie"},"content":"                \"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"syoopie"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"syoopie"},"content":"                \"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"syoopie"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"syoopie"},"content":"                \"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":136,"author":{"gitId":"syoopie"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"syoopie"},"content":"                \"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"syoopie":32,"-":125}},{"path":"src/test/java/nustracker/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.TypicalStudents.STUDENTID_MISSING;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.CommandResult;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.StudentsCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"import nustracker.storage.StorageManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        String deleteCommand \u003d \"delete \" + PREFIX_STUDENTID + \"e0000000\";","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        assertCommandException(deleteCommand,","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_INVALID_STUDENTID, STUDENTID_MISSING));","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        String studentsCommand \u003d nustracker.logic.commands.StudentsCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        assertCommandSuccess(studentsCommand, StudentsCommand.MESSAGE_SHOW_STUDENTS_SUCCESS, model);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"        Student expectedStudent \u003d new StudentBuilder(TypicalStudents.AMY).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"syoopie"},"content":"        expectedModel.addStudent(expectedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"syoopie"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"syoopie"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"syoopie":33,"Joel-Sung":6,"wowsiddanth":1,"rehad-a":3,"-":127}},{"path":"src/test/java/nustracker/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"    private Model model;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"    public void execute_newStudent_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"        expectedModel.addStudent(validStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"        assertCommandSuccess(new AddCommand(validStudent), model,","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validStudent), expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(0);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        assertCommandFailure(new AddCommand(studentInList), model, AddCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":46}},{"path":"src/test/java/nustracker/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"    public void constructor_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"    public void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        ModelStubAcceptingStudentAdded modelStub \u003d new ModelStubAcceptingStudentAdded();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"        CommandResult commandResult \u003d new AddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"    public void execute_duplicateStudent_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"        AddCommand addCommand \u003d new AddCommand(validStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"        ModelStub modelStub \u003d new ModelStubWithStudent(validStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_STUDENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"        Student alice \u003d new StudentBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"        Student bob \u003d new StudentBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"rehad-a"},"content":"        public Student getStudent(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"        public Event getEvent(EventName name) {","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"syoopie"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"syoopie"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"syoopie"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"syoopie"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"Joel-Sung"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"Joel-Sung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"syoopie"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"TLChicken"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"TLChicken"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"TLChicken"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"TLChicken"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"syoopie"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"Joel-Sung"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"Joel-Sung"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"syoopie"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"Joel-Sung"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":197,"author":{"gitId":"syoopie"},"content":"     * A Model stub that contains a single student.","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"syoopie"},"content":"    private class ModelStubWithStudent extends ModelStub {","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"syoopie"},"content":"        private final Student student;","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"syoopie"},"content":"        ModelStubWithStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"syoopie"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":204,"author":{"gitId":"syoopie"},"content":"            this.student \u003d student;","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"syoopie"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":209,"author":{"gitId":"syoopie"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"syoopie"},"content":"            return this.student.hasDuplicateCredentials(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"syoopie"},"content":"     * A Model stub that always accept the student being added.","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"syoopie"},"content":"    private class ModelStubAcceptingStudentAdded extends ModelStub {","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"syoopie"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"syoopie"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"syoopie"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":223,"author":{"gitId":"syoopie"},"content":"            return studentsAdded.stream().anyMatch(student::hasDuplicateCredentials);","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"syoopie"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"syoopie"},"content":"            requireNonNull(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"syoopie"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"syoopie":68,"Joel-Sung":36,"TLChicken":5,"rehad-a":2,"-":127}},{"path":"src/test/java/nustracker/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"        Model expectedModel \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"syoopie":10,"-":23}},{"path":"src/test/java/nustracker/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_toggleStudentsAndToggleEventsBothTrue_throwsAssertionError() {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"            new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"                    true, true);","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"        } catch (AssertionError e) {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"            assertTrue(true);","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"                false, false)));","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"                false, false)));","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"                false, false)));","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"        // different toggleStudents value -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"                true, false)));","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"        // different toggleEvents value -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"                false, true)));","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"                false, false).hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"                false, false).hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"        // different toggleStudents value -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"                true, false).hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        // different toggleEvents value -\u003e returns different hashcode","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"                false, true).hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"syoopie":2,"Joel-Sung":37,"-":48}},{"path":"src/test/java/nustracker/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"    public static final String VALID_YEAR_AMY \u003d \"1\";","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"    public static final String VALID_YEAR_BOB \u003d \"2\";","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"    public static final String VALID_MAJOR_AMY \u003d \"CS\";","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"    public static final String VALID_MAJOR_BOB \u003d \"IS\";","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"    public static final String VALID_STUDENTID_AMY \u003d \"e1283901\";","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"    public static final String VALID_STUDENTID_BOB \u003d \"e1238010\";","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"    public static final String YEAR_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_YEAR + VALID_YEAR_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"    public static final String YEAR_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_YEAR + VALID_YEAR_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"    public static final String MAJOR_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_MAJOR + VALID_MAJOR_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"    public static final String MAJOR_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_MAJOR + VALID_MAJOR_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"    public static final String STUDENTID_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_STUDENTID + VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"    public static final String STUDENTID_DESC_AMY_WO_LEADING_SPACE \u003d CliSyntax.PREFIX_STUDENTID + VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"rehad-a"},"content":"    public static final String STUDENTID_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_STUDENTID + VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"rehad-a"},"content":"    public static final String STUDENTID_DESC_BOB_WO_LEADING_SPACE \u003d CliSyntax.PREFIX_STUDENTID + VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + CliSyntax.PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + CliSyntax.PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_YEAR_DESC \u003d \" \" + CliSyntax.PREFIX_YEAR + \"a\"; //letters not allowed","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_MAJOR_DESC \u003d \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"            + CliSyntax.PREFIX_MAJOR + \"computer science\"; //use abbreviation, not ff","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"rehad-a"},"content":"    public static final String INVALID_STUDENTID_DESC \u003d \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"            + CliSyntax.PREFIX_STUDENTID + \"e123123123\"; //e and 7 digits","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"    public static final EditCommand.EditStudentDescriptor DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"    // For Events","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALID_EVENTNAME_TEST \u003d \"Test event\";","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALID_EVENTNAME_FINAL \u003d \"Final event\";","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALID_EVENTDATE_TEST \u003d \"09-10-2021\";","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALID_EVENTDATE_FINAL \u003d \"20-11-2021\";","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALID_EVENTTIME_TEST \u003d \"1800\";","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALID_EVENTTIME_FINAL \u003d \"2010\";","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALID_PARTICIPANT_TEST \u003d \"Joel\";","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"    public static final String VALID_PARTICIPANT_FINAL \u003d \"Sung\";","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"    public static final String NAME_DESC_TEST \u003d \" \" + PREFIX_NAME + VALID_EVENTNAME_TEST;","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"    public static final String NAME_DESC_FINAL \u003d \" \" + PREFIX_NAME + VALID_EVENTNAME_FINAL;","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"    public static final String DATE_DESC_TEST \u003d \" \" + PREFIX_DATE + VALID_EVENTDATE_TEST;","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"    public static final String DATE_DESC_FINAL \u003d \" \" + PREFIX_DATE + VALID_EVENTDATE_FINAL;","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"    public static final String TIME_DESC_TEST \u003d \" \" + PREFIX_TIME + VALID_EVENTTIME_TEST;","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"    public static final String TIME_DESC_FINAL \u003d \" \" + PREFIX_TIME + VALID_EVENTTIME_FINAL;","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"    public static final String INVALID_EVENTNAME_DESC \u003d \" \" + PREFIX_NAME + \"Event\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"    public static final String INVALID_EVENTDATE_DESC \u003d \" \" + PREFIX_DATE + \"09102021\"; // missing dashes","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"    public static final String INVALID_EVENTTIME_DESC \u003d \" \" + PREFIX_TIME + \"12:30 pm\"; // needs to be 24hr format","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"    public static final String VALID_EXPORT_FILE_NAME \u003d \"Exports\";","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EXPORT_FILE_NAME_1 \u003d \"Exports\\\\\";","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EXPORT_FILE_NAME_2 \u003d \"Exports:\";","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EXPORT_FILE_NAME_3 \u003d \"Exports*\";","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EXPORT_FILE_NAME_4 \u003d \"Exports?\";","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EXPORT_FILE_NAME_5 \u003d \"Exports\\\"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EXPORT_FILE_NAME_6 \u003d \"Exports\u003c\";","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EXPORT_FILE_NAME_7 \u003d \"Exports\u003e\";","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"syoopie"},"content":"    public static final String INVALID_EXPORT_FILE_NAME_8 \u003d \"Exports|\";","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"syoopie"},"content":"        DESC_AMY \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"wowsiddanth"},"content":"                .withYear(VALID_YEAR_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"                .withMajor(VALID_MAJOR_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"rehad-a"},"content":"                .withStudentId(VALID_STUDENTID_AMY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"syoopie"},"content":"        DESC_BOB \u003d new EditStudentDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"wowsiddanth"},"content":"                .withYear(VALID_YEAR_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"wowsiddanth"},"content":"                .withMajor(VALID_MAJOR_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"rehad-a"},"content":"                .withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"syoopie"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"syoopie"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"syoopie"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"syoopie"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"syoopie"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"syoopie"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"syoopie"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"syoopie"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"syoopie"},"content":"        model.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"syoopie"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"syoopie":49,"Joel-Sung":25,"wowsiddanth":10,"rehad-a":11,"-":79}},{"path":"src/test/java/nustracker/logic/commands/CreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.testutil.EventBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.testutil.ModelStub;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"class CreateCommandTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateCommand(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        CreateCommandTest.ModelStubAcceptingEventAdded modelStub \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"                new CreateCommandTest.ModelStubAcceptingEventAdded();","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        CommandResult commandResult \u003d new CreateCommand(validEvent).execute(modelStub);","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertEquals(String.format(CreateCommand.MESSAGE_SUCCESS, validEvent),","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"        CreateCommand createCommand \u003d new CreateCommand(validEvent);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        ModelStub modelStub \u003d new CreateCommandTest.ModelStubWithEvent(validEvent);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(CommandException.class, CreateCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"                createCommand.execute(modelStub));","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"        private final Event event;","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"            return new AddressBook();","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":90}},{"path":"src/test/java/nustracker/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.EVENTNAME_INVALID;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.EVENTNAME_ONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.EVENTNAME_TWO;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalStudents.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":" * {@code DeleteEventCommand}.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"class DeleteEventCommandTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    public void execute_validEventUnfilteredList_success() {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        Event eventToDelete \u003d model.getEvent(EVENTNAME_ONE);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(EVENTNAME_ONE);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d String.format(DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS,","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"                eventToDelete.getName());","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    public void execute_invalidEventUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(EVENTNAME_INVALID);","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        assertCommandFailure(deleteEventCommand, model,","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"                String.format(Messages.MESSAGE_INVALID_EVENT_NAME, EVENTNAME_INVALID));","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"    public void execute_validEventFilteredList_success() {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        // To implement when event filtering feature is implemented","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"        // To implement when event filtering feature is implemented","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"    public void equals() {","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        DeleteEventCommand deleteFirstCommand \u003d new DeleteEventCommand(EVENTNAME_ONE);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"        DeleteEventCommand deleteSecondCommand \u003d new DeleteEventCommand(EVENTNAME_TWO);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        DeleteEventCommand deleteFirstCommandCopy \u003d new DeleteEventCommand(EVENTNAME_ONE);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Joel-Sung":90}},{"path":"src/test/java/nustracker/logic/commands/DeleteStudentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.TypicalStudents.STUDENTID_MISSING;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.TypicalStudents.STUDENTID_ONE;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.TypicalStudents.STUDENTID_TWO;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":" * {@code DeleteStudentCommand}.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"public class DeleteStudentCommandTest {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"    public void execute_validStudentIdUnfilteredList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        Student studentToDelete \u003d model.getStudent(STUDENTID_ONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(STUDENTID_ONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"    public void execute_invalidStudentIdUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(STUDENTID_MISSING);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"            deleteStudentCommand.execute(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"        assertCommandFailure(deleteStudentCommand, model,","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_INVALID_STUDENTID, STUDENTID_MISSING));","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"    public void execute_validStudentIdFilteredList_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"        Student studentToDelete \u003d model.getStudent(STUDENTID_ONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(STUDENTID_ONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d String.format(DeleteStudentCommand.MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"        expectedModel.deleteStudent(studentToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"        showNoStudent(expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        assertCommandSuccess(deleteStudentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"rehad-a"},"content":"    public void execute_invalidStudentIdFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"rehad-a"},"content":"        DeleteStudentCommand deleteStudentCommand \u003d new DeleteStudentCommand(STUDENTID_MISSING);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"        assertCommandFailure(deleteStudentCommand, model,","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_INVALID_STUDENTID, STUDENTID_MISSING));","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"        DeleteStudentCommand deleteFirstCommand \u003d new DeleteStudentCommand(STUDENTID_ONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"rehad-a"},"content":"        DeleteStudentCommand deleteSecondCommand \u003d new DeleteStudentCommand(STUDENTID_TWO);","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"rehad-a"},"content":"        DeleteStudentCommand deleteFirstCommandCopy \u003d new DeleteStudentCommand(STUDENTID_ONE);","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"    private void showNoStudent(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"        model.updateFilteredStudentList(p -\u003e false);","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"syoopie"},"content":"        assertTrue(model.getFilteredStudentList().isEmpty());","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"syoopie":19,"Joel-Sung":18,"rehad-a":18,"-":56}},{"path":"src/test/java/nustracker/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.TypicalStudents.STUDENTID_ONE;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.TypicalStudents.STUDENTID_TWO;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"public class EditCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"        Student editedStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(editedStudent).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_ONE,","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"                descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"        Index indexLastStudent \u003d Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        Student lastStudent \u003d model.getFilteredStudentList().get(indexLastStudent.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"        StudentBuilder studentInList \u003d new StudentBuilder(lastStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        Student editedStudent \u003d studentInList.withName(CommandTestUtil.VALID_NAME_BOB).withPhone(","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"                        CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"                        CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"                model.getFilteredStudentList().get(indexLastStudent.getZeroBased()).getStudentId(),","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"                descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"        expectedModel.setStudent(lastStudent, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_ONE,","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"                new EditCommand.EditStudentDescriptor());","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"        Student editedStudent \u003d model.getFilteredStudentList().get(TypicalIndexes.INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.showStudentAtIndex(model, TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"syoopie"},"content":"        Student studentInFilteredList \u003d model.getFilteredStudentList().get(","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"                TypicalIndexes.INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"        Student editedStudent \u003d new StudentBuilder(studentInFilteredList).withName(","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_ONE,","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"                new EditStudentDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"        expectedModel.setStudent(model.getFilteredStudentList().get(0), editedStudent);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"    public void execute_duplicateStudentUnfilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"        Student firstStudent \u003d model.getFilteredStudentList().get(TypicalIndexes.INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(firstStudent).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_TWO,","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"                descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"syoopie"},"content":"    public void execute_duplicateStudentFilteredList_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.showStudentAtIndex(model, TypicalIndexes.INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"syoopie"},"content":"        // edit student in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"syoopie"},"content":"        Student studentInList \u003d model.getAddressBook().getStudentList().get(","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"syoopie"},"content":"                TypicalIndexes.INDEX_SECOND_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_ONE,","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"                new EditStudentDescriptorBuilder(studentInList).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_STUDENT);","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"rehad-a"},"content":"    public void execute_invalidStudentIdUnfilteredList_failure() {","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"rehad-a"},"content":"        StudentId studentId \u003d new StudentId(\"e9999999\");","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"TLChicken"},"content":"        EditCommand editCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"rehad-a"},"content":"                studentId,","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"TLChicken"},"content":"                descriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"TLChicken"},"content":"        CommandTestUtil.assertCommandFailure(editCommand,","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"TLChicken"},"content":"                model,","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_INVALID_STUDENTID, studentId.getStudentIdString()));","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"syoopie"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"TLChicken"},"content":"        final EditCommand standardCommand \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_ONE,","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"syoopie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor copyDescriptor \u003d new EditCommand.EditStudentDescriptor(","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"TLChicken"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_ONE,","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"TLChicken"},"content":"                copyDescriptor);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"syoopie"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"syoopie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"syoopie"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"syoopie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"syoopie"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"syoopie"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"syoopie"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"rehad-a"},"content":"        // different student ID -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"TLChicken"},"content":"        assertFalse(standardCommand.equals(new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_TWO,","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.DESC_AMY)));","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"syoopie"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"TLChicken"},"content":"        assertFalse(standardCommand.equals(new EditCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"rehad-a"},"content":"                STUDENTID_ONE,","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.DESC_BOB)));","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":141,"TLChicken":18,"wowsiddanth":2,"rehad-a":18}},{"path":"src/test/java/nustracker/logic/commands/EditStudentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"public class EditStudentDescriptorTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor descriptorWithSameValues \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"                new EditCommand.EditStudentDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(CommandTestUtil.DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_AMY));","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(5));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(CommandTestUtil.DESC_BOB));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor editedAmy \u003d new EditStudentDescriptorBuilder(","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.DESC_AMY).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(CommandTestUtil.DESC_AMY).withPhone(","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        editedAmy \u003d new EditStudentDescriptorBuilder(CommandTestUtil.DESC_AMY).withEmail(","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"                CommandTestUtil.VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(CommandTestUtil.DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":45}},{"path":"src/test/java/nustracker/logic/commands/EnrollCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"//import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTNAME_TEST;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"//import static nustracker.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"//import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"TLChicken"},"content":"//import static nustracker.logic.commands.CommandTestUtil.showStudentAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"TLChicken"},"content":"//import static nustracker.testutil.TypicalEvents.MATH_OLYMPIAD;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"//import static nustracker.testutil.TypicalIndexes.INDEX_FIRST_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"//import static nustracker.testutil.TypicalIndexes.INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"TLChicken"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"//","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.event.Event;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"//import nustracker.testutil.EventBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"//","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"//import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"//import nustracker.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.student.Student;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"//import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":" * Contains methods for testing the event commands","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"class EnrollCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    private static final String EVENT_STUB \u003d \"Some event\";","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"    //    void execute_addEventUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"    //        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    //        Event mathOlympiad \u003d model.getEvent(MATH_OLYMPIAD.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"    //        Student enrolledStudent \u003d new StudentBuilder(firstStudent).withEvent(mathOlympiad).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"    //        Event updatedMathOlympiad \u003d new EventBuilder(mathOlympiad)","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"rehad-a"},"content":"    //                .addParticipant(firstStudent.getStudentId().getStudentIdString()).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"    //        EnrollCommand enrollCommand \u003d new EnrollCommand(firstStudent.getStudentId(),","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"    //                MATH_OLYMPIAD.getName());","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"    //        String expectedMessage \u003d String.format(EnrollCommand.MESSAGE_ADD_TO_EVENT_SUCCESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"    //                enrolledStudent.getName().toString(),","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"rehad-a"},"content":"    //                enrolledStudent.getStudentId().getStudentIdString(),","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"    //                mathOlympiad.getName().getEventName());","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"    //        expectedModel.setStudent(firstStudent, enrolledStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"    //        expectedModel.setEvent(mathOlympiad, updatedMathOlympiad);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"    //        assertCommandSuccess(enrollCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"    //    public void execute_deleteEventUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"    //        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"    //        Student editedStudent \u003d new StudentBuilder(firstStudent).withEvent(\"To edit later\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"    //        EnrollCommand enrollCommand \u003d new EnrollCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"    //                new EnrolledEvents(editedStudent.getEvents().toString()));","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"    //        String expectedMessage \u003d String.format(EnrollCommand.MESSAGE_DELETE_EVENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"    //        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"    //         assertCommandSuccess(enrollCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"    //    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"    //        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"    //        Student firstStudent \u003d model.getFilteredStudentList().get(INDEX_FIRST_STUDENT.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"    //        Student editedStudent \u003d new StudentBuilder(model.getFilteredStudentList()","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"    //                .get(INDEX_FIRST_STUDENT.getZeroBased()))","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"    //                .withEvent(EVENT_STUB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"    //        EnrollCommand enrollCommand \u003d new EnrollCommand(INDEX_FIRST_STUDENT,","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"    //                new EnrolledEvents(editedStudent.getEvents().value));","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"    //        String expectedMessage \u003d String.format(EnrollCommand.MESSAGE_ADD_TO_EVENT_SUCCESS, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"    //        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"    //        expectedModel.setStudent(firstStudent, editedStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"    //        assertCommandSuccess(enrollCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"    //    public void execute_invalidStudentIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"    //        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredStudentList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"    //        EnrollCommand enrollCommand \u003d new EnrollCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"    //                  new EnrolledEvents(VALID_EVENTNAME_TEST));","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"    //        assertCommandFailure(enrollCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"    //    public void execute_invalidStudentIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"    //        showStudentAtIndex(model, INDEX_FIRST_STUDENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"    //        Index outOfBoundIndex \u003d INDEX_SECOND_STUDENT;","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"    //        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"    //        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getStudentList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"    //        EnrollCommand enrollCommand \u003d new EnrollCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"    //                  new EnrolledEvents(VALID_EVENTNAME_TEST));","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"TLChicken"},"content":"    //        assertCommandFailure(enrollCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Joel-Sung":18,"TLChicken":100,"rehad-a":3}},{"path":"src/test/java/nustracker/logic/commands/EventsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"class EventsCommandTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"    void execute_events_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(EventsCommand.MESSAGE_SHOW_EVENTS_SUCCESS,","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"                false, false, false, true);","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        CommandTestUtil.assertCommandSuccess(new EventsCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"Joel-Sung":18}},{"path":"src/test/java/nustracker/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"                ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false);","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":18,"Joel-Sung":1}},{"path":"src/test/java/nustracker/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EXPORT_FILE_NAME;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"class ExportCommandTest {","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"    public void constructor_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new ExportCommand(null));","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"                NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"                        new ExportCommand(VALID_EXPORT_FILE_NAME).execute(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"syoopie":24}},{"path":"src/test/java/nustracker/logic/commands/FilterEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.EnrolledEventsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterEventCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"public class FilterEventCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"        EnrolledEventsContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"                new EnrolledEventsContainsKeywordsPredicate(\"first\");","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"        EnrolledEventsContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"                new EnrolledEventsContainsKeywordsPredicate(\"second\");","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommand \u003d new FilterEventCommand(firstPredicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterSecondCommand \u003d new FilterEventCommand(secondPredicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterEventCommand(firstPredicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"        // different events -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"syoopie":5,"rehad-a":25,"-":13}},{"path":"src/test/java/nustracker/logic/commands/FilterIdCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterIdCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"public class FilterIdCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        StudentIdContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"        StudentIdContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"                new StudentIdContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommand \u003d new FilterIdCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterSecondCommand \u003d new FilterIdCommand(secondPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterIdCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterIdCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"rehad-a"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d preparePredicate(\"e9034800 e8123198 e9012390\");","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterIdCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"rehad-a"},"content":"        assertEquals(Arrays.asList(TypicalStudents.ALICE, TypicalStudents.BENSON, TypicalStudents.DANIEL),","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"rehad-a"},"content":"    public void execute_multiplePartialKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"rehad-a"},"content":"        StudentIdContainsKeywordsPredicate predicate \u003d preparePredicate(\"e90 e81\");","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterIdCommand(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"rehad-a"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"rehad-a"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"        assertEquals(Arrays.asList(TypicalStudents.ALICE, TypicalStudents.BENSON, TypicalStudents.CARL,","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"rehad-a"},"content":"                TypicalStudents.DANIEL), model.getFilteredStudentList());","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"rehad-a"},"content":"     * Parses {@code userInput} into a {@code StudentIdContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"rehad-a"},"content":"    private StudentIdContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"rehad-a"},"content":"        return new StudentIdContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"syoopie":15,"rehad-a":49,"-":29}},{"path":"src/test/java/nustracker/logic/commands/FilterMajorCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.MajorContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterMajorCommand}.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"public class FilterMajorCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"        MajorContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"                new MajorContainsKeywordsPredicate(Collections.singletonList(new Major(\"cs\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"        MajorContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"                new MajorContainsKeywordsPredicate(Collections.singletonList(new Major(\"is\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommand \u003d new FilterMajorCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterSecondCommand \u003d new FilterMajorCommand(secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterMajorCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"        // different predicates -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"        MajorContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterMajorCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"rehad-a"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"rehad-a"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"rehad-a"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"rehad-a"},"content":"        MajorContainsKeywordsPredicate predicate \u003d preparePredicate(\"is bza\");","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterMajorCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"rehad-a"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"rehad-a"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"rehad-a"},"content":"        assertEquals(Arrays.asList(TypicalStudents.BENSON, TypicalStudents.DANIEL, TypicalStudents.GEORGE),","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"rehad-a"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"     * Parses {@code userInput} into a {@code MajorContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"rehad-a"},"content":"    private MajorContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"rehad-a"},"content":"        return new MajorContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")).stream().map(","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"rehad-a"},"content":"            x -\u003e new Major(x)).collect(Collectors.toUnmodifiableList()));","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rehad-a":84}},{"path":"src/test/java/nustracker/logic/commands/FilterNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterNameCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"public class FilterNameCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommand \u003d new FilterNameCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterSecondCommand \u003d new FilterNameCommand(secondPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterNameCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterNameCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterNameCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"        assertEquals(Arrays.asList(TypicalStudents.CARL, TypicalStudents.ELLE, TypicalStudents.FIONA),","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"syoopie":31,"rehad-a":12,"-":38}},{"path":"src/test/java/nustracker/logic/commands/FilterYearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.YearContainsKeywordsPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterIdCommand}.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"public class FilterYearCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"    private Model model \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"    private Model expectedModel \u003d new ModelManager(TypicalStudents.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"        YearContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"                new YearContainsKeywordsPredicate(Collections.singletonList(new Year(\"1\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        YearContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"                new YearContainsKeywordsPredicate(Collections.singletonList(new Year(\"2\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommand \u003d new FilterYearCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterSecondCommand \u003d new FilterYearCommand(secondPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"        FilterCommand filterFirstCommandCopy \u003d new FilterYearCommand(firstPredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommandCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"rehad-a"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"rehad-a"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"rehad-a"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"    public void execute_zeroKeywords_noStudentFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"        YearContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterYearCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"rehad-a"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredStudentList());","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"rehad-a"},"content":"    public void execute_multipleKeywords_multipleStudentsFound() {","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"rehad-a"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_STUDENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"rehad-a"},"content":"        YearContainsKeywordsPredicate predicate \u003d preparePredicate(\"2 6\");","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"rehad-a"},"content":"        FilterCommand command \u003d new FilterYearCommand(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"rehad-a"},"content":"        expectedModel.updateFilteredStudentList(predicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"rehad-a"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"rehad-a"},"content":"        assertEquals(Arrays.asList(TypicalStudents.DANIEL, TypicalStudents.GEORGE,","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"rehad-a"},"content":"                TypicalStudents.GOD),","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"rehad-a"},"content":"                model.getFilteredStudentList());","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"rehad-a"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"rehad-a"},"content":"     * Parses {@code userInput} into a {@code YearContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"rehad-a"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"rehad-a"},"content":"    private YearContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"        return new YearContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")).stream().map(","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"rehad-a"},"content":"            x -\u003e new Year(x)).collect(Collectors.toUnmodifiableList()));","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rehad-a":86}},{"path":"src/test/java/nustracker/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"public class HelpCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"    public void execute_help_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE,","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"                true, false, false, false);","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"        CommandTestUtil.assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":18,"Joel-Sung":1}},{"path":"src/test/java/nustracker/logic/commands/StudentsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"class StudentsCommandTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"    void execute_events_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(StudentsCommand.MESSAGE_SHOW_STUDENTS_SUCCESS,","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"                false, false, true, false);","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        CommandTestUtil.assertCommandSuccess(new StudentsCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"Joel-Sung":19}},{"path":"src/test/java/nustracker/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        Student expectedStudent \u003d new StudentBuilder(TypicalStudents.BOB).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"        assertParseSuccess(parser, CommandTestUtil.PREAMBLE_WHITESPACE","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"        // multiple year of study given - last year accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"        // multiple majors - last major accepted","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"rehad-a"},"content":"        // multiple student ID - last student ID accepted","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"        Student expectedStudent \u003d new StudentBuilder(TypicalStudents.AMY).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_AMY","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_AMY, new AddCommand(expectedStudent));","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"                AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"syoopie"},"content":"        // missing phone prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.VALID_PHONE_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"        // missing email prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.VALID_EMAIL_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"syoopie"},"content":"        // missing year prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.VALID_YEAR_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"syoopie"},"content":"        // missing major prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.VALID_EMAIL_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.VALID_MAJOR_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"rehad-a"},"content":"        // missing studentId prefix","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.VALID_EMAIL_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.VALID_STUDENTID_BOB, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"syoopie"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"syoopie"},"content":"                        + CommandTestUtil.VALID_PHONE_BOB + CommandTestUtil.VALID_EMAIL_BOB,","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"syoopie"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"syoopie"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"syoopie"},"content":"        // invalid name","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"syoopie"},"content":"        // invalid phone","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"syoopie"},"content":"        // invalid email","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"syoopie"},"content":"        // invalid year","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.INVALID_YEAR_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":180,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"syoopie"},"content":"        // invalid major","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":183,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":185,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.INVALID_MAJOR_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":187,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":189,"author":{"gitId":"rehad-a"},"content":"        // invalid student ID","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":191,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.INVALID_STUDENTID_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":196,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":197,"author":{"gitId":"syoopie"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":198,"author":{"gitId":"syoopie"},"content":"        assertParseFailure(parser, CommandTestUtil.PREAMBLE_NON_EMPTY","lastModifiedDate":"2021-10-07"},{"lineNumber":199,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":200,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":201,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.YEAR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":202,"author":{"gitId":"syoopie"},"content":"                + CommandTestUtil.MAJOR_DESC_BOB","lastModifiedDate":"2021-10-07"},{"lineNumber":203,"author":{"gitId":"rehad-a"},"content":"                + CommandTestUtil.STUDENTID_DESC_BOB, String.format(","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"syoopie"},"content":"                Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":205,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":206,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":179,"wowsiddanth":2,"rehad-a":25}},{"path":"src/test/java/nustracker/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.EVENTNAME_ONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.TypicalStudents.STUDENTID_ONE;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.EventsCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterIdCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterNameCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.StudentsCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.EnrolledEventsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.testutil.EventBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.testutil.EventUtil;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(StudentUtil.getAddCommand(student));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"        assertEquals(new AddCommand(student), command);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"        DeleteStudentCommand studentCommand \u003d (DeleteStudentCommand) parser.parseCommand(","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + PREFIX_STUDENTID + STUDENTID_ONE);","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"rehad-a"},"content":"        assertEquals(new DeleteStudentCommand(STUDENTID_ONE), studentCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"        DeleteEventCommand eventCommand \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + PREFIX_EVENT + EVENTNAME_ONE);","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(new DeleteEventCommand(EVENTNAME_ONE), eventCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder(student).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"rehad-a"},"content":"                + PREFIX_STUDENTID + STUDENTID_ONE.getStudentIdString() + \" \"","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"                + StudentUtil.getEditStudentDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"rehad-a"},"content":"        assertEquals(new EditCommand(STUDENTID_ONE, descriptor), command);","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"rehad-a"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"rehad-a"},"content":"        FilterCommand nameCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"rehad-a"},"content":"                FilterCommand.COMMAND_WORD + \" \" + PREFIX_NAME + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"rehad-a"},"content":"        assertEquals(new FilterNameCommand(new NameContainsKeywordsPredicate(keywords)), nameCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"rehad-a"},"content":"        FilterCommand idCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"rehad-a"},"content":"                FilterCommand.COMMAND_WORD + \" \" + PREFIX_STUDENTID + keywords.stream().collect(","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"rehad-a"},"content":"                        Collectors.joining(\" \")));","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"rehad-a"},"content":"        assertEquals(new FilterIdCommand(new StudentIdContainsKeywordsPredicate(keywords)), idCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"rehad-a"},"content":"        FilterCommand eventCommand \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"rehad-a"},"content":"                FilterCommand.COMMAND_WORD + \" \" + PREFIX_EVENT + \"foo\");","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"rehad-a"},"content":"        assertEquals(new FilterEventCommand(new EnrolledEventsContainsKeywordsPredicate(\"foo\")), eventCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"    public void parseCommand_create() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"        CreateCommand command \u003d (CreateCommand) parser.parseCommand(EventUtil.getCreateCommand(event));","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(new CreateCommand(event), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"    public void parseCommand_students() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"Joel-Sung"},"content":"        assertTrue(parser.parseCommand(StudentsCommand.COMMAND_WORD) instanceof StudentsCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"        assertTrue(parser.parseCommand(StudentsCommand.COMMAND_WORD + \" 3\") instanceof StudentsCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"    public void parseCommand_events() throws Exception {","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"        assertTrue(parser.parseCommand(EventsCommand.COMMAND_WORD) instanceof EventsCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"        assertTrue(parser.parseCommand(EventsCommand.COMMAND_WORD + \" 3\") instanceof EventsCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"syoopie"},"content":"                        HelpCommand.MESSAGE_USAGE), () -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, Messages.MESSAGE_UNKNOWN_COMMAND, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"syoopie"},"content":"                parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"syoopie":25,"Joel-Sung":35,"rehad-a":26,"-":58}},{"path":"src/test/java/nustracker/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"syoopie":1,"-":149}},{"path":"src/test/java/nustracker/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"syoopie":3,"-":35}},{"path":"src/test/java/nustracker/logic/parser/CreateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.DATE_DESC_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.DATE_DESC_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EVENTDATE_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EVENTNAME_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EVENTTIME_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.NAME_DESC_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.NAME_DESC_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.TIME_DESC_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.TIME_DESC_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTDATE_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTNAME_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTTIME_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.testutil.EventBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"class CreateCommandParserTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    private CreateCommandParser parser \u003d new CreateCommandParser();","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        Event expectedEvent \u003d new EventBuilder(TEST).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_TEST + DATE_DESC_TEST + TIME_DESC_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"                new CreateCommand(expectedEvent));","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_FINAL + NAME_DESC_TEST + DATE_DESC_TEST","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"                        + TIME_DESC_TEST, new CreateCommand(expectedEvent));","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_TEST + DATE_DESC_FINAL + DATE_DESC_TEST","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"                + TIME_DESC_TEST, new CreateCommand(expectedEvent));","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"        // multiple times - last time accepted","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_TEST + DATE_DESC_TEST + TIME_DESC_FINAL","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"                + TIME_DESC_TEST, new CreateCommand(expectedEvent));","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        // zero participants","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        Event expectedEvent \u003d new EventBuilder(TEST).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, NAME_DESC_TEST + DATE_DESC_TEST + TIME_DESC_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"                new CreateCommand(expectedEvent));","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"        // missing name prefix","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, VALID_EVENTNAME_TEST + DATE_DESC_TEST + TIME_DESC_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"                expectedMessage);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"        // missing date prefix","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, NAME_DESC_TEST + VALID_EVENTDATE_TEST + TIME_DESC_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"                expectedMessage);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        // missing time prefix","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, NAME_DESC_TEST + DATE_DESC_TEST + VALID_EVENTTIME_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"                expectedMessage);","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"        // all prefixes missing","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, VALID_EVENTNAME_TEST + VALID_EVENTDATE_TEST + VALID_EVENTTIME_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"                expectedMessage);","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"        // invalid name","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, INVALID_EVENTNAME_DESC + DATE_DESC_TEST + TIME_DESC_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"                EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        // invalid date","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, NAME_DESC_TEST + INVALID_EVENTDATE_DESC + TIME_DESC_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"                EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        // invalid time","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, NAME_DESC_TEST + DATE_DESC_TEST + INVALID_EVENTTIME_DESC,","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"                EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_EVENTDATE_DESC + TIME_DESC_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"                EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"        // non-empty preamble","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + INVALID_NAME_DESC + DATE_DESC_TEST + TIME_DESC_TEST,","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":110}},{"path":"src/test/java/nustracker/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.EVENTNAME_ONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.TypicalStudents.STUDENTID_ONE;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.DeleteStudentCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":" * outside of the DeleteCommand code. For example, inputs \"s/1\" and \"s/1 abc\" take the","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":" *","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":" * Note: This javadoc is from the original test. To edit when delete s/ no longer is by index.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    public void parse_validArgs_returnsDeleteStudentCommand() {","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_STUDENTID + STUDENTID_ONE,","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"                new DeleteStudentCommand(STUDENTID_ONE));","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"                        + PREFIX_STUDENTID + STUDENTID_ONE + \" \"","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"                        + PREFIX_EVENT + EVENTNAME_ONE,","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"                new DeleteStudentCommand(STUDENTID_ONE));","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"                        + PREFIX_EVENT + EVENTNAME_ONE + \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"                        + PREFIX_STUDENTID + STUDENTID_ONE,","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"                new DeleteStudentCommand(STUDENTID_ONE));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    public void parse_validArgs_returnsDeleteEventCommand() {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_EVENT + EVENTNAME_ONE,","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"                new DeleteEventCommand(EVENTNAME_ONE));","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, \" missing prefixes \",","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"        assertParseFailure(parser, \" \" + PREFIX_STUDENTID, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"        assertParseFailure(parser, \" \" + PREFIX_EVENT, EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"syoopie":2,"Joel-Sung":34,"rehad-a":6,"-":22}},{"path":"src/test/java/nustracker/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"//import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"TLChicken"},"content":"//import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"TLChicken"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"TLChicken"},"content":"//import nustracker.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"TLChicken"},"content":"//import nustracker.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.student.Email;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.student.Name;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.tag.Tag;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"//import nustracker.testutil.EditStudentDescriptorBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"//import nustracker.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"//","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"TLChicken"},"content":"//import static nustracker.logic.commands.CommandTestUtil.*;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"    //        // no index specified","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"TLChicken"},"content":"    //        // no field specified","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_BOB_WO_LEADING_SPACE,","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"TLChicken"},"content":"    //              EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"    //        // no index and no field specified","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"    //        // negative index","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, \"-5\"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"    //        // zero index","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, \"0\"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"    //        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"TLChicken"},"content":"    //        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"    //        // invalid phone followed by valid email","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"    //        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"TLChicken"},"content":"    //        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"TLChicken"},"content":"    //        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"    //        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"    //                + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.TAG_DESC_FRIEND + TAG_EMPTY","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"    //                + TAG_EMPTY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"    //        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"rehad-a"},"content":"    //        CommandParserTestUtil.assertParseFailure(parser, STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"    //                  + CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"    //                        + CommandTestUtil.INVALID_EMAIL_DESC + CommandTestUtil.VALID_PHONE_AMY,","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"    //                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"rehad-a"},"content":"    //        String studentIdStr \u003d VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"rehad-a"},"content":"    //        String userInput \u003d STUDENTID_DESC_AMY_WO_LEADING_SPACE","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"    //        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"    //                        CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"    //                .withPhone(CommandTestUtil.VALID_PHONE_BOB).withEmail(CommandTestUtil.VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"    //                .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"rehad-a"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"rehad-a"},"content":"    //        String studentIdStr \u003d VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"rehad-a"},"content":"    //        String userInput \u003d STUDENTID_DESC_AMY_WO_LEADING_SPACE + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"    //        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"    //                        CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"TLChicken"},"content":"    //                .withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"rehad-a"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"TLChicken"},"content":"    //        // name","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"rehad-a"},"content":"    //        String studentIdStr \u003d VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"rehad-a"},"content":"    //        String userInput \u003d STUDENTID_DESC_BOB_WO_LEADING_SPACE + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"TLChicken"},"content":"    //        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withName(","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"TLChicken"},"content":"    //                CommandTestUtil.VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"rehad-a"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"TLChicken"},"content":"    //        // phone","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"rehad-a"},"content":"    //        userInput \u003d STUDENTID_DESC_BOB_WO_LEADING_SPACE + CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"TLChicken"},"content":"    //        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"rehad-a"},"content":"    //        expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"TLChicken"},"content":"    //        // email","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"rehad-a"},"content":"    //        userInput \u003d STUDENTID_DESC_BOB_WO_LEADING_SPACE + CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"TLChicken"},"content":"    //        descriptor \u003d new EditStudentDescriptorBuilder().withEmail(CommandTestUtil.VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"rehad-a"},"content":"    //        expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"TLChicken"},"content":"    //        // tags","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"rehad-a"},"content":"    //        userInput \u003d STUDENTID_DESC_BOB_WO_LEADING_SPACE + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"TLChicken"},"content":"    //        descriptor \u003d new EditStudentDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"rehad-a"},"content":"    //        expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"rehad-a"},"content":"    //        String studentIdStr \u003d VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"rehad-a"},"content":"    //        String userInput \u003d STUDENTID_DESC_AMY_WO_LEADING_SPACE + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.EMAIL_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"TLChicken"},"content":"    //        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"TLChicken"},"content":"    //                        CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"TLChicken"},"content":"    //                .withEmail(CommandTestUtil.VALID_EMAIL_BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND,","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"TLChicken"},"content":"    //                        CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"TLChicken"},"content":"    //                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"rehad-a"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"TLChicken"},"content":"    //        // no other valid values specified","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"rehad-a"},"content":"    //        String studentIdStr \u003d VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"rehad-a"},"content":"    //        String userInput \u003d STUDENTID_DESC_AMY_WO_LEADING_SPACE + CommandTestUtil.INVALID_PHONE_DESC","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"TLChicken"},"content":"    //        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withPhone(","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"TLChicken"},"content":"    //                CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"rehad-a"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"TLChicken"},"content":"    //        // other valid values specified","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"rehad-a"},"content":"    //        userInput \u003d STUDENTID_DESC_AMY_WO_LEADING_SPACE + CommandTestUtil.EMAIL_DESC_BOB","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"TLChicken"},"content":"    //                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"TLChicken"},"content":"    //        descriptor \u003d new EditStudentDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB).withEmail(","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"TLChicken"},"content":"    //                CommandTestUtil.VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"rehad-a"},"content":"    //        expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"TLChicken"},"content":"    //    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"TLChicken"},"content":"    //    public void parse_resetTags_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"rehad-a"},"content":"    //        String studentIdStr \u003d VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"rehad-a"},"content":"    //        String userInput \u003d STUDENTID_DESC_AMY_WO_LEADING_SPACE + TAG_EMPTY;","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"TLChicken"},"content":"    //        EditCommand.EditStudentDescriptor descriptor \u003d new EditStudentDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"rehad-a"},"content":"    //        EditCommand expectedCommand \u003d new EditCommand(new StudentId(studentIdStr), descriptor);","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"TLChicken"},"content":"    //","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"TLChicken"},"content":"    //        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"TLChicken"},"content":"    //    }","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":14,"TLChicken":157,"rehad-a":38}},{"path":"src/test/java/nustracker/logic/parser/ExportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EXPORT_FILE_NAME_1;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EXPORT_FILE_NAME_2;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EXPORT_FILE_NAME_3;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EXPORT_FILE_NAME_4;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EXPORT_FILE_NAME_5;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EXPORT_FILE_NAME_6;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EXPORT_FILE_NAME_7;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.INVALID_EXPORT_FILE_NAME_8;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"class ExportCommandParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"    void parse_invalidCharacter1_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"                new ExportCommandParser().parse(INVALID_EXPORT_FILE_NAME_1));","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"    void parse_invalidCharacter2_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"                new ExportCommandParser().parse(INVALID_EXPORT_FILE_NAME_2));","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"    void parse_invalidCharacter3_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"                new ExportCommandParser().parse(INVALID_EXPORT_FILE_NAME_3));","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"    void parse_invalidCharacter4_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"                new ExportCommandParser().parse(INVALID_EXPORT_FILE_NAME_4));","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"    void parse_invalidCharacter5_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"                new ExportCommandParser().parse(INVALID_EXPORT_FILE_NAME_5));","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"    void parse_invalidCharacter6_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"                new ExportCommandParser().parse(INVALID_EXPORT_FILE_NAME_6));","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"    void parse_invalidCharacter7_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"                new ExportCommandParser().parse(INVALID_EXPORT_FILE_NAME_7));","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"    void parse_invalidCharacter8_throwsParseException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"                new ExportCommandParser().parse(INVALID_EXPORT_FILE_NAME_8));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"syoopie":66}},{"path":"src/test/java/nustracker/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import nustracker.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterIdCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"import nustracker.logic.commands.FilterNameCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.EnrolledEventsContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentIdContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"    public void parse_validArgs_returnsFilterNameCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"                new FilterNameCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Alice Bob\", expectedFilterCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \" + PREFIX_NAME + \" \\n Alice \\n \\t Bob  \\t\",","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"                expectedFilterCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"    public void parse_validArgs_returnsFilterIdCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"                new FilterIdCommand(new StudentIdContainsKeywordsPredicate(Arrays.asList(\"e1234567\", \"e2345678\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \" + PREFIX_STUDENTID + \"e1234567 e2345678\",","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"rehad-a"},"content":"                expectedFilterCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \" + PREFIX_STUDENTID + \" \\n e1234567 \\n \\t e2345678  \\t\",","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"                expectedFilterCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"rehad-a"},"content":"    public void parse_validArgs_returnsFilterEventCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"rehad-a"},"content":"        FilterCommand expectedFilterCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"rehad-a"},"content":"                new FilterEventCommand(new EnrolledEventsContainsKeywordsPredicate(\"event name\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"rehad-a"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \" + PREFIX_EVENT + \"event name\", expectedFilterCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"rehad-a"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \" + PREFIX_EVENT + \" \\n\\t event name \\n\",","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"rehad-a"},"content":"                expectedFilterCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"rehad-a":64}},{"path":"src/test/java/nustracker/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"                ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_STUDENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"syoopie":24,"-":96}},{"path":"src/test/java/nustracker/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"public class AddressBookTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"    public void constructor() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"        assertEquals(Collections.emptyList(), addressBook.getStudentList());","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        AddressBook newData \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"    public void resetData_withDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"        // Two students with the same identity fields","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"        List\u003cStudent\u003e newStudents \u003d Arrays.asList(TypicalStudents.ALICE, editedAlice);","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newStudents);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e addressBook.hasStudent(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"        assertFalse(addressBook.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"        addressBook.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"        assertTrue(addressBook.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"    public void hasStudent_studentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"        addressBook.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"        assertTrue(addressBook.hasStudent(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"    public void getStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getStudentList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"syoopie"},"content":"     * A stub ReadOnlyAddressBook whose students list can violate interface constraints.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"        private final ObservableList\u003cStudent\u003e students \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"syoopie"},"content":"        AddressBookStub(Collection\u003cStudent\u003e students) {","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"            this.students.setAll(students);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"            return students;","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"            return events;","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":95,"Joel-Sung":7,"wowsiddanth":2}},{"path":"src/test/java/nustracker/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"        Assertions.assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, true, \"#E9AFFF\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"wowsiddanth"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, true, \"#E9AFFF\");","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"    public void hasStudent_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasStudent(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"    public void hasStudent_studentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"        assertFalse(modelManager.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"    public void hasStudent_studentInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"        modelManager.addStudent(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        assertTrue(modelManager.hasStudent(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"    public void getFilteredStudentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"                modelManager.getFilteredStudentList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withStudent(TypicalStudents.ALICE)","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"                .withStudent(TypicalStudents.BENSON).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"syoopie"},"content":"        String[] keywords \u003d TypicalStudents.ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"syoopie"},"content":"        modelManager.updateFilteredStudentList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"syoopie"},"content":"        modelManager.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"syoopie":26,"wowsiddanth":2,"-":105}},{"path":"src/test/java/nustracker/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"syoopie":5,"-":16}},{"path":"src/test/java/nustracker/model/event/EventDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"class EventDateTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventTime(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventDate(invalidDate));","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"        // null event dates","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventDate.isValidDate(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"        // invalid event dates","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\" \")); // spaces only","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\"09 10 2021\")); // spaces instead of dash","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\"09102021\")); // no dashes","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\"09-ab-2021\")); // alphabets within digits","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\"09-13-2021\")); // invalid month","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\"09-00-2021\")); // invalid month","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\"32-10-2021\")); // invalid day","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventDate.isValidDate(\"00-10-2021\")); // invalid day","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        // valid event dates","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventDate.isValidDate(\"09-10-2021\")); // current date","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventDate.isValidDate(\"31-12-3000\")); // late date","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventDate.isValidDate(\"01-01-1900\")); // early date","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":42}},{"path":"src/test/java/nustracker/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"class EventNameTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_invalidEventName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventName(invalidName));","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public void isValidEventName() {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        // null name","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventName.isValidName(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        // invalid name","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        // valid name","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":40}},{"path":"src/test/java/nustracker/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTDATE_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTNAME_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTTIME_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_PARTICIPANT_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.testutil.EventBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"class EventTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e event.getParticipants().remove(0));","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    public void isSameEvent() {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(TEST.isSameEvent(TEST));","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(TEST.isSameEvent(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        Event editedTest \u003d new EventBuilder(TEST).withDate(VALID_EVENTDATE_FINAL).withTime(VALID_EVENTTIME_FINAL)","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"                .withParticipants(VALID_PARTICIPANT_FINAL).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(TEST.isSameEvent(editedTest));","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        editedTest \u003d new EventBuilder(TEST).withName(VALID_EVENTNAME_FINAL).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(TEST.isSameEvent(editedTest));","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"        Event editedFinal \u003d new EventBuilder(FINAL).withName(VALID_EVENTNAME_FINAL.toLowerCase()).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(FINAL.isSameEvent(editedFinal));","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"        String nameWithTrailingSpaces \u003d VALID_EVENTNAME_FINAL + \" \";","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"        editedFinal \u003d new EventBuilder(FINAL).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(FINAL.isSameEvent(editedFinal));","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    public void equals() {","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"        Event testCopy \u003d new EventBuilder(TEST).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(TEST.equals(testCopy));","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(TEST.equals(TEST));","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(TEST.equals(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(TEST.equals(5));","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(TEST.equals(FINAL));","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"        Event editedTest \u003d new EventBuilder(TEST).withName(VALID_EVENTNAME_FINAL).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(TEST.equals(editedTest));","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"        editedTest \u003d new EventBuilder(TEST).withDate(VALID_EVENTDATE_FINAL).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(TEST.equals(editedTest));","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"        editedTest \u003d new EventBuilder(TEST).withTime(VALID_EVENTTIME_FINAL).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(TEST.equals(editedTest));","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        // different participants -\u003e returns true","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"        editedTest \u003d new EventBuilder(TEST).withParticipants(VALID_PARTICIPANT_FINAL).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(TEST.equals(editedTest));","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":86,"TLChicken":2}},{"path":"src/test/java/nustracker/model/event/EventTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"class EventTimeTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventDate(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventTime(invalidTime));","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventTime.isValidTime(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"        // invalid phone numbers","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventTime.isValidTime(\"\")); // empty string","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventTime.isValidTime(\" \")); // spaces only","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventTime.isValidTime(\"12:00 pm\")); // 12 hr time","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventTime.isValidTime(\"15000\")); // too many numbers","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventTime.isValidTime(\"2401\")); // too large","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventTime.isValidTime(\"-1300\")); // negative","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(EventTime.isValidTime(\"19-00\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        // valid phone numbers","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventTime.isValidTime(\"1500\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventTime.isValidTime(\"2359\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventTime.isValidTime(\"0000\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(EventTime.isValidTime(\"2400\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":41}},{"path":"src/test/java/nustracker/model/event/ParticipantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"class ParticipantTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Participant(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"    public void isValidParticipantName() {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"        // null tag name","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e Participant.isValidParticipant(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":20}},{"path":"src/test/java/nustracker/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.model.event;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTDATE_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTTIME_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import java.util.List;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.testutil.EventBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"class UniqueEventListTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertFalse(uniqueEventList.contains(TEST));","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(uniqueEventList.contains(TEST));","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        Event editedTest \u003d new EventBuilder(TEST).withDate(VALID_EVENTDATE_FINAL).withTime(VALID_EVENTTIME_FINAL)","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"                .build();","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertTrue(uniqueEventList.contains(editedTest));","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(TEST));","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"    public void get_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.get(null));","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    public void get_existingEvent_returnsTest() {","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(TEST, uniqueEventList.get(TEST.getName()));","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"    public void get_nonExistingEvent_returnsNull() {","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(null, uniqueEventList.get(new EventName(\"event name does not exist\")));","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, TEST));","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(TEST, null));","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(TEST, TEST));","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.setEvent(TEST, TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"        expectedUniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"        Event editedTest \u003d new EventBuilder(TEST).withDate(VALID_EVENTDATE_FINAL).withTime(VALID_EVENTTIME_FINAL)","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"                .build();","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.setEvent(TEST, editedTest);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"Joel-Sung"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"        expectedUniqueEventList.add(editedTest);","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.setEvent(TEST, FINAL);","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"        expectedUniqueEventList.add(FINAL);","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(FINAL);","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(TEST, FINAL));","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"Joel-Sung"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(TEST));","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"Joel-Sung"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.remove(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"Joel-Sung"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"Joel-Sung"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"Joel-Sung"},"content":"        expectedUniqueEventList.add(FINAL);","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.add(TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"Joel-Sung"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(FINAL);","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"Joel-Sung"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"Joel-Sung"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"Joel-Sung"},"content":"        expectedUniqueEventList.add(FINAL);","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"Joel-Sung"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"Joel-Sung"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"Joel-Sung"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(TEST, TEST);","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"Joel-Sung"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"Joel-Sung"},"content":"                uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":186}},{"path":"src/test/java/nustracker/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"syoopie":6,"-":63}},{"path":"src/test/java/nustracker/model/student/MajorContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"public class MajorContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"        List\u003cMajor\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"cs\").stream().map(","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"            x -\u003e new Major(x)).collect(Collectors.toUnmodifiableList());","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"        List\u003cMajor\u003e secondPredicateKeywordList \u003d Arrays.asList(\"cs\", \"is\").stream().map(","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"            x -\u003e new Major(x)).collect(Collectors.toUnmodifiableList());","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"        MajorContainsKeywordsPredicate firstPredicate \u003d new MajorContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"        MajorContainsKeywordsPredicate secondPredicate \u003d new MajorContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"        MajorContainsKeywordsPredicate firstPredicateCopy \u003d new MajorContainsKeywordsPredicate(","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rehad-a":42}},{"path":"src/test/java/nustracker/model/student/MajorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"public class MajorTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Major(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    public void constructor_invalidMajor_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        String invalidMajor \u003d \"Computer Science\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Major(invalidMajor));","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public void isValidMajor() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        //null major","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Major(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        //invalid majors","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Major.isValidMajor(\"Computer Sciences\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Major.isValidMajor(\"Information Systems\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Major.isValidMajor(\"Information Security\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Major.isValidMajor(\"Business Analytics\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Major.isValidMajor(\"CSS\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Major.isValidMajor(\"Systems\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Major.isValidMajor(\"InfoSec\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Major.isValidMajor(\"BA\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        //valid majors","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Major.isValidMajor(\"CS\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Major.isValidMajor(\"IS\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Major.isValidMajor(\"ISEC\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Major.isValidMajor(\"BZA\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"wowsiddanth":44}},{"path":"src/test/java/nustracker/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"        assertTrue(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"        assertFalse(predicate.test(new StudentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"wowsiddanth"},"content":"                .withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"syoopie":10,"wowsiddanth":1,"-":64}},{"path":"src/test/java/nustracker/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"syoopie":6,"-":35}},{"path":"src/test/java/nustracker/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"syoopie":6,"-":35}},{"path":"src/test/java/nustracker/model/student/StudentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"public class StudentIdTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"    public void constructor_invalidStudentId_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"        String invalidStudentId \u003d \"8471132\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentId(invalidStudentId));","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"    public void isValidStudentId() {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"        //null studentId","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"        //invalid studentIds","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"        assertFalse(StudentId.isValidStudentId(\"e012323\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"        assertFalse(StudentId.isValidStudentId(\"e123133\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        assertFalse(StudentId.isValidStudentId(\"e931138\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"        assertFalse(StudentId.isValidStudentId(\"e831639\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"        assertFalse(StudentId.isValidStudentId(\"a123199\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"        assertFalse(StudentId.isValidStudentId(\"b981239\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"        assertFalse(StudentId.isValidStudentId(\"e918329\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"        assertFalse(StudentId.isValidStudentId(\"e912812\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"        //valid majors","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"        assertTrue(StudentId.isValidStudentId(\"e1234897\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"        assertTrue(StudentId.isValidStudentId(\"e1234890\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"        assertTrue(StudentId.isValidStudentId(\"e8971232\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"        assertTrue(StudentId.isValidStudentId(\"e8912372\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"rehad-a":44}},{"path":"src/test/java/nustracker/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_MAJOR_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_MAJOR_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_YEAR_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_YEAR_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"public class StudentTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"    public void hasDuplicateCredentials() {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(TypicalStudents.ALICE.hasDuplicateCredentials(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.hasDuplicateCredentials(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"        // same studentId, phone number, email, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"        Student editedAmy \u003d new StudentBuilder(TypicalStudents.AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"                .withYear(VALID_YEAR_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"                .withMajor(VALID_MAJOR_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"                .withStudentId(VALID_STUDENTID_AMY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(TypicalStudents.AMY.hasDuplicateCredentials(editedAmy));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"        // different studentId, all other attributes same -\u003e returns false (since email and phone is the same)","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"        editedAmy \u003d new StudentBuilder(TypicalStudents.ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(TypicalStudents.ALICE.hasDuplicateCredentials(editedAmy));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"        // different phone, all other attributes same -\u003e returns true (since studentId and email is the same)","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"        editedAmy \u003d new StudentBuilder(TypicalStudents.ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(TypicalStudents.ALICE.hasDuplicateCredentials(editedAmy));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"rehad-a"},"content":"        // different email, all other attributes same -\u003e returns true (since studentId and phone is the same)","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        editedAmy \u003d new StudentBuilder(TypicalStudents.ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(TypicalStudents.ALICE.hasDuplicateCredentials(editedAmy));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"        Student aliceCopy \u003d new StudentBuilder(TypicalStudents.ALICE).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(TypicalStudents.ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"        Assertions.assertTrue(TypicalStudents.ALICE.equals(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(5));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"        // different student -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(TypicalStudents.BOB));","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"        // different phone -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"        // different year -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withYear(VALID_YEAR_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"        // different major -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"syoopie"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withMajor(VALID_MAJOR_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"rehad-a"},"content":"        // different studentId -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"rehad-a"},"content":"        editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"        Assertions.assertFalse(TypicalStudents.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":86,"rehad-a":10}},{"path":"src/test/java/nustracker/model/student/UniqueStudentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.exceptions.DuplicateStudentException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.exceptions.StudentNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.StudentBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"public class UniqueStudentListTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"    private final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"    public void contains_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.contains(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"    public void contains_studentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"        assertFalse(uniqueStudentList.contains(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"    public void contains_studentInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"        assertTrue(uniqueStudentList.contains(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"    public void contains_studentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        assertTrue(uniqueStudentList.contains(editedAlice));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"    public void add_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniqueStudentList.add(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"    public void add_duplicateStudent_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.add(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"    public void setStudent_nullTargetStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.setStudent(null, TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"    public void setStudent_nullEditedStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.setStudent(TypicalStudents.ALICE, null));","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"    public void setStudent_targetStudentNotInList_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(StudentNotFoundException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.setStudent(TypicalStudents.ALICE, TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"    public void setStudent_editedStudentIsSameStudent_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.setStudent(TypicalStudents.ALICE, TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"        expectedUniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"    public void setStudent_editedStudentHasSameIdentity_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"        Student editedAlice \u003d new StudentBuilder(TypicalStudents.ALICE).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":89,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.setStudent(TypicalStudents.ALICE, editedAlice);","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"        expectedUniqueStudentList.add(editedAlice);","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"    public void setStudent_editedStudentHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.setStudent(TypicalStudents.ALICE, TypicalStudents.BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"        expectedUniqueStudentList.add(TypicalStudents.BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"syoopie"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"syoopie"},"content":"    public void setStudent_editedStudentHasNonUniqueIdentity_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.setStudent(TypicalStudents.ALICE, TypicalStudents.BOB));","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"syoopie"},"content":"    public void remove_nullStudent_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.remove(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"    public void remove_studentDoesNotExist_throwsStudentNotFoundException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(StudentNotFoundException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.remove(TypicalStudents.ALICE));","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"    public void remove_existingStudent_removesStudent() {","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.remove(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"syoopie"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"syoopie"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"syoopie"},"content":"    public void setStudents_nullUniqueStudentList_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.setStudents((UniqueStudentList) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"syoopie"},"content":"    public void setStudents_uniqueStudentList_replacesOwnListWithProvidedUniqueStudentList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"syoopie"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":142,"author":{"gitId":"syoopie"},"content":"        expectedUniqueStudentList.add(TypicalStudents.BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.setStudents(expectedUniqueStudentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":144,"author":{"gitId":"syoopie"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"syoopie"},"content":"    public void setStudents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.setStudents((List\u003cStudent\u003e) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"syoopie"},"content":"    public void setStudents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.add(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"syoopie"},"content":"        List\u003cStudent\u003e studentList \u003d Collections.singletonList(TypicalStudents.BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":157,"author":{"gitId":"syoopie"},"content":"        uniqueStudentList.setStudents(studentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"syoopie"},"content":"        UniqueStudentList expectedUniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"syoopie"},"content":"        expectedUniqueStudentList.add(TypicalStudents.BOB);","lastModifiedDate":"2021-10-07"},{"lineNumber":160,"author":{"gitId":"syoopie"},"content":"        assertEquals(expectedUniqueStudentList, uniqueStudentList);","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":162,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":163,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":164,"author":{"gitId":"syoopie"},"content":"    public void setStudents_listWithDuplicateStudents_throwsDuplicateStudentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"syoopie"},"content":"        List\u003cStudent\u003e listWithDuplicateStudents \u003d Arrays.asList(TypicalStudents.ALICE, TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(DuplicateStudentException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.setStudents(listWithDuplicateStudents));","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":169,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":170,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"syoopie"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":173,"author":{"gitId":"syoopie"},"content":"                uniqueStudentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":174,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":175,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":173,"wowsiddanth":2}},{"path":"src/test/java/nustracker/model/student/YearContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehad-a"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"rehad-a"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"rehad-a"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"rehad-a"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"rehad-a"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"rehad-a"},"content":"public class YearContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"rehad-a"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"rehad-a"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"rehad-a"},"content":"        List\u003cYear\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"1\").stream().map(","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"rehad-a"},"content":"            x -\u003e new Year(x)).collect(Collectors.toUnmodifiableList());","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"rehad-a"},"content":"        List\u003cYear\u003e secondPredicateKeywordList \u003d Arrays.asList(\"1\", \"2\").stream().map(","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"rehad-a"},"content":"            x -\u003e new Year(x)).collect(Collectors.toUnmodifiableList());","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"rehad-a"},"content":"        YearContainsKeywordsPredicate firstPredicate \u003d new YearContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"        YearContainsKeywordsPredicate secondPredicate \u003d new YearContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"rehad-a"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"rehad-a"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"rehad-a"},"content":"        YearContainsKeywordsPredicate firstPredicateCopy \u003d new YearContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"rehad-a"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"rehad-a"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"rehad-a"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"rehad-a"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"        // different predicates -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"rehad-a"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"rehad-a"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"rehad-a"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"rehad-a":41}},{"path":"src/test/java/nustracker/model/student/YearTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wowsiddanth"},"content":"package nustracker.model.student;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"wowsiddanth"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"wowsiddanth"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"wowsiddanth"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"wowsiddanth"},"content":"public class YearTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"wowsiddanth"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"wowsiddanth"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Year(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"wowsiddanth"},"content":"    public void constructor_invalidYear_throwsInvalidArgumentException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"wowsiddanth"},"content":"        String invalidYear \u003d \"Sophomore\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"wowsiddanth"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Major(invalidYear));","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"wowsiddanth"},"content":"    public void isValidYear() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"wowsiddanth"},"content":"        //null year","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"wowsiddanth"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Year(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"wowsiddanth"},"content":"        //invalid years","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"First\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Second\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Third\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Fourth\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Fifth\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Sixth\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"One\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Two\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Three\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Four\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Five\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"wowsiddanth"},"content":"        assertFalse(Year.isValidYear(\"Six\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        //valid years","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Year.isValidYear(\"1\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Year.isValidYear(\"2\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Year.isValidYear(\"3\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Year.isValidYear(\"4\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Year.isValidYear(\"5\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"        assertTrue(Year.isValidYear(\"6\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"wowsiddanth"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"wowsiddanth":50}},{"path":"src/test/java/nustracker/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.ORIENTATION;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import java.util.List;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"class JsonAdaptedEventTest {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    private static final String INVALID_EVENTNAME \u003d \"R@chel\";","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    private static final String INVALID_EVENTDATE \u003d \"123-456-789\";","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    private static final String INVALID_EVENTTIME \u003d \"9988\";","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    private static final String INVALID_PARTICIPANT \u003d \"#friend\";","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    private static final String VALID_EVENTNAME \u003d ORIENTATION.getName().toString();","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    private static final String VALID_EVENTDATE \u003d ORIENTATION.getDate().getEventDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"    private static final String VALID_EVENTTIME \u003d ORIENTATION.getTime().getEventTime();","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    private static final List\u003cJsonAdaptedParticipant\u003e VALID_PARTICIPANTS \u003d ORIENTATION.getParticipants().stream()","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"            .map(JsonAdaptedParticipant::new)","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(ORIENTATION);","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"        Assertions.assertEquals(ORIENTATION, event.toModelType());","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"                new JsonAdaptedEvent(INVALID_EVENTNAME, VALID_EVENTDATE, VALID_EVENTTIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d EventName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"                null, VALID_EVENTDATE, VALID_EVENTTIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventName.class.getSimpleName());","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"                new JsonAdaptedEvent(VALID_EVENTNAME, INVALID_EVENTDATE, VALID_EVENTTIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d EventDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"                VALID_EVENTNAME, null, VALID_EVENTTIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDate.class.getSimpleName());","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"                new JsonAdaptedEvent(VALID_EVENTNAME, VALID_EVENTDATE, INVALID_EVENTTIME, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d EventTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"                VALID_EVENTNAME, VALID_EVENTDATE, null, VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventTime.class.getSimpleName());","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"    @Test","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"    public void toModelType_invalidParticipants_throwsIllegalValueException() {","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"        List\u003cJsonAdaptedParticipant\u003e invalidParticipants \u003d new ArrayList\u003c\u003e(VALID_PARTICIPANTS);","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"        invalidParticipants.add(new JsonAdaptedParticipant(INVALID_PARTICIPANT));","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"                new JsonAdaptedEvent(VALID_EVENTNAME, VALID_EVENTDATE, VALID_EVENTTIME, invalidParticipants);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":96}},{"path":"src/test/java/nustracker/storage/JsonAdaptedStudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"public class JsonAdaptedStudentTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"    private static final String INVALID_YEAR \u003d \"a\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    private static final String INVALID_MAJOR \u003d \"Computer Science\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"rehad-a"},"content":"    private static final String INVALID_STUDENTID \u003d \"e123123123123\";","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"    private static final String VALID_NAME \u003d TypicalStudents.BENSON.getName().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"    private static final String VALID_PHONE \u003d TypicalStudents.BENSON.getPhone().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"    private static final String VALID_EMAIL \u003d TypicalStudents.BENSON.getEmail().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"    private static final String VALID_YEAR \u003d TypicalStudents.BENSON.getYear().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"    private static final String VALID_MAJOR \u003d TypicalStudents.BENSON.getMajor().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"rehad-a"},"content":"    private static final String VALID_STUDENTID \u003d TypicalStudents.BENSON.getStudentId().toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"    public void toModelType_validStudentDetails_returnsStudent() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(TypicalStudents.BENSON);","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"        Assertions.assertEquals(TypicalStudents.BENSON, student.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"                new JsonAdaptedStudent(INVALID_NAME, VALID_PHONE, VALID_YEAR,","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"rehad-a"},"content":"                        VALID_MAJOR, VALID_STUDENTID, VALID_EMAIL);","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(null, VALID_PHONE, VALID_MAJOR, VALID_YEAR,","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"rehad-a"},"content":"                VALID_STUDENTID, VALID_EMAIL);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"                new JsonAdaptedStudent(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_YEAR,","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"rehad-a"},"content":"                        VALID_MAJOR, VALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"rehad-a"},"content":"                VALID_YEAR, VALID_MAJOR, VALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"                Phone.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"rehad-a"},"content":"                        VALID_YEAR, VALID_MAJOR, VALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"syoopie"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"rehad-a"},"content":"                VALID_YEAR, VALID_MAJOR, VALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"syoopie"},"content":"                Email.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"    public void toModelType_invalidYear_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"rehad-a"},"content":"                        INVALID_YEAR, VALID_MAJOR, VALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d Year.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"    public void toModelType_nullYear_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"rehad-a"},"content":"                null, VALID_MAJOR, VALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"syoopie"},"content":"                Year.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"syoopie"},"content":"    public void toModelType_invalidMajor_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"syoopie"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"rehad-a"},"content":"                        VALID_YEAR, INVALID_MAJOR, VALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d Major.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"syoopie"},"content":"    public void toModelType_nullMajor_throwsIllegalValueException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"rehad-a"},"content":"                VALID_YEAR, null, VALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":124,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"syoopie"},"content":"                Major.class.getSimpleName());","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"rehad-a"},"content":"    public void toModelType_invalidStudentId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"syoopie"},"content":"                new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"rehad-a"},"content":"                        VALID_YEAR, VALID_MAJOR, INVALID_STUDENTID);","lastModifiedDate":"2021-10-21"},{"lineNumber":134,"author":{"gitId":"rehad-a"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"syoopie"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":139,"author":{"gitId":"rehad-a"},"content":"    public void toModelType_nullStudentId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"syoopie"},"content":"        JsonAdaptedStudent student \u003d new JsonAdaptedStudent(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"wowsiddanth"},"content":"                VALID_YEAR, VALID_MAJOR, null);","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"syoopie"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedStudent.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"rehad-a"},"content":"                StudentId.class.getSimpleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, student::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":145,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":146,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":127,"wowsiddanth":1,"rehad-a":18}},{"path":"src/test/java/nustracker/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"            \"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"                DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"                        readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"syoopie"},"content":"    public void readAddressBook_invalidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"                DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"                        readAddressBook(\"invalidStudentAddressBook.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"    public void readAddressBook_invalidAndValidStudentAddressBook_throwDataConversionException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"syoopie"},"content":"                DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"                        readAddressBook(\"invalidAndValidStudentAddressBook.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":71,"author":{"gitId":"syoopie"},"content":"        AddressBook original \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"syoopie"},"content":"        original.addStudent(TypicalStudents.HOON);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"syoopie"},"content":"        original.removeStudent(TypicalStudents.ALICE);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        original.addStudent(TypicalStudents.IDA);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":27,"-":88}},{"path":"src/test/java/nustracker/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.util.JsonUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"TLChicken"},"content":"//import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"TLChicken"},"content":"//import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"    private static final Path INVALID_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidStudentAddressBook.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"    private static final Path DUPLICATE_STUDENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateStudentAddressBook.json\");","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"    public void toModelType_typicalStudentsFile_success() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"TLChicken"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_STUDENTS_FILE,","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"TLChicken"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"TLChicken"},"content":"    //        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    //        AddressBook typicalStudentsAddressBook \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"    //        assertEquals(addressBookFromFile, typicalStudentsAddressBook);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"    public void toModelType_invalidStudentFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_STUDENT_FILE,","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"    public void toModelType_duplicateStudents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_STUDENT_FILE,","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_STUDENT,","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"syoopie":20,"TLChicken":8,"-":19}},{"path":"src/test/java/nustracker/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, true, \"#E9AFFF\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, true, \"#E9AFFF\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"wowsiddanth"},"content":"        Path prefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(prefsFilePath);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"wowsiddanth"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, true, \"#E9AFFF\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"syoopie":9,"wowsiddanth":5,"-":109}},{"path":"src/test/java/nustracker/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"import nustracker.model.UserPrefs;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.TypicalStudents;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"wowsiddanth"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, true,","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"wowsiddanth"},"content":"                \"#E9AFFF\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"syoopie"},"content":"        AddressBook original \u003d TypicalStudents.getTypicalAddressBook();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":7,"wowsiddanth":2,"-":60}},{"path":"src/test/java/nustracker/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":" * {@code AddressBook ab \u003d new AddressBookBuilder().withStudent(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"     * Adds a new {@code Student} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"    public AddressBookBuilder withStudent(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":7,"-":27}},{"path":"src/test/java/nustracker/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                                    Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"syoopie":1,"-":33}},{"path":"src/test/java/nustracker/testutil/EditStudentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":" * A utility class to help with building EditStudentDescriptor objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"public class EditStudentDescriptorBuilder {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"    private EditCommand.EditStudentDescriptor descriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"    public EditStudentDescriptorBuilder() {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"        descriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    public EditStudentDescriptorBuilder(EditCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"        this.descriptor \u003d new EditCommand.EditStudentDescriptor(descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"     * Returns an {@code EditStudentDescriptor} with fields containing {@code student}\u0027s details","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"    public EditStudentDescriptorBuilder(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"        descriptor \u003d new EditCommand.EditStudentDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"        descriptor.setName(student.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"        descriptor.setPhone(student.getPhone());","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"        descriptor.setEmail(student.getEmail());","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"        descriptor.setYear(student.getYear());","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"        descriptor.setMajor(student.getMajor());","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"rehad-a"},"content":"        descriptor.setStudentId(student.getStudentId());","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Name} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"    public EditStudentDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Phone} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"    public EditStudentDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Email} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"syoopie"},"content":"    public EditStudentDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Year} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"    public EditStudentDescriptorBuilder withYear(String year) {","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"        descriptor.setYear(new Year(year));","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Major} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"    public EditStudentDescriptorBuilder withMajor(String major) {","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"        descriptor.setMajor(new Major(major));","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"rehad-a"},"content":"     * Sets the {@code StudentId} of the {@code EditStudentDescriptor} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"    public EditStudentDescriptorBuilder withStudentId(String studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"rehad-a"},"content":"        descriptor.setStudentId(new StudentId(studentId));","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"syoopie"},"content":"    public EditCommand.EditStudentDescriptor build() {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"syoopie":35,"wowsiddanth":12,"rehad-a":5,"-":39}},{"path":"src/test/java/nustracker/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Participant;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"public class EventBuilder {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"    public static final String DEFAULT_NAME \u003d \"Test event\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    public static final String DEFAULT_DATE \u003d \"09-10-2021\";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    public static final String DEFAULT_TIME \u003d \"1530\";","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    private EventName name;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    private EventDate date;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    private EventTime time;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    private Set\u003cParticipant\u003e participants;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        name \u003d new EventName(DEFAULT_NAME);","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        date \u003d new EventDate(DEFAULT_DATE);","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        time \u003d new EventTime(DEFAULT_TIME);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        participants \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    public EventBuilder(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"        name \u003d event.getName();","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"        date \u003d event.getDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        time \u003d event.getTime();","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"        participants \u003d event.getParticipants();","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"        this.name \u003d new EventName(name);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"     * Parses the {@code participants} into a {@code Set\u003cParticipants\u003e} and set it to the {@code Event} that we are","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"     * building.","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"    public EventBuilder withParticipants(String ... participants) {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"        this.participants \u003d SampleDataUtil.getParticipantSet();","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"TLChicken"},"content":"     * Parses the {@code participantSet} and set it to the {@code Event} that we are","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"TLChicken"},"content":"     * building.","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"TLChicken"},"content":"    public EventBuilder withParticipantSet(Set\u003cParticipant\u003e participantSet) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"TLChicken"},"content":"        this.participants \u003d participantSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"TLChicken"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"rehad-a"},"content":"     * Parses the {@code studentId} and add it as a {@code Participant} to the {@code Event} that we are","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"TLChicken"},"content":"     * building.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"rehad-a"},"content":"    public EventBuilder addParticipant(String studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"        Participant toAdd \u003d new Participant(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"TLChicken"},"content":"        Set\u003cParticipant\u003e updatedParticipants \u003d new HashSet\u003c\u003e(participants);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"        updatedParticipants.add(toAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"TLChicken"},"content":"        participants \u003d updatedParticipants;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"TLChicken"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"     * Sets the {@code Date} of the {@code Event} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"    public EventBuilder withDate(String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"        this.date \u003d new EventDate(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"     * Sets the {@code Time} of the {@code Event} that we are building.","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"    public EventBuilder withTime(String time) {","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"        this.time \u003d new EventTime(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"        return this;","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"    public Event build() {","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"        return new Event(name, date, time, participants);","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":84,"TLChicken":18,"rehad-a":3}},{"path":"src/test/java/nustracker/testutil/EventUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.CreateCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.logic.commands.EditCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":" * A utility class for Event.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"public class EventUtil {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"     * Returns an add command string for adding the {@code event}.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"    public static String getCreateCommand(Event event) {","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"        return CreateCommand.COMMAND_WORD + \" \" + getEventDetails(event);","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"     * Returns the part of command string for the given {@code event}\u0027s details.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    public static String getEventDetails(Event event) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        sb.append(PREFIX_NAME + event.getName().toString() + \" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"        sb.append(PREFIX_DATE + event.getDate().getEventDate() + \" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"        sb.append(PREFIX_TIME + event.getTime().getEventTime() + \" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"     * Returns the part of command string for the given {@code EditEventDescriptor}\u0027s details.","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    public static String getEditEventDescriptorDetails(EditCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        // To use when event filtering feature is implemented","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"        return \"\";","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Joel-Sung":41}},{"path":"src/test/java/nustracker/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.commons.core.GuiSettings;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Joel-Sung"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Joel-Sung"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"rehad-a"},"content":"    public Student getStudent(StudentId studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"TLChicken"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"    public Event getEvent(EventName name) {","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"Joel-Sung"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"Joel-Sung"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"Joel-Sung"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"Joel-Sung"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Joel-Sung"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"Joel-Sung"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Joel-Sung"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Joel-Sung"},"content":"    public void setStudent(Student target, Student editedPerson) {","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"TLChicken"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"TLChicken"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"Joel-Sung"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"Joel-Sung"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"Joel-Sung"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":120,"TLChicken":9,"rehad-a":2}},{"path":"src/test/java/nustracker/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":1,"-":71}},{"path":"src/test/java/nustracker/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Email;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Major;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Name;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Phone;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Year;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"public class StudentBuilder {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"wowsiddanth"},"content":"    public static final String DEFAULT_YEAR \u003d \"2\";","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"wowsiddanth"},"content":"    public static final String DEFAULT_MAJOR \u003d \"CS\";","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rehad-a"},"content":"    public static final String DEFAULT_STUDENTID \u003d \"e1234567\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"wowsiddanth"},"content":"    private Year year;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"wowsiddanth"},"content":"    private Major major;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"    private StudentId studentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"    private EnrolledEvents enrolledEvents;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"    public StudentBuilder() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"        year \u003d new Year(DEFAULT_YEAR);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"        major \u003d new Major(DEFAULT_MAJOR);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"rehad-a"},"content":"        studentId \u003d new StudentId(DEFAULT_STUDENTID);","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"        enrolledEvents \u003d new EnrolledEvents();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"     * Initializes the StudentBuilder with the data of {@code studentToCopy}.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"syoopie"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"        phone \u003d studentToCopy.getPhone();","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"        email \u003d studentToCopy.getEmail();","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        year \u003d studentToCopy.getYear();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"syoopie"},"content":"        major \u003d studentToCopy.getMajor();","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"rehad-a"},"content":"        studentId \u003d studentToCopy.getStudentId();","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"TLChicken"},"content":"        enrolledEvents \u003d studentToCopy.getEvents();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Name} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Phone} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"syoopie"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Email} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"syoopie"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Year} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"syoopie"},"content":"    public StudentBuilder withYear(String year) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"wowsiddanth"},"content":"        this.year \u003d new Year(year);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"wowsiddanth"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"syoopie"},"content":"     * Sets the {@code Major} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"syoopie"},"content":"    public StudentBuilder withMajor(String major) {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"wowsiddanth"},"content":"        this.major \u003d new Major(major);","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"wowsiddanth"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"wowsiddanth"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"rehad-a"},"content":"     * Sets the {@code StudentId} of the {@code Student} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"wowsiddanth"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"rehad-a"},"content":"    public StudentBuilder withStudentId(String studentId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"rehad-a"},"content":"        this.studentId \u003d new StudentId(studentId);","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"        return this;","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"TLChicken"},"content":"     * Sets the {@code EnrolledEvents} of the {@code Student} that we are building to contain {@code event}.","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"TLChicken"},"content":"    public StudentBuilder withEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"TLChicken"},"content":"        this.enrolledEvents.enrollIntoEvent(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"Joel-Sung"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"TLChicken"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"TLChicken"},"content":"     * Sets the {@code EnrolledEvents} of the {@code Student} that we are building","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"TLChicken"},"content":"     * to the provided {@code enrolledEvents}.","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"TLChicken"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"TLChicken"},"content":"    public StudentBuilder withEvents(EnrolledEvents enrolledEvents) {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"TLChicken"},"content":"        this.enrolledEvents \u003d enrolledEvents;","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"TLChicken"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"TLChicken"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"syoopie"},"content":"    public Student build() {","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"rehad-a"},"content":"        return new Student(name, phone, email, year, major, studentId, enrolledEvents);","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"syoopie":30,"TLChicken":16,"Joel-Sung":6,"wowsiddanth":23,"rehad-a":9,"-":44}},{"path":"src/test/java/nustracker/testutil/StudentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import nustracker.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":" * A utility class for Student.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"public class StudentUtil {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"     * Returns an add command string for adding the {@code student}.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"syoopie"},"content":"    public static String getAddCommand(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"syoopie"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getStudentDetails(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"     * Returns the part of command string for the given {@code student}\u0027s details.","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"    public static String getStudentDetails(Student student) {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"syoopie"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"        sb.append(CliSyntax.PREFIX_NAME + student.getName().fullName + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"syoopie"},"content":"        sb.append(CliSyntax.PREFIX_PHONE + student.getPhone().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"        sb.append(CliSyntax.PREFIX_EMAIL + student.getEmail().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"syoopie"},"content":"        sb.append(CliSyntax.PREFIX_YEAR + student.getYear().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"        sb.append(CliSyntax.PREFIX_MAJOR + student.getMajor().value + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"rehad-a"},"content":"        sb.append(CliSyntax.PREFIX_STUDENTID + student.getStudentId().value + \" \");","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"syoopie"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"syoopie"},"content":"     * Returns the part of command string for the given {@code EditStudentDescriptor}\u0027s details.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"    public static String getEditStudentDescriptorDetails(EditCommand.EditStudentDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"syoopie"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"syoopie"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(CliSyntax.PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"syoopie"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(CliSyntax.PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"syoopie"},"content":"        descriptor.getYear().ifPresent(year -\u003e sb.append(CliSyntax.PREFIX_YEAR).append(year.value).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        descriptor.getMajor().ifPresent(major -\u003e sb.append(CliSyntax.PREFIX_MAJOR).append(major.value).append(\" \"));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"        descriptor.getStudentId().ifPresent(studentId -\u003e sb.append(CliSyntax.PREFIX_STUDENTID).append(","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"rehad-a"},"content":"                studentId.value).append(\" \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"syoopie"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"syoopie":45,"rehad-a":3}},{"path":"src/test/java/nustracker/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import nustracker.model.Model;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"     * Returns the middle index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size() / 2);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"     * Returns the last index of the student in the {@code model}\u0027s student list.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"syoopie"},"content":"        return Index.fromOneBased(model.getFilteredStudentList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"syoopie"},"content":"     * Returns the student in the {@code model}\u0027s student list at {@code index}.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"syoopie"},"content":"    public static Student getStudent(Model model, Index index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"syoopie"},"content":"        return model.getFilteredStudentList().get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"syoopie":11,"-":44}},{"path":"src/test/java/nustracker/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.ORIENTATION;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalEvents.SPORTS_CAMP;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalStudents.BENSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalStudents.CARL;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalStudents.DANIEL;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalStudents.ELLE;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalStudents.FIONA;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.testutil.TypicalStudents.GEORGE;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"TLChicken"},"content":"import nustracker.model.student.EnrolledEvents;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"    private TypicalAddressBook() {} // prevents instantiation","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Joel-Sung"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Joel-Sung"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Joel-Sung"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Joel-Sung"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Joel-Sung"},"content":"            ab.addEvent(event);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"TLChicken"},"content":"            Set\u003cStudent\u003e studentParticipants \u003d event.getParticipantsAsStudents(ab);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"TLChicken"},"content":"            for (Student currStudent : studentParticipants) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"TLChicken"},"content":"                if (currStudent \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"TLChicken"},"content":"                    continue;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"TLChicken"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"TLChicken"},"content":"                EnrolledEvents currentlyEnrolledEvents \u003d currStudent.getEvents();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"TLChicken"},"content":"                EnrolledEvents updatedEnrolledEvents \u003d currentlyEnrolledEvents.enrollIntoEvent(event);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"TLChicken"},"content":"                Student enrolledStudent \u003d new Student(","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"TLChicken"},"content":"                        currStudent.getName(), currStudent.getPhone(), currStudent.getEmail(),","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"rehad-a"},"content":"                        currStudent.getYear(), currStudent.getMajor(), currStudent.getStudentId(),","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"                        updatedEnrolledEvents);","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"TLChicken"},"content":"                ab.setStudent(currStudent, enrolledStudent);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"TLChicken"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Joel-Sung"},"content":"        return ab;","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Joel-Sung"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Joel-Sung"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Joel-Sung"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Joel-Sung"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ORIENTATION, SPORTS_CAMP));","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Joel-Sung":47,"TLChicken":17,"wowsiddanth":1,"rehad-a":1}},{"path":"src/test/java/nustracker/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Joel-Sung"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTDATE_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTDATE_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTNAME_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTNAME_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTTIME_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EVENTTIME_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_PARTICIPANT_FINAL;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Joel-Sung"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_PARTICIPANT_TEST;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.EventName;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"Joel-Sung"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Joel-Sung"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Joel-Sung"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"Joel-Sung"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Joel-Sung"},"content":"    public static final Event ORIENTATION \u003d new EventBuilder().withName(\"Orientation Camp\")","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"Joel-Sung"},"content":"            .withDate(\"01-08-2022\")","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Joel-Sung"},"content":"            .withTime(\"0900\")","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"Joel-Sung"},"content":"            .withParticipants(\"e1234567\", \"e0544182\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"    public static final Event SPORTS_CAMP \u003d new EventBuilder().withName(\"Sports Camp\")","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"Joel-Sung"},"content":"            .withDate(\"10-09-2021\")","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Joel-Sung"},"content":"            .withTime(\"1200\")","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Joel-Sung"},"content":"            .withParticipants(\"e7654321\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"TLChicken"},"content":"    public static final Event MATH_OLYMPIAD \u003d new EventBuilder().withName(\"Math Olympiad\")","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"TLChicken"},"content":"            .withDate(\"05-03-2017\")","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"TLChicken"},"content":"            .withTime(\"1615\")","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"TLChicken"},"content":"            .withParticipants(\"e0322322\", \"e0544224\", \"e0123456\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Joel-Sung"},"content":"    // For delete event tests","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Joel-Sung"},"content":"    public static final EventName EVENTNAME_ONE \u003d new EventName(\"Orientation Camp\");","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Joel-Sung"},"content":"    public static final EventName EVENTNAME_TWO \u003d new EventName(\"Sports Camp\");","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"TLChicken"},"content":"    public static final EventName EVENTNAME_THREE \u003d new EventName(\"Math Olympiad\");","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Joel-Sung"},"content":"    public static final EventName EVENTNAME_INVALID \u003d new EventName(\"does not exist\");","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Joel-Sung"},"content":"    // Manually added - Event\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Joel-Sung"},"content":"    public static final Event TEST \u003d new EventBuilder().withName(VALID_EVENTNAME_TEST).withDate(VALID_EVENTDATE_TEST)","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Joel-Sung"},"content":"            .withTime(VALID_EVENTTIME_TEST).withParticipants(VALID_PARTICIPANT_TEST).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Joel-Sung"},"content":"    public static final Event FINAL \u003d new EventBuilder().withName(VALID_EVENTNAME_FINAL).withDate(VALID_EVENTDATE_FINAL)","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Joel-Sung"},"content":"            .withTime(VALID_EVENTTIME_FINAL).withParticipants(VALID_PARTICIPANT_FINAL).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Joel-Sung"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Joel-Sung"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Joel-Sung":41,"TLChicken":5}},{"path":"src/test/java/nustracker/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import nustracker.commons.core.index.Index;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"    public static final Index INDEX_FIRST_STUDENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"    public static final Index INDEX_SECOND_STUDENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"syoopie"},"content":"    public static final Index INDEX_THIRD_STUDENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"syoopie":5,"-":7}},{"path":"src/test/java/nustracker/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.testutil;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_MAJOR_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_MAJOR_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_STUDENTID_AMY;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"rehad-a"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_STUDENTID_BOB;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_YEAR_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import static nustracker.logic.commands.CommandTestUtil.VALID_YEAR_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"TLChicken"},"content":"import static nustracker.testutil.TypicalEvents.MATH_OLYMPIAD;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"TLChicken"},"content":"import static nustracker.testutil.TypicalEvents.ORIENTATION;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"TLChicken"},"content":"import static nustracker.testutil.TypicalEvents.SPORTS_CAMP;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"syoopie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"syoopie"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"syoopie"},"content":"import java.util.List;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"syoopie"},"content":"import nustracker.model.AddressBook;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Joel-Sung"},"content":"import nustracker.model.event.Event;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"syoopie"},"content":"import nustracker.model.student.Student;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"rehad-a"},"content":"import nustracker.model.student.StudentId;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"syoopie"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"syoopie"},"content":"public class TypicalStudents {","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"syoopie"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"1\")","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"CS\")","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e9034800\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"syoopie"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"wowsiddanth"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"3\")","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"IS\")","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e8123198\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"syoopie"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"wowsiddanth"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"4\")","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"ISEC\")","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e8123081\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"syoopie"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"wowsiddanth"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"2\")","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"BZA\")","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e9012390\")","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"rehad-a"},"content":"            .withEmail(\"cornelia@example.com\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"syoopie"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"94822248\")","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"3\")","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"CS\")","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e9831818\")","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"94824271\")","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"4\")","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"CS\")","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e9192390\")","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"syoopie"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"94824112\")","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"2\")","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"IS\")","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e9123119\")","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"2\")","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"CS\")","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e9193111\").build();","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"syoopie"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"TLChicken"},"content":"            .withEmail(\"ida@example.com\")","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(\"3\")","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(\"CS\")","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e9131111\")","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"wowsiddanth"},"content":"            .build();","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":86,"author":{"gitId":"TLChicken"},"content":"    // Manually added - Students already enrolled in Math Olympiad - To Test Remove Command","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"TLChicken"},"content":"    public static final Student GOD \u003d new StudentBuilder().withName(\"God Water\").withPhone(\"96227231\")","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"TLChicken"},"content":"            .withEmail(\"god@example.com\")","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"TLChicken"},"content":"            .withYear(\"6\")","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"TLChicken"},"content":"            .withMajor(\"CS\")","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e0123456\")","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"TLChicken"},"content":"            .withEvent(MATH_OLYMPIAD)","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"TLChicken"},"content":"            .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"TLChicken"},"content":"    public static final Student HANS \u003d new StudentBuilder().withName(\"Hans Thrower\").withPhone(\"96322322\")","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"TLChicken"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"TLChicken"},"content":"            .withYear(\"1\")","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"TLChicken"},"content":"            .withMajor(\"CS\")","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(\"e0322322\")","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"wowsiddanth"},"content":"            .withEvent(MATH_OLYMPIAD).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"TLChicken"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"syoopie"},"content":"    // Manually added - Student\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"syoopie"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(VALID_YEAR_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(VALID_MAJOR_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(VALID_STUDENTID_AMY).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"syoopie"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"wowsiddanth"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"wowsiddanth"},"content":"            .withYear(VALID_YEAR_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"wowsiddanth"},"content":"            .withMajor(VALID_MAJOR_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"rehad-a"},"content":"            .withStudentId(VALID_STUDENTID_BOB).build();","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"rehad-a"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":117,"author":{"gitId":"Joel-Sung"},"content":"    // For delete student tests","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"rehad-a"},"content":"    public static final StudentId STUDENTID_ONE \u003d new StudentId(\"e9034800\");","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"rehad-a"},"content":"    public static final StudentId STUDENTID_TWO \u003d new StudentId(\"e8123198\");","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"rehad-a"},"content":"    public static final StudentId STUDENTID_MISSING \u003d new StudentId(\"e0000000\");","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"syoopie"},"content":"    private TypicalStudents() {","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"syoopie"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"syoopie"},"content":"     * Returns an {@code AddressBook} with all the typical students.","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"syoopie"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"syoopie"},"content":"            ab.addStudent(student);","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":134,"author":{"gitId":"Joel-Sung"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"Joel-Sung"},"content":"            ab.addEvent(event);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"Joel-Sung"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":140,"author":{"gitId":"syoopie"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"TLChicken"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE, GOD, HANS));","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":143,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"Joel-Sung"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"TLChicken"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ORIENTATION, SPORTS_CAMP, MATH_OLYMPIAD));","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Joel-Sung"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"Joel-Sung"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"syoopie":38,"TLChicken":19,"Joel-Sung":11,"wowsiddanth":36,"rehad-a":21,"-":23}},{"path":"src/test/java/nustracker/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"syoopie"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"syoopie":3,"-":33}},{"path":"src/test/java/nustracker/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"syoopie"},"content":"package nustracker.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"syoopie"},"content":"import nustracker.MainApp;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"syoopie"},"content":"import nustracker.testutil.Assert;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"syoopie"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"syoopie":15,"-":99}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"\u003c?import nustracker.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"syoopie":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"syoopie"},"content":"\u003cfx:root type\u003d\"nustracker.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"syoopie":1,"-":5}}]
