[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"# DukePro(f)","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"\u003chr /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T11-4/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"DukePro(f) is an application that assists **professors in the university** in planning for their weekly engagements. ","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"Amidst long hours of lectures and tutorials in the week, professors may still need to cater timeslots for **student ","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"consultations**, which can be hard to come by and difficult to keep track of. ","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"It is named `DukePro(f)` (Duke-Professor) because our project\u0027s target audience is professors, and it is also a nod ","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"to our CS2103T iP (individual Project), which was named `Duke`.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"# Usage","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"\u003chr /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"With DukePro(f), professors will be able to:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"  * block out timeslots for lecture/tutorial/personal commitments","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"  * query for available consultation timeslots","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"  * add, delete or edit consultation timeslots","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"  * list all consultation timeslots","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"# Acknowledgement","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"\u003chr /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Jacobnbh":28,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"run {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"CSYGalvin":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"## CS2103T T11 Team 4","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"### Jacob Ng","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"images/jacobnbh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"[[github](https://github.com/jacobnbh)]","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"* Role: Developer","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"### Ruth Poh","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"\u003cimg src\u003d\"images/ruthpohrp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"[[github](https://github.com/ruthpohrp)]","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"### Chan Shi Yuan Galvin","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"\u003cimg src\u003d\"images/csygalvin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"[[github](http://github.com/csygalvin)]","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"### Quan Teng Foong","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"\u003cimg src\u003d\"images/kaldius.png\" width\u003d\"200px\" alt\u003d\"kaldius_photo\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"[github](http://github.com/kaldius)","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"luluyousef"},"content":"### Yousef Lulu Saud A","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"luluyousef"},"content":"\u003cimg src\u003d\"images/luluyousef.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"luluyousef"},"content":"[github](https://github.com/luluyousef)","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"luluyousef"},"content":"[portfolio](team/johndoe.md)","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"luluyousef":4,"Jacobnbh":4,"kaldius":3,"ruthpohrp":4,"-":32,"CSYGalvin":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-T11-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"CSYGalvin"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"CSYGalvin"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `EventListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"CSYGalvin"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-T11-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"* depends on some classes in the `Model` component, as it displays `Event` object residing in the `Model`.","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"CSYGalvin"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"CSYGalvin"},"content":"1. When `Logic` is called upon to execute a command, it uses the `ScheduleParser` class to parse the user command.","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add an event).","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"CSYGalvin"},"content":"* When called upon to parse a user command, the `ScheduleParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `ScheduleParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"CSYGalvin"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"CSYGalvin"},"content":"* stores the schedule data i.e., all `Event` objects (which are contained in a `SortEventList` object).","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"kaldius"},"content":"* stores the currently \u0027selected\u0027 `Event` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cEvent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"CSYGalvin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Schedule`, which `Event` references. This allows `Schedule` to only require one `Tag` object per unique tag, instead of each `Event` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"CSYGalvin"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-T11-4/tp/blob/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"CSYGalvin"},"content":"* can save both schedule data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"CSYGalvin"},"content":"* inherits from both `ScheduleStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"CSYGalvin"},"content":"Classes used by multiple components are in the `seedu.address.commons` package.","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"CSYGalvin"},"content":"### SortedEventList - Galvin","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"CSYGalvin"},"content":"#### Description","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"CSYGalvin"},"content":"The `SortedEventList` class provides an abstraction over an internal list of `Events`. ","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"CSYGalvin"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"CSYGalvin"},"content":"The `SortedEventList` class contains 2 fields, `internalList` and `internalUnmodifiableList`.","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"CSYGalvin"},"content":"The `internalList` is an `ObservableArrayList` that is not sorted.","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"CSYGalvin"},"content":"The `internalUnmodifiableList` is a `SortedList` that wraps around the `internalList` to maintain the sorted property of Events","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"CSYGalvin"},"content":"The `SortedEventList#asUnmodifiableObservableList()` method returns an ObservableList that `Schedule` uses as a field to store events. This ObservableList will have its Events sorted chronologically.","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"luluyousef"},"content":"### UpcomingEventsCommand - Lulu","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"luluyousef"},"content":"#### Description","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"luluyousef"},"content":"The `UpcomingEventCommand` class is a command that lists all the events scheduled for the current day.","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"luluyousef"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"luluyousef"},"content":"The `UpcomingEventsCommand` class has one field `datePredicate` of type `EventContainsTodaysDatePredicate`.","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"luluyousef"},"content":"`EventContainsTodaysDatePredicate` is  a class that checks whether an event\u0027s date matches today\u0027s date.","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"luluyousef"},"content":"The `UpcomingEventsCommand` utilizes the `updateFilteredEventList()` method in the `Model` class to return an updated filtered event list that is filtered by the `datePredicate`.","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"luluyousef"},"content":"### NextEventCommand - Lulu","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"luluyousef"},"content":"#### Description","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"luluyousef"},"content":"The `NextEventCommand` class is a command that displays the next event based on the current time in the schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"luluyousef"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"luluyousef"},"content":"The `NextEventCommand` class has one field timePredicate of type EventContainsCurrentTimePredicate.","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"luluyousef"},"content":"`EventContainsCurrentTimePredicate` is  a class that checks whether an event\u0027s timeslot is after the current time.","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"luluyousef"},"content":"The `NextEventCommand` utilizes the `updateFilteredEventList()` method in the `Model` class to return an updated filtered upcoming event that is filtered by the `timePredicate`.","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"luluyousef"},"content":"Next, it gets the first event in the filtered list using the overridden method `nextEventInTheList()` found in the `ModelManager` class.","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"luluyousef"},"content":"### Remark feature - Ruth","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"ruthpohrp"},"content":"#### Description","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"ruthpohrp"},"content":"The remark feature is an optional description added to `Event`. It adds a remark to the","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"consultation event, and is stored internally as a `Remark` in `seedu.address.model.event.Event`.","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"ruthpohrp"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"The `Remark` class has one field `value` of type String.","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"Unlike the other Objects in `Event`, all `Remark` inputs are valid, and hence do not need to check for Validity, unless the input is `null`.","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"There are two ways the remark can be added to an `Event`:","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"* `AddCommand(Event)` method  — Adds a new `Event` to the list (now with an optional remark description attached to it).","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"* `EditCommand(Event)` method — Edits the remark description of an existing `Event` on the list.","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"As a Remark is an optional input, if user does not input any remarks when adding a new event, the Remark will simply be stored as an empty String `””` in `Remark` in `Event` as default.","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"ruthpohrp"},"content":"To display the remark in the GUI, a new `Label` called `remark` is added to `EventCard` as well as `EventListCard.fxml`.","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"kaldius"},"content":"### TimeSlot - Teng Foong","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"kaldius"},"content":"#### Description","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"kaldius"},"content":"The `TimeSlot` class encapsulates the concept of an Event taking up a certain time period.","lastModifiedDate":"2021-10-20"},{"lineNumber":221,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":222,"author":{"gitId":"kaldius"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":223,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"kaldius"},"content":"The `TimeSlot` class has 2 fields, `startTime` and `endTime` and their values hold what their names imply.","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":226,"author":{"gitId":"kaldius"},"content":"A `TimeSlot` can be compared to another `TimeSlot` and this is done **only** using their `startTime` fields.","lastModifiedDate":"2021-10-20"},{"lineNumber":227,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":228,"author":{"gitId":"Jacobnbh"},"content":"### CommandSummaryCommand - Jacob","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"Jacobnbh"},"content":"#### Description","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"Jacobnbh"},"content":"The `CommandSummaryCommand` class is a command that opens a pop-up window containing a Command Summary of DukePro(f)\u0027s","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"Jacobnbh"},"content":"possible commands.","lastModifiedDate":"2021-10-27"},{"lineNumber":233,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"Jacobnbh"},"content":"#### Implementation","lastModifiedDate":"2021-10-27"},{"lineNumber":235,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"Jacobnbh"},"content":"This implementation of this command adds another parameter `showCommands` (which has a default value of `false`) to the ","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"Jacobnbh"},"content":"constructor of `CommandResult`.","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"Jacobnbh"},"content":"When the command `command_summary` is input by the user, `LogicManager` parses the input and returns a ","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"Jacobnbh"},"content":"`CommandSummaryCommand`. The `execute` method is called with the `showCommands` parameter being set to `true`. ","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"Jacobnbh"},"content":"This causes `MainWindow` to execute the `handleCommandSummary` method, which opens the Command Summary Page.","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"CSYGalvin"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedSchedule`. It extends `Schedule` with an undo/redo history, stored internally as an `scheduleStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2021-10-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"CSYGalvin"},"content":"* `VersionedSchedule#commit()` — Saves the current schedule state in its history.","lastModifiedDate":"2021-10-11"},{"lineNumber":250,"author":{"gitId":"CSYGalvin"},"content":"* `VersionedSchedule#undo()` — Restores the previous schedule state from its history.","lastModifiedDate":"2021-10-11"},{"lineNumber":251,"author":{"gitId":"CSYGalvin"},"content":"* `VersionedSchedule#redo()` — Restores a previously undone schedule state from its history.","lastModifiedDate":"2021-10-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"CSYGalvin"},"content":"These operations are exposed in the `Model` interface as `Model#commitSchedule()`, `Model#undoSchedule()` and `Model#redoSchedule()` respectively.","lastModifiedDate":"2021-10-11"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"CSYGalvin"},"content":"Step 1. The user launches the application for the first time. The `VersionedSchedule` will be initialized with the initial schedule state, and the `currentStatePointer` pointing to that single schedule state.","lastModifiedDate":"2021-10-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"CSYGalvin"},"content":"Step 2. The user executes `delete 5` command to delete the 5th event in the schedule. The `delete` command calls `Model#commitSchedule()`, causing the modified state of the schedule after the `delete 5` command executes to be saved in the `scheduleStateList`, and the `currentStatePointer` is shifted to the newly inserted schedule state.","lastModifiedDate":"2021-10-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"CSYGalvin"},"content":"Step 3. The user executes `add n/David …​` to add a new event. The `add` command also calls `Model#commitSchedule()`, causing another modified schedule state to be saved into the `scheduleStateList`.","lastModifiedDate":"2021-10-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"CSYGalvin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitSchedule()`, so the schedule state will not be saved into the `scheduleStateList`.","lastModifiedDate":"2021-10-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"CSYGalvin"},"content":"Step 4. The user now decides that adding the event was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoSchedule()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous schedule state, and restores the schedule to that state.","lastModifiedDate":"2021-10-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"CSYGalvin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial Schedule state, then there are no previous Schedule states to restore. The `undo` command uses `Model#canUndoSchedule()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-10-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"CSYGalvin"},"content":"The `redo` command does the opposite — it calls `Model#redoSchedule()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the schedule to that state.","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"CSYGalvin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `scheduleStateList.size() - 1`, pointing to the latest schedule state, then there are no undone Schedule states to restore. The `redo` command uses `Model#canRedoSchedule()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-10-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"CSYGalvin"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the schedule, such as `list`, will usually not call `Model#commitSchedule()`, `Model#undoSchedule()` or `Model#redoSchedule()`. Thus, the `scheduleStateList` remains unchanged.","lastModifiedDate":"2021-10-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"CSYGalvin"},"content":"Step 6. The user executes `clear`, which calls `Model#commitSchedule()`. Since the `currentStatePointer` is not pointing at the end of the `scheduleStateList`, all schedule states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"CSYGalvin"},"content":"* **Alternative 1 (current choice):** Saves the entire schedule.","lastModifiedDate":"2021-10-11"},{"lineNumber":313,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"kaldius"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the event being deleted).","lastModifiedDate":"2021-10-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"kaldius"},"content":"* is a professor in a university","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"kaldius"},"content":"* has a need to manage a significant number of commitments (i.e. lectures, tutorials, consultations)","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"kaldius"},"content":"**Value proposition**: manage daily commitments faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"kaldius"},"content":"| `* * *`  | user                                       | add a consultation event       | easily record and remember consultation sessions with my students      |","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"kaldius"},"content":"| `* * *`  | user                                       | delete a consultation event    | forget about cancelled consultations and free up my timetable          |","lastModifiedDate":"2021-09-29"},{"lineNumber":364,"author":{"gitId":"kaldius"},"content":"| `* * *`  | user                                       | list out all my events         | find out what is my next engagement                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"kaldius"},"content":"| `* * *`  | user                                       | list out all my free slots     | find a suitable slot to add a commitment                               |","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"kaldius"},"content":"| `* * *`  | user                                       | save all the data entered      | view the data again the next time I open the app                       |","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"kaldius"},"content":"| `* * *`  | busy user with many daily events           | search for an event by name    | locate the details of events without going through the entire list     |","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"kaldius"},"content":"| `* * *`  | user                                       | block certain time slots       | reserve some private time for family/personal commitments              |","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"ruthpohrp"},"content":"| `* * *`  | meticulous user                            | add remarks to my events       | add details that I need to make preparations for before the event      |","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"kaldius"},"content":"| `* * *`  | user                                       | edit a previously added event  | update changes in the details of my event                              |","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"kaldius"},"content":"| `* * *`  | user                                       | exit the app                   |                                                                        |","lastModifiedDate":"2021-10-13"},{"lineNumber":372,"author":{"gitId":"kaldius"},"content":"| `* *`    | user                                       | add tags to my events          | group them more easily                                                 |","lastModifiedDate":"2021-10-13"},{"lineNumber":373,"author":{"gitId":"kaldius"},"content":"| `* *`    | new user                                   | click a link to access the product website | receive help regarding any problems I have with the app    |","lastModifiedDate":"2021-10-13"},{"lineNumber":374,"author":{"gitId":"kaldius"},"content":"| `* *`    | user                                       | clear the list of events       | empty out everything quickly instead of deleting them one by one       |","lastModifiedDate":"2021-10-13"},{"lineNumber":375,"author":{"gitId":"kaldius"},"content":"| `* *`    | user                                       | list the upcoming events in the day | take note of what I should make preparations for                  |","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"kaldius"},"content":"| `* *`    | user                                       | view the next upcoming event   | find out what is my next engagement                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"kaldius"},"content":"| `* *`    | user                                       | print my schedule with censored details | send it to my students to see my available timings while maintaining confidentiality |","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"kaldius"},"content":"| `*`      | new user                                   | see usage instructions/examples| refer to the instructions to learn how to optimize my usage of the app |","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"kaldius"},"content":"(For all use cases below, the **System** is the `DukePro(f)` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"kaldius"},"content":"**Use case: Delete an event**","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"kaldius"},"content":"1.  User requests to list events","lastModifiedDate":"2021-09-29"},{"lineNumber":389,"author":{"gitId":"kaldius"},"content":"2.  DukePro(f) shows the list of events","lastModifiedDate":"2021-09-29"},{"lineNumber":390,"author":{"gitId":"kaldius"},"content":"3.  User requests to delete a specific event in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":391,"author":{"gitId":"kaldius"},"content":"4.  DukePro(f) deletes the event","lastModifiedDate":"2021-09-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"kaldius"},"content":"    * 3a1. DukePro(f) shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":408,"author":{"gitId":"kaldius"},"content":"**Use case: Edit an event**","lastModifiedDate":"2021-09-29"},{"lineNumber":409,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":410,"author":{"gitId":"kaldius"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":411,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":412,"author":{"gitId":"kaldius"},"content":"1. User requests to list events","lastModifiedDate":"2021-09-29"},{"lineNumber":413,"author":{"gitId":"kaldius"},"content":"2. DukePro(f) shows the list of events","lastModifiedDate":"2021-09-29"},{"lineNumber":414,"author":{"gitId":"kaldius"},"content":"3. User requests to edit a specific event in the list and provides the necessary information for the fields to edit","lastModifiedDate":"2021-09-29"},{"lineNumber":415,"author":{"gitId":"kaldius"},"content":"4. DukePro(f) shows the list of events, with the newly edited event","lastModifiedDate":"2021-09-29"},{"lineNumber":416,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":417,"author":{"gitId":"kaldius"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":418,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":419,"author":{"gitId":"kaldius"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-29"},{"lineNumber":420,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":421,"author":{"gitId":"kaldius"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":422,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":423,"author":{"gitId":"kaldius"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":424,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":425,"author":{"gitId":"kaldius"},"content":"    * 3a1. DukePro(f) shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"kaldius"},"content":"* 3b. The given fields do not exist.","lastModifiedDate":"2021-09-29"},{"lineNumber":430,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":431,"author":{"gitId":"kaldius"},"content":"    * 3b1. DukePro(f) shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":432,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":433,"author":{"gitId":"kaldius"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":434,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":435,"author":{"gitId":"kaldius"},"content":"* 3c. The given fields exist, but the given information is improperly formatted.","lastModifiedDate":"2021-09-29"},{"lineNumber":436,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"kaldius"},"content":"    * 3c1. DukePro(f) shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":438,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":439,"author":{"gitId":"kaldius"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":441,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":442,"author":{"gitId":"kaldius"},"content":"**Use case: Search for an event**","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":444,"author":{"gitId":"kaldius"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":446,"author":{"gitId":"kaldius"},"content":"1. User requests to search events","lastModifiedDate":"2021-09-29"},{"lineNumber":447,"author":{"gitId":"kaldius"},"content":"2. DukePro(f) shows a list of events which have the search term in their name","lastModifiedDate":"2021-09-29"},{"lineNumber":448,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":449,"author":{"gitId":"kaldius"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":450,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":451,"author":{"gitId":"kaldius"},"content":"* 2a. No matches to the search term","lastModifiedDate":"2021-09-29"},{"lineNumber":452,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":453,"author":{"gitId":"kaldius"},"content":"  *2a1. DukePro(f) shows an empty list","lastModifiedDate":"2021-09-29"},{"lineNumber":454,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":455,"author":{"gitId":"kaldius"},"content":"  Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"CSYGalvin"},"content":"1.  Should be able to hold up to 1000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-30"},{"lineNumber":460,"author":{"gitId":"CSYGalvin"},"content":"2.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-30"},{"lineNumber":461,"author":{"gitId":"CSYGalvin"},"content":"3.  The product should be for a single user.","lastModifiedDate":"2021-09-30"},{"lineNumber":462,"author":{"gitId":"CSYGalvin"},"content":"4.  The data should be stored locally and should be in a human editable text file.","lastModifiedDate":"2021-09-30"},{"lineNumber":463,"author":{"gitId":"CSYGalvin"},"content":"5.  The software should work on all Mainstream OS.","lastModifiedDate":"2021-09-30"},{"lineNumber":464,"author":{"gitId":"CSYGalvin"},"content":"6.  The software should work without requiring an installer.","lastModifiedDate":"2021-09-30"},{"lineNumber":465,"author":{"gitId":"CSYGalvin"},"content":"7.  Package everything into a single JAR file.","lastModifiedDate":"2021-09-30"},{"lineNumber":466,"author":{"gitId":"CSYGalvin"},"content":"8.  The GUI should work well standard screen resolutions 1920x1080 and higher and for screen scales 100% and 125%.","lastModifiedDate":"2021-09-30"},{"lineNumber":467,"author":{"gitId":"CSYGalvin"},"content":"9.  The GUI should be usable for resolutions 1280x720 and higher and for screen scales 150%.","lastModifiedDate":"2021-09-30"},{"lineNumber":468,"author":{"gitId":"CSYGalvin"},"content":"10. The Developer Guide and User Guide should be PDF-friendly.","lastModifiedDate":"2021-09-30"},{"lineNumber":469,"author":{"gitId":"CSYGalvin"},"content":"11. The product and its features should be testable under exam conditions.","lastModifiedDate":"2021-09-30"},{"lineNumber":470,"author":{"gitId":"CSYGalvin"},"content":"12. Schedule should be displayed in an easy-to-read format.","lastModifiedDate":"2021-09-30"},{"lineNumber":471,"author":{"gitId":"CSYGalvin"},"content":"13. JAR file should not exceed 100MB.","lastModifiedDate":"2021-09-30"},{"lineNumber":472,"author":{"gitId":"CSYGalvin"},"content":"14. Document files should not exceed 15MB per file.","lastModifiedDate":"2021-09-30"},{"lineNumber":473,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"CSYGalvin"},"content":"* **Event**: A period of time to be blocked off","lastModifiedDate":"2021-09-30"},{"lineNumber":481,"author":{"gitId":"CSYGalvin"},"content":"* **Date**: Date of event","lastModifiedDate":"2021-09-30"},{"lineNumber":482,"author":{"gitId":"kaldius"},"content":"* **TimeSlot**: Time period of an event","lastModifiedDate":"2021-10-20"},{"lineNumber":483,"author":{"gitId":"CSYGalvin"},"content":"* **Location**: Location of event","lastModifiedDate":"2021-09-30"},{"lineNumber":484,"author":{"gitId":"CSYGalvin"},"content":"* **Name**: Name of event","lastModifiedDate":"2021-09-30"},{"lineNumber":485,"author":{"gitId":"CSYGalvin"},"content":"* **Index**: Unique index number of each event","lastModifiedDate":"2021-09-30"},{"lineNumber":486,"author":{"gitId":"CSYGalvin"},"content":"* **Tag**: Additional information about an event","lastModifiedDate":"2021-09-30"},{"lineNumber":487,"author":{"gitId":"CSYGalvin"},"content":"* **Schedule**: A list of events","lastModifiedDate":"2021-09-30"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"CSYGalvin"},"content":"[comment]: \u003c\u003e (* **Note**: Detailed description of an event)","lastModifiedDate":"2021-10-11"},{"lineNumber":490,"author":{"gitId":"kaldius"},"content":"[comment]: \u003c\u003e (* **EmptySlot**: A period of time that is free)","lastModifiedDate":"2021-10-20"},{"lineNumber":491,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":493,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"CSYGalvin"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample events. The window size may not be optimum.","lastModifiedDate":"2021-10-12"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"kaldius"},"content":"### Deleting an event","lastModifiedDate":"2021-10-08"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"kaldius"},"content":"1. Deleting an event while all events are being shown","lastModifiedDate":"2021-10-08"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"kaldius"},"content":"   1. Prerequisites: List all events using the `list` command. Multiple events in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"CSYGalvin"},"content":"      Expected: First event is deleted from the list. Details of the deleted event shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-11"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"kaldius"},"content":"      Expected: No event is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-08"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luluyousef":26,"Jacobnbh":15,"kaldius":94,"ruthpohrp":20,"-":318,"CSYGalvin":71}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"## Table of Contents","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"***","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"* TOC","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"## 1. Introduction","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"DukePro(f) is an application that assists **professors in the University** in planning for their weekly engagements.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"Amidst long hours of lectures and tutorials in the week, professors may still need to cater timeslots for **student","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"consultations**, which can be hard to come by and difficult to keep track of.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"It is named `DukePro(f)` (Duke-Professor) because our project\u0027s target audience is professors in a University, and it is also a nod","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"to our CS2103T iP (individual Project), which was named `Duke`.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"## 2. Purpose","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"This document is the User Guide for DukePro(f). It is intended to provide all the necessary information to use this software.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"The manual assumes that the user has the ability to type fast and prefers typing over other means of input.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"This User Guide contains the following sections:","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"1. Command Summary (TODO HYPERLINKS)","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"2. Quick Start","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"3. Features","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"4. FAQ","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"## 3. Command Summary","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"***","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"Action | Format | Examples","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"--------|-------|-------","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"**[Add](#51-adding-a-consultation-event--add)** | `add n/NAME d/DATE t/TIMESLOT l/LOCATION [tag/TAG]... [r/REMARK]` | `add n/Lulu Yousef d/2020-01-01 t/0800-0900 l/NUS tag/Important tag/Supplementary`","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"**[Clear](#52-clearing-all-consultation-events--clear)** | `clear`  | -","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"**[Delete](#53-deleting-a-consultation-event--delete)** | `delete INDEX` | `delete 3`","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"**[Edit](#54-editing-a-consultation-event--edit)** | `edit INDEX [n/NAME] [d/DATE] [t/TIMESLOT] [l/LOCATION] [tag/TAG]... [r/REMARK]`  | `edit 2 n/Quan Teng Foong` \u003cbr\u003e `edit 6 tag/Zoom Meeting`","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"**[Find](#55-finding-a-consultation-event--find)** | `find KEYWORD`  | `find Teng Foong`","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"**[Help](#56-viewing-help--help)** | `help` | -","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"**[List](#57-listing-all-consultation-events--list)** | `list` | -","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"**[Display Next Event](#58-displaying-the-next-consultation-event--next_event)** | `next_event` | -","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"**[List Upcoming Events](#59-listing-all-upcoming-events--upcoming_events)** | `upcoming_events` | -","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"**[View Command Summary Page](#510-viweing-the-command-summary-page--command_summary)** | `command_summary` | -","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"**[Exit](#511-exiting-the-app--exit)** | `exit` | -","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"## 4. Quick Start","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer. ","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"   Not sure how? Click [here](https://www.oracle.com/java/technologies/downloads/)!","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"2. Download the latest `dukeprof.jar` from [here](https://github.com/AY2122S1-CS2103T-T11-4/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your DukePro(f).","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. ","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"   Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"   \u003c!-- will need to change Ui.png once GUI is updated.--\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing ","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"   Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"   * **`list`** : Lists all consultation events.","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"   * **`add`**`add n/Galvin Chan d/2020-07-07 t/1000-1100 l/NUS tag/Tutorial 4` : Adds a consultation event for `Galvin Chan` to DukePro(f).","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"   * **`delete`**`3` : Deletes the 3rd event shown in DukePro(f)\u0027s current event list.","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"6. Refer to the [Features](#3-features) below for details of each command.","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"## 5. Features","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"  * e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/Lulu Yousef`.","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"* Items in square brackets are optional. (Items not in square brackets are necessary!)","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"  * e.g. `[tag/TAG]` is an optional parameter.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"* Parameters that can have more than one entry will be anteceded by a `...`","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"  * e.g. `[tag/TAG]...` can have more than one entry, so `tag/supplmentary tag/important` is accepted.","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"  * e.g. if the command specifies `n/NAME d/DATE`, `d/DATE n/NAME` is also acceptable.","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"* If a parameter is expected only once in the command, but you have specified it multiple times, only the ","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"  last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"  * e.g. if you specify `t/0100 t/2359`, only `t/2359` will be taken.","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `list` and `exit`) will be ","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"  * e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"### 5.1 Adding a Consultation Event : `add`","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"kaldius"},"content":"Adds a consultation event to Dukepro(f).","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"kaldius"},"content":"Format: `add n/NAME d/DATE t/TIMESLOT l/LOCATION [tag/TAG]... [r/REMARK]`","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"Jacobnbh"},"content":"* tags with the text \"URGENT\" and \"supplementary\" will automatically be changed to red and yellow respectively to ","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"Jacobnbh"},"content":"enable the user to indicate the consultation\u0027s severity","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"An event can have any number of tags (including 0).","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"Example(s):","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"kaldius"},"content":"* `add n/Lulu Yousef d/2020-01-01 t/0800-0900 l/NUS tag/Important tag/supplementary`","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"kaldius"},"content":"* `add n/Ruth Poh d/2020-02-02 t/1000-1100 l/The Deck r/May have to switch to zoom`","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Jacobnbh"},"content":"* `tag/URGENT` will be shown as ![urgent tag](images/URGENT tag.png) ","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"Jacobnbh"},"content":"* `tag/supplementary` will be shown as ![supplementary tag](images/supplementary tag.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"kaldius"},"content":"### 5.2 Clearing all Consultation Events : `clear`","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"luluyousef"},"content":"Clears all consultation events stored in DukePro(f).","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:warning: **WARNING**: This command cannot be reversed. Be ","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"careful when using this command!","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"luluyousef"},"content":"Format: `clear`","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"kaldius"},"content":"### 5.3 Deleting a Consultation Event : `delete`","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"kaldius"},"content":"Deletes a consultation event from DukePro(f) at the specified `INDEX`.","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"kaldius"},"content":"Example(s): ","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"kaldius"},"content":"* `delete 1`","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":147,"author":{"gitId":"kaldius"},"content":"### 5.4 Editing a Consultation Event : `edit`","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"kaldius"},"content":"Edits the details of a consultation event from DukePro(f) at the specified `INDEX`.","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"kaldius"},"content":"Format: `edit INDEX [n/NAME] [d/DATE] [t/TIMESLOT] [l/LOCATION] [tag/TAG]... [r/REMARK]`","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"kaldius"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e:bulb: **Tip**: Editing the tags will automatically ","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"ruthpohrp"},"content":"erase all previous tags!","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"ruthpohrp"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":157,"author":{"gitId":"kaldius"},"content":"Example(s): ","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"kaldius"},"content":"* `edit 2 n/Ruth t/0730-0830`","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"kaldius"},"content":"* `edit 3 r/May have to switch to zoom`","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"kaldius"},"content":"### 5.5 Finding a Consultation Event : `find`","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"luluyousef"},"content":"Finds all events whose names contain any of the specified keywords and displays them as a list with index numbers.","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"luluyousef"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]...`","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"kaldius"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip**: The keywords are case-insensitive!","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"ruthpohrp"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"kaldius"},"content":"Example(s): ","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"kaldius"},"content":"* `find Jacob`","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"kaldius"},"content":"### 5.6 Viewing help : `help`","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"luluyousef"},"content":"Opens a pop-up window with a link to DukePro(f)\u0027s user guide.","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"luluyousef"},"content":"Format: `help`","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"kaldius"},"content":"### 5.7 Listing all Consultation Events : `list`","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"kaldius"},"content":"Lists down all consultation events scheduled in DukePro(f).","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"ruthpohrp"},"content":"Format: `list`","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":183,"author":{"gitId":"kaldius"},"content":"### 5.8 Displaying the next Consultation Event : `next_event`","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"kaldius"},"content":"Displays the next consultation event scheduled for the day in DukePro(f).","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"kaldius"},"content":"Format: `next_event`","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"kaldius"},"content":"### 5.9 Listing all Upcoming Events : `upcoming_events`","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"kaldius"},"content":"Lists down all the upcoming consultation events for the current day.","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"kaldius"},"content":"Format: `upcoming_events`","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"Jacobnbh"},"content":"### 5.10 Viewing the Command Summary Page: `command_summary`","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"Jacobnbh"},"content":"Opens a pop-up window with a Command Summary of all of DukePro(f)\u0027s possible commands.","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"Jacobnbh"},"content":"Format: `command_summary`","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"Jacobnbh"},"content":"### 5.11 Exiting the app : `exit`","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"ruthpohrp"},"content":"Exits DukePro(f).","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"Format: `exit`","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"Jacobnbh"},"content":"### 5.12 Saving all edits","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"Event data is automatically saved into the hard disk after any command that changes the data. There is no","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"need to save manually.","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"kaldius"},"content":"## 6. FAQ","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"***","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"**Q**: Where are the releases?\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"kaldius"},"content":"**A**: The release for v1.3 is a work in progress, please be patient!","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"ruthpohrp"},"content":"**A**: Install the app in the other computer, and overwrite the empty data file it creates with the file ","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"ruthpohrp"},"content":"that contains the data of your previous DukePro(f) home folder.","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"ruthpohrp"},"content":"\u003c!-- **Q**: The dukeprof.jar isn’t opening when I double-click it.\u003cbr\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":218,"author":{"gitId":"ruthpohrp"},"content":"**A**: Try manually opening the dukeprof.jar on the command terminal using the command -java dukeprof.jar.","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"ruthpohrp"},"content":"--\u003e","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"luluyousef":6,"Jacobnbh":11,"kaldius":75,"ruthpohrp":46,"-":81}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ruthpohrp"},"content":"    content: \"DukePro(f)\";","lastModifiedDate":"2021-10-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ruthpohrp":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteEvent(p)","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveSchedule(schedule)","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kaldius":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"Schedule *-right-\u003e \"1\" UniqueEventList","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"Schedule *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"UniqueTagList -[hidden]down- UniqueEventList","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"UniqueTagList -[hidden]down- UniqueEventList","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"UniqueEventList -right-\u003e Event","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"Event -up-\u003e \"*\" Tag","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"Event *--\u003e Name","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"Event *--\u003e Date","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"Event *--\u003e Time","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"CSYGalvin"},"content":"Event *--\u003e Location","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacobnbh":2,"kaldius":6,"ruthpohrp":1,"-":11,"CSYGalvin":1}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"if () then ([command commits Schedule])","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    :Save Schedule to","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    scheduleStateList;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kaldius":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"participant \":ScheduleParser\" as ScheduleParser LOGIC_COLOR","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"LogicManager -\u003e ScheduleParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"activate ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"ScheduleParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"DeleteCommandParser --\u003e ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"ScheduleParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"DeleteCommandParser --\u003e ScheduleParser : d","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"DeleteCommandParser -[hidden]-\u003e ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"ScheduleParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"deactivate ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"DeleteCommand -\u003e Model : deleteEvent(1)","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacobnbh":10,"kaldius":1,"-":58}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"Class ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"LogicManager -right-\u003e\"1\" ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"ScheduleParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacobnbh":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"Interface ReadOnlySchedule \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"Class Schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"Class ReadOnlySchedule","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"Class UniqueEventList","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"Class Event","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":"Class Location","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"Class Time","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"Class Date","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"Schedule .up.|\u003e ReadOnlySchedule","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"Model .left.\u003e ReadOnlySchedule","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"ModelManager -left-\u003e \"1\" Schedule","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"Schedule *--\u003e \"1\" UniqueEventList","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"UniqueEventList --\u003e \"~* all\" Event","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"Event *--\u003e Name","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"Event *--\u003e Date","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"Event *--\u003e Time","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"CSYGalvin"},"content":"Event *--\u003e Location","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"Event *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"Name -[hidden]right-\u003e Date","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"Date -[hidden]right-\u003e Location","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"Location -[hidden]right-\u003e Time","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"ModelManager --\u003e\"~* filtered\" Event","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacobnbh":7,"kaldius":9,"ruthpohrp":4,"-":32,"CSYGalvin":2}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"Class ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"HiddenOutside ..\u003e ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"ScheduleParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"ScheduleParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"Jacobnbh":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"package \"Schedule Storage\" #F4F6F6{","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"Interface ScheduleStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"Class JsonScheduleStorage","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"Class JsonSerializableSchedule","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"StorageManager -up-\u003e \"1\" ScheduleStorage","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"Storage -right-|\u003e ScheduleStorage","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"JsonScheduleStorage .up.|\u003e ScheduleStorage","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"JsonScheduleStorage ..\u003e JsonSerializableSchedule","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"JsonSerializableSchedule --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"JsonAdaptedEvent --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacobnbh":9,"kaldius":2,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"Class EventListPanel","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"Class EventCard","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"Class CommandSummaryWindow","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"MainWindow --\u003e \"0..1\" CommandSummaryWindow","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"EventCard --|\u003e UiPart","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"CommandSummaryWindow --|\u003e UiPart","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"EventCard ..\u003e Model","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"EventListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"HelpWindow -[hidden]left- CommandSummaryWindow","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"CommandSummaryWindow -[hidden]left- CommandBox","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacobnbh":5,"kaldius":8,"-":51}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    class State1 as \"__s0:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    class State2 as \"__s1:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    class State3 as \"__s2:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kaldius":4,"-":16}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    class State1 as \"__s0:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    class State2 as \"__s1:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    class State3 as \"__s2:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kaldius":4,"-":18}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    class State1 as \"__s0:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    class State2 as \"__s1:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    class State3 as \"__s2:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kaldius":4,"-":16}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    class State1 as \"__s0:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    class State2 as \"__s1:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    class State3 as \"__s2:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kaldius":4,"-":16}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    class State1 as \"__s0:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    class State2 as \"__s1:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    class State3 as \"__s2:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kaldius":4,"-":16}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    class State1 as \"__s0:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    class State2 as \"__s1:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    class State3 as \"__s3:Schedule__\"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"note right on link: State s2 deleted.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kaldius":5,"-":16}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"participant \":ScheduleParser\" as ScheduleParser LOGIC_COLOR","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"participant \":VersionedSchedule\" as VersionedSchedule MODEL_COLOR","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"LogicManager -\u003e ScheduleParser : parseCommand(undo)","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"activate ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"ScheduleParser -\u003e UndoCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"UndoCommand --\u003e ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"ScheduleParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"deactivate ScheduleParser","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"UndoCommand -\u003e Model : undoSchedule()","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"Model -\u003e VersionedSchedule : undo()","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"activate VersionedSchedule","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"VersionedSchedule -\u003e VersionedSchedule :resetData(ReadOnlySchedule)","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"VersionedSchedule --\u003e Model :","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"deactivate VersionedSchedule","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Jacobnbh":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"Participant \":ScheduleParser\" as abp LOGIC_COLOR","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"ecp -\u003e ec ++: index, editEventDescriptor","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"Jacobnbh":1,"kaldius":1,"-":19}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"title: DukePro(f)","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T11-4/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003dL1BNXI5CA9)](https://codecov.io/gh/AY2122S1-CS2103T-T11-4/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"DukePro(f) is an application that assists **professors in the university** in planning for their weekly engagements.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"Amidst long hours of lectures and tutorials in the week, professors may still need to cater timeslots for **student","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"consultations**, which can be hard to come by and difficult to keep track of.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"It is named `DukePro(f)` (Duke-Professor) because our project\u0027s target audience is professors, and it is also a nod","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"to our CS2103T iP (individual Project), which was named `Duke`.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"\u003chr /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"With DukePro(f), professors will be able to:","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"* block out timeslots for lecture/tutorial/personal commitments","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"* query for available consultation timeslots","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"* add, delete or edit consultation timeslots","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"* list all consultation timeslots","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"\u003chr /\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"Jacobnbh":18,"-":13}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"CSYGalvin"},"content":"Create a new `Remark` in `seedu.address.model.event`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"kaldius"},"content":"Simply add the following to [`seedu.address.ui.EventCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"ruthpohrp"},"content":"                personToEdit.getName(), personToEdit.getDate(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-09"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"kaldius":1,"ruthpohrp":1,"-":398,"CSYGalvin":1}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"CSYGalvin"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.event.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"\u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"luluyousef"},"content":"\u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"    \"date\": \"2020-01-01\",","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"luluyousef"},"content":"    \"time\": \"1315\",","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luluyousef":2,"ruthpohrp":2,"-":107,"CSYGalvin":1}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/DATE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"kaldius"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editEventDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaldius":1,"ruthpohrp":1,"-":299}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.storage.JsonScheduleStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.storage.ScheduleStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Schedule ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"        ScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(userPrefs.getScheduleFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"        storage \u003d new StorageManager(scheduleStorage, userPrefsStorage);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"        Optional\u003cReadOnlySchedule\u003e scheduleOptional;","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"        ReadOnlySchedule initialData;","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"            scheduleOptional \u003d storage.readSchedule();","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"            if (!scheduleOptional.isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Schedule\");","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"            initialData \u003d scheduleOptional.orElseGet(SampleDataUtil::getSampleSchedule);","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Schedule\");","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"            initialData \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Schedule\");","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"            initialData \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"Jacobnbh"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Schedule\");","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"Jacobnbh"},"content":"        logger.info(\"Starting Schedule \" + MainApp.VERSION);","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jacobnbh":19,"ruthpohrp":1,"-":163}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_EVENT_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"    public static final String MESSAGE_UPCOMING_EVENT_LISTED_OVERVIEW \u003d \"%1$d upcoming events listed!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"    public static final String MESSAGE_NEXT_EVENT_LISTED_OVERVIEW \u003d \"The next event is listed!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"    public static final String MESSAGE_NO_NEXT_EVENT \u003d \"There are no more events today!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"    public static final String MESSAGE_FILTERED_TAGS \u003d \"%1$d events with the tag specified are listed!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luluyousef":4,"kaldius":2,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the Schedule.","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"     * @see seedu.address.model.Model#getSchedule()","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"    ReadOnlySchedule getSchedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Jacobnbh":5,"kaldius":2,"-":42,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.logic.parser.ScheduleParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    private final ScheduleParser scheduleParser;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"        scheduleParser \u003d new ScheduleParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"        Command command \u003d scheduleParser.parseCommand(commandText);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"            storage.saveSchedule(model.getSchedule());","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"    public ReadOnlySchedule getSchedule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"        return model.getSchedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"        return model.getScheduleFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jacobnbh":10,"kaldius":2,"-":68,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.exceptions.SlotBlockedException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":" * Adds an event to the schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the schedule. \" + \"\\n\"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"            + PREFIX_TIMESLOT + \"TIMESLOT \"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"            + PREFIX_LOCATION + \"LOCATION \"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"            + PREFIX_NAME + \"Jacob Ng \"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"            + PREFIX_DATE + \"2020-10-13 \"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"            + PREFIX_TIMESLOT + \"1300-1400 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"            + PREFIX_LOCATION + \"The Deck \"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"            + PREFIX_TAG + \"CS1231S \"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"            + PREFIX_TAG + \"URGENT \"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"            + PREFIX_REMARK + \"Wants to review Tutorial 4\";","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    private final Event toAdd;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"     * Creates an AddCommand to add the specified {@code Event}","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"    public AddCommand(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        toAdd \u003d event;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        if (model.isBlocked(toAdd)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"            throw new SlotBlockedException(BlockedSlot.SLOT_BLOCKED);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaldius":14,"ruthpohrp":8,"-":41,"CSYGalvin":8}},{"path":"src/main/java/seedu/address/logic/commands/BlockCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.exceptions.SlotBlockedException;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" * Blocks out a time slot in the schedule.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"public class BlockCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    public static final String COMMAND_WORD \u003d \"block\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Blocks a specified time slot in the schedule. \"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"            + \"\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"            + PREFIX_TIMESLOT + \"TIMESLOT \";","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New slot blocked out: %1$s\\n\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    private final BlockedSlot blockedSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"     * Creates a BlockCommand to block the specified BlockedSlot.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"     * @param blockedSlot","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    public BlockCommand(BlockedSlot blockedSlot) {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        requireNonNull(blockedSlot);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"        this.blockedSlot \u003d blockedSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        //TODO: instead of throwing error, merge with other blocked periods","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        if (model.isBlocked(blockedSlot)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"            throw new SlotBlockedException(BlockedSlot.SLOT_BLOCKED);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"        model.addBlockedSlot(blockedSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, blockedSlot));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"                || (other instanceof BlockCommand // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 blockedSlot.equals(((BlockCommand) other).blockedSlot));","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kaldius":54,"ruthpohrp":1}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"        model.setSchedule(new Schedule());","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jacobnbh":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CommandEnum.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":" * Represents an enumeration class of all of DukePro(f)\u0027s possible commands","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"public enum CommandEnum {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"    ADD,","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"    CLEAR,","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"    COMMAND_SUMMARY,","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    DELETE,","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"    EDIT,","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    EXIT,","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    FIND,","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    HELP,","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    LIST,","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    NEXT_EVENT,","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    UPCOMING_EVENTS;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Jacobnbh":18}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    private final boolean showCommands;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showCommands, boolean exit) {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"        this.showCommands \u003d showCommands;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"     * and other fields set to their default time.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"    public boolean isShowCommands() {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"        return showCommands;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"                \u0026\u0026 showCommands \u003d\u003d otherCommandResult.showCommands","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"        return Objects.hash(feedbackToUser, showHelp, showCommands, exit);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luluyousef":1,"Jacobnbh":11,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/CommandSummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":" * Opens a pop-window to show a summary of all possible commands to the user.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"public class CommandSummaryCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"    public static final String COMMAND_WORD \u003d \"command_summary\";","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows summary of commands. \\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    public static final String SHOWING_COMMAND_SUMMARY_MESSAGE \u003d \"Opened command summary window.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"        return new CommandResult(SHOWING_COMMAND_SUMMARY_MESSAGE, false, true, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Jacobnbh":20}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" * Deletes an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaldius":8,"-":44,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":" * Edits the details of an existing event in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"            + \"by the index number used in the displayed event list. \"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"            + \"[\" + PREFIX_TIMESLOT + \"TIMESLOT] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"CSYGalvin"},"content":"            + \"[\" + PREFIX_LOCATION + \"LOCATION] \"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK]\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"CSYGalvin"},"content":"            + PREFIX_DATE + \"2020-10-14 \"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"            + PREFIX_TIMESLOT + \"0800-0900\";","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"     * @param index of the event in the filtered event list to edit","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"    public EditCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"        Name updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"        Date updatedDate \u003d editEventDescriptor.getDate().orElse(eventToEdit.getDate());","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"        TimeSlot updatedTime \u003d editEventDescriptor.getTimeSlot().orElse(eventToEdit.getTimeSlot());","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"CSYGalvin"},"content":"        Location updatedLocation \u003d editEventDescriptor.getLocation().orElse(eventToEdit.getLocation());","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"        Set\u003cTag\u003e updatedTags \u003d editEventDescriptor.getTags().orElse(eventToEdit.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"        Remark updatedRemark \u003d editEventDescriptor.getRemark().orElse(eventToEdit.getRemark());","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"        return new Event(updatedName, updatedDate, updatedTime, updatedLocation, updatedTags, updatedRemark);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"kaldius"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"     * corresponding field value of the event.","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"kaldius"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"        private Date date;","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"kaldius"},"content":"        private TimeSlot timeSlot;","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"CSYGalvin"},"content":"        private Location location;","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"        private Remark remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"kaldius"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"kaldius"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"kaldius"},"content":"            setTimeSlot(toCopy.timeSlot);","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"CSYGalvin"},"content":"            setLocation(toCopy.location);","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"ruthpohrp"},"content":"            return CollectionUtil.isAnyNonNull(name, date, timeSlot, location, tags, remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"ruthpohrp"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"ruthpohrp"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"ruthpohrp"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"ruthpohrp"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"kaldius"},"content":"        public void setTimeSlot(TimeSlot timeSlot) {","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"kaldius"},"content":"            this.timeSlot \u003d timeSlot;","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"kaldius"},"content":"        public Optional\u003cTimeSlot\u003e getTimeSlot() {","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"kaldius"},"content":"            return Optional.ofNullable(timeSlot);","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"CSYGalvin"},"content":"        public void setLocation(Location location) {","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"CSYGalvin"},"content":"            this.location \u003d location;","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"CSYGalvin"},"content":"        public Optional\u003cLocation\u003e getLocation() {","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"CSYGalvin"},"content":"            return Optional.ofNullable(location);","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"kaldius"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"kaldius"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"ruthpohrp"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"kaldius"},"content":"                    \u0026\u0026 getTimeSlot().equals(e.getTimeSlot())","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"CSYGalvin"},"content":"                    \u0026\u0026 getLocation().equals(e.getLocation())","lastModifiedDate":"2021-10-08"},{"lineNumber":232,"author":{"gitId":"ruthpohrp"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-20"},{"lineNumber":233,"author":{"gitId":"ruthpohrp"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark());","lastModifiedDate":"2021-10-20"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kaldius":44,"ruthpohrp":29,"-":148,"CSYGalvin":15}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Jacobnbh":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FilterByTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"public class FilterByTagCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose tags contain any of \"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"            + \"Example: \" + COMMAND_WORD + \" urgent supplementary\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"    private final TagContainsKeywordsPredicate tagPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"    public FilterByTagCommand(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"        this.tagPredicate \u003d predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"        model.updateFilteredEventList(tagPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"                String.format(Messages.MESSAGE_FILTERED_TAGS, model.getFilteredEventList().size()));","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"                || (other instanceof FilterByTagCommand // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"                \u0026\u0026 tagPredicate.equals(((FilterByTagCommand) other).tagPredicate)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"luluyousef":38}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":" * Finds and lists all events in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose names contain any of \"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"                String.format(Messages.MESSAGE_EVENT_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kaldius":4,"-":37,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/logic/commands/FreeSlotsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CSYGalvin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.FreeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"public class FreeSlotsCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"    public static final String COMMAND_WORD \u003d \"free_slots\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are your free slots:\";","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":"    private Date today;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"     * Constructor for a FreeSlotsCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"     * @param today Date instance for today","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"    public FreeSlotsCommand(Date today) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(today);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"        this.today \u003d today;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"CSYGalvin"},"content":"        ArrayList\u003cFreeSlot\u003e freeSlots \u003d model.getFreeSlots(Date.TODAY);","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"        StringBuilder result \u003d new StringBuilder(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"        for (FreeSlot f: freeSlots) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"CSYGalvin"},"content":"            result.append(\"\\n\" + f.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"        return new CommandResult(result.toString());","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"CSYGalvin"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"CSYGalvin":42}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jacobnbh":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListBlockedSlotsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"public class ListBlockedSlotsCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    public static final String COMMAND_WORD \u003d \"list_blocked\";","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are all your blocked slots:\\n%1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, model.filteredBlockedSlotListToString()));","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaldius":19}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" * Lists all events in the address book to the user.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaldius":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/NextEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.EventContainsCurrentTimePredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.IsEventPredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":" * Displays the next event in the Schedule based on the current time.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"public class NextEventCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"    public static final String COMMAND_WORD \u003d \"next_event\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Displays the next event scheduled for the day\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"    private final EventContainsCurrentTimePredicate timePredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"    public NextEventCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"        this.timePredicate \u003d new EventContainsCurrentTimePredicate();","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"    public NextEventCommand(EventContainsCurrentTimePredicate predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"        this.timePredicate \u003d predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"            requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"            model.updateFilteredEventList(timePredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"            Event firstEvent \u003d model.nextEventInTheList();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"luluyousef"},"content":"            model.updateFilteredEventList(new IsEventPredicate(firstEvent));","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"luluyousef"},"content":"            return new CommandResult(Messages.MESSAGE_NEXT_EVENT_LISTED_OVERVIEW);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"luluyousef"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"luluyousef"},"content":"            throw new CommandException(Messages.MESSAGE_NO_NEXT_EVENT);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"luluyousef"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"luluyousef"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"luluyousef"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"luluyousef"},"content":"                || (other instanceof NextEventCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"luluyousef"},"content":"                \u0026\u0026 timePredicate.equals(((NextEventCommand) other).timePredicate)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luluyousef":52}},{"path":"src/main/java/seedu/address/logic/commands/UpcomingEventsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.EventContainsTodaysDatePredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":" * Lists all upcoming events in Schedule of the current date.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"public class UpcomingEventsCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"    public static final String COMMAND_WORD \u003d \"upcoming_events\";","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all upcoming events for the day\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"    private final EventContainsTodaysDatePredicate datePredicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"    public UpcomingEventsCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"        this.datePredicate \u003d new EventContainsTodaysDatePredicate();","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"    public UpcomingEventsCommand(EventContainsTodaysDatePredicate predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"        this.datePredicate \u003d predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"        model.updateFilteredEventList(datePredicate);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"                String.format(Messages.MESSAGE_UPCOMING_EVENT_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"luluyousef"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"luluyousef"},"content":"                || (other instanceof UpcomingEventsCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"luluyousef"},"content":"                \u0026\u0026 datePredicate.equals(((UpcomingEventsCommand) other).datePredicate)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luluyousef":43}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/SlotBlockedException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"public class SlotBlockedException extends CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"    public SlotBlockedException(String message) {","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"        super(message);","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"kaldius":7}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_TIMESLOT, PREFIX_LOCATION,","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"                        PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LOCATION, PREFIX_DATE, PREFIX_TIMESLOT)","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        TimeSlot timeSlot \u003d ParserUtil.parseTimeSlot(argMultimap.getValue(PREFIX_TIMESLOT).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"CSYGalvin"},"content":"        Location location \u003d ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get());","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(\"\"));","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        Event event \u003d new Event(name, date, timeSlot, location, tagList, remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        return new AddCommand(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kaldius":6,"ruthpohrp":7,"-":45,"CSYGalvin":6}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument time","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"     * Associates the specified argument time with {@code prefix} key in this map.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"     * If the map previously contained a mapping for the key, the new time is appended to the list of existing values.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"     * @param prefix   Prefix key with which the specified argument time is to be associated","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"     * @param argValue Argument time to be associated with the specified prefix key","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"luluyousef":5,"-":55}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":" * 1. An argument\u0027s time can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":" * 2. Leading and trailing whitespaces of an argument time will be discarded.\u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003etime \u003cprefix\u003etime ...}","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003etime \u003cprefix\u003etime ...}","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"luluyousef"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003etime \u003cprefix\u003etime ...}","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"luluyousef"},"content":"     * The end position of the time is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"luluyousef":6,"-":142}},{"path":"src/main/java/seedu/address/logic/parser/BlockCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.BlockCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":" * Parses input arguments and creates a new BlockCommand object","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"public class BlockCommandParser implements Parser\u003cBlockCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     * Parses the given {@code String} of arguments in the context of BlockCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"     * and returns a BlockCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * @param args arguments provided by the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * @return a BlockCommand object.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    public BlockCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DATE, PREFIX_TIMESLOT);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE, PREFIX_TIMESLOT)","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BlockCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"        TimeSlot timeSlot \u003d ParserUtil.parseTimeSlot(argMultimap.getValue(PREFIX_TIMESLOT).get());","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        BlockedSlot blockedSlot \u003d new BlockedSlot(date, timeSlot);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        return new BlockCommand(blockedSlot);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kaldius":51}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"    public static final Prefix PREFIX_LOCATION \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"    public static final Prefix PREFIX_TIMESLOT \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"luluyousef":1,"kaldius":1,"ruthpohrp":2,"-":11,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_TIMESLOT, PREFIX_LOCATION,","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"                        PREFIX_TAG, PREFIX_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        EditCommand.EditEventDescriptor editEventDescriptor \u003d new EditCommand.EditEventDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"            editEventDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"            editEventDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        if (argMultimap.getValue(PREFIX_TIMESLOT).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"            editEventDescriptor.setTimeSlot(ParserUtil.parseTimeSlot(argMultimap.getValue(PREFIX_TIMESLOT).get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"CSYGalvin"},"content":"        if (argMultimap.getValue(PREFIX_LOCATION).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"CSYGalvin"},"content":"            editEventDescriptor.setLocation(ParserUtil.parseLocation(argMultimap.getValue(PREFIX_LOCATION).get()));","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editEventDescriptor::setTags);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"            editEventDescriptor.setRemark(ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).get()));","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"        return new EditCommand(index, editEventDescriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kaldius":9,"ruthpohrp":9,"-":66,"CSYGalvin":3}},{"path":"src/main/java/seedu/address/logic/parser/FilterByTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.commands.FilterByTagCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"* Parses input arguments and creates a new FilterByTagCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"*/","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"public class FilterByTagCommandParser implements Parser\u003cFilterByTagCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterByTagCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"     * and returns a FilterByTagCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"    public FilterByTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterByTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"        return new FilterByTagCommand(new TagContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"luluyousef":29}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":32,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    T parse(String userInput) throws ParseException, CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kaldius":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"CSYGalvin"},"content":"     * Parses a {@code String location} into an {@code Location}.","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"CSYGalvin"},"content":"     * @throws ParseException if the given {@code location} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"CSYGalvin"},"content":"    public static Location parseLocation(String location) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"CSYGalvin"},"content":"        String trimmedLocation \u003d location.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"CSYGalvin"},"content":"        if (!Location.isValidLocation(trimmedLocation)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"CSYGalvin"},"content":"            throw new ParseException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"CSYGalvin"},"content":"        return new Location(trimmedLocation);","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"     * Parses a {@code String timeSlot} into an {@code TimeSlot}.","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"     * @throws ParseException if the given {@code timeSlot} is invalid.","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"    public static TimeSlot parseTimeSlot(String timeSlot) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"        requireNonNull(timeSlot);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"        String trimmedTimeSlot \u003d timeSlot.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"        String[] startTimeAndEndTime \u003d trimmedTimeSlot.split(\"-\"); // Index 0: startTime; Index 1: endTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"            if (!TimeSlot.isValidTimeSlot(startTimeAndEndTime[0], startTimeAndEndTime[1])) {","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"                throw new ParseException(TimeSlot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"kaldius"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"            return new TimeSlot(startTimeAndEndTime[0], startTimeAndEndTime[1]);","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"kaldius"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"            throw new ParseException(TimeSlot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"ruthpohrp"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"ruthpohrp"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kaldius":14,"ruthpohrp":20,"-":96,"CSYGalvin":11}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.BlockCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.logic.commands.CommandSummaryCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.commands.FilterByTagCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.logic.commands.FreeSlotsCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.ListBlockedSlotsCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.commands.NextEventCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.commands.UpcomingEventsCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"public class ScheduleParser {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"luluyousef"},"content":"        case UpcomingEventsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"luluyousef"},"content":"            return new UpcomingEventsCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"luluyousef"},"content":"        case NextEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"luluyousef"},"content":"            return new NextEventCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"CSYGalvin"},"content":"        case FreeSlotsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"CSYGalvin"},"content":"            return new FreeSlotsCommand(Date.TODAY);","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"luluyousef"},"content":"        case FilterByTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"luluyousef"},"content":"            return new FilterByTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"        case BlockCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"            return new BlockCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"        case ListBlockedSlotsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"            return new ListBlockedSlotsCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"        case CommandSummaryCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"            return new CommandSummaryCommand();","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luluyousef":12,"Jacobnbh":5,"kaldius":8,"-":74,"CSYGalvin":5}},{"path":"src/main/java/seedu/address/model/FreeSlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"CSYGalvin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Overlappable;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"public class FreeSlot implements Overlappable {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"    private Date date;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"    private TimeSlot timeSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"     * Constructs a FreeSlot instance","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"     * @param date Date of free slot","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"     * @param timeSlot time of free slot","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":"    public FreeSlot(Date date, TimeSlot timeSlot) {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(timeSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"        this.timeSlot \u003d timeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"    public boolean isOverlappingWith(Overlappable o) {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"        if (this.date.equals(o.getDate())) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"CSYGalvin"},"content":"            return this.timeSlot.isOverlappingWith(o.getTimeSlot());","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"CSYGalvin"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"CSYGalvin"},"content":"        return date;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"CSYGalvin"},"content":"    public TimeSlot getTimeSlot() {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"CSYGalvin"},"content":"        return timeSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"CSYGalvin"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"CSYGalvin"},"content":"        return date + \": \" + timeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"CSYGalvin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"CSYGalvin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"CSYGalvin"},"content":"                || (other instanceof FreeSlot // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"CSYGalvin"},"content":"                \u0026\u0026 date.equals(((FreeSlot) other).date)","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"CSYGalvin"},"content":"                \u0026\u0026 timeSlot.equals(((FreeSlot) other).timeSlot)); // state check for both fields","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"CSYGalvin"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"CSYGalvin"},"content":"        return Objects.hash(date, timeSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"CSYGalvin"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"CSYGalvin":64}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.exceptions.SlotBlockedException;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.Overlappable;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    Predicate\u003cBlockedSlot\u003e PREDICATE_SHOW_ALL_BLOCKED_SLOTS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"     * Returns the user prefs.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"    void setScheduleFilePath(Path addressBookFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"    void setSchedule(ReadOnlySchedule addressBook);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"    /** Returns the Schedule */","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"    ReadOnlySchedule getSchedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"     * Deletes the given event.","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"     * Adds the given event.","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"     * @throws SlotBlockedException if the Date and TimeSlot of the Event to add coincides with the blocked period.","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"    void addEvent(Event event);","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"     * Adds the given BlockedSlot.","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"    void addBlockedSlot(BlockedSlot blockedSlot) throws SlotBlockedException;","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"     * Checks if the given Overlappable is blocked.","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"     * @param overlappable the Overlappable to be checked.","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"     * @return true if the Overlappable is blocked, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"    boolean isBlocked(Overlappable overlappable);","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"kaldius"},"content":"    /** Returns an unmodifiable view of the filtered blocked slot list */","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"    ObservableList\u003cBlockedSlot\u003e getFilteredBlockedSlotList();","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"kaldius"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"kaldius"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"kaldius"},"content":"     * Updates the filter of the filtered blocked slot list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"    void updateFilteredBlockedSlotList(Predicate\u003cBlockedSlot\u003e predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"kaldius"},"content":"    /** Returns the BlockedSlot list in String format */","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"kaldius"},"content":"    String filteredBlockedSlotListToString();","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"luluyousef"},"content":"     * Gets the first event in the filtered list.","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"luluyousef"},"content":"    Event nextEventInTheList();","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"CSYGalvin"},"content":"     * Gets a list of all free slots from today\u0027s date to last event/block slot.","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"CSYGalvin"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"CSYGalvin"},"content":"     * @param date Today\u0027s date","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"CSYGalvin"},"content":"     * @return ArrayList of freeSlots","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"CSYGalvin"},"content":"    ArrayList\u003cFreeSlot\u003e getFreeSlots(Date date);","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"luluyousef":4,"Jacobnbh":5,"kaldius":37,"ruthpohrp":1,"-":69,"CSYGalvin":11}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.Overlappable;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"    private final Schedule schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"    private final FilteredList\u003cBlockedSlot\u003e filteredBlockedSlots;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"     * Initializes a ModelManager with the given schedule and userPrefs.","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"    public ModelManager(ReadOnlySchedule addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"        this.schedule \u003d new Schedule(addressBook);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.schedule.getEventList());","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        filteredBlockedSlots \u003d new FilteredList\u003c\u003e(this.schedule.getBlockedSlotList());","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"        this(new Schedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"        return userPrefs.getScheduleFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"    public void setScheduleFilePath(Path scheduleFilePath) {","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"        requireNonNull(scheduleFilePath);","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"        userPrefs.setScheduleFilePath(scheduleFilePath);","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Schedule \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"    public void setSchedule(ReadOnlySchedule schedule) {","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"        this.schedule.resetData(schedule);","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"    public ReadOnlySchedule getSchedule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"        return schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"        schedule.removeEvent(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"kaldius"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"Jacobnbh"},"content":"        schedule.addEvent(event);","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Jacobnbh"},"content":"        schedule.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"kaldius"},"content":"    public void addBlockedSlot(BlockedSlot blockedSlot) {","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"        schedule.addBlockedSlot(blockedSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"kaldius"},"content":"        updateFilteredBlockedSlotList(PREDICATE_SHOW_ALL_BLOCKED_SLOTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"    public boolean isBlocked(Overlappable overlappable) {","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"kaldius"},"content":"        return schedule.isBlocked(overlappable);","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"kaldius"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"kaldius"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"kaldius"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"kaldius"},"content":"        return filteredEvents;","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"kaldius"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":139,"author":{"gitId":"kaldius"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"kaldius"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Blocked Slot List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"kaldius"},"content":"     * Returns an unmodifiable view of the list of {@code BlockedSlot} backed by the internal list of","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"kaldius"},"content":"    public ObservableList\u003cBlockedSlot\u003e getFilteredBlockedSlotList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"kaldius"},"content":"        return filteredBlockedSlots;","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"kaldius"},"content":"    public void updateFilteredBlockedSlotList(Predicate\u003cBlockedSlot\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"kaldius"},"content":"        filteredBlockedSlots.setPredicate(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"kaldius"},"content":"    public String filteredBlockedSlotListToString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"kaldius"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"kaldius"},"content":"        for (BlockedSlot blockedSlot : filteredBlockedSlots) {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"kaldius"},"content":"            builder.append(blockedSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"kaldius"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"luluyousef"},"content":"    public Event nextEventInTheList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"CSYGalvin"},"content":"        if (filteredEvents.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"CSYGalvin"},"content":"            return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"CSYGalvin"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"luluyousef"},"content":"            return filteredEvents.get(0);","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"luluyousef"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"CSYGalvin"},"content":"    public ArrayList\u003cFreeSlot\u003e getFreeSlots(Date date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"CSYGalvin"},"content":"        return schedule.getFreeSlots(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"Jacobnbh"},"content":"        return schedule.equals(other.schedule)","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":199,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents)","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 filteredBlockedSlots.equals(other.filteredBlockedSlots);","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"luluyousef":4,"Jacobnbh":15,"kaldius":52,"ruthpohrp":1,"-":122,"CSYGalvin":11}},{"path":"src/main/java/seedu/address/model/ReadOnlySchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":" * Unmodifiable view of a schedule.","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"public interface ReadOnlySchedule {","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"     * Returns an unmodifiable view of the blocked slots list.","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    ObservableList\u003cBlockedSlot\u003e getBlockedSlotList();","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jacobnbh":1,"kaldius":9,"-":11,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Jacobnbh":1,"-":15}},{"path":"src/main/java/seedu/address/model/Schedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.Overlappable;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.SortedBlockedSlotList;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.SortedEventList;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":" * Duplicates are not allowed (by .isSameEvent comparison)","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"public class Schedule implements ReadOnlySchedule {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"    private final SortedEventList events;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    private final SortedBlockedSlotList blockedSlots;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"    private Date today \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"        events \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        blockedSlots \u003d new SortedBlockedSlotList();","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"CSYGalvin"},"content":"    public Schedule() {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"     * Creates a Schedule using the Events in the {@code toBeCopied}","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"    public Schedule(ReadOnlySchedule toBeCopied) {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"        this.events.setEvent(events);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"     * Replaces the contents of the blocked slot list with {@code blockedSlots}.","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"    public void setBlockedSlots(List\u003cBlockedSlot\u003e blockedSlots) {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"        this.blockedSlots.setBlockedSlot(blockedSlots);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"     * Resets the existing data of this {@code Schedule} with {@code newData}.","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"    public void resetData(ReadOnlySchedule newData) {","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        setBlockedSlots(newData.getBlockedSlotList());","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"    //// event-level operations","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"kaldius"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"        events.add(e);","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"Jacobnbh"},"content":"     * Removes {@code key} from this {@code Schedule}.","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"kaldius"},"content":"        events.remove(key);","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"     * Adds a block with the given BlockedSlot.","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"kaldius"},"content":"     * @param blockedSlot BlockedSlot to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"kaldius"},"content":"    public void addBlockedSlot(BlockedSlot blockedSlot) {","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"        blockedSlots.add(blockedSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"kaldius"},"content":"     * Checks if the given Overlappable is blocked.","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"kaldius"},"content":"     * @param overlappable the Overlappable to be checked.","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"kaldius"},"content":"     * @return true if the Overlappable is blocked, false otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"kaldius"},"content":"    public boolean isBlocked(Overlappable overlappable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"        return blockedSlots.isOverlappingWith(overlappable);","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"kaldius"},"content":"        return events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"kaldius"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":136,"author":{"gitId":"kaldius"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":139,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"kaldius"},"content":"    public ObservableList\u003cBlockedSlot\u003e getBlockedSlotList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"        return blockedSlots.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"Jacobnbh"},"content":"                || (other instanceof Schedule // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"Jacobnbh"},"content":"                \u0026\u0026 events.equals(((Schedule) other).events));","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"kaldius"},"content":"        return events.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"CSYGalvin"},"content":"     * Comparator class to sort list of Overlappable","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"CSYGalvin"},"content":"    private class OverlappableComparator implements Comparator\u003cOverlappable\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"CSYGalvin"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"CSYGalvin"},"content":"        public int compare(Overlappable o1, Overlappable o2) {","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"CSYGalvin"},"content":"            int compareDate \u003d o1.getDate().compareTo(o2.getDate());","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"CSYGalvin"},"content":"            if (compareDate !\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"CSYGalvin"},"content":"                return compareDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"CSYGalvin"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"CSYGalvin"},"content":"                return o1.getTimeSlot().compareTo(o2.getTimeSlot());","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"CSYGalvin"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"CSYGalvin"},"content":"    private ArrayList\u003cOverlappable\u003e merge() {","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"CSYGalvin"},"content":"        Iterator\u003cEvent\u003e eventsIterator \u003d events.iterator();","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"        Iterator\u003cBlockedSlot\u003e blockedIterator \u003d blockedSlots.iterator();","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"CSYGalvin"},"content":"        ArrayList\u003cOverlappable\u003e allOverlappables \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"CSYGalvin"},"content":"        eventsIterator.forEachRemaining(e -\u003e allOverlappables.add(e));","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"CSYGalvin"},"content":"        blockedIterator.forEachRemaining(b -\u003e allOverlappables.add(b));","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"CSYGalvin"},"content":"        allOverlappables.sort(new OverlappableComparator());","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"CSYGalvin"},"content":"        return allOverlappables;","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"CSYGalvin"},"content":"     * Goes through both sortedEventList and sortedBlockedEventList to find free time slots","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"CSYGalvin"},"content":"     * between events and blocked slots.","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"CSYGalvin"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"CSYGalvin"},"content":"     * @param date starting date","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"CSYGalvin"},"content":"     * @return ArrayList of FreeSlot between date to last event/blocked slot","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"CSYGalvin"},"content":"    public ArrayList\u003cFreeSlot\u003e getFreeSlots(Date date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"CSYGalvin"},"content":"        today \u003d date;","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"CSYGalvin"},"content":"        ArrayList\u003cOverlappable\u003e allOverlappables \u003d merge();","lastModifiedDate":"2021-10-26"},{"lineNumber":192,"author":{"gitId":"CSYGalvin"},"content":"        ArrayList\u003cFreeSlot\u003e freeSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"CSYGalvin"},"content":"        if (allOverlappables.isEmpty()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"CSYGalvin"},"content":"            return freeSlots;","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"CSYGalvin"},"content":"        addEmptyDates(freeSlots, allOverlappables.get(0));","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"CSYGalvin"},"content":"        for (int i \u003d 1; i \u003c allOverlappables.size(); i++) {","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"CSYGalvin"},"content":"            Overlappable prev \u003d allOverlappables.get(i - 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"CSYGalvin"},"content":"            Overlappable curr \u003d allOverlappables.get(i);","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"CSYGalvin"},"content":"            String prevEndTime \u003d prev.getTimeSlot().endTimeToString();","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"CSYGalvin"},"content":"            String currStartTime \u003d curr.getTimeSlot().startTimeToString();","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"CSYGalvin"},"content":"            if (prev.getDate().equals(curr.getDate()) \u0026\u0026 !prevEndTime.equals(currStartTime)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"CSYGalvin"},"content":"                freeSlots.add(new FreeSlot(prev.getDate(), new TimeSlot(prevEndTime, currStartTime)));","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"CSYGalvin"},"content":"            } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"CSYGalvin"},"content":"                if (!prevEndTime.equals(\"2359\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"CSYGalvin"},"content":"                    freeSlots.add(new FreeSlot(prev.getDate(), new TimeSlot(prevEndTime, \"2359\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"CSYGalvin"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"CSYGalvin"},"content":"                addEmptyDates(freeSlots, curr);","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"CSYGalvin"},"content":"                if (!currStartTime.equals(\"0000\")) {","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"CSYGalvin"},"content":"                    freeSlots.add(new FreeSlot(curr.getDate(), new TimeSlot(\"0000\", currStartTime)));","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"CSYGalvin"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"CSYGalvin"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"CSYGalvin"},"content":"        return freeSlots;","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"CSYGalvin"},"content":"    private void addEmptyDates(ArrayList\u003cFreeSlot\u003e freeSlots, Overlappable next) {","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"CSYGalvin"},"content":"        while (today.compareTo(next.getDate()) \u003c 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"CSYGalvin"},"content":"            freeSlots.add(new FreeSlot(today, new TimeSlot(\"0000\", \"2359\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"CSYGalvin"},"content":"            today \u003d new Date(today.date.plusDays(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"CSYGalvin"},"content":"        today \u003d new Date(today.date.plusDays(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jacobnbh":7,"kaldius":45,"ruthpohrp":15,"-":77,"CSYGalvin":87}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"    private Path scheduleFilePath \u003d Paths.get(\"data\", \"schedule.json\");","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        setScheduleFilePath(newUserPrefs.getScheduleFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"        return scheduleFilePath;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"    public void setScheduleFilePath(Path scheduleFilePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"        requireNonNull(scheduleFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"        this.scheduleFilePath \u003d scheduleFilePath;","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"                \u0026\u0026 scheduleFilePath.equals(o.scheduleFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"        return Objects.hash(guiSettings, scheduleFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"        sb.append(\"\\nLocal data file location : \" + scheduleFilePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jacobnbh":9,"-":77,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/model/event/BlockedSlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * Represents a blocked period of time which an Event should not overlap with.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"public class BlockedSlot implements Overlappable {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    public static final String SLOT_BLOCKED \u003d \"This slot coincides with a blocked period.\";","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"    private final Date date;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"    private final TimeSlot timeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"     * Constructs a BlockedSlot.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"     * @param date Date to block.","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"     * @param timeSlot TimeSlot to block.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    public BlockedSlot(Date date, TimeSlot timeSlot) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"        requireNonNull(timeSlot);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"        this.timeSlot \u003d timeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        return date;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"    public TimeSlot getTimeSlot() {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        return timeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    public boolean hasSameDate(Overlappable overlappable) {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        return this.date.hasSameDate(overlappable.getDate());","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"     * Checks if this BlockedSlot overlaps with another Overlappable.","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"     * @param overlappable Other Overlappable to check for overlaps.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if overlapping, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"    public boolean isOverlappingWith(Overlappable overlappable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"        boolean hasSameDate \u003d this.hasSameDate(overlappable);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"        boolean isTimeSlotOverlapping \u003d this.timeSlot","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"                .isOverlappingWith(overlappable.getTimeSlot());","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        return hasSameDate \u0026\u0026 isTimeSlotOverlapping;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"     * Compares this BlockedSlot instance with another BlockedSlot instance.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"     * @param other other BlockedSlot to compare to.","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"     * @return a positive integer if this BlockedSlot\u0027s Date and TimeSlot are chronologically before other BlockedSlot,","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"     * a negative integer if this BlockedSlot\u0027s Date and TimeSlot are chronologically after other BlockedSlot,","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"     * zero if both BlockedSlots are on the same date and start at the same time.","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"    public int compareTo(BlockedSlot other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"        int compareDate \u003d date.compareTo(other.date);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"        if (compareDate !\u003d 0) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"            return compareDate;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"            return timeSlot.compareTo(other.timeSlot);","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"        builder.append(\"Date: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"                .append(getDate())","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"                .append(\"; TimeSlot: \")","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"                .append(getTimeSlot())","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"                .append(\";\\n\");","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kaldius":66,"ruthpohrp":17}},{"path":"src/main/java/seedu/address/model/event/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":" * Represents an Event\u0027s date number in the schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"public class Date {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"    public static final Date TODAY \u003d new Date(LocalDate.now());","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"            \"Dates should only contain numbers, and it should be in the form yyyy-mm-dd\";","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"     * Constructs a {@code Date}.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"     * @param date A date.","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    public Date(String date) {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        this.value \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"     * Construct a Date instance on the given date","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"     * @param date date","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"CSYGalvin"},"content":"    public Date(LocalDate date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"CSYGalvin"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"CSYGalvin"},"content":"        this.value \u003d date.format(DateTimeFormatter.ISO_DATE);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"CSYGalvin"},"content":"     * Compares this Date instance with another Date instance.","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"     * @param other Other Date to compare to.","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"     * @return A positive integer if this Date is earlier than the other, a negative integer if this Date","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"CSYGalvin"},"content":"     * is later than the other and zero if the 2 Dates share the same date.","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"CSYGalvin"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"CSYGalvin"},"content":"        return date.compareTo(other.date);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"     * Checks if this Date instance has the same date as another Date instance.","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"     * @param other Other Date to compare to.","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if has same date, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"    public boolean hasSameDate(Date other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"        if (this.compareTo(other) \u003d\u003d 0) {","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        return date.toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"                \u0026\u0026 date.equals(((Date) other).date)); // state check","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"        return date.hashCode();","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ruthpohrp":69,"CSYGalvin":23}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":" * Represents an Event in the schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"public class Event implements Overlappable {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    private final Date date;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    private final TimeSlot timeSlot;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"    private final Location location;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    private final Remark remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    public Event(Name name, Date date, TimeSlot timeSlot, Location location, Set\u003cTag\u003e tags, Remark remark) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        requireAllNonNull(name, date, timeSlot, location, tags, remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"        this.timeSlot \u003d timeSlot;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"    public Date getDate() {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"        return date;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"    public TimeSlot getTimeSlot() {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"        return timeSlot;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"CSYGalvin"},"content":"    public Location getLocation() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"CSYGalvin"},"content":"        return location;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"        return remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"CSYGalvin"},"content":"     * Compares this Event instance with another Event instance.","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"CSYGalvin"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"CSYGalvin"},"content":"     * @param other other Event to compare to.","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"     * @return a positive integer if this Event\u0027s Date and timeSlot are chronologically before other Event,","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"     * a negative integer if this Event\u0027s Date and timeSlot are chronologically after other Event,","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"CSYGalvin"},"content":"     * zero if both Events are on the same date and start at the same time.","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"CSYGalvin"},"content":"    public int compareTo(Event other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"CSYGalvin"},"content":"        int compareDate \u003d date.compareTo(other.date);","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"CSYGalvin"},"content":"        if (compareDate !\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"CSYGalvin"},"content":"            return compareDate;","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"CSYGalvin"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"CSYGalvin"},"content":"            return timeSlot.compareTo(other.timeSlot);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"kaldius"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 otherEvent.getTimeSlot().equals(getTimeSlot())","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"CSYGalvin"},"content":"                \u0026\u0026 otherEvent.getLocation().equals(getLocation())","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"                \u0026\u0026 otherEvent.getTags().equals(getTags())","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"                \u0026\u0026 otherEvent.getRemark().equals(getRemark());","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"        return Objects.hash(name, date, timeSlot, location, tags, remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"                .append(getDate())","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"                .append(\"; TimeSlot: \")","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"kaldius"},"content":"                .append(getTimeSlot())","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"                .append(\"; Location: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"CSYGalvin"},"content":"                .append(getLocation());","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"ruthpohrp"},"content":"        builder.append(\"; Remark: \").append(getRemark());","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"    public boolean hasSameDate(Overlappable overlappable) {","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"        return this.date.hasSameDate(overlappable.getDate());","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"ruthpohrp"},"content":"     * Checks if this Event overlaps with another Overlappable.","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"     * @param overlappable Other Overlappable to check for overlaps.","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if overlapping, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"kaldius"},"content":"    public boolean isOverlappingWith(Overlappable overlappable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"ruthpohrp"},"content":"        boolean hasSameDate \u003d this.hasSameDate(overlappable);","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"ruthpohrp"},"content":"        boolean isTimeSlotOverlapping \u003d this.timeSlot","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"ruthpohrp"},"content":"                .isOverlappingWith(overlappable.getTimeSlot());","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"ruthpohrp"},"content":"        return hasSameDate \u0026\u0026 isTimeSlotOverlapping;","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaldius":18,"ruthpohrp":40,"-":77,"CSYGalvin":22}},{"path":"src/main/java/seedu/address/model/event/EventContainsCurrentTimePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":" * Tests that an {@code Event}\u0027s {@code Timeslot} is after current time.","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"public class EventContainsCurrentTimePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"    private final Date today;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"     * Constructs a {@code EventContainsCurrentTimePredicate}","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"    public EventContainsCurrentTimePredicate() {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"        this.time \u003d LocalTime.now();","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"        this.today \u003d Date.TODAY;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"     * Constructs a {@code EventContainsCurrentTimePredicate} with {@code LocalTime}","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"     * and {@code Date} arguments","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"    public EventContainsCurrentTimePredicate(LocalTime time, Date date) {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"        this.today \u003d date;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"        return event.getTimeSlot().startTime.compareTo(time) \u003e 0 \u0026\u0026 event.getDate().equals(today);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"                || (other instanceof EventContainsCurrentTimePredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"                \u0026\u0026 time.equals(((EventContainsCurrentTimePredicate) other).time)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luluyousef":39,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/model/event/EventContainsTodaysDatePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":" * Tests that an {@code Event}\u0027s {@code Date} matches today\u0027s date.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"public class EventContainsTodaysDatePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"    private final Date today;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"     * Constructs a {@code EventContainsTodaysDatePredicate}","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"    public EventContainsTodaysDatePredicate() {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"        this.today \u003d Date.TODAY;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"     * Constructs a {@code EventContainsCurrentTimePredicate} with {@code LocalTime}","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"     * and {@code Date} arguments","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"    public EventContainsTodaysDatePredicate(Date date) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"        this.today \u003d date;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"        return event.getDate().equals(today);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"                || (other instanceof EventContainsTodaysDatePredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"                \u0026\u0026 today.equals(((EventContainsTodaysDatePredicate) other).today)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luluyousef":37,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/model/event/IsEventPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":" * Tests that an {@code Event} matches a given {@code Event}","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"public class IsEventPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"    private final Event event;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"     * Constructs a {@code Event}.","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"     * @param event A valid event.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"    public IsEventPredicate(Event event) {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"        return event.equals(this.event);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"                || (other instanceof IsEventPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"                \u0026\u0026 event.equals(((IsEventPredicate) other).event)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luluyousef":32}},{"path":"src/main/java/seedu/address/model/event/Location.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" * Represents an Event\u0027s location in the schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLocation(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"public class Location {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Locations can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"     * The first character of the location must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"CSYGalvin"},"content":"     * Constructs an {@code Location}.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"     * @param location A valid location.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"    public Location(String location) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(location);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"        checkArgument(isValidLocation(location), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"        value \u003d location;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"     * Returns true if a given string is a valid location.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"    public static boolean isValidLocation(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"CSYGalvin"},"content":"                || (other instanceof Location // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"CSYGalvin"},"content":"                \u0026\u0026 value.equals(((Location) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruthpohrp":1,"-":41,"CSYGalvin":15}},{"path":"src/main/java/seedu/address/model/event/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" * Represents an Event\u0027s name in the schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ruthpohrp":1,"-":57,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/model/event/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().fullName, keyword));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kaldius":4,"-":26,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/model/event/Overlappable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * An Overlappable can overlap with another based on date and time.","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"public interface Overlappable {","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"     * Checks if there is an overlap between the given Overlappable and this instance.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"     * @param overlappable Other Overlappable to check for overlaps.","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if there is an overlap, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"    boolean isOverlappingWith(Overlappable overlappable);","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    Date getDate();","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    TimeSlot getTimeSlot();","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kaldius":13,"ruthpohrp":6}},{"path":"src/main/java/seedu/address/model/event/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":" * Represents a Remark in the schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"public class Remark {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public final String value;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"     * @param remark A remark.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"        value \u003d remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    public String toString() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        return value;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ruthpohrp":39}},{"path":"src/main/java/seedu/address/model/event/SortedBlockedSlotList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.exceptions.BlockedSlotNotFoundException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":" * A list of blocked slots is sorted chronologically and does not allow nulls.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"public class SortedBlockedSlotList implements SortedOverlappableList\u003cBlockedSlot\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    private class BlockedSlotSorter implements Comparator\u003cBlockedSlot\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"        public int compare(BlockedSlot o1, BlockedSlot o2) {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"            return o1.compareTo(o2);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    private final ObservableList\u003cBlockedSlot\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    private final ObservableList\u003cBlockedSlot\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"            new SortedList\u003c\u003e(FXCollections.unmodifiableObservableList(internalList),","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"                    new BlockedSlotSorter());","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    public void add(BlockedSlot toAdd) {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"    public void remove(BlockedSlot toRemove) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"            throw new BlockedSlotNotFoundException();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"     * Replaces the contents of this list with {@code blockSlots}.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"    public void setBlockedSlot(List\u003cBlockedSlot\u003e blockSlots) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"        requireAllNonNull(blockSlots);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        internalList.setAll(blockSlots);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"                || (other instanceof SortedBlockedSlotList // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"                \u0026\u0026 internalUnmodifiableList.equals(((SortedBlockedSlotList) other).internalUnmodifiableList));","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"    public ObservableList\u003cBlockedSlot\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"     * Checks if any Overlappable in the list overlaps with another Overlappable instance.","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"     * @param overlappable Overlappable to check.","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if overlaps, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"    public boolean isOverlappingWith(Overlappable overlappable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"        boolean hasNoOverlaps \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"        for (Overlappable o : internalList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"            if (o.isOverlappingWith(overlappable)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"                hasNoOverlaps \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"        return !hasNoOverlaps;","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"    public Iterator\u003cBlockedSlot\u003e iterator() {","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"CSYGalvin"},"content":"        return internalUnmodifiableList.iterator();","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kaldius":59,"ruthpohrp":26,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/model/event/SortedEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"CSYGalvin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":" * A list of events is sorted chronologically and does not allow nulls.","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":" * Duplicate Events are allowed in this Event list to accomodate repeated events with same person.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":" *","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"CSYGalvin"},"content":" *","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"public class SortedEventList implements SortedOverlappableList\u003cEvent\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"CSYGalvin"},"content":"    private class EventSorter implements Comparator\u003cEvent\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"        public int compare(Event o1, Event o2) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"            return o1.compareTo(o2);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"CSYGalvin"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"            new SortedList\u003c\u003e(FXCollections.unmodifiableObservableList(internalList),","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"                    new EventSorter());","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"CSYGalvin"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"CSYGalvin"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"CSYGalvin"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"CSYGalvin"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"CSYGalvin"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"CSYGalvin"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"CSYGalvin"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"CSYGalvin"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"CSYGalvin"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent(SortedEventList replacement) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"CSYGalvin"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"CSYGalvin"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"CSYGalvin"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"CSYGalvin"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"CSYGalvin"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"CSYGalvin"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"CSYGalvin"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"CSYGalvin"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"CSYGalvin"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"CSYGalvin"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"CSYGalvin"},"content":"        return internalUnmodifiableList.iterator();","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"CSYGalvin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"CSYGalvin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"CSYGalvin"},"content":"                || (other instanceof SortedEventList // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"CSYGalvin"},"content":"                \u0026\u0026 internalUnmodifiableList.equals(((SortedEventList) other).internalUnmodifiableList));","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"CSYGalvin"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"CSYGalvin"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"CSYGalvin"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"     * Checks if any Overlappable in the list overlaps with another Overlappable instance.","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"     * @param overlappable Overlappable to check.","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if overlaps, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"    public boolean isOverlappingWith(Overlappable overlappable) {","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"        boolean passesOverlappingCheck \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"        for (Overlappable o : internalList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"            if (!o.isOverlappingWith(overlappable)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"                passesOverlappingCheck \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"        return passesOverlappingCheck;","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"CSYGalvin"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"kaldius":7,"ruthpohrp":14,"CSYGalvin":90}},{"path":"src/main/java/seedu/address/model/event/SortedOverlappableList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":" * Interface for a list of Overlappables.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":" * Must be maintained in a sorted state.","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"public interface SortedOverlappableList\u003cT extends Overlappable\u003e extends Iterable\u003cT\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"     * Adds an Overlappable to the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"     * @param t Overlappable to be added.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    void add(T t);","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"     * Removes the equivalent Overlappable form the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"     * @param t Overlappable to be removed.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    void remove(T t);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * @return an ObservableList.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    ObservableList\u003cT\u003e asUnmodifiableObservableList();","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"     * Checks if the given Overlappable overlaps with any other in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"     * @param overlappable Overlappable to check.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     * @return true if the given Overlappable overlaps with an Overlappable in the list, false otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    boolean isOverlappingWith(Overlappable overlappable);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kaldius":37}},{"path":"src/main/java/seedu/address/model/event/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"* Tests that a {@code Event}\u0027s {@code Tag} matches any of the keywords given.","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"*/","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"        Set\u003cTag\u003e tags \u003d event.getTags();","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"                .anyMatch(keyword -\u003e matchTagsIgnoreCase(tags, keyword));","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"    private boolean matchTagsIgnoreCase(Set\u003cTag\u003e tags, String keyword) {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"        return tags.stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"                .anyMatch(tag -\u003e StringUtil.containsWordIgnoreCase(tag.getTagName(), keyword));","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"luluyousef":38}},{"path":"src/main/java/seedu/address/model/event/TimeSlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":" * Represents an Event\u0027s timeslot in the schedule.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimeSlot(String, String)}","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"public class TimeSlot {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"TimeSlot should be of the format HHmm-HHmm e.g 1300-1400. \";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([0-1]?[0-9]|2[0-3])[0-5][0-9]$\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    public final LocalTime startTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    public final LocalTime endTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * Constructs a {@code TimeSlot}.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"     * @param startTime A valid time for the event.","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    public TimeSlot(String startTime, String endTime) {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        checkArgument(isValidTimeSlot(startTime, endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        this.startTime \u003d LocalTime.parse(startTime, timeFormatter);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"        this.endTime \u003d LocalTime.parse(endTime, timeFormatter);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * Returns if a given string is a valid TimeSlot. For a TimeSlot to be valid, its endTime must come after","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"     * its startTime.","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    public static boolean isValidTimeSlot(String testStartTime, String testEndTime) {","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        return testStartTime.matches(VALIDATION_REGEX) \u0026\u0026 testEndTime.matches(VALIDATION_REGEX)","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 Integer.parseInt(testEndTime) \u003e Integer.parseInt(testStartTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"    public String startTimeToString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        return startTime.format(timeFormatter);","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"    public String endTimeToString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"        return endTime.format(timeFormatter);","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        return this.startTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"        return this.endTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"     * Compares a TimeSlot\u0027s startTime with another.","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"CSYGalvin"},"content":"     * @param other other TimeSlot to compare to.","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"     * @return a positive integer if this TimeSlot started earlier than the other, a negative integer if this TimeSlot","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"     * started later than the other and zero if the 2 TimeSlots started at the same time.","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"CSYGalvin"},"content":"    public int compareTo(TimeSlot other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"CSYGalvin"},"content":"        return startTime.compareTo(other.startTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"        return startTime.format(timeFormatter) + \"-\" + endTime.format(timeFormatter);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"                || (other instanceof TimeSlot // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 startTime.equals(((TimeSlot) other).startTime)","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 endTime.equals(((TimeSlot) other).endTime)); // state check for both time fields","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"     * Checks if this TimeSlot instance overlaps with another TimeSlot instance.","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"     * Note that if a TimeSlots ends at the same time as the other TimeSlot begins,","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"     * it is not considered as overlapping.","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"     * @param timeSlot Other TimeSlot to check for overlaps.","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"     * @return True if overlaps, false otherwise.","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"    public boolean isOverlappingWith(TimeSlot timeSlot) {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"        boolean isOverlapping \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"        LocalTime aStartTime \u003d this.startTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"        LocalTime aEndTime \u003d this.endTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"        LocalTime bStartTime \u003d timeSlot.getStartTime();","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"        LocalTime bEndTime \u003d timeSlot.getEndTime();","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"        if (!aEndTime.isAfter(bStartTime)","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"                || !bEndTime.isAfter(aStartTime)","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"        ) {","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"            isOverlapping \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"        return isOverlapping;","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"        return this.toString().hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luluyousef":9,"kaldius":38,"ruthpohrp":31,"-":29,"CSYGalvin":4}},{"path":"src/main/java/seedu/address/model/event/exceptions/BlockedSlotNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * Signals that the operation is unable to find the specified BlockedSlot.","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"public class BlockedSlotNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"kaldius":6}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"kaldius":2,"-":3,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/model/tag/SupplementaryLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":" * Represents a Pseudo-class for a tag with the label \"supplementary\"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"public class SupplementaryLabel extends Label {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"     * Constructor for an {@code supplementary} label.","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    public SupplementaryLabel() {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"        super(\"supplementary\");","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"        getStyleClass().add(\"supplementary-label\");","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Jacobnbh":17}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" * Represents a Tag in the schedule.","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"     * Creates a Label depending on the tag name","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"     * @return a label with a background depending on the tag name.","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"     * The tag name \"URGENT\" returns a label with a red background","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"     * The tag name \"supplementary\" returns a label with a yellow background","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"    public Label createLabel() {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"        if (tagName.equals(\"URGENT\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"            return new UrgentLabel();","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"        } else if (tagName.equals(\"supplementary\")) {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"            return new SupplementaryLabel();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"            return new Label(tagName);","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"luluyousef"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"luluyousef"},"content":"        return tagName;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luluyousef":3,"Jacobnbh":19,"ruthpohrp":1,"-":53}},{"path":"src/main/java/seedu/address/model/tag/UrgentLabel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":" * Represents a Pseudo-class for a tag with the label \"URGENT\"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"public class UrgentLabel extends Label {","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"     * Constructor for an {@code URGENT} label.","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    public UrgentLabel() {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"        super(\"URGENT\");","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"        getStyleClass().add(\"urgent-label\");","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Jacobnbh":17}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":" * Contains utility methods for populating {@code Schedule} with sample data.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"        return new Event[] {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"            new Event(new Name(\"Jacob NG\"), new Date(\"2020-10-13\"), new TimeSlot(\"1300\", \"1400\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"                new Location(\"The Deck\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"                getTagSet(\"CS1231S\", \"URGENT\"), new Remark(\"Cool student\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"            new Event(new Name(\"Ruth Poh\"), new Date(\"2020-10-15\"), new TimeSlot(\"1600\", \"1700\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"                new Location(\"Central Library\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"                getTagSet(\"Supplementary\"), new Remark(\"Coool student\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"            new Event(new Name(\"Teng Foong\"), new Date(\"2020-10-18\"), new TimeSlot(\"1000\", \"1100\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"                new Location(\"COM1 Basement\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"                getTagSet(\"CS1231S\"), new Remark(\"Cooool student\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"            new Event(new Name(\"Galvin\"), new Date(\"2020-10-19\"), new TimeSlot(\"1400\", \"1500\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"                new Location(\"Office\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"                getTagSet(\"CS2100\"), new Remark(\"Student. Very cool.\")),","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"            new Event(new Name(\"Lulu\"), new Date(\"2020-10-20\"), new TimeSlot(\"1400\", \"1500\"),","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"                new Location(\"Office\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"                getTagSet(\"Supplementary\"), new Remark(\"\"))","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"    public static ReadOnlySchedule getSampleSchedule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"        Schedule sampleAb \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Jacobnbh":5,"kaldius":10,"ruthpohrp":6,"-":28,"CSYGalvin":9}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBlockedSlot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":" * Jackson-friendly version of {@link BlockedSlot}.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"class JsonAdaptedBlockedSlot {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"BlockedSlot\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    private final String date;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    private final String startTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    private final String endTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"     * Constructs a {@code JsonAdaptedBlockedSlot} with the given blocked slot details.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    public JsonAdaptedBlockedSlot(@JsonProperty(\"date\") String date,","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"                            @JsonProperty(\"startTime\") String startTime,","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"                                  @JsonProperty(\"endTime\") String endTime) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"     * Converts a given {@code BlockedSlot} into this class for Jackson use.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    public JsonAdaptedBlockedSlot(BlockedSlot source) {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"        startTime \u003d source.getTimeSlot().startTimeToString();","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        endTime \u003d source.getTimeSlot().endTimeToString();","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"     * Converts this Jackson-friendly adapted blocked slot object into the model\u0027s {@code BlockedSlot} object.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted blocked slot.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"    public BlockedSlot toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"        if (startTime \u003d\u003d null || endTime \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"                    TimeSlot.class.getSimpleName()));","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"        if (!TimeSlot.isValidTimeSlot(startTime, endTime)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"            throw new IllegalValueException(TimeSlot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"        final TimeSlot modelTimeSlot \u003d new TimeSlot(startTime, endTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"        return new BlockedSlot(modelDate, modelTimeSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ruthpohrp":69}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    private final String date;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    private final String location;","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    private final String startTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    private final String endTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    private final String remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"                            @JsonProperty(\"startTime\") String startTime, @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"                            @JsonProperty(\"location\") String location,","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"                            @JsonProperty(\"remark\") String remark) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"        this.location \u003d location;","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"        startTime \u003d source.getTimeSlot().startTimeToString();","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"        endTime \u003d source.getTimeSlot().endTimeToString();","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"        location \u003d source.getLocation().value;","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"        final List\u003cTag\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"            eventTags.add(tag.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"        if (startTime \u003d\u003d null || endTime \u003d\u003d null) {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"kaldius"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"kaldius"},"content":"                    TimeSlot.class.getSimpleName()));","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"        if (!TimeSlot.isValidTimeSlot(startTime, endTime)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"kaldius"},"content":"            throw new IllegalValueException(TimeSlot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"        final TimeSlot modelTimeSlot \u003d new TimeSlot(startTime, endTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"        if (location \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"CSYGalvin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"CSYGalvin"},"content":"                    Location.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"        if (!Location.isValidLocation(location)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"CSYGalvin"},"content":"            throw new IllegalValueException(Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"        final Location modelAddress \u003d new Location(location);","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"kaldius"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(eventTags);","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"                    Remark.class.getSimpleName()));","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"        return new Event(modelName, modelDate, modelTimeSlot, modelAddress, modelTags, modelRemark);","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaldius":27,"ruthpohrp":28,"-":64,"CSYGalvin":7}},{"path":"src/main/java/seedu/address/storage/JsonScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":" * A class to access Schedule data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"public class JsonScheduleStorage implements ScheduleStorage {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonScheduleStorage.class);","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"    public JsonScheduleStorage(Path filePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"    public Optional\u003cReadOnlySchedule\u003e readSchedule() throws DataConversionException {","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"        return readSchedule(filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"     * Similar to {@link #readSchedule()}.","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"    public Optional\u003cReadOnlySchedule\u003e readSchedule(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"        Optional\u003cJsonSerializableSchedule\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"                filePath, JsonSerializableSchedule.class);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"    public void saveSchedule(ReadOnlySchedule addressBook) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"        saveSchedule(addressBook, filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"     * Similar to {@link #saveSchedule(ReadOnlySchedule)}.","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"    public void saveSchedule(ReadOnlySchedule addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSchedule(addressBook), filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jacobnbh":17,"-":63}},{"path":"src/main/java/seedu/address/storage/JsonSerializableSchedule.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":" * An Immutable Schedule that is serializable to JSON format.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"class JsonSerializableSchedule {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"    private final List\u003cJsonAdaptedBlockedSlot\u003e blockedSlots \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"     * Constructs a {@code JsonSerializableSchedule} with the given events.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    public JsonSerializableSchedule(@JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events,","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"                                    @JsonProperty(\"blockedSlots\") List\u003cJsonAdaptedBlockedSlot\u003e blockedSlots) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        this.blockedSlots.addAll(blockedSlots);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"     * Converts a given {@code ReadOnlySchedule} into this class for Jackson use.","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSchedule}.","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"    public JsonSerializableSchedule(ReadOnlySchedule source) {","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        blockedSlots.addAll(source.getBlockedSlotList().stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"                .map(JsonAdaptedBlockedSlot::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"     * Converts this schedule into the model\u0027s {@code Schedule} object.","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"    public Schedule toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"        Schedule schedule \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"            schedule.addEvent(event);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"        for (JsonAdaptedBlockedSlot jsonAdaptedBlockedSlots : blockedSlots) {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"            BlockedSlot blockedSlot \u003d jsonAdaptedBlockedSlots.toModelType();","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"            schedule.addBlockedSlot(blockedSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"        return schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jacobnbh":12,"kaldius":5,"ruthpohrp":13,"-":34,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/storage/ScheduleStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":" * Represents a storage for {@link Schedule}.","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"public interface ScheduleStorage {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"     * Returns Schedule data as a {@link ReadOnlySchedule}.","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    Optional\u003cReadOnlySchedule\u003e readSchedule() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"     * @see #getScheduleFilePath()","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"    Optional\u003cReadOnlySchedule\u003e readSchedule(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"     * Saves the given {@link ReadOnlySchedule} to the storage.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"    void saveSchedule(ReadOnlySchedule addressBook) throws IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"     * @see #saveSchedule(ReadOnlySchedule)","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"    void saveSchedule(ReadOnlySchedule addressBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Jacobnbh":46}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"public interface Storage extends ScheduleStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    Path getScheduleFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    Optional\u003cReadOnlySchedule\u003e readSchedule() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"    void saveSchedule(ReadOnlySchedule addressBook) throws IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Jacobnbh":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":" * Manages storage of Schedule data in local storage.","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"    private ScheduleStorage scheduleStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"     * Creates a {@code StorageManager} with the given {@code ScheduleStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"    public StorageManager(ScheduleStorage scheduleStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"        this.scheduleStorage \u003d scheduleStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Schedule methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"    public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"        return scheduleStorage.getScheduleFilePath();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"    public Optional\u003cReadOnlySchedule\u003e readSchedule() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"        return readSchedule(scheduleStorage.getScheduleFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"    public Optional\u003cReadOnlySchedule\u003e readSchedule(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"        return scheduleStorage.readSchedule(filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"    public void saveSchedule(ReadOnlySchedule addressBook) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"        saveSchedule(addressBook, scheduleStorage.getScheduleFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"    public void saveSchedule(ReadOnlySchedule addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"        scheduleStorage.saveSchedule(addressBook, filePath);","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jacobnbh":17,"-":62}},{"path":"src/main/java/seedu/address/ui/CommandDescCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.TitledPane;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.logic.commands.CommandEnum;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":" * A UI component that displays the format, description and examples of a {@code Command}","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"public class CommandDescCard extends UiPart\u003cTitledPane\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    private static final String FXML \u003d \"CommandDescCard.fxml\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    private TitledPane commandTitle;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    private Label format;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"    private Label description;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    private Label examples;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    private CommandSummaryWindow commandSummaryWindow;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"     * Creates a Command Description Card based on the {@code Command} and Command Description window supplied.","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"    public CommandDescCard(CommandEnum commandWord, CommandSummaryWindow commandSummaryWindow) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"        super(FXML);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"        this.commandSummaryWindow \u003d commandSummaryWindow;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"        this.getRoot().heightProperty().addListener((obs, oldHeight, newHeight) -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"                commandSummaryWindow.getRoot().sizeToScene());","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"        case ADD:","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Add Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"add n/NAME d/DATE t/TIMESLOT l/LOCATION [tag/TAG]...[r/REMARK]\");","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Adds a consultation event to DukePro(f)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"add n/Lulu Yousef d/2020-01-01 t/0800-0900 l/NUS tag/Important tag/supplementary\"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"                    + \"\\n\" + \"add n/Ruth Poh d/2020-02-02 t/1000-1100 l/The Deck r/May have to switch to zoom\");","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"        case CLEAR:","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Clear Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"clear\");","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Clears all consultation events stored in DukePro(f)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"clear\");","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"        case COMMAND_SUMMARY:","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Command Summary Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"command_summary\");","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Opens this pop-up window containing a summary of all available commands\");","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"command_summary\");","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"        case DELETE:","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Delete Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"delete INDEX\");","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Deletes a consultationn event from DukePro(f) at the specified INDEX\");","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"delete 1\");","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"        case EDIT:","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Edit Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"edit INDEX [n/NAME] [d/DATE] [t/TIMESLOT] [l/LOCATION] [tag/TAG]... [r/REMARK]\");","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"                    \"Edits the details of a consultation event from DukePro(f) at the specified INDEX\");","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"edit 2 n/Ruth t/0730-0830\"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"                    + \"\\n\" + \"edit 3 r/May have to switch to zoom\");","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"        case EXIT:","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Exit Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"exit\");","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Exits DukePro(f)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"exit\");","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"        case FIND:","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Find Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"find KEYWORD [MORE_KEYWORDS]\");","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Finds all events whose names contain any of the specified keywords and displays \"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"                    + \"them as a list with index numbers.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"find Jacob\");","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"        case HELP:","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Help Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"help\");","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Opens a pop-up window with a link to DukePro(f)\u0027s user guide.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"help\");","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"Jacobnbh"},"content":"        case LIST:","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"List Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"list\");","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Lists down all consultation events scheduled in DukePro(f)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"list\");","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"        case NEXT_EVENT:","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Next Event Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"next_event\");","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Displays the next consultation event scheduled for the day in DukePro(f)\");","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"next_event\");","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"Jacobnbh"},"content":"        case UPCOMING_EVENTS:","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"Jacobnbh"},"content":"            this.getRoot().setText(\"Upcoming Event Command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"Jacobnbh"},"content":"            this.format.setText(\"upcoming_events\");","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"Jacobnbh"},"content":"            this.description.setText(\"Lists down all the upcoming consultation events for the current day.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"Jacobnbh"},"content":"            this.examples.setText(\"upcoming_events\");","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"Jacobnbh"},"content":"            break;","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"Jacobnbh"},"content":"        default:","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"Jacobnbh"},"content":"            assert false : \"CommandDescCard: Invalid Command\";","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Jacobnbh":113}},{"path":"src/main/java/seedu/address/ui/CommandSummaryWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.control.Accordion;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.logic.commands.CommandEnum;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":" * Controller for the Command Summary page.","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"public class CommandSummaryWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CommandSummaryWindow.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    private static final String FXML \u003d \"CommandSummaryWindow.fxml\";","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"    private Accordion commandDescription;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"     * Creates a new CommandSummaryWindow","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"     * @param root Stage to use as the root of the CommandSummaryWindow.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    public CommandSummaryWindow(Stage root) {","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"        for (CommandEnum command : CommandEnum.values()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"            commandDescription.getPanes().add(new CommandDescCard(command, this).getRoot());","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"    public CommandSummaryWindow() {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"     * Shows the command summary window.","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"    public void show() {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"        logger.fine(\"Showing command summary page\");","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"     * Returns true if the command summary window is currently being shown.","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"     * Hides the command summary window.","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"    public void hide() {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"     * Focuses on the command summary window.","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"    public void focus() {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Jacobnbh":67}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":" * An UI component that displays information of a {@code Event}.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    public final Event event;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    private Label date;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"    private Label loc;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    private Label timeSlot;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"    private Label remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"    private String value \u003d timeSlot.toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"        date.setText(event.getDate().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"        loc.setText(event.getLocation().value);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"        timeSlot.setText(event.getTimeSlot().toString());","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"        remark.setText(event.getRemark().value);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"        event.getTags().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"                .forEach(tag -\u003e tags.getChildren().add(tag.createLabel()));","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jacobnbh":1,"kaldius":15,"ruthpohrp":7,"-":57,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaldius"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":" * Panel containing the list of events.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"                setText(null);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaldius":48,"CSYGalvin":1}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    public static final String USERGUIDE_URL \u003d \"https://github.com/AY2122S1-CS2103T-T11-4\"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"            + \"/tp/blob/master/docs/UserGuide.md\";","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ruthpohrp":2,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"    private CommandSummaryWindow commandSummaryWindow;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"    private MenuItem commandSummaryMenuItem;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"    private VBox resultDisplayPlaceholder;","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"        commandSummaryWindow \u003d new CommandSummaryWindow();","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"luluyousef"},"content":"     * @param keyCombination the KeyCombination time of the accelerator","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"kaldius"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"Jacobnbh"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getScheduleFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"Jacobnbh"},"content":"     * Opens the command summary window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"Jacobnbh"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"Jacobnbh"},"content":"    public void handleCommandSummary() {","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"Jacobnbh"},"content":"        if (!commandSummaryWindow.isShowing()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"Jacobnbh"},"content":"            commandSummaryWindow.show();","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"Jacobnbh"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"Jacobnbh"},"content":"            commandSummaryWindow.focus();","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"Jacobnbh"},"content":"        commandSummaryWindow.hide();","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"kaldius"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"kaldius"},"content":"        return eventListPanel;","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"Jacobnbh"},"content":"            if (commandResult.isShowCommands()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"Jacobnbh"},"content":"                handleCommandSummary();","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"Jacobnbh"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"luluyousef":1,"Jacobnbh":24,"kaldius":6,"-":189}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/DukePro(f).png\";","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Jacobnbh":1,"-":88}},{"path":"src/main/resources/view/CommandDescCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.TitledPane?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"\u003cTitledPane fx:id\u003d\"commandTitle\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" styleClass\u003d\"commandTitle\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"        \u003cURL value\u003d\"@CommandSummaryWindow.css\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    \u003ccontent\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"                \u003cLabel styleClass\u003d\"formatLabel\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"                    Format:","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"                \u003cLabel fx:id\u003d\"format\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"                \u003cLabel styleClass\u003d\"descriptionLabel\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"                    Description:","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"                \u003cLabel fx:id\u003d\"description\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"                \u003cLabel styleClass\u003d\"examplesLabel\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"                    Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"                \u003cLabel fx:id\u003d\"examples\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"    \u003c/content\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"\u003c/TitledPane\u003e","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Jacobnbh":35}},{"path":"src/main/resources/view/CommandSummaryWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":".commandTitle {","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":".commandSummaryHeader {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"    -fx-font-size: 18pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":".formatLabel {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"    -fx-padding: 0 53 10 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":".descriptionLabel {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    -fx-padding: 0 15 10 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":".examplesLabel {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    -fx-padding: 0 32 0 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Jacobnbh":20}},{"path":"src/main/resources/view/CommandSummaryWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.Accordion?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.text.Text?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Commands\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"                \u003cURL value\u003d\"@CommandSummaryWindow.css\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"                \u003cVBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"                    \u003cLabel styleClass\u003d\"commandSummaryHeader\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"                            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" top\u003d\"5\" right\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"                        Command Summary","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"                    \u003cTextFlow style\u003d\"-fx-font-size: 11pt\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"                            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"                        \u003cText text\u003d\"Click on the dropdown arrows below to find out more about the \"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"                        \u003cText text\u003d\"format, description and examples\" style\u003d\"-fx-font-weight: bold\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"                        \u003cText text\u003d\" of each command!\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"                        \u003cText text\u003d\"\u0026#10; \u0026#x2022; Words in UPPER_CASE are the parameters to be supplied by the user.\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"                        \u003cText text\u003d\"\u0026#10; \u0026#x2022; Items in square brackets are optional. (Items not in square brackets are necessary!)\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"                        \u003cText text\u003d\"\u0026#10; \u0026#x2022; Parameters that can have more than one entry will be anteceded by a \u0027...\u0027\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"                    \u003c/TextFlow\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"                    \u003cAccordion fx:id\u003d\"commandDescription\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Jacobnbh":46}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: derive(#dfdfdf, 20%);","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: derive(#f8f8f8, 0%);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: derive(#f8f8f8, 0%);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"    -fx-border-color: #dfdfdf, #dfdfdf, #dfdfdf #dfdfdf;","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"    -fx-border-radius: 3px;","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: #B4BABE;","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: #D9DFE3;","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"Jacobnbh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":138,"author":{"gitId":"Jacobnbh"},"content":"     -fx-background-color: derive(white, 20%);","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"Jacobnbh"},"content":"     -fx-background-color: derive(#f8f8f8, 0%);","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"Jacobnbh"},"content":"     -fx-border-color: derive(#f8f8f8, 0%);","lastModifiedDate":"2021-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":155,"author":{"gitId":"Jacobnbh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: derive(#042A6F, 20%);","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: derive(#dfdfdf, 20%);","lastModifiedDate":"2021-10-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: derive(#c1c1c1, 0%);","lastModifiedDate":"2021-10-13"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"Jacobnbh"},"content":"    -fx-border-color: #dfdfdf #dfdfdf #dfdfdf #dfdfdf;","lastModifiedDate":"2021-10-13"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"Jacobnbh"},"content":"    -fx-border-radius: 3px;","lastModifiedDate":"2021-10-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"Jacobnbh"},"content":"    -fx-font-family: \"Open Sans Bold\";","lastModifiedDate":"2021-10-13"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"Jacobnbh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"kaldius"},"content":"#filterField, #eventListPanel, #eventWebpage {","lastModifiedDate":"2021-10-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"Jacobnbh"},"content":"    -fx-border-color: #dfdfdf, #dfdfdf, #dfdfdf, #dfdfdf;","lastModifiedDate":"2021-10-13"},{"lineNumber":342,"author":{"gitId":"Jacobnbh"},"content":"    -fx-border-radius: 3px;","lastModifiedDate":"2021-10-13"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":359,"author":{"gitId":"Jacobnbh"},"content":"#tags .urgent-label {","lastModifiedDate":"2021-10-25"},{"lineNumber":360,"author":{"gitId":"Jacobnbh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-25"},{"lineNumber":361,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: #eb130c;","lastModifiedDate":"2021-10-25"},{"lineNumber":362,"author":{"gitId":"Jacobnbh"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-25"},{"lineNumber":363,"author":{"gitId":"Jacobnbh"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":364,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":365,"author":{"gitId":"Jacobnbh"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-25"},{"lineNumber":366,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":367,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":368,"author":{"gitId":"Jacobnbh"},"content":"#tags .supplementary-label {","lastModifiedDate":"2021-10-25"},{"lineNumber":369,"author":{"gitId":"Jacobnbh"},"content":"    -fx-text-fill: #333330;","lastModifiedDate":"2021-10-25"},{"lineNumber":370,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-color: #ebd10c;","lastModifiedDate":"2021-10-25"},{"lineNumber":371,"author":{"gitId":"Jacobnbh"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-25"},{"lineNumber":372,"author":{"gitId":"Jacobnbh"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":373,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-25"},{"lineNumber":374,"author":{"gitId":"Jacobnbh"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-25"},{"lineNumber":375,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Jacobnbh":42,"kaldius":1,"-":332}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"      \u003cLabel fx:id\u003d\"loc\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$location\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"      \u003cLabel fx:id\u003d\"timeSlot\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timeSlot\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaldius":1,"ruthpohrp":2,"-":33,"CSYGalvin":1}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"stack-pane\"/\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jacobnbh":1,"-":7}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"    -fx-background: white;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jacobnbh":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Jacobnbh":2,"-":44}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"900\" onCloseRequest\u003d\"#handleExit\" title\u003d\"DukePro(f)\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"         xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    \u003cImage url\u003d\"@/images/DukePro(f).png\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"            \u003cMenuItem fx:id\u003d\"commandSummaryMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleCommandSummary\" text\u003d\"Command Summary\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.9\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"          \u003cVBox minWidth\u003d\"500\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"               \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"            \u003cVBox fx:id\u003d\"resultDisplayPlaceholder\" prefHeight\u003d\"180.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"              \u003cLabel styleClass\u003d\"label-bright\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"                Results:","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"          \u003cVBox fx:id\u003d\"eventList\" minWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"            \u003cLabel styleClass\u003d\"label-bright\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"              Student Consultations:","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Jacobnbh":24,"-":49}},{"path":"src/test/data/JsonScheduleStorageTest/invalidAndValidEventSchedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"    \"name\": \"Valid Event\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"    \"date\": \"2020-01-01\",","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"    \"startTime\": \"1300\",","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"1400\",","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    \"location\": \"4th street\",","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"This is a remark.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"    \"name\": \"Event With Invalid Date Field\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    \"date\": \"2020-021341-01\",","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"    \"startTime\": \"1330\",","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"1430\",","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    \"location\": \"4th street\",","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"This is a remark.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jacobnbh":3,"kaldius":4,"ruthpohrp":6,"-":4}},{"path":"src/test/data/JsonScheduleStorageTest/invalidEventSchedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"    \"name\": \"Event with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"    \"date\": \"2020-01-01\",","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"    \"startTime\": \"1300\",","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"1400\",","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    \"location\": \"4th street\",","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"This is a remark.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jacobnbh":2,"kaldius":2,"ruthpohrp":3,"-":3}},{"path":"src/test/data/JsonSerializableScheduleTest/invalidEventSchedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kaldius"},"content":"  \"events\": [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"    \"date\": \"9482424\",","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"    \"startTime\": \"12:15\",","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"13:15\",","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"    \"location\": \"4th street\",","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"This is a remark.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"  } ],","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"  \"blockedSlots\" : [","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"      \"date\" : \"2020-02-06\",","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"      \"startTime\" : \"1100\",","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"      \"endTime\" : \"1200\"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    }, {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"      \"date\" : \"2020-02-06\",","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"      \"startTime\" : \"1200\",","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"      \"endTime\" : \"1300\"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    }, {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"      \"date\" : \"2020-02-06\",","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"      \"startTime\" : \"1300\",","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"      \"endTime\" : \"1400\"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"  ]","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaldius":3,"ruthpohrp":19,"-":3}},{"path":"src/test/data/JsonSerializableScheduleTest/typicalEventSchedule.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"  \"_comment\": \"Schedule save file which contains the same Event values as in TypicalEvents#getTypicalSchedule()\",","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"kaldius"},"content":"  \"events\" : [ {","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"    \"date\" : \"2020-01-01\",","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"    \"startTime\" : \"0800\",","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"0900\",","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"    \"location\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"A nice girl.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    \"date\" : \"2020-01-02\",","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"    \"startTime\" : \"0830\",","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"0930\",","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"    \"location\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"A weird boy.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    \"date\" : \"2020-01-03\",","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    \"startTime\" : \"0930\",","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"1030\",","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"    \"location\" : \"wall street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"May change schedule.\"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    \"date\" : \"2020-01-04\",","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    \"startTime\" : \"1000\",","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"1100\",","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"    \"location\" : \"10th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    \"date\" : \"2020-01-05\",","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"    \"startTime\" : \"1030\",","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"1130\",","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"    \"location\" : \"michegan ave\",","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    \"date\" : \"2020-01-06\",","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"    \"startTime\" : \"1100\",","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"1200\",","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"CSYGalvin"},"content":"    \"location\" : \"little tokyo\",","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    \"date\" : \"2020-01-07\",","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"    \"startTime\" : \"1130\",","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"    \"endTime\" : \"1230\",","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"CSYGalvin"},"content":"    \"location\" : \"4th street\",","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"    \"remark\": \"\"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"  } ],","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"  \"blockedSlots\" : [","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"    {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"      \"date\" : \"2020-02-06\",","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"      \"startTime\" : \"1100\",","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"      \"endTime\" : \"1200\"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"    }, {","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"      \"date\" : \"2020-02-06\",","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"      \"startTime\" : \"1200\",","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"      \"endTime\" : \"1300\"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"    }, {","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"      \"date\" : \"2020-02-06\",","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"      \"startTime\" : \"1300\",","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"      \"endTime\" : \"1400\"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"  ]","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jacobnbh":1,"kaldius":15,"ruthpohrp":37,"-":15,"CSYGalvin":7}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"  \"scheduleFilePath\" : \"addressbook.json\"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Jacobnbh":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"  \"scheduleFilePath\" : \"addressbook.json\"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Jacobnbh":1,"-":10}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESLOT_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.storage.JsonScheduleStorage;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"        JsonScheduleStorage scheduleStorage \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"                new JsonScheduleStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"        StorageManager storage \u003d new StorageManager(scheduleStorage, userPrefsStorage);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"        // Setup LogicManager with JsonScheduleIoExceptionThrowingStub","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"        JsonScheduleStorage addressBookStorage \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"                new JsonScheduleIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + DATE_DESC_AMY + TIMESLOT_DESC_AMY","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"                + LOCATION_DESC_AMY + REMARK_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"        Event expectedEvent \u003d new EventBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"kaldius"},"content":"        expectedModel.addEvent(expectedEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"Jacobnbh"},"content":"        Model expectedModel \u003d new ModelManager(model.getSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"Jacobnbh"},"content":"    private static class JsonScheduleIoExceptionThrowingStub extends JsonScheduleStorage {","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"Jacobnbh"},"content":"        private JsonScheduleIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"Jacobnbh"},"content":"        public void saveSchedule(ReadOnlySchedule addressBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Jacobnbh":12,"kaldius":9,"ruthpohrp":5,"-":136,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"        model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    public void execute_newEvent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"        Model expectedModel \u003d new ModelManager(model.getSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        expectedModel.addEvent(validEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        assertCommandSuccess(new AddCommand(validEvent), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validEvent), expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Jacobnbh":3,"kaldius":6,"-":28,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.FreeSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.Overlappable;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        CommandResult commandResult \u003d new AddCommand(validEvent).execute(modelStub);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validEvent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        Event alice \u003d new EventBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"        Event bob \u003d new EventBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"        public Path getScheduleFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"        public void setScheduleFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"kaldius"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":111,"author":{"gitId":"Jacobnbh"},"content":"        public void setSchedule(ReadOnlySchedule newData) {","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"Jacobnbh"},"content":"        public ReadOnlySchedule getSchedule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"kaldius"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"        public void addBlockedSlot(BlockedSlot blockedSlot) {","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"kaldius"},"content":"        public boolean isBlocked(Overlappable overlappable) {","lastModifiedDate":"2021-10-27"},{"lineNumber":137,"author":{"gitId":"kaldius"},"content":"            //This method needs to be called.","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"kaldius"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"kaldius"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"kaldius"},"content":"        public ObservableList\u003cBlockedSlot\u003e getFilteredBlockedSlotList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"kaldius"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"kaldius"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"kaldius"},"content":"        public void updateFilteredBlockedSlotList(Predicate\u003cBlockedSlot\u003e predicate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"kaldius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"kaldius"},"content":"        public String filteredBlockedSlotListToString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"kaldius"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"luluyousef"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"luluyousef"},"content":"        public Event nextEventInTheList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"luluyousef"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"luluyousef"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"CSYGalvin"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"CSYGalvin"},"content":"        public ArrayList\u003cFreeSlot\u003e getFreeSlots(Date date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"CSYGalvin"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"kaldius"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"kaldius"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"kaldius"},"content":"        private final Event event;","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"kaldius"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"kaldius"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"kaldius"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"kaldius"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"kaldius"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"kaldius"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"kaldius"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"kaldius"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"kaldius"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"Jacobnbh"},"content":"        public ReadOnlySchedule getSchedule() {","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"Jacobnbh"},"content":"            return new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"luluyousef":4,"Jacobnbh":8,"kaldius":43,"ruthpohrp":1,"-":144,"CSYGalvin":7}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    public void execute_emptySchedule_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"    public void execute_nonEmptySchedule_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"        Model model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"        expectedModel.setSchedule(new Schedule());","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Jacobnbh":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true)));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true).hashCode());","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Jacobnbh":5,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandSummaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.logic.commands.CommandSummaryCommand.SHOWING_COMMAND_SUMMARY_MESSAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"public class CommandSummaryTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    public void execute_help_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_COMMAND_SUMMARY_MESSAGE, false, true, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"        assertCommandSuccess(new CommandSummaryCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Jacobnbh":20}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    public static final String VALID_DATE_AMY \u003d \"2020-01-01\";","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    public static final String VALID_DATE_BOB \u003d \"2020-02-02\";","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"    public static final String VALID_LOCATION_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"CSYGalvin"},"content":"    public static final String VALID_LOCATION_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Likes to bake apple pie with me.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Plays golf with his buddies on Sunday.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    public static final String VALID_STARTTIME_AMY \u003d \"1300\";","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"    public static final String VALID_ENDTIME_AMY \u003d \"1400\";","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"    public static final String VALID_STARTTIME_BOB \u003d \"0830\";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"    public static final String VALID_ENDTIME_BOB \u003d \"0900\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"    public static final String VALID_TIMESLOT_AMY \u003d VALID_STARTTIME_AMY + \"-\" + VALID_ENDTIME_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"    public static final String VALID_TIMESLOT_BOB \u003d VALID_STARTTIME_BOB + \"-\" + VALID_ENDTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"    public static final String TIMESLOT_DESC_AMY \u003d \" \" + PREFIX_TIMESLOT + VALID_TIMESLOT_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"    public static final String TIMESLOT_DESC_BOB \u003d \" \" + PREFIX_TIMESLOT + VALID_TIMESLOT_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"CSYGalvin"},"content":"    public static final String LOCATION_DESC_AMY \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"CSYGalvin"},"content":"    public static final String LOCATION_DESC_BOB \u003d \" \" + PREFIX_LOCATION + VALID_LOCATION_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"2020a-02-02\"; // \u0027a\u0027 not allowed in","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"    // dates","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"    public static final String INVALID_TIME_DESC \u003d \" \" + PREFIX_TIMESLOT + \"15:15-16:00\"; // \u0027:\u0027 not allowed in time","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"CSYGalvin"},"content":"    public static final String INVALID_LOCATION_DESC \u003d \" \" + PREFIX_LOCATION; // empty string not allowed for locations","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"    public static final EditCommand.EditEventDescriptor DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"    public static final EditCommand.EditEventDescriptor DESC_BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"        DESC_AMY \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"                .withDate(VALID_DATE_AMY).withTimeSlot(VALID_STARTTIME_AMY, VALID_ENDTIME_AMY)","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"                .withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"                .withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"                .withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"        DESC_BOB \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"                .withDate(VALID_DATE_BOB).withTimeSlot(VALID_STARTTIME_BOB, VALID_ENDTIME_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"                .withLocation(VALID_LOCATION_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                .withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"kaldius"},"content":"     * - the address book, filtered event list and selected event in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"Jacobnbh"},"content":"        Schedule expectedSchedule \u003d new Schedule(actualModel.getSchedule());","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"kaldius"},"content":"        List\u003cEvent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredEventList());","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(expectedSchedule, actualModel.getSchedule());","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"kaldius"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredEventList());","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"kaldius"},"content":"     * Updates {@code model}\u0027s filtered list to show only the event at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"kaldius"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"kaldius"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEventList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"kaldius"},"content":"        Event event \u003d model.getFilteredEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"kaldius"},"content":"        final String[] splitName \u003d event.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"kaldius"},"content":"        model.updateFilteredEventList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"kaldius"},"content":"        assertEquals(1, model.getFilteredEventList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Jacobnbh":3,"kaldius":29,"ruthpohrp":16,"-":86,"CSYGalvin":8}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    private Model model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"        Model expectedModel \u003d new ModelManager(model.getSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSchedule().getEventList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"kaldius"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"kaldius"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"kaldius"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Jacobnbh":5,"kaldius":25,"-":78,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"    private Model model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"        Model expectedModel \u003d new ModelManager(new Schedule(model.getSchedule()), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        Event lastEvent \u003d model.getFilteredEventList().get(indexLastEvent.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"        EventBuilder eventInList \u003d new EventBuilder(lastEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"        Event editedEvent \u003d eventInList.withName(VALID_NAME_BOB).withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(VALID_DATE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastEvent, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"        Model expectedModel \u003d new ModelManager(new Schedule(model.getSchedule()), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"        expectedModel.setEvent(lastEvent, editedEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT, new EditCommand.EditEventDescriptor());","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"kaldius"},"content":"        Event editedEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"        Model expectedModel \u003d new ModelManager(new Schedule(model.getSchedule()), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"kaldius"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"        Event eventInFilteredList \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"        Event editedEvent \u003d new EventBuilder(eventInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"                new EditEventDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"        Model expectedModel \u003d new ModelManager(new Schedule(model.getSchedule()), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"    public void execute_invalidEventIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"kaldius"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"kaldius"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"kaldius"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"kaldius"},"content":"    public void execute_invalidEventIndexFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"kaldius"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"kaldius"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"Jacobnbh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSchedule().getEventList().size());","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"kaldius"},"content":"                new EditEventDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"kaldius"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_EVENT, DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"kaldius"},"content":"        EditCommand.EditEventDescriptor copyDescriptor \u003d new EditCommand.EditEventDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":133,"author":{"gitId":"kaldius"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_EVENT, copyDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"kaldius"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_EVENT, DESC_AMY)));","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"kaldius"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_EVENT, DESC_BOB)));","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Jacobnbh":8,"kaldius":42,"ruthpohrp":3,"-":98,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/logic/commands/EditEventDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ENDTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STARTTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"public class EditEventDescriptorTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        EditEventDescriptor descriptorWithSameValues \u003d new EditEventDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        EditEventDescriptor editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"        editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"luluyousef"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withTimeSlot(VALID_STARTTIME_BOB, VALID_ENDTIME_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"CSYGalvin"},"content":"        editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withLocation(VALID_LOCATION_BOB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"        editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"luluyousef":1,"kaldius":10,"ruthpohrp":9,"-":44,"CSYGalvin":2}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Jacobnbh":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FilterByTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FILTERED_TAGS;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.BENSON;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.DANIEL;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"* Contains integration tests (interaction with the Model) for {@code FilterByTagCommand}.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"*/","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"public class FilterByTagCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"    private Model model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"        FilterByTagCommand findFirstCommand \u003d new FilterByTagCommand(firstPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"        FilterByTagCommand findSecondCommand \u003d new FilterByTagCommand(secondPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"luluyousef"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"luluyousef"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"luluyousef"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"luluyousef"},"content":"        FilterByTagCommand findFirstCommandCopy \u003d new FilterByTagCommand(firstPredicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"luluyousef"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"luluyousef"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"luluyousef"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"luluyousef"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"luluyousef"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"luluyousef"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"luluyousef"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"luluyousef"},"content":"    public void execute_zeroKeywords_noTaggedEventFound() {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"luluyousef"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FILTERED_TAGS, 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"luluyousef"},"content":"        FilterByTagCommand command \u003d new FilterByTagCommand(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"luluyousef"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"luluyousef"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"luluyousef"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"luluyousef"},"content":"    public void execute_multipleKeywords_multipleTagsFound() {","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"luluyousef"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FILTERED_TAGS, 3);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\"owesMoney friends\");","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"luluyousef"},"content":"        FilterByTagCommand command \u003d new FilterByTagCommand(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"luluyousef"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"luluyousef"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"luluyousef"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredEventList());","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"luluyousef"},"content":"     * Parses {@code userInput} into a {@code TagContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"luluyousef"},"content":"    private TagContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"luluyousef"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"luluyousef":83}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENT_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.CARL;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.ELLE;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.FIONA;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"    private Model model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"    public void execute_zeroKeywords_noEventFound() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENT_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"    public void execute_multipleKeywords_multipleEventsFound() {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENT_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredEventList());","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jacobnbh":3,"kaldius":13,"-":66,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/logic/commands/FreeSlotCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"public class FreeSlotCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FreeSlotsCommand(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"CSYGalvin":12}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Jacobnbh":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"        model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"        expectedModel \u003d new ModelManager(model.getSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Jacobnbh":3,"kaldius":3,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/NextEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NEXT_EVENT_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.EventContainsCurrentTimePredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"public class NextEventCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"    private Model model;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"        model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"        expectedModel \u003d new ModelManager(model.getSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"luluyousef"},"content":"    public void execute_nextEvent() {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"luluyousef"},"content":"        String expectedMessage \u003d String.format(MESSAGE_NEXT_EVENT_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"luluyousef"},"content":"        EventContainsCurrentTimePredicateStub predicate \u003d new EventContainsCurrentTimePredicateStub();","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"luluyousef"},"content":"        NextEventCommand command \u003d new NextEventCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"luluyousef"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"luluyousef"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"luluyousef"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredEventList());","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"luluyousef"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"luluyousef"},"content":"        NextEventCommand firstCommand \u003d new NextEventCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"luluyousef"},"content":"        EventContainsCurrentTimePredicate firstPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"luluyousef"},"content":"                new EventContainsCurrentTimePredicate(LocalTime.parse(\"0730\", timeFormatter),","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"luluyousef"},"content":"                        new Date(\"2020-01-01\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"luluyousef"},"content":"        EventContainsCurrentTimePredicate secondPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"luluyousef"},"content":"                new EventContainsCurrentTimePredicate(LocalTime.parse(\"0830\", timeFormatter),","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"luluyousef"},"content":"                        new Date(\"2020-01-02\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"luluyousef"},"content":"        NextEventCommand thirdCommand \u003d new NextEventCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"luluyousef"},"content":"        NextEventCommand fourthCommand \u003d new NextEventCommand(secondPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"luluyousef"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"luluyousef"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"luluyousef"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"luluyousef"},"content":"        // different dates -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"luluyousef"},"content":"        assertFalse(thirdCommand.equals(fourthCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"luluyousef"},"content":"     * An EventContainsTodaysDatePredicate stub that always stores the date 2020-01-01.","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"luluyousef"},"content":"    private class EventContainsCurrentTimePredicateStub extends EventContainsCurrentTimePredicate {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"luluyousef"},"content":"        public EventContainsCurrentTimePredicateStub () {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"luluyousef"},"content":"            super(LocalTime.parse(\"0730\", timeFormatter),","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"luluyousef"},"content":"                    new Date(\"2020-01-01\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"luluyousef"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"luluyousef":85}},{"path":"src/test/java/seedu/address/logic/commands/UpcomingEventsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UPCOMING_EVENT_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.EventContainsTodaysDatePredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"public class UpcomingEventsCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"    private Model model;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"        model \u003d new ModelManager(getTypicalSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"        expectedModel \u003d new ModelManager(model.getSchedule(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"    public void execute_upcomingEvents() {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"        String expectedMessage \u003d String.format(MESSAGE_UPCOMING_EVENT_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"luluyousef"},"content":"        EventContainsTodaysDatePredicateStub predicate \u003d new EventContainsTodaysDatePredicateStub();","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"luluyousef"},"content":"        UpcomingEventsCommand command \u003d new UpcomingEventsCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"luluyousef"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"luluyousef"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"luluyousef"},"content":"        assertEquals(Arrays.asList(ALICE), model.getFilteredEventList());","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"luluyousef"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"luluyousef"},"content":"        UpcomingEventsCommand firstCommand \u003d new UpcomingEventsCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"luluyousef"},"content":"        UpcomingEventsCommand secondCommand \u003d new UpcomingEventsCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"luluyousef"},"content":"        EventContainsTodaysDatePredicate firstPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"luluyousef"},"content":"                new EventContainsTodaysDatePredicate(new Date(\"2021-10-26\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"luluyousef"},"content":"        EventContainsTodaysDatePredicate secondPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"luluyousef"},"content":"                new EventContainsTodaysDatePredicate(new Date(\"2021-10-27\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"luluyousef"},"content":"        UpcomingEventsCommand thirdCommand \u003d new UpcomingEventsCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"luluyousef"},"content":"        UpcomingEventsCommand fourthCommand \u003d new UpcomingEventsCommand(secondPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"luluyousef"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstCommand.equals(firstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"luluyousef"},"content":"        // two objects containing same date -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstCommand.equals(secondCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"luluyousef"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"luluyousef"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"luluyousef"},"content":"        // different dates -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"luluyousef"},"content":"        assertFalse(thirdCommand.equals(fourthCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"luluyousef"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"luluyousef"},"content":"     * An EventContainsTodaysDatePredicate stub that always stores the date 2020-01-01.","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"luluyousef"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"luluyousef"},"content":"    private class EventContainsTodaysDatePredicateStub extends EventContainsTodaysDatePredicate {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"luluyousef"},"content":"        public EventContainsTodaysDatePredicateStub() {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"luluyousef"},"content":"            super(new Date(\"2020-01-01\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"luluyousef"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"luluyousef":82}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIME_DESC;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESLOT_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESLOT_DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIMESLOT_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        Event expectedEvent \u003d new EventBuilder(BOB).withTags(VALID_TAG_FRIEND).withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddCommand(expectedEvent));","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddCommand(expectedEvent));","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_AMY + DATE_DESC_BOB + TIMESLOT_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddCommand(expectedEvent));","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"luluyousef"},"content":"        // multiple time - last time accepted","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_AMY + TIMESLOT_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddCommand(expectedEvent));","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"CSYGalvin"},"content":"        // multiple location - last location accepted","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB + TIMESLOT_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddCommand(expectedEvent));","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"        Event expectedEventMultipleTags \u003d new EventBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"                .withRemark(VALID_REMARK_BOB).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + REMARK_DESC_BOB, new AddCommand(expectedEventMultipleTags));","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"        // multiple remarks - last remark accepted","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB + TIMESLOT_DESC_BOB","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_FRIEND + REMARK_DESC_AMY + REMARK_DESC_BOB,","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"                new AddCommand(expectedEvent));","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"        // zero tags and remarks","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"        Event expectedEvent \u003d new EventBuilder(AMY).withTags().withRemark(\"\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + DATE_DESC_AMY + TIMESLOT_DESC_AMY + LOCATION_DESC_AMY,","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"                new AddCommand(expectedEvent));","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB + LOCATION_DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"        // missing date prefix","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_DATE_BOB + TIMESLOT_DESC_BOB + LOCATION_DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"luluyousef"},"content":"        // missing time prefix","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + VALID_TIMESLOT_BOB + LOCATION_DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB + VALID_LOCATION_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_DATE_BOB + VALID_TIMESLOT_BOB + VALID_LOCATION_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DATE_DESC_BOB + TIMESLOT_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + REMARK_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"        // invalid date","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_DATE_DESC + TIMESLOT_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + REMARK_DESC_BOB, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"luluyousef"},"content":"        // invalid time","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"luluyousef"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + INVALID_TIME_DESC + LOCATION_DESC_BOB","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + REMARK_DESC_BOB, TimeSlot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB + INVALID_LOCATION_DESC","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + REMARK_DESC_BOB, Location.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB + LOCATION_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"ruthpohrp"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND + REMARK_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + DATE_DESC_BOB + TIMESLOT_DESC_BOB + INVALID_LOCATION_DESC","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"                + REMARK_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + DATE_DESC_BOB + TIMESLOT_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"                + LOCATION_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + REMARK_DESC_BOB,","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"luluyousef":4,"kaldius":23,"ruthpohrp":41,"-":76,"CSYGalvin":5}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", e);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"        } catch (ParseException | CommandException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"            assertEquals(expectedMessage, e.getMessage());","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kaldius":5,"-":34}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kaldius":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LOCATION_DESC;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIME_DESC;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LOCATION_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REMARK_DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESLOT_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESLOT_DESC_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ENDTIME_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ENDTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STARTTIME_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STARTTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS); // invalid date","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TIME_DESC, TimeSlot.MESSAGE_CONSTRAINTS); // invalid time","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"CSYGalvin"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LOCATION_DESC, Location.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"luluyousef"},"content":"        // invalid date followed by valid time","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC + TIMESLOT_DESC_AMY, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"        // valid date followed by invalid date. The test case for invalid date followed by valid date","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"        assertParseFailure(parser, \"1\" + DATE_DESC_BOB + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Event} being edited,","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"luluyousef"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_TIME_DESC + VALID_LOCATION_AMY + VALID_DATE_AMY,","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"kaldius"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"                + TIMESLOT_DESC_AMY + LOCATION_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + REMARK_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"kaldius"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"kaldius"},"content":"                .withDate(VALID_DATE_BOB).withTimeSlot(VALID_STARTTIME_AMY, VALID_ENDTIME_AMY)","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"kaldius"},"content":"                .withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"                .withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"kaldius"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"kaldius"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_BOB + TIMESLOT_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"ruthpohrp"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"kaldius"},"content":"                .withTimeSlot(VALID_STARTTIME_AMY, VALID_ENDTIME_AMY).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"kaldius"},"content":"        Index targetIndex \u003d INDEX_THIRD_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"kaldius"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"ruthpohrp"},"content":"        // date","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"ruthpohrp"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"ruthpohrp"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_AMY).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"luluyousef"},"content":"        // time","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"kaldius"},"content":"        userInput \u003d targetIndex.getOneBased() + TIMESLOT_DESC_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"kaldius"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withTimeSlot(VALID_STARTTIME_AMY, VALID_ENDTIME_AMY).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"CSYGalvin"},"content":"        userInput \u003d targetIndex.getOneBased() + LOCATION_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"CSYGalvin"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withLocation(VALID_LOCATION_AMY).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"kaldius"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"        // remark","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"ruthpohrp"},"content":"        userInput \u003d targetIndex.getOneBased() + REMARK_DESC_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"ruthpohrp"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"kaldius"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"kaldius"},"content":"        String userInput \u003d targetIndex.getOneBased() + DATE_DESC_AMY + LOCATION_DESC_AMY + TIMESLOT_DESC_AMY","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"kaldius"},"content":"                + TAG_DESC_FRIEND + DATE_DESC_AMY + LOCATION_DESC_AMY + TIMESLOT_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"ruthpohrp"},"content":"                + REMARK_DESC_AMY + DATE_DESC_BOB + LOCATION_DESC_BOB + TIMESLOT_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"ruthpohrp"},"content":"                + REMARK_DESC_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"CSYGalvin"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"kaldius"},"content":"                .withTimeSlot(VALID_STARTTIME_BOB, VALID_ENDTIME_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"CSYGalvin"},"content":"                .withLocation(VALID_LOCATION_BOB)","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"CSYGalvin"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"ruthpohrp"},"content":"                .withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"kaldius"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_DATE_DESC + DATE_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"kaldius"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"                new EditEventDescriptorBuilder().withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"kaldius"},"content":"        userInput \u003d targetIndex.getOneBased() + TIMESLOT_DESC_BOB + INVALID_DATE_DESC + LOCATION_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"                + DATE_DESC_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"kaldius"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"kaldius"},"content":"                .withTimeSlot(VALID_STARTTIME_BOB, VALID_ENDTIME_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"CSYGalvin"},"content":"                .withLocation(VALID_LOCATION_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":223,"author":{"gitId":"kaldius"},"content":"        Index targetIndex \u003d INDEX_THIRD_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"kaldius"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"luluyousef":4,"kaldius":37,"ruthpohrp":31,"-":144,"CSYGalvin":15}},{"path":"src/test/java/seedu/address/logic/parser/FilterByTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.commands.FilterByTagCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"import seedu.address.model.event.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"public class FilterByTagCommandParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"    private FilterByTagCommandParser parser \u003d new FilterByTagCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"    public void parse_noTag_throwsParseException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"                FilterByTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"     public void parse_validArgs_returnsFilterByTagCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"        FilterByTagCommand expectedFilteredTagCommand \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"                new FilterByTagCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"owesMoney\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"        assertParseSuccess(parser, \"friends owesMoney\", expectedFilteredTagCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"        assertParseSuccess(parser, \" \\n friends \\n \\t owesMoney  \\t\", expectedFilteredTagCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"luluyousef":34}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":33,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    private static final String INVALID_DATE \u003d \"2020-35-35\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"    private static final String INVALID_LOCATION \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    private static final String INVALID_TIMESLOT \u003d \"15:15-16:00\";","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    private static final String VALID_DATE \u003d \"2020-11-11\";","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"    private static final String VALID_LOCATION \u003d \"123 Main Street #0505\";","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    private static final String VALID_TIMESLOT \u003d \"1515-1600\";","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    private static final String VALID_TIMESLOT_STARTTIME \u003d \"1515\";","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    private static final String VALID_TIMESLOT_ENDTIME \u003d \"1600\";","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"    private static final String VALID_REMARK \u003d \"All remarks are valid.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        assertEquals(INDEX_FIRST_EVENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"        assertEquals(INDEX_FIRST_EVENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"CSYGalvin"},"content":"    public void parseLocation_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocation((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"CSYGalvin"},"content":"    public void parseLocation_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLocation(INVALID_LOCATION));","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"CSYGalvin"},"content":"    public void parseLocation_validValueWithoutWhitespace_returnsLocation() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"CSYGalvin"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(VALID_LOCATION));","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"CSYGalvin"},"content":"    public void parseLocation_validValueWithWhitespace_returnsTrimmedLocation() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"CSYGalvin"},"content":"        String locationWithWhitespace \u003d WHITESPACE + VALID_LOCATION + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"CSYGalvin"},"content":"        Location expectedLocation \u003d new Location(VALID_LOCATION);","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedLocation, ParserUtil.parseLocation(locationWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"kaldius"},"content":"    public void parseTimeSlot_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"kaldius"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTimeSlot((String) null));","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"kaldius"},"content":"    public void parseTimeSlot_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"kaldius"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTimeSlot(INVALID_TIMESLOT));","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"kaldius"},"content":"    public void parseTimeSlot_validValueWithoutWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"kaldius"},"content":"        TimeSlot expectedTime \u003d new TimeSlot(VALID_TIMESLOT_STARTTIME, VALID_TIMESLOT_ENDTIME);","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"kaldius"},"content":"        assertEquals(expectedTime, ParserUtil.parseTimeSlot(VALID_TIMESLOT));","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"kaldius"},"content":"    public void parseTimeSlot_validValueWithWhitespace_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"kaldius"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_TIMESLOT + WHITESPACE;","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"kaldius"},"content":"        TimeSlot expectedTime \u003d new TimeSlot(VALID_TIMESLOT_STARTTIME, VALID_TIMESLOT_ENDTIME);","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"kaldius"},"content":"        assertEquals(expectedTime, ParserUtil.parseTimeSlot(timeWithWhitespace));","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":202,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"ruthpohrp"},"content":"    public void parseRemark_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRemark((String) null));","lastModifiedDate":"2021-10-20"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"    public void parseRemark_validValueWithoutWhitespace_returnsRemark() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(VALID_REMARK));","lastModifiedDate":"2021-10-20"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"ruthpohrp"},"content":"    public void parseRemark_validValueWithWhitespace_returnsTrimmedRemark() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":215,"author":{"gitId":"ruthpohrp"},"content":"        String remarkWithWhitespace \u003d WHITESPACE + VALID_REMARK + WHITESPACE;","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"ruthpohrp"},"content":"        Remark expectedRemark \u003d new Remark(VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(expectedRemark, ParserUtil.parseRemark(remarkWithWhitespace));","lastModifiedDate":"2021-10-20"},{"lineNumber":218,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kaldius":19,"ruthpohrp":35,"-":150,"CSYGalvin":16}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.commands.NextEventCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"import seedu.address.logic.commands.UpcomingEventsCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventUtil;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"public class ScheduleParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"    private final ScheduleParser parser \u003d new ScheduleParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(EventUtil.getAddCommand(event));","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        assertEquals(new AddCommand(event), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_EVENT), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"kaldius"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(event).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"                + INDEX_FIRST_EVENT.getOneBased() + \" \" + EventUtil.getEditEventDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_EVENT, descriptor), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"luluyousef"},"content":"    public void parseCommand_upcomingEvents() throws Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"luluyousef"},"content":"        assertTrue(parser.parseCommand(UpcomingEventsCommand.COMMAND_WORD) instanceof UpcomingEventsCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"luluyousef"},"content":"        assertTrue(parser.parseCommand(UpcomingEventsCommand.COMMAND_WORD + \" 3\") instanceof UpcomingEventsCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"luluyousef"},"content":"    public void parseCommand_nextEvent() throws Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"luluyousef"},"content":"        assertTrue(parser.parseCommand(NextEventCommand.COMMAND_WORD) instanceof NextEventCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"luluyousef"},"content":"        assertTrue(parser.parseCommand(NextEventCommand.COMMAND_WORD + \" 3\") instanceof NextEventCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"luluyousef":12,"Jacobnbh":2,"kaldius":14,"-":83,"CSYGalvin":2}},{"path":"src/test/java/seedu/address/model/FreeSlotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"CSYGalvin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.TypicalBlockedSlots.EIGHT_TO_NINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Overlappable;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"public class FreeSlotTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"    public void constructor_startTimeNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FreeSlot(null, new TimeSlot(\"0000\", \"2359\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"CSYGalvin"},"content":"    public void constructor_endTimeNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FreeSlot(new Date(\"2021-10-31\"), null));","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"    public void isOverlappingWith() {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"        Overlappable toCompare \u003d EIGHT_TO_NINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"        FreeSlot same \u003d new FreeSlot(new Date(\"2020-01-01\"), new TimeSlot(\"0800\", \"0900\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"CSYGalvin"},"content":"        FreeSlot diffDate \u003d new FreeSlot(new Date(\"2020-01-02\"), new TimeSlot(\"0800\", \"0900\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"        FreeSlot diffTime \u003d new FreeSlot(new Date(\"2020-01-01\"), new TimeSlot(\"0900\", \"1000\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(same.isOverlappingWith(toCompare));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"        assertFalse(diffDate.isOverlappingWith(toCompare));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"CSYGalvin"},"content":"        assertFalse(diffTime.isOverlappingWith(toCompare));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"CSYGalvin":37}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.testutil.ScheduleBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(new Schedule(), new Schedule(modelManager.getSchedule()));","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"        userPrefs.setScheduleFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"        userPrefs.setScheduleFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"    public void setScheduleFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setScheduleFilePath(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"    public void setScheduleFilePath_validPath_setsScheduleFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"        modelManager.setScheduleFilePath(path);","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(path, modelManager.getScheduleFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"        Schedule schedule \u003d new ScheduleBuilder().withEvent(ALICE).withEvent(BENSON).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"        Schedule differentSchedule \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"        modelManager \u003d new ModelManager(schedule, userPrefs);","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(schedule, userPrefs);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"Jacobnbh"},"content":"        // different schedule -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSchedule, userPrefs)));","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"        modelManager.updateFilteredEventList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"Jacobnbh"},"content":"        assertFalse(modelManager.equals(new ModelManager(schedule, userPrefs)));","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"        modelManager.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"Jacobnbh"},"content":"        differentUserPrefs.setScheduleFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"Jacobnbh"},"content":"        assertFalse(modelManager.equals(new ModelManager(schedule, differentUserPrefs)));","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Jacobnbh":18,"kaldius":7,"-":90,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/model/ScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEvents;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"public class ScheduleTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    private final Schedule schedule \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(Collections.emptyList(), schedule.getEventList());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(NullPointerException.class, () -\u003e schedule.resetData(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"    public void resetData_withValidReadOnlySchedule_replacesData() {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"        Schedule newData \u003d getTypicalSchedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        schedule.resetData(newData);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(newData, schedule);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e schedule.getEventList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":47,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"CSYGalvin"},"content":"    public void emptySchedule_getFreeSlot_emptyList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"CSYGalvin"},"content":"        Schedule empty \u003d new Schedule();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(new ArrayList\u003c\u003e(), empty.getFreeSlots(new Date(\"2020-01-01\")));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"CSYGalvin"},"content":"    public void nonEmptySchedule_getFreeSlot_nonEmptyList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"CSYGalvin"},"content":"        Schedule schedule \u003d getTypicalSchedule();","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"CSYGalvin"},"content":"        ArrayList\u003cFreeSlot\u003e freeSlots \u003d schedule.getFreeSlots(new Date(\"2020-01-01\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"CSYGalvin"},"content":"        for (FreeSlot f: freeSlots) {","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"CSYGalvin"},"content":"            for (Event e: getTypicalEvents()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"CSYGalvin"},"content":"                assertTrue(!f.isOverlappingWith(e));","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"CSYGalvin"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"CSYGalvin"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"     * A stub ReadOnlySchedule whose events list can violate interface constraints.","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"    private static class ScheduleStub implements ReadOnlySchedule {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"        private final ObservableList\u003cBlockedSlot\u003e blockedSlots \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"        ScheduleStub(Collection\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"kaldius"},"content":"            this.events.setAll(events);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"kaldius"},"content":"            return events;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"        public ObservableList\u003cBlockedSlot\u003e getBlockedSlotList() {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"kaldius"},"content":"            return blockedSlots;","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Jacobnbh":13,"kaldius":12,"-":39,"CSYGalvin":22}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"    public void setScheduleFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setScheduleFilePath(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Jacobnbh":2,"-":19}},{"path":"src/test/java/seedu/address/model/event/BlockedSlotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.testutil.TypicalBlockedSlots.EIGHT_TO_NINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.testutil.TypicalBlockedSlots.NINE_TO_TEN;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.testutil.BlockedSlotBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"public class BlockedSlotTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"    public void compareTo() {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot earlierBlockedSlot \u003d NINE_TO_TEN;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot sameAsEarlierBlockedSlot \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot laterDateBlockedSlot \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot laterSlotBlockedSlot \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"1000\", \"1100\")","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(earlierBlockedSlot.compareTo(sameAsEarlierBlockedSlot) \u003d\u003d 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(earlierBlockedSlot.compareTo(laterDateBlockedSlot) \u003c 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(earlierBlockedSlot.compareTo(laterSlotBlockedSlot) \u003c 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(laterDateBlockedSlot.compareTo(earlierBlockedSlot) \u003e 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(laterSlotBlockedSlot.compareTo(earlierBlockedSlot) \u003e 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"    public void isOverlappingWith() {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot toCompareEvent \u003d EIGHT_TO_NINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot noOverlappingDateNoOverlappingSlot \u003d new BlockedSlotBuilder(EIGHT_TO_NINE)","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot noOverlappingDateHasOverlappingSlot \u003d new BlockedSlotBuilder(EIGHT_TO_NINE)","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0930\")","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateNoOverlappingSlot \u003d new BlockedSlotBuilder(EIGHT_TO_NINE)","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateHasOverlappingSlot1 \u003d new BlockedSlotBuilder(EIGHT_TO_NINE)","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0930\")","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateHasOverlappingSlot2 \u003d new BlockedSlotBuilder(EIGHT_TO_NINE)","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0730\", \"0830\")","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateHasOverlappingSlot3 \u003d new BlockedSlotBuilder(EIGHT_TO_NINE)","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0845\")","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateHasOverlappingSlot4 \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0700\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(toCompareEvent.isOverlappingWith(noOverlappingDateNoOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(toCompareEvent.isOverlappingWith(noOverlappingDateHasOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(toCompareEvent.isOverlappingWith(overlappingDateNoOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toCompareEvent.isOverlappingWith(overlappingDateHasOverlappingSlot1));","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toCompareEvent.isOverlappingWith(overlappingDateHasOverlappingSlot2));","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toCompareEvent.isOverlappingWith(overlappingDateHasOverlappingSlot3));","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toCompareEvent.isOverlappingWith(overlappingDateHasOverlappingSlot4));","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ruthpohrp":78}},{"path":"src/test/java/seedu/address/model/event/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"public class DateTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date((String) null));","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        // null date number","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        // invalid date numbers","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(Date.isValidDate(\"2020-01\")); // only yyyy-mm","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(Date.isValidDate(\"date\")); // non-numeric","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(Date.isValidDate(\"2020a-01-01\")); // alphabets within digits","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(Date.isValidDate(\"2020 01 01\")); // spaces instead of hyphens","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        // valid date numbers","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(Date.isValidDate(\"2020-01-01\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(Date.isValidDate(\"2024-02-29\")); // leap year","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"CSYGalvin"},"content":"    public void compareTo() {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"CSYGalvin"},"content":"        Date earlierDate \u003d new Date(\"2020-01-01\");","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"CSYGalvin"},"content":"        Date sameAsEarlierDate \u003d new Date(\"2020-01-01\");","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"CSYGalvin"},"content":"        Date laterDate \u003d new Date(\"2020-01-02\");","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(earlierDate.compareTo(laterDate) \u003c 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(earlierDate.compareTo(sameAsEarlierDate) \u003d\u003d 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    @Test void hasSameDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        Date earlierDate \u003d new Date(\"2020-01-01\");","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        Date sameAsEarlierDate \u003d new Date(\"2020-01-01\");","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        Date laterDate \u003d new Date(\"2020-01-02\");","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(earlierDate.hasSameDate(sameAsEarlierDate));","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(earlierDate.hasSameDate(laterDate));","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"ruthpohrp":46,"CSYGalvin":11}},{"path":"src/test/java/seedu/address/model/event/EventContainsCurrentTimePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"public class EventContainsCurrentTimePredicateTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"    private static final DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"        EventContainsCurrentTimePredicate firstPredicate \u003d new EventContainsCurrentTimePredicate();","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"        EventContainsCurrentTimePredicate secondPredicate \u003d new EventContainsCurrentTimePredicate();","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"        EventContainsCurrentTimePredicate thirdPredicate \u003d new EventContainsCurrentTimePredicate(LocalTime.parse(\"0730\",","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"                timeFormatter), new Date(\"2020-01-01\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"        EventContainsCurrentTimePredicate fourthPredicate \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"                new EventContainsCurrentTimePredicate(LocalTime.parse(\"0830\",","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"                        timeFormatter), new Date(\"2020-01-02\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"        // two objects containing same date -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"        //assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"        // different dates -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"        assertFalse(thirdPredicate.equals(fourthPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"luluyousef":38}},{"path":"src/test/java/seedu/address/model/event/EventContainsTodaysDatePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"public class EventContainsTodaysDatePredicateTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"        EventContainsTodaysDatePredicate firstPredicate \u003d new EventContainsTodaysDatePredicate();","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"        EventContainsTodaysDatePredicate secondPredicate \u003d new EventContainsTodaysDatePredicate();","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"        EventContainsTodaysDatePredicate thirdPredicate \u003d new EventContainsTodaysDatePredicate(new Date(\"2021-10-26\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"        EventContainsTodaysDatePredicate fourthPredicate \u003d new EventContainsTodaysDatePredicate(new Date(\"2021-10-27\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"        // two objects containing same date -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"        // different dates -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"        assertFalse(thirdPredicate.equals(fourthPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"luluyousef":33}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ENDTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STARTTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.TypicalEvents.BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.BOB;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"public class EventTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e event.getTags().remove(0));","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"        Event aliceCopy \u003d new EventBuilder(ALICE).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        editedAlice \u003d new EventBuilder(ALICE).withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"luluyousef"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"        editedAlice \u003d new EventBuilder(ALICE).withTimeSlot(VALID_STARTTIME_BOB, VALID_ENDTIME_BOB).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"CSYGalvin"},"content":"        editedAlice \u003d new EventBuilder(ALICE).withLocation(VALID_LOCATION_BOB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"        editedAlice \u003d new EventBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"CSYGalvin"},"content":"    public void compareTo() {","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"CSYGalvin"},"content":"        Event earlierEvent \u003d ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"CSYGalvin"},"content":"        Event sameAsEarlierEvent \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"CSYGalvin"},"content":"                .withTimeSlot(\"0800\", \"0900\")","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"CSYGalvin"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"CSYGalvin"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"CSYGalvin"},"content":"        Event laterDateEvent \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"CSYGalvin"},"content":"                .withTimeSlot(\"0800\", \"0900\")","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"CSYGalvin"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"CSYGalvin"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"CSYGalvin"},"content":"        Event laterSlotEvent \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"CSYGalvin"},"content":"                .withTimeSlot(\"1000\", \"1100\")","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"CSYGalvin"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"CSYGalvin"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(earlierEvent.compareTo(sameAsEarlierEvent) \u003d\u003d 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(earlierEvent.compareTo(laterDateEvent) \u003c 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(earlierEvent.compareTo(laterSlotEvent) \u003c 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(laterDateEvent.compareTo(earlierEvent) \u003e 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(laterSlotEvent.compareTo(earlierEvent) \u003e 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"    public void isOverlappingWith() {","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"        Event toCompareEvent \u003d ALICE;","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"        Event noOverlappingDateNoOverlappingSlot \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"        Event noOverlappingDateHasOverlappingSlot \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0930\")","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateNoOverlappingSlot \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateHasOverlappingSlot1 \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0930\")","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateHasOverlappingSlot2 \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0730\", \"0830\")","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateHasOverlappingSlot3 \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0845\")","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateHasOverlappingSlot4 \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0700\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(toCompareEvent.isOverlappingWith(noOverlappingDateNoOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(toCompareEvent.isOverlappingWith(noOverlappingDateHasOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(toCompareEvent.isOverlappingWith(overlappingDateNoOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toCompareEvent.isOverlappingWith(overlappingDateHasOverlappingSlot1));","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toCompareEvent.isOverlappingWith(overlappingDateHasOverlappingSlot2));","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toCompareEvent.isOverlappingWith(overlappingDateHasOverlappingSlot3));","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toCompareEvent.isOverlappingWith(overlappingDateHasOverlappingSlot4));","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"},{"lineNumber":130,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"luluyousef":1,"kaldius":13,"ruthpohrp":46,"-":45,"CSYGalvin":26}},{"path":"src/test/java/seedu/address/model/event/IsEventPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"import static seedu.address.testutil.TypicalEvents.BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"public class IsEventPredicateTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"        IsEventPredicate firstPredicate \u003d new IsEventPredicate(ALICE);","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"        IsEventPredicate secondPredicate \u003d new IsEventPredicate(BOB);","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"luluyousef":30}},{"path":"src/test/java/seedu/address/model/event/LocationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"public class LocationTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Location(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"    public void constructor_invalidLocation_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Location(invalidAddress));","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"CSYGalvin"},"content":"    public void isValidLocation() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e Location.isValidLocation(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"        assertFalse(Location.isValidLocation(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"        assertFalse(Location.isValidLocation(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(Location.isValidLocation(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(Location.isValidLocation(\"-\")); // one character","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"        assertTrue(Location.isValidLocation(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":24,"CSYGalvin":12}},{"path":"src/test/java/seedu/address/model/event/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"luluyousef"},"content":"        // Keywords match date, time and location, but does not match name","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"luluyousef"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"1500\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice\").withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"                .withTimeSlot(\"1500\", \"1600\").withLocation(\"Main Street\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"luluyousef":2,"kaldius":9,"ruthpohrp":1,"-":62,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/model/event/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":39,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/model/event/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"public class RemarkTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ruthpohrp":14}},{"path":"src/test/java/seedu/address/model/event/SortedBlockedSlotListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.testutil.TypicalBlockedSlots.EIGHT_TO_NINE;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.testutil.TypicalBlockedSlots.NINE_TO_TEN;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.exceptions.BlockedSlotNotFoundException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.testutil.BlockedSlotBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"public class SortedBlockedSlotListTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    private final SortedBlockedSlotList sortedBlockedSlotList \u003d new SortedBlockedSlotList();","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    public void sortBlockedSlotByDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot differentDateBlocked \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"                new BlockedSlotBuilder(EIGHT_TO_NINE).withDate(\"2020-02-02\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(EIGHT_TO_NINE);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(differentDateBlocked);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"        SortedBlockedSlotList expectedSortedBlockedSlotList \u003d new SortedBlockedSlotList();","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"        expectedSortedBlockedSlotList.add(differentDateBlocked);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"        expectedSortedBlockedSlotList.add(EIGHT_TO_NINE);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(expectedSortedBlockedSlotList, sortedBlockedSlotList);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"    public void sortBlockedSlotByTimeSlot() {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(EIGHT_TO_NINE);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(NINE_TO_TEN);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        SortedBlockedSlotList expectedSortedBlockedSlotList \u003d new SortedBlockedSlotList();","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"        expectedSortedBlockedSlotList.add(NINE_TO_TEN);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"        expectedSortedBlockedSlotList.add(EIGHT_TO_NINE);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(expectedSortedBlockedSlotList, sortedBlockedSlotList);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"    public void sortBlockedSlotByTimeSlotDate() {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot differentDateBlocked \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"                new BlockedSlotBuilder(EIGHT_TO_NINE).withDate(\"2020-01-01\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(EIGHT_TO_NINE);","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(differentDateBlocked);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(NINE_TO_TEN);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"        SortedBlockedSlotList expectedSortedBlockedSlotList \u003d new SortedBlockedSlotList();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"        expectedSortedBlockedSlotList.add(NINE_TO_TEN);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        expectedSortedBlockedSlotList.add(EIGHT_TO_NINE);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        expectedSortedBlockedSlotList.add(differentDateBlocked);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(expectedSortedBlockedSlotList, sortedBlockedSlotList);","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"    public void add_nullBlockedSlot_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(NullPointerException.class, () -\u003e sortedBlockedSlotList.add(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"    public void remove_nullBlockedSlot_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(NullPointerException.class, () -\u003e sortedBlockedSlotList.remove(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"    public void remove_eventDoesNotExist_throwsBlockedSlotNotFoundException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(BlockedSlotNotFoundException.class, () -\u003e sortedBlockedSlotList.remove(NINE_TO_TEN));","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"    public void remove_existingBlockedSlot_removesBlockedSlot() {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(NINE_TO_TEN);","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.remove(NINE_TO_TEN);","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"        SortedBlockedSlotList expectedSortedBlockedSlotList \u003d new SortedBlockedSlotList();","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"        assertEquals(expectedSortedBlockedSlotList, sortedBlockedSlotList);","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"            -\u003e sortedBlockedSlotList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"    public void isOverlappingWith() {","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"        sortedBlockedSlotList.add(EIGHT_TO_NINE);","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot noOverlappingDateNoOverlappingSlot \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot noOverlappingDateHasOverlappingSlot \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0930\")","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateNoOverlappingSlot \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateHasOverlappingSlot1 \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0930\")","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateHasOverlappingSlot2 \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0730\", \"0830\")","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateHasOverlappingSlot3 \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0845\")","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"ruthpohrp"},"content":"        BlockedSlot overlappingDateHasOverlappingSlot4 \u003d new BlockedSlotBuilder(NINE_TO_TEN)","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0700\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(sortedBlockedSlotList.isOverlappingWith(noOverlappingDateNoOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(sortedBlockedSlotList.isOverlappingWith(noOverlappingDateHasOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(sortedBlockedSlotList.isOverlappingWith(overlappingDateNoOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(sortedBlockedSlotList.isOverlappingWith(overlappingDateHasOverlappingSlot1));","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(sortedBlockedSlotList.isOverlappingWith(overlappingDateHasOverlappingSlot2));","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(sortedBlockedSlotList.isOverlappingWith(overlappingDateHasOverlappingSlot3));","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(sortedBlockedSlotList.isOverlappingWith(overlappingDateHasOverlappingSlot4));","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ruthpohrp":124}},{"path":"src/test/java/seedu/address/model/event/SortedEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"CSYGalvin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.TypicalEvents.BENSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.TypicalEvents.BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.testutil.TypicalEvents.CARL;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"CSYGalvin"},"content":"public class SortedEventListTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"    private final SortedEventList sortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"CSYGalvin"},"content":"    public void sortEventByDate() {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(BENSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(BENSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"    public void sortEventByEditedDate() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(BENSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withDate(\"2020-01-03\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.setEvent(ALICE, editedAlice);","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(BENSON);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(editedAlice);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"CSYGalvin"},"content":"    public void sortEventByTimeSlot() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"CSYGalvin"},"content":"        Event sameDateCarl \u003d new EventBuilder(CARL).withDate(\"2020-01-01\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(sameDateCarl);","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(sameDateCarl);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"CSYGalvin"},"content":"    public void sortEventByTimeSlotDate() {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"CSYGalvin"},"content":"        Event sameDateCarl \u003d new EventBuilder(CARL).withDate(\"2020-01-01\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(sameDateCarl);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"CSYGalvin"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withTimeSlot(\"1200\", \"1230\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.setEvent(ALICE, editedAlice);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(sameDateCarl);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(editedAlice);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"CSYGalvin"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e sortedEventList.add(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e sortedEventList.setEvent(null, ALICE));","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e sortedEventList.setEvent(ALICE, null));","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e sortedEventList.setEvent(ALICE, ALICE));","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.setEvent(ALICE, ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"CSYGalvin"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withLocation(VALID_LOCATION_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"CSYGalvin"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.setEvent(ALICE, editedAlice);","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(editedAlice);","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.setEvent(ALICE, BOB);","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(BOB);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"CSYGalvin"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e sortedEventList.remove(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"CSYGalvin"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e sortedEventList.remove(ALICE));","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"CSYGalvin"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.remove(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e sortedEventList.setEvent((SortedEventList) null));","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(BOB);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.setEvent(expectedSortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(NullPointerException.class, () -\u003e sortedEventList.setEvent((List\u003cEvent\u003e) null));","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"CSYGalvin"},"content":"    public void setEvent_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"CSYGalvin"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"CSYGalvin"},"content":"        sortedEventList.setEvent(eventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"CSYGalvin"},"content":"        SortedEventList expectedSortedEventList \u003d new SortedEventList();","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"CSYGalvin"},"content":"        expectedSortedEventList.add(BOB);","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"CSYGalvin"},"content":"        assertEquals(expectedSortedEventList, sortedEventList);","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"CSYGalvin"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"CSYGalvin"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"CSYGalvin"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"CSYGalvin"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"CSYGalvin"},"content":"            -\u003e sortedEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"CSYGalvin"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"ruthpohrp"},"content":"    public void isOverlappingWith() {","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"ruthpohrp"},"content":"        sortedEventList.add(ALICE);","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"ruthpohrp"},"content":"        Event noOverlappingDateNoOverlappingSlot \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"ruthpohrp"},"content":"        Event noOverlappingDateHasOverlappingSlot \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0930\")","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateNoOverlappingSlot \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0900\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateHasOverlappingSlot1 \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0930\")","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateHasOverlappingSlot2 \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0730\", \"0830\")","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateHasOverlappingSlot3 \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0830\", \"0845\")","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"ruthpohrp"},"content":"        Event overlappingDateHasOverlappingSlot4 \u003d new EventBuilder(BENSON)","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"ruthpohrp"},"content":"                .withTimeSlot(\"0700\", \"1000\")","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"ruthpohrp"},"content":"                .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"ruthpohrp"},"content":"                .build();","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(sortedEventList.isOverlappingWith(noOverlappingDateNoOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(sortedEventList.isOverlappingWith(noOverlappingDateHasOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(sortedEventList.isOverlappingWith(overlappingDateNoOverlappingSlot));","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(sortedEventList.isOverlappingWith(overlappingDateHasOverlappingSlot1));","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(sortedEventList.isOverlappingWith(overlappingDateHasOverlappingSlot2));","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(sortedEventList.isOverlappingWith(overlappingDateHasOverlappingSlot3));","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(sortedEventList.isOverlappingWith(overlappingDateHasOverlappingSlot4));","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"CSYGalvin"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ruthpohrp":43,"CSYGalvin":171}},{"path":"src/test/java/seedu/address/model/event/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luluyousef"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"luluyousef"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"luluyousef"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"luluyousef"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"luluyousef"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"luluyousef"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"luluyousef"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"luluyousef"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"luluyousef"},"content":"    public void equals() {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"luluyousef"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"luluyousef"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"luluyousef"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"luluyousef"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"luluyousef"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"luluyousef"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"luluyousef"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"luluyousef"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"luluyousef"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"luluyousef"},"content":"        // One keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"Urgent\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"luluyousef"},"content":"        assertTrue(predicate.test(new EventBuilder().withTags(\"Urgent\", \"Supplementary\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"luluyousef"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"luluyousef"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"owesMoney\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"luluyousef"},"content":"        assertTrue(predicate.test(new EventBuilder().withTags(\"friends\", \"owesMoney\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"luluyousef"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"luluyousef"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Urgent\", \"CS2103T\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"luluyousef"},"content":"        assertTrue(predicate.test(new EventBuilder().withTags(\"CS2103T\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"luluyousef"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"luluyousef"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"uRgEnt\", \"FrIeNDS\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"luluyousef"},"content":"        assertTrue(predicate.test(new EventBuilder().withTags(\"Urgent\", \"Friends\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"luluyousef"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"luluyousef"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"luluyousef"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"luluyousef"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"luluyousef"},"content":"        assertFalse(predicate.test(new EventBuilder().withTags(\"Urgent\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"luluyousef"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"luluyousef"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friends\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"luluyousef"},"content":"        assertFalse(predicate.test(new EventBuilder().withTags(\"Urgent\", \"Supplementary\", \"CS2103T\").build()));","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"luluyousef"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"luluyousef"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"luluyousef":71}},{"path":"src/test/java/seedu/address/model/event/TimeSlotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSYGalvin"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"public class TimeSlotTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"kaldius"},"content":"    public void constructor_startTimeNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TimeSlot(null, \"1500\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"kaldius"},"content":"    public void constructor_endTimeNull_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TimeSlot(\"1500\", null));","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    public void constructor_invalidStartTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TimeSlot(invalidTime, \"1500\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    public void constructor_invalidEndTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"luluyousef"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TimeSlot(\"1500\", invalidTime));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"    public void isValidTimeSlot() {","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"        // null startTime","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        assertThrows(NullPointerException.class, () -\u003e TimeSlot.isValidTimeSlot(null, \"1300\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"        // null endTime","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"        assertThrows(NullPointerException.class, () -\u003e TimeSlot.isValidTimeSlot(\"1300\", null));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"        // blank startTime","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\"\", \"1300\")); // empty string","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\" \", \"1300\")); // spaces only","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"        // blank endTime","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\"1300\", \"\")); // empty string","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\"1300\", \" \")); // spaces only","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        // invalid startTime","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\"15\", \"1600\")); // missing minutes","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\"04:30\", \"0500\")); // \u0027:\u0027 not allowed in time","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        // invalid endTime","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\"1400\", \"15\")); // missing minutes","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\"0400\", \"04:30\")); // \u0027:\u0027 not allowed in time","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"kaldius"},"content":"        // invalid startTime endTime combo (endTime comes before startTime)","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"        assertFalse(TimeSlot.isValidTimeSlot(\"1300\", \"1200\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"        // valid TimeSlot","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"        assertTrue(TimeSlot.isValidTimeSlot(\"2030\", \"2130\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"        assertTrue(TimeSlot.isValidTimeSlot(\"0715\", \"0815\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"    public void compareTo() {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"        TimeSlot earlierSlot \u003d new TimeSlot(\"1300\", \"1400\");","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"kaldius"},"content":"        TimeSlot sameAsEarlierSlot \u003d new TimeSlot(\"1300\", \"1400\");","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        TimeSlot laterSlot \u003d new TimeSlot(\"1400\", \"1500\");","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"kaldius"},"content":"        assertTrue(earlierSlot.compareTo(laterSlot) \u003c 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"kaldius"},"content":"        assertTrue(earlierSlot.compareTo(sameAsEarlierSlot) \u003d\u003d 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"    public void isOverlappingWith() {","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"        TimeSlot toBeComparedSlot \u003d new TimeSlot(\"1300\", \"1500\");","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"ruthpohrp"},"content":"        TimeSlot notOverlappingSlot1 \u003d new TimeSlot(\"1200\", \"1300\");","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ruthpohrp"},"content":"        TimeSlot notOverlappingSlot2 \u003d new TimeSlot(\"1500\", \"1600\");","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ruthpohrp"},"content":"        TimeSlot overlappingSlot1 \u003d new TimeSlot(\"1400\", \"1600\");","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"ruthpohrp"},"content":"        TimeSlot overlappingSlot2 \u003d new TimeSlot(\"1200\", \"1400\");","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"ruthpohrp"},"content":"        TimeSlot overlappingSlot3 \u003d new TimeSlot(\"1330\", \"1400\");","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"ruthpohrp"},"content":"        TimeSlot overlappingSlot4 \u003d new TimeSlot(\"1200\", \"1600\");","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(toBeComparedSlot.isOverlappingWith(notOverlappingSlot1));","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"        assertFalse(toBeComparedSlot.isOverlappingWith(notOverlappingSlot2));","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toBeComparedSlot.isOverlappingWith(overlappingSlot1));","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toBeComparedSlot.isOverlappingWith(overlappingSlot2));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toBeComparedSlot.isOverlappingWith(overlappingSlot3));","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"        assertTrue(toBeComparedSlot.isOverlappingWith(overlappingSlot4));","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"luluyousef":2,"kaldius":52,"ruthpohrp":18,"-":17,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"luluyousef"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"luluyousef":1,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kaldius"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import static seedu.address.testutil.TypicalEvents.BENSON;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"kaldius"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    private static final String INVALID_DATE \u003d \"2020\";","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"luluyousef"},"content":"    private static final String INVALID_TIME \u003d \"15:30\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"    private static final String VALID_DATE \u003d BENSON.getDate().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"    private static final String VALID_STARTTIME \u003d BENSON.getTimeSlot().startTimeToString();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    private static final String VALID_ENDTIME \u003d BENSON.getTimeSlot().endTimeToString();","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"CSYGalvin"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getLocation().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kaldius"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(BENSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"kaldius"},"content":"        assertEquals(BENSON, event.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"                new JsonAdaptedEvent(INVALID_NAME, VALID_DATE, VALID_STARTTIME, VALID_ENDTIME, VALID_ADDRESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"                        VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(null, VALID_DATE, VALID_STARTTIME, VALID_ENDTIME,","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"ruthpohrp"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"                new JsonAdaptedEvent(VALID_NAME, INVALID_DATE, VALID_STARTTIME, VALID_ENDTIME, VALID_ADDRESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"ruthpohrp"},"content":"                        VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, null, VALID_STARTTIME, VALID_ENDTIME,","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"ruthpohrp"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"ruthpohrp"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"kaldius"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, INVALID_TIME, VALID_ENDTIME, VALID_ADDRESS,","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"ruthpohrp"},"content":"                        VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d TimeSlot.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"kaldius"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_STARTTIME, INVALID_TIME, VALID_ADDRESS,","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"                        VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d TimeSlot.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"kaldius"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DATE, null, VALID_ENDTIME,","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TimeSlot.class.getSimpleName());","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"kaldius"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_STARTTIME, null,","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"ruthpohrp"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"kaldius"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TimeSlot.class.getSimpleName());","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"kaldius"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"kaldius"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"kaldius"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_STARTTIME, VALID_ENDTIME, INVALID_ADDRESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"ruthpohrp"},"content":"                        VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"CSYGalvin"},"content":"        String expectedMessage \u003d Location.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_STARTTIME, VALID_ENDTIME,","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"ruthpohrp"},"content":"                null, VALID_TAGS, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"CSYGalvin"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Location.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"kaldius"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"kaldius"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_STARTTIME, VALID_ENDTIME, VALID_ADDRESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"ruthpohrp"},"content":"                        invalidTags, VALID_REMARK);","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"kaldius"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"ruthpohrp"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"ruthpohrp"},"content":"    public void toModelType_nullRemark_throwsIllegalValueException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"ruthpohrp"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_NAME, VALID_DATE, VALID_STARTTIME, VALID_ENDTIME,","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"ruthpohrp"},"content":"                VALID_ADDRESS, VALID_TAGS, null);","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"ruthpohrp"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName());","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"ruthpohrp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"luluyousef":1,"kaldius":49,"ruthpohrp":30,"-":62,"CSYGalvin":6}},{"path":"src/test/java/seedu/address/storage/JsonScheduleStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"Jacobnbh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.HOON;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.IDA;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"public class JsonScheduleStorageTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonScheduleStorageTest\");","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"    @TempDir","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    public void readSchedule_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSchedule(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"    private java.util.Optional\u003cReadOnlySchedule\u003e readSchedule(String filePath) throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"        return new JsonScheduleStorage(Paths.get(filePath)).readSchedule(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"Jacobnbh"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"Jacobnbh"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Jacobnbh"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Jacobnbh"},"content":"                : null;","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"Jacobnbh"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"Jacobnbh"},"content":"        assertFalse(readSchedule(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"Jacobnbh"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSchedule(\"notJsonFormatSchedule.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"    public void readSchedule_invalidEventSchedule_throwDataConversionException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSchedule(\"invalidEventSchedule.json\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"kaldius"},"content":"    public void readSchedule_invalidAndValidEventSchedule_throwDataConversionException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSchedule(\"invalidAndValidEventSchedule.json\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"    public void readAndSaveSchedule_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"        Path filePath \u003d testFolder.resolve(\"TempSchedule.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"Jacobnbh"},"content":"        Schedule original \u003d getTypicalSchedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"Jacobnbh"},"content":"        JsonScheduleStorage jsonScheduleStorage \u003d new JsonScheduleStorage(filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"Jacobnbh"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"Jacobnbh"},"content":"        jsonScheduleStorage.saveSchedule(original, filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"Jacobnbh"},"content":"        ReadOnlySchedule readBack \u003d jsonScheduleStorage.readSchedule(filePath).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(original, new Schedule(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"Jacobnbh"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"Jacobnbh"},"content":"        original.addEvent(HOON);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"        original.removeEvent(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"Jacobnbh"},"content":"        jsonScheduleStorage.saveSchedule(original, filePath);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"Jacobnbh"},"content":"        readBack \u003d jsonScheduleStorage.readSchedule(filePath).get();","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(original, new Schedule(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"        original.addEvent(IDA);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"Jacobnbh"},"content":"        jsonScheduleStorage.saveSchedule(original); // file path not specified","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"Jacobnbh"},"content":"        readBack \u003d jsonScheduleStorage.readSchedule().get(); // file path not specified","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(original, new Schedule(readBack));","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"Jacobnbh"},"content":"    public void saveSchedule_nullSchedule_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSchedule(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"Jacobnbh"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"Jacobnbh"},"content":"    private void saveSchedule(ReadOnlySchedule addressBook, String filePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"Jacobnbh"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"Jacobnbh"},"content":"            new JsonScheduleStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"Jacobnbh"},"content":"                    .saveSchedule(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"Jacobnbh"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"Jacobnbh"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"Jacobnbh"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"Jacobnbh"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"Jacobnbh"},"content":"    public void saveSchedule_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"Jacobnbh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSchedule(new Schedule(), null));","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Jacobnbh":108,"kaldius":2}},{"path":"src/test/java/seedu/address/storage/JsonSerializableScheduleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"public class JsonSerializableScheduleTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableScheduleTest\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    private static final Path TYPICAL_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventSchedule.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"    private static final Path INVALID_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventSchedule.json\");","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    public void toModelType_typicalEventsFile_success() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"        JsonSerializableSchedule dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EVENTS_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"                JsonSerializableSchedule.class).get();","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"        Schedule addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"        Schedule typicalEventsSchedule \u003d TypicalEvents.getTypicalSchedule();","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(addressBookFromFile, typicalEventsSchedule);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"        JsonSerializableSchedule dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_FILE,","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"                JsonSerializableSchedule.class).get();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Jacobnbh":12,"kaldius":3,"-":23}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"Jacobnbh"},"content":"        userPrefs.setScheduleFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Jacobnbh":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalSchedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.ReadOnlySchedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"        JsonScheduleStorage scheduleStorage \u003d new JsonScheduleStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"        storageManager \u003d new StorageManager(scheduleStorage, userPrefsStorage);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"Jacobnbh"},"content":"    public void scheduleReadSave() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"Jacobnbh"},"content":"         * {@link JsonScheduleStorage} class.","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"Jacobnbh"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonScheduleStorageTest} class.","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"Jacobnbh"},"content":"        Schedule original \u003d getTypicalSchedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"Jacobnbh"},"content":"        storageManager.saveSchedule(original);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"Jacobnbh"},"content":"        ReadOnlySchedule retrieved \u003d storageManager.readSchedule().get();","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"Jacobnbh"},"content":"        assertEquals(original, new Schedule(retrieved));","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"Jacobnbh"},"content":"    public void getScheduleFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"Jacobnbh"},"content":"        assertNotNull(storageManager.getScheduleFilePath());","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jacobnbh":14,"-":54}},{"path":"src/test/java/seedu/address/testutil/BlockedSlotBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":" * A utility class to help with building BlockedSlot objects.","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"public class BlockedSlotBuilder {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"    public static final String DEFAULT_DATE \u003d \"2020-01-01\";","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    public static final String DEFAULT_STARTTIME \u003d \"0800\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"    public static final String DEFAULT_ENDTIME \u003d \"0900\";","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    private Date date;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"    private TimeSlot timeSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"     * Creates a {@code BlockedSlotBuilder} with the default details.","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"    public BlockedSlotBuilder() {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ruthpohrp"},"content":"        timeSlot \u003d new TimeSlot(DEFAULT_STARTTIME, DEFAULT_ENDTIME);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ruthpohrp"},"content":"     * Initializes the BlockedSlotBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ruthpohrp"},"content":"    public BlockedSlotBuilder(BlockedSlot eventToCopy) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"        date \u003d eventToCopy.getDate();","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ruthpohrp"},"content":"        timeSlot \u003d eventToCopy.getTimeSlot();","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ruthpohrp"},"content":"     * Sets the {@code Date} of the {@code BlockedSlot} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"    public BlockedSlotBuilder withDate(String date) {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ruthpohrp"},"content":"     * Sets the {@code TimeSlot} of the {@code BlockedSlot} that we are building.","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ruthpohrp"},"content":"    public BlockedSlotBuilder withTimeSlot(String startTime, String endTime) {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"        this.timeSlot \u003d new TimeSlot(startTime, endTime);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ruthpohrp"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ruthpohrp"},"content":"    public BlockedSlot build() {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"        return new BlockedSlot(date, timeSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ruthpohrp":56}},{"path":"src/test/java/seedu/address/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":" * A utility class to help with building EditEventDescriptor objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"kaldius"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    public EditEventDescriptorBuilder(EditCommand.EditEventDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"        this.descriptor \u003d new EditCommand.EditEventDescriptor(descriptor);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"kaldius"},"content":"     * Returns an {@code EditEventDescriptor} with fields containing {@code event}\u0027s details","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"kaldius"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"kaldius"},"content":"        descriptor.setName(event.getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        descriptor.setDate(event.getDate());","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        descriptor.setTimeSlot(event.getTimeSlot());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"        descriptor.setLocation(event.getLocation());","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"kaldius"},"content":"        descriptor.setTags(event.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        descriptor.setRemark(event.getRemark());","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"     * Sets the {@code Name} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    public EditEventDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"     * Sets the {@code Date} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"ruthpohrp"},"content":"    public EditEventDescriptorBuilder withDate(String date) {","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"kaldius"},"content":"     * Sets the {@code TimeSlot} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"kaldius"},"content":"    public EditEventDescriptorBuilder withTimeSlot(String startTime, String endTime) {","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"kaldius"},"content":"        descriptor.setTimeSlot(new TimeSlot(startTime, endTime));","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"     * Sets the {@code Location} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"CSYGalvin"},"content":"    public EditEventDescriptorBuilder withLocation(String address) {","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"CSYGalvin"},"content":"        descriptor.setLocation(new Location(address));","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"kaldius"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditEventDescriptor}","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"kaldius"},"content":"    public EditEventDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"     * Sets the {@code Remark} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"ruthpohrp"},"content":"    public EditEventDescriptorBuilder withRemark(String remark) {","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"ruthpohrp"},"content":"        descriptor.setRemark(new Remark(remark));","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"ruthpohrp"},"content":"        return this;","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"kaldius"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kaldius":24,"ruthpohrp":15,"-":52,"CSYGalvin":7}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Date;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Location;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.Remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"import seedu.address.model.event.TimeSlot;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"kaldius"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":"public class EventBuilder {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    public static final String DEFAULT_DATE \u003d \"2020-01-01\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"kaldius"},"content":"    public static final String DEFAULT_STARTTIME \u003d \"0800\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"    public static final String DEFAULT_ENDTIME \u003d \"0900\";","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"ruthpohrp"},"content":"    private Date date;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"kaldius"},"content":"    private TimeSlot timeSlot;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"CSYGalvin"},"content":"    private Location address;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"ruthpohrp"},"content":"    private Remark remark;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"ruthpohrp"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        timeSlot \u003d new TimeSlot(DEFAULT_STARTTIME, DEFAULT_ENDTIME);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"CSYGalvin"},"content":"        address \u003d new Location(DEFAULT_ADDRESS);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"        remark \u003d new Remark(\"\");","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"kaldius"},"content":"        name \u003d eventToCopy.getName();","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"ruthpohrp"},"content":"        date \u003d eventToCopy.getDate();","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"kaldius"},"content":"        timeSlot \u003d eventToCopy.getTimeSlot();","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"CSYGalvin"},"content":"        address \u003d eventToCopy.getLocation();","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        tags \u003d new HashSet\u003c\u003e(eventToCopy.getTags());","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"ruthpohrp"},"content":"        remark \u003d eventToCopy.getRemark();","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"kaldius"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Event} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"kaldius"},"content":"    public EventBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"kaldius"},"content":"     * Sets the {@code Address} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"CSYGalvin"},"content":"    public EventBuilder withLocation(String address) {","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"CSYGalvin"},"content":"        this.address \u003d new Location(address);","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"ruthpohrp"},"content":"     * Sets the {@code Date} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"ruthpohrp"},"content":"    public EventBuilder withDate(String date) {","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"ruthpohrp"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"kaldius"},"content":"     * Sets the {@code TimeSlot} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"    public EventBuilder withTimeSlot(String startTime, String endTime) {","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"kaldius"},"content":"        this.timeSlot \u003d new TimeSlot(startTime, endTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"     * Sets the {@code Remark} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"ruthpohrp"},"content":"    public EventBuilder withRemark(String remark) {","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"ruthpohrp"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"ruthpohrp"},"content":"        return this;","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"kaldius"},"content":"    public Event build() {","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"ruthpohrp"},"content":"        return new Event(name, date, timeSlot, address, tags, remark);","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kaldius":23,"ruthpohrp":20,"-":57,"CSYGalvin":9}},{"path":"src/test/java/seedu/address/testutil/EventUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LOCATION;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMESLOT;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import seedu.address.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"kaldius"},"content":" * A utility class for Event.","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"kaldius"},"content":"public class EventUtil {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"kaldius"},"content":"     * Returns an add command string for adding the {@code event}.","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"kaldius"},"content":"    public static String getAddCommand(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kaldius"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getEventDetails(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"kaldius"},"content":"     * Returns the part of command string for the given {@code event}\u0027s details.","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"    public static String getEventDetails(Event event) {","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"kaldius"},"content":"        sb.append(PREFIX_NAME + event.getName().fullName + \" \");","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"        sb.append(PREFIX_DATE + event.getDate().value + \" \");","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"        sb.append(PREFIX_TIMESLOT + event.getTimeSlot().toString() + \" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"        sb.append(PREFIX_LOCATION + event.getLocation().value + \" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"        event.getTags().stream().forEach(","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"        sb.append(PREFIX_REMARK + event.getRemark().value + \" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"     * Returns the part of command string for the given {@code EditEventDescriptor}\u0027s details.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"    public static String getEditEventDescriptorDetails(EditEventDescriptor descriptor) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"ruthpohrp"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date.value).append(\" \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"        descriptor.getTimeSlot().ifPresent(timeSlot -\u003e sb.append(PREFIX_TIMESLOT).append(timeSlot).append(\" \"));","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"CSYGalvin"},"content":"        descriptor.getLocation().ifPresent(address -\u003e sb.append(PREFIX_LOCATION).append(address.value).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"ruthpohrp"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(PREFIX_REMARK).append(remark.value));","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kaldius":15,"ruthpohrp":7,"-":39,"CSYGalvin":4}},{"path":"src/test/java/seedu/address/testutil/ScheduleBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacobnbh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"Jacobnbh"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"Jacobnbh"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"Jacobnbh"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"Jacobnbh"},"content":" *     {@code Schedule ab \u003d new ScheduleBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"Jacobnbh"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"Jacobnbh"},"content":"public class ScheduleBuilder {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"Jacobnbh"},"content":"    private Schedule schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Jacobnbh"},"content":"    public ScheduleBuilder() {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"Jacobnbh"},"content":"        schedule \u003d new Schedule();","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Jacobnbh"},"content":"    public ScheduleBuilder(Schedule schedule) {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"Jacobnbh"},"content":"        this.schedule \u003d schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"Jacobnbh"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"Jacobnbh"},"content":"     * Adds a new {@code Person} to the {@code Schedule} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"Jacobnbh"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"Jacobnbh"},"content":"    public ScheduleBuilder withEvent(Event event) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"Jacobnbh"},"content":"        schedule.addEvent(event);","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"Jacobnbh"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"Jacobnbh"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"Jacobnbh"},"content":"    public Schedule build() {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"Jacobnbh"},"content":"        return schedule;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"Jacobnbh"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"Jacobnbh"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Jacobnbh":33,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"     * Returns the middle index of the event in the {@code model}\u0027s event list.","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"kaldius"},"content":"        return Index.fromOneBased(model.getFilteredEventList().size() / 2);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"kaldius"},"content":"     * Returns the last index of the event in the {@code model}\u0027s event list.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"        return Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"     * Returns the event in the {@code model}\u0027s event list at {@code index}.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"kaldius"},"content":"    public static Event getEvent(Model model, Index index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"kaldius"},"content":"        return model.getFilteredEventList().get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaldius":7,"-":47,"CSYGalvin":1}},{"path":"src/test/java/seedu/address/testutil/TypicalBlockedSlots.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ruthpohrp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ruthpohrp"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ruthpohrp"},"content":" * A utility class containing a list of {@code TypicalBlocked} objects to be used in tests.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ruthpohrp"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ruthpohrp"},"content":"public class TypicalBlockedSlots {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ruthpohrp"},"content":"    public static final BlockedSlot EIGHT_TO_NINE \u003d new BlockedSlotBuilder()","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"            .withTimeSlot(\"0800\", \"0900\").withDate(\"2020-01-01\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ruthpohrp"},"content":"    public static final BlockedSlot NINE_TO_TEN \u003d new BlockedSlotBuilder()","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ruthpohrp"},"content":"            .withTimeSlot(\"0900\", \"1000\").withDate(\"2020-01-01\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ruthpohrp"},"content":"    public static final BlockedSlot EIGHT_TO_NINE_02 \u003d new BlockedSlotBuilder()","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ruthpohrp"},"content":"            .withTimeSlot(\"0800\", \"0900\").withDate(\"2020-02-02\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ruthpohrp"},"content":"    private TypicalBlockedSlots() {","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ruthpohrp"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ruthpohrp"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ruthpohrp":22}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ENDTIME_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ENDTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"CSYGalvin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LOCATION_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ruthpohrp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STARTTIME_AMY;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kaldius"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STARTTIME_BOB;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"Jacobnbh"},"content":"import seedu.address.model.Schedule;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ruthpohrp"},"content":"import seedu.address.model.event.BlockedSlot;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"CSYGalvin"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"kaldius"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"kaldius"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"kaldius"},"content":"    public static final Event ALICE \u003d new EventBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kaldius"},"content":"            .withLocation(\"123, Jurong West Ave 6, #08-111\").withTimeSlot(\"0800\", \"0900\")","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"ruthpohrp"},"content":"            .withDate(\"2020-01-01\")","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"ruthpohrp"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ruthpohrp"},"content":"            .withRemark(\"A nice girl.\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kaldius"},"content":"    public static final Event BENSON \u003d new EventBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"CSYGalvin"},"content":"            .withLocation(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(\"0830\", \"0930\").withDate(\"2020-01-02\")","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"ruthpohrp"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"ruthpohrp"},"content":"            .withRemark(\"A weird boy.\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event CARL \u003d new EventBuilder().withName(\"Carl Kurz\").withDate(\"2020-01-03\")","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"ruthpohrp"},"content":"            .withTimeSlot(\"0930\", \"1030\").withLocation(\"wall street\").withRemark(\"May change schedule.\").build();","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event DANIEL \u003d new EventBuilder().withName(\"Daniel Meier\").withDate(\"2020-01-04\")","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(\"1000\", \"1100\").withLocation(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event ELLE \u003d new EventBuilder().withName(\"Elle Meyer\").withDate(\"2020-01-05\")","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(\"1030\", \"1130\").withLocation(\"michegan ave\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event FIONA \u003d new EventBuilder().withName(\"Fiona Kunz\").withDate(\"2020-01-06\")","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(\"1100\", \"1200\").withLocation(\"little tokyo\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event GEORGE \u003d new EventBuilder().withName(\"George Best\").withDate(\"2020-01-07\")","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(\"1130\", \"1230\").withLocation(\"4th street\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event HOON \u003d new EventBuilder().withName(\"Hoon Meier\").withDate(\"2020-01-08\")","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(\"1300\", \"1400\").withLocation(\"little india\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event IDA \u003d new EventBuilder().withName(\"Ida Mueller\").withDate(\"2020-01-09\")","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(\"1330\", \"1430\").withLocation(\"chicago ave\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":58,"author":{"gitId":"kaldius"},"content":"    // Manually added - Event\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event AMY \u003d new EventBuilder().withName(VALID_NAME_AMY).withDate(VALID_DATE_AMY)","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(VALID_STARTTIME_AMY, VALID_ENDTIME_AMY).withLocation(VALID_LOCATION_AMY)","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"ruthpohrp"},"content":"            .withTags(VALID_TAG_FRIEND).withRemark(VALID_REMARK_AMY).build();","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ruthpohrp"},"content":"    public static final Event BOB \u003d new EventBuilder().withName(VALID_NAME_BOB).withDate(VALID_DATE_BOB)","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"kaldius"},"content":"            .withTimeSlot(VALID_STARTTIME_BOB, VALID_ENDTIME_BOB).withLocation(VALID_LOCATION_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"ruthpohrp"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withRemark(VALID_REMARK_BOB)","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"ruthpohrp"},"content":"    public static final BlockedSlot ONE \u003d new BlockedSlotBuilder().withDate(\"2020-02-06\").withTimeSlot(","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ruthpohrp"},"content":"            \"1100\", \"1200\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ruthpohrp"},"content":"    public static final BlockedSlot TWO \u003d new BlockedSlotBuilder().withDate(\"2020-02-06\").withTimeSlot(","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ruthpohrp"},"content":"            \"1200\", \"1300\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ruthpohrp"},"content":"    public static final BlockedSlot THREE \u003d new BlockedSlotBuilder().withDate(\"2020-02-06\").withTimeSlot(","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ruthpohrp"},"content":"            \"1300\", \"1400\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":76,"author":{"gitId":"kaldius"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"kaldius"},"content":"     * Returns an {@code AddressBook} with all the typical events.","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"Jacobnbh"},"content":"    public static Schedule getTypicalSchedule() {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"Jacobnbh"},"content":"        Schedule ab \u003d new Schedule();","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"kaldius"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"kaldius"},"content":"            ab.addEvent(event);","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":86,"author":{"gitId":"ruthpohrp"},"content":"        for (BlockedSlot blockedSlot : getTypicalBlockedSlots()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ruthpohrp"},"content":"            ab.addBlockedSlot(blockedSlot);","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"ruthpohrp"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":92,"author":{"gitId":"kaldius"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":95,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ruthpohrp"},"content":"    public static List\u003cBlockedSlot\u003e getTypicalBlockedSlots() {","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ruthpohrp"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ONE, TWO, THREE));","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ruthpohrp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ruthpohrp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Jacobnbh":3,"kaldius":24,"ruthpohrp":37,"-":32,"CSYGalvin":4}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"kaldius"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kaldius"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"kaldius"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kaldius":3,"-":9}}]
