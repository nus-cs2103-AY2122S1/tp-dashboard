[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"# UNIon","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"UNIon is a desktop application **tailored for Computing Students**,","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"helping to **organise** and **navigate** the sea of","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"communication-based **data** in school so that users","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"can better achieve higher levels of **productivity**.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"### Motivation","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"UNIon was created as a productivity application, aiming to organise school contacts for students.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"The name `UNIon` came from the function of the application to","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"be a collection of a groups of people designed for university students.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"### Build Status","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-T16-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103-T16-1/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"### Screenshots","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"### Features","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"* Add contacts to UNIon","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"* Search for a mobile number of a contact","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"* Update contact details","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"* Delete contacts","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"* Create folders for your contacts","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"* Add contacts to folders","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"* List all folders","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"* Delete folders","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"* Use Unix commands to navigate UNIon","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"**Coming Soon...**","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"* GUI window update","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"* Folders saved locally","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"* Find specific folders","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"* Add multiple contacts at once","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"* Rename folder","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"### Built With","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"* Java","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"* JavaFX","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"### Acknowledgement","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"itsyme":46,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"    archiveName \u003d \u0027UNIon.jar\u0027","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"sebbycake"},"content":"run {","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"sebbycake"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"sebbycake":5,"rehmmann":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"layout: page ","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"We believe in providing **simplicity** in everything we do here. If you\u0027re the kind of person who likes to organize your","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"communication-based data easily with just a keyboard, you will enjoy UNIon. By re-purposing Unix commands, we ensure","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"that you can get up to speed quickly and be productive with your data.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"# Our Team","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"## Lee Hur Sebastian","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"### Role: Team Lead","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"![Sebastian](images/sebbycake.png) \u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"[![Sebastian LinkedIn](images/linkedin.png)](https://www.linkedin.com/in/sebastian-lee-329b45198/) \u0026nbsp;","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"[![Sebastian GitHub](images/github.png)](https://github.com/sebbycake)","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"## Lye Wen Jun","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"### Role: Code Quality","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"![Wen Jun](images/xlzior.png) \u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"[![Wen Jun LinkedIn](images/linkedin.png)](https://www.linkedin.com/in/wen-jun-lye/) \u0026nbsp;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"[![Wen Jun GitHub](images/github.png)](https://github.com/xlzior/)","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"## Lee Wei, David","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"### Role: Documentation","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"![David](images/itsyme.png) \u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"[![David LinkedIn](images/linkedin.png)](https://www.linkedin.com/in/david-lee-4a147a1b1/) \u0026nbsp;","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"[![David GitHub](images/github.png)](https://github.com/itsyme)","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"## Rehman Sajid","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"### Role: Integration","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"![Rehhmann](images/rehmmann.png) \u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"[![Rehhmann LinkedIn](images/linkedin.png)](https://www.linkedin.com/in/rehman-sajid/) \u0026nbsp;","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"[![Rehhmann GitHub](images/github.png)](https://github.com/rehmmann/)","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"## Ching Jia Rong","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"### Role: Testing","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"![Jia Rong](images/jiarong15.png) \u003cbr/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"[![Jia Rong LinkedIn](images/linkedin.png)](https://www.linkedin.com/in/jiarong15//) \u0026nbsp;","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"[![Jia Rong GitHub](images/github.png)](https://github.com/jiarong15)","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"sebbycake":30,"-":20}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"itsyme"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object) and `Folder` objects (which are contained in a `UniqueFolderList` object).","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"itsyme"},"content":"* stores the currently \u0027selected\u0027 `Folder` objects (e.g., results of a search query)) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cFolder\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"itsyme"},"content":"\u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"xlzior"},"content":"### Locating folders by name: `find -folders`","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"xlzior"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"xlzior"},"content":"The Sequence Diagram below illustrates the interactions within the Logic component for the `execute(\"find -folders CS\")` API call.","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"xlzior"},"content":"![FindFoldersSequenceDiagram](images/FindFoldersSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"xlzior"},"content":"#### Design considerations","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"xlzior"},"content":"When deciding on the design for `find -folders`, we considered the existing `find` command to search for persons by name. This `find` command uses `StringUtil.containsWordIgnoreCase` which only matches full words.","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"xlzior"},"content":"However, one use case we wanted to cater to was students who group their contacts by shared modules. For example, students take CS2103T and CS2101 concurrently, and may wish to search for these two folders (and other CS modules) by using the keyword `CS`. If we only matched full words, `find -folders CS` would not contain *either* of the modules `CS2103T` or `CS2101`, which is undesirable.","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"xlzior"},"content":"* **Alternative 1 (current choice)**: Match partial words","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"xlzior"},"content":"    * Pros: More intuitive behaviour for the above use case","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"xlzior"},"content":"    * Cons: Requires a new method to be implemented","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"xlzior"},"content":"* **Alternative 2**: Match full words only","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"xlzior"},"content":"    * Pros: Easy to implement as this uses the same logic as finding persons by name","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"xlzior"},"content":"    * Cons: May lead to unexpected behaviour for the above use case","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"xlzior"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"xlzior"},"content":"Alternative 1 was chosen, and the new method is under `StringUtil.containsTextIgnoreCase`.","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"itsyme"},"content":"### Create folder feature","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"itsyme"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"itsyme"},"content":"Folders are saved in a `UniqueFolderList` in `AddressBook`.","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"itsyme"},"content":"The following diagram shows how `mkdir` works:","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"itsyme"},"content":"![CreateFolderSequenceDiagram](images/CreateFolderSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"itsyme"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"itsyme"},"content":"* **Alternative 1 (current choice)**: Folders hold references to contacts","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"itsyme"},"content":"  * Pros: Easier management of folders","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"itsyme"},"content":"  * Cons: More difficult to implement","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"itsyme"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"itsyme"},"content":"Diagram:","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"itsyme"},"content":"![CreateFolderAlternative1](images/CreateFolderAlternative1.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"itsyme"},"content":"* **Alternative 2**: Contacts hold references to folders","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"itsyme"},"content":"    * Pros: Easy to implement","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"itsyme"},"content":"    * Cons: More complex management of folders, Similar to tags which is already implemented","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"itsyme"},"content":"    ","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"itsyme"},"content":"Diagram:","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"itsyme"},"content":"![CreateFolderAlternative2](images/CreateFolderAlternative2.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"sebbycake"},"content":"### Viewing list of folders: `ls -folders`","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"sebbycake"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"sebbycake"},"content":"In our GUI, we would like to display the list of folders that users can create to organize","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"sebbycake"},"content":"their contacts into different classes. The implementation is very similar to `PersonListCard` and","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"sebbycake"},"content":"`PersonListPanel` for viewing list of contacts.","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"sebbycake"},"content":"#### Design considerations","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"sebbycake"},"content":"* Alternative 1: 2-row layout","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"sebbycake"},"content":"    * Pros: Ability to see additional details of folders and contacts with a small-sized GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"sebbycake"},"content":"    * Cons: Extra effort to scroll down the GUI to look into the details of contacts.","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"sebbycake"},"content":"* Alternative 2: 2-column layout","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"sebbycake"},"content":"    * Pros: Ability to see both folders and contacts data at a glance without initial scrolling needed","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"sebbycake"},"content":"    * Cons: Truncated details of folders and contacts will be displayed due to the small-sized GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"sebbycake"},"content":"Alternative 1 is selected, implemented using additional`StackPane` on top of the existing `StackPane`","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"sebbycake"},"content":"for the list of contacts placed vertically. This additional `StackPane` is placed under a `VBox`","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"sebbycake"},"content":"component in `MainWindow`.","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":321,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"xlzior"},"content":"* computing student with prior experience in using Unix-commands","lastModifiedDate":"2021-09-27"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"xlzior"},"content":"### Value Proposition","lastModifiedDate":"2021-09-27"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"xlzior"},"content":"- manage contacts faster and more conveniently than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-27"},{"lineNumber":342,"author":{"gitId":"xlzior"},"content":"- use a set of Unix-like commands that CS students are already familiar with so that they don\u0027t have to re-learn, thus helping ease of adoption","lastModifiedDate":"2021-09-27"},{"lineNumber":343,"author":{"gitId":"xlzior"},"content":"- skills learned while using this app are transferable to other tools","lastModifiedDate":"2021-09-27"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                                       | So that I can…​                                         |","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"xlzior"},"content":"| -------- | ------------------------------------------ | ----------------------------------------------------- | ---------------------------------------------------------- |","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"xlzior"},"content":"| `* * *`  | user                                       | create a folder                                       | folder related contacts together                           |","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"xlzior"},"content":"| `* * *`  | user                                       | view all the folders that I created                   |                                                            |","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"xlzior"},"content":"| `* * *`  | user                                       | delete a folder                                       | remove folders when they become irrelevant                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"xlzior"},"content":"| `* * *`  | user                                       | add a user to a folder                                | folder related contacts together and find them efficiently |","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"xlzior"},"content":"| `* * *`  | experienced computing student              | use my knowledge of Unix commands to navigate the app | use the app without learning a new set of commands         |","lastModifiedDate":"2021-09-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"jiarong15"},"content":"(For all use cases below, the **System** is the `UNIon` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-30"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"jiarong15"},"content":"**System: UNIon**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":364,"author":{"gitId":"jiarong15"},"content":"**Use case: UC01 - Add a new folder**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":365,"author":{"gitId":"jiarong15"},"content":"**Actor: User**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":366,"author":{"gitId":"jiarong15"},"content":"**Guarantees:**","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"jiarong15"},"content":"   * A new folder with the specified name is created as part of the application.","lastModifiedDate":"2021-09-30"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"jiarong15"},"content":"**MSS:**","lastModifiedDate":"2021-09-30"},{"lineNumber":370,"author":{"gitId":"jiarong15"},"content":"   1. User keys in folder name after `mkdir` keyword.","lastModifiedDate":"2021-09-30"},{"lineNumber":371,"author":{"gitId":"jiarong15"},"content":"   2. UNIon accepts input and a new folder is created.","lastModifiedDate":"2021-09-30"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"jiarong15"},"content":"   Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":374,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":375,"author":{"gitId":"jiarong15"},"content":"**Extensions:**","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"jiarong15"},"content":"   \u003e 1a. UNIon detects error in the format specified by user.","lastModifiedDate":"2021-09-30"},{"lineNumber":377,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 1a1. No new folder is created\\","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 1a2. User keys folder name `mkdir` keyword.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":379,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":381,"author":{"gitId":"jiarong15"},"content":"**System: UNIon**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":382,"author":{"gitId":"jiarong15"},"content":"**Use case: UC02 - Add a new contact to UNIon**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":383,"author":{"gitId":"jiarong15"},"content":"**Actor: User**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":384,"author":{"gitId":"jiarong15"},"content":"**Guarantees:**","lastModifiedDate":"2021-09-30"},{"lineNumber":385,"author":{"gitId":"jiarong15"},"content":"   * A new contact with the specified details is stored as a standalone in the application.","lastModifiedDate":"2021-09-30"},{"lineNumber":386,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":387,"author":{"gitId":"jiarong15"},"content":"**MSS:**","lastModifiedDate":"2021-09-30"},{"lineNumber":388,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":389,"author":{"gitId":"jiarong15"},"content":"   1. User inputs contact details after `Add` keyword.","lastModifiedDate":"2021-09-30"},{"lineNumber":390,"author":{"gitId":"jiarong15"},"content":"   2. UNIon accepts input and adds contact to the pool of contacts.","lastModifiedDate":"2021-09-30"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"jiarong15"},"content":"**Extensions:**","lastModifiedDate":"2021-09-30"},{"lineNumber":395,"author":{"gitId":"jiarong15"},"content":"   \u003e 1a. UNIon detects error in format given by user.","lastModifiedDate":"2021-09-30"},{"lineNumber":396,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 1a1. No new contact was registered by UNIon\\","lastModifiedDate":"2021-09-30"},{"lineNumber":397,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 1a2. User inputs details after `Add` keyword.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":398,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e Steps 1a1-1a2 are repeated until the data format entered are correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"jiarong15"},"content":"**System: UNIon**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":401,"author":{"gitId":"jiarong15"},"content":"**Use case: UC03 - Add existing contact to a existing folder**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":402,"author":{"gitId":"jiarong15"},"content":"**Actor: User**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":403,"author":{"gitId":"jiarong15"},"content":"**Preconditions:** Folder and contact already exists in UNIon\\","lastModifiedDate":"2021-09-30"},{"lineNumber":404,"author":{"gitId":"jiarong15"},"content":"**MSS:**","lastModifiedDate":"2021-09-30"},{"lineNumber":405,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"jiarong15"},"content":"   1. \u003cu\u003e User adds a new folder named A (UC01) \u003c/u\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":407,"author":{"gitId":"jiarong15"},"content":"   2. \u003cu\u003e User adds a new contact named Clarence (UC02) \u003c/u\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":408,"author":{"gitId":"jiarong15"},"content":"   3. User specifies the contact index to be added to the named folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":409,"author":{"gitId":"jiarong15"},"content":"   4. UNIon adds the contact specified into the respective folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"jiarong15"},"content":"**Extensions:**","lastModifiedDate":"2021-09-30"},{"lineNumber":414,"author":{"gitId":"jiarong15"},"content":"   \u003e 3a. User inputs an invalid index.","lastModifiedDate":"2021-09-30"},{"lineNumber":415,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 3a1. Contact not added to folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":416,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 3a2. User inputs contact index to the named folder.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":417,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e Steps 3a1-3a2 are repeated until the data format entered are correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":418,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":419,"author":{"gitId":"jiarong15"},"content":"   \u003e 3b. User specifies a folder name that does not exist.","lastModifiedDate":"2021-09-30"},{"lineNumber":420,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 3b1. Contact not added to any folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":421,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 3b2. User inputs contact index to named folder.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":422,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e Steps 3b1-3b2 are repeated until the data format entered are correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":423,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":424,"author":{"gitId":"jiarong15"},"content":"**System: UNIon**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":425,"author":{"gitId":"jiarong15"},"content":"**Use case: UC04 - Delete specified folder**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":426,"author":{"gitId":"jiarong15"},"content":"**Actor: User**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":427,"author":{"gitId":"jiarong15"},"content":"**Guarantees:** Folder specified is deleted from UNIon \\","lastModifiedDate":"2021-09-30"},{"lineNumber":428,"author":{"gitId":"jiarong15"},"content":"**Preconditions:** Folder must already exist in UNIon","lastModifiedDate":"2021-09-30"},{"lineNumber":429,"author":{"gitId":"jiarong15"},"content":"**MSS:**","lastModifiedDate":"2021-09-30"},{"lineNumber":430,"author":{"gitId":"jiarong15"},"content":"   1. User specifies folder name after `rmdir`.","lastModifiedDate":"2021-09-30"},{"lineNumber":431,"author":{"gitId":"jiarong15"},"content":"   2. UNIon removes the specified folder from its system.","lastModifiedDate":"2021-09-30"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":436,"author":{"gitId":"jiarong15"},"content":"   \u003e 1a. UNIon detects error of input by user.","lastModifiedDate":"2021-09-30"},{"lineNumber":437,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 1a1. Folder remains in the UNIon.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":438,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 1a2. User respecifies the folder to be removed.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":439,"author":{"gitId":"jiarong15"},"content":"      Steps 1a1 - 1a2 are repeated until data format is correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"jiarong15"},"content":"**System: UNIon**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":442,"author":{"gitId":"jiarong15"},"content":"**Use case: UC05 - Remove all contacts**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":443,"author":{"gitId":"jiarong15"},"content":"**Actor: User**\\","lastModifiedDate":"2021-09-30"},{"lineNumber":444,"author":{"gitId":"jiarong15"},"content":"**Guarantees:** All contacts are deleted from UNIon","lastModifiedDate":"2021-09-30"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":446,"author":{"gitId":"jiarong15"},"content":"**MSS:**","lastModifiedDate":"2021-09-30"},{"lineNumber":447,"author":{"gitId":"jiarong15"},"content":"   1. User inputs command to remove all contacts","lastModifiedDate":"2021-09-30"},{"lineNumber":448,"author":{"gitId":"jiarong15"},"content":"   2. UNIon clears all the contacts it has stoerd till thus far.","lastModifiedDate":"2021-09-30"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":450,"author":{"gitId":"jiarong15"},"content":"   Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":452,"author":{"gitId":"jiarong15"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":453,"author":{"gitId":"jiarong15"},"content":"   \u003e 1a. UNIon detects error of input by user.","lastModifiedDate":"2021-09-30"},{"lineNumber":454,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 1a1. All contacts remain in UNIon.","lastModifiedDate":"2021-09-30"},{"lineNumber":455,"author":{"gitId":"jiarong15"},"content":"      \u003e\u003e 1a2. User re-inputs command.\\","lastModifiedDate":"2021-09-30"},{"lineNumber":456,"author":{"gitId":"jiarong15"},"content":"      Steps 1a1 - 1a2 are repeated until data format is correct.","lastModifiedDate":"2021-09-30"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"xlzior"},"content":"4.  Should work well for standard screen resolutions 1920x1080 and higher, and, for screen scales 100% and 125%.","lastModifiedDate":"2021-09-27"},{"lineNumber":464,"author":{"gitId":"xlzior"},"content":"5.  Should handle invalid user input gracefully and not crash.","lastModifiedDate":"2021-09-27"},{"lineNumber":465,"author":{"gitId":"xlzior"},"content":"6.  On invalid user input, should prompt the user with information on the correct input format expected so that the user can learn how to use the commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":466,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":467,"author":{"gitId":"xlzior"},"content":"Project scope","lastModifiedDate":"2021-09-27"},{"lineNumber":468,"author":{"gitId":"xlzior"},"content":"- The app is not required to handle communication with people, only keeping track of metadata associated with contacts","lastModifiedDate":"2021-09-27"},{"lineNumber":469,"author":{"gitId":"xlzior"},"content":"- The app is not required to handle integration with message apps like Telegram and WhatsApp","lastModifiedDate":"2021-09-27"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"jiarong15"},"content":"* **Experienced Computing Student**: A student that has already completed introductory module in their respective universities.","lastModifiedDate":"2021-09-30"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xlzior":41,"sebbycake":20,"jiarong15":79,"itsyme":30,"-":359}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"UNIon is a desktop app for organizing various types of contacts, optimized for use for the vast majority of computing students. ","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"If you are already familiar with Unix commands, then UNIon will be easy for you to use. ","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"1. Download the latest `union.jar` from [here](https://github.com/AY2122S1-CS2103-T16-1/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"xlzior"},"content":"   * **`ls -contacts`** : Lists all contacts.","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"xlzior"},"content":"   * **`touch`**`-n John Doe -p 98765432 -e johnd@example.com -a John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"xlzior"},"content":"   * **`rm`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"xlzior"},"content":"   * **`rm -contacts`** : Deletes all contacts.","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"xlzior"},"content":"  e.g. in `touch -n NAME`, `NAME` is a parameter which can be used as `touch -n John Doe`.","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"xlzior"},"content":"  e.g `-n NAME [-t TAG]` can be used as `-n John Doe -t friend` or as `-n John Doe`.","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"xlzior"},"content":"  e.g. `[-t TAG]…​` can be used as ` ` (i.e. 0 times), `-t friend`, `-t friend -t family` etc.","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"xlzior"},"content":"  e.g. if the command specifies `-n NAME -p PHONE_NUMBER`, `-p PHONE_NUMBER -n NAME` is also acceptable.","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"xlzior"},"content":"  e.g. if you specify `-p 12341234 -p 56785678`, only `-p 56785678` will be taken.","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"xlzior"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help` and `exit`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"xlzior"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"xlzior"},"content":"### Adding a person: `touch`","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"xlzior"},"content":"Format: `touch -n NAME -p PHONE_NUMBER -e EMAIL -a ADDRESS [-t TAG]…​`","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"xlzior"},"content":"* `touch -n John Doe -p 98765432 -e johnd@example.com -a John street, block 123, #01-01`","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"xlzior"},"content":"* `touch -n Betsy Crowe -t friend -e betsycrowe@example.com -a Newgate Prison -p 1234567 -t criminal`","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"xlzior"},"content":"### Listing all persons : `ls -contacts`","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"xlzior"},"content":"Format: `ls -contacts`","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"xlzior"},"content":"### Editing a person : `vim`","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"xlzior"},"content":"Format: `vim INDEX [-n NAME] [-p PHONE] [-e EMAIL] [-a ADDRESS] [-t TAG]…​`","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"xlzior"},"content":"* When editing tags, the existing tags of the person will be removed i.e touching of tags is not cumulative.","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"xlzior"},"content":"* You can remove all the person’s tags by typing `-t` without specifying any tags after it.","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"xlzior"},"content":"*  `vim 1 -p 91234567 -e johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"xlzior"},"content":"*  `vim 2 -n Betsy Crower -t ` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"xlzior"},"content":"### Deleting a person : `rm`","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"xlzior"},"content":"Format: `rm INDEX`","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"xlzior"},"content":"* `ls -contacts` followed by `rm 2` deletes the 2nd person in the address book.","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"xlzior"},"content":"* `find Betsy` followed by `rm 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"xlzior"},"content":"### Clearing all entries : `rm -contacts`","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"xlzior"},"content":"Format: `rm -contacts`","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"itsyme"},"content":"### Creating a folder: `mkdir`","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"itsyme"},"content":"Creates a folder for contacts to be added into.","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"itsyme"},"content":"Format: `mkdir FOLDER_NAME`","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"itsyme"},"content":"* Creates a folder with the name `FOLDER_NAME`.","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"itsyme"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"itsyme"},"content":"* `mkdir CS2103` creates a folder with the name `CS2103`.","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"jiarong15"},"content":"### Removing a folder: `rmdir`","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"jiarong15"},"content":"Deletes a specified folder","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"jiarong15"},"content":"Format `rmdir FOLDER_NAME`","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"jiarong15"},"content":"* Deletes folder with the name `FOLDER_NAME`.","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"jiarong15"},"content":"Examples:","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"jiarong15"},"content":"* `rmdir CS1010` deletes a folder with the name `CS1010`.","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"jiarong15"},"content":"### Editing names of folders: `mv`","lastModifiedDate":"2021-10-15"},{"lineNumber":182,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":183,"author":{"gitId":"jiarong15"},"content":"Replaces the old folder name with the new folder name","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"jiarong15"},"content":"Format: `mv OLD_FOLDER_NAME` \u0026#124; `NEW_FOLDER_NAME`","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":187,"author":{"gitId":"sebbycake"},"content":"### Viewing list of folders: `ls -folders`","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"sebbycake"},"content":"Retrieve list of all folders created","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"sebbycake"},"content":"Format: `ls -folders`","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"xlzior"},"content":"### Locating folders by name: `find -folders`","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"xlzior"},"content":"Finds folders whose names contain any of the given keywords.","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"xlzior"},"content":"Format: `find -folders KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"xlzior"},"content":"* The search is case-insensitive. e.g `cs2103` will match `CS2103`","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"xlzior"},"content":"* The order of the keywords does not matter. e.g. `Team Project CS2103` will match `CS2103 Team Project`","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"xlzior"},"content":"* Only the folder name is searched.","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"xlzior"},"content":"* Partial words will be matched e.g. `CS` will match `CS2103` and `CS2101`.","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"xlzior"},"content":"* Folders matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"xlzior"},"content":"  e.g. `CS2103 Team Project` will return `CS2103`, `Team Project`","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"xlzior"},"content":"Examples:","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"xlzior"},"content":"* `find -folders CS` returns `CS2103` and `CS2101`","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"xlzior"},"content":"* `find -folders CS2103 Team Project` returns `CS2103`, `Team Project`","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"jiarong15"},"content":"### Adding contacts to folder: `echo`","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"rehmmann"},"content":"To organize and group contacts into an arbitrary folder","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"rehmmann"},"content":"Format: `echo CONTACT_INDEX \u003e\u003e FOLDER_NAME`","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"rehmmann"},"content":"- `CONTACT_INDEX` must be a positive integer 1, 2, 3, ...","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"rehmmann"},"content":"- `FOLDER_NAME` must be an existing folder","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"rehmmann"},"content":"    - Command fails if there is no existing folder with that name","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"rehmmann"},"content":"    ","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"xlzior"},"content":"**Add new contact** | `touch -n NAME -p PHONE_NUMBER -e EMAIL -a ADDRESS [-t TAG]` \u003cbr\u003e e.g., `touch -n James Ho -p 22224444 -e jamesho@example.com -a 123, Clementi Rd, 1234665 -t friend -t colleague`","lastModifiedDate":"2021-09-27"},{"lineNumber":249,"author":{"gitId":"xlzior"},"content":"**Clear contacts** | `rm -contacts`","lastModifiedDate":"2021-09-27"},{"lineNumber":250,"author":{"gitId":"xlzior"},"content":"**Delete contact** | `rm INDEX`\u003cbr\u003e e.g., `rm 3`","lastModifiedDate":"2021-10-02"},{"lineNumber":251,"author":{"gitId":"xlzior"},"content":"**Edit contact** | `vim INDEX [-n NAME] [-p PHONE_NUMBER] [-e EMAIL] [-a ADDRESS] [-t TAG]` \u003cbr\u003e e.g., `vim 2 -n James Lee -e jameslee@example.com`","lastModifiedDate":"2021-09-27"},{"lineNumber":252,"author":{"gitId":"xlzior"},"content":"**Find contact** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"xlzior"},"content":"**List contacts** | `ls -contacts`","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"xlzior"},"content":"**Create folder** | `mkdir FOLDER_NAME` e.g. `mkdir CS2103`","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"jiarong15"},"content":"**Edit folder Name** | `mv OLD_FOLDER_NAME` \u0026#124; `NEW_FOLDER_NAME` e.g. `mv CS2103` \u0026#124; `CS2102`","lastModifiedDate":"2021-10-15"},{"lineNumber":257,"author":{"gitId":"xlzior"},"content":"**Delete folder** | `rmdir FOLDER_NAME` e.g. `rmdir CS1010`","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"xlzior"},"content":"**Add contact to folder** | `echo INDEX \u003e\u003e FOLDER_NAME` e.g. `echo 3 \u003e\u003e CS2103`","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"xlzior"},"content":"**Find folders** | `find -folders KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find -folders CS2103`","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"xlzior"},"content":"**List folders** | `ls -folders`","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"sebbycake":9,"xlzior":58,"jiarong15":20,"rehmmann":6,"itsyme":12,"-":155}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"sebbycake"},"content":"    content: \"UNIon\";","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"sebbycake":1,"-":294}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"AddressBook *--\u003e \"1\" UniqueFolderList","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"UniqueFolderList --\u003e \"*\" Folder","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"Folder --\u003e \"*\" Person","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"Folder --\u003e FolderName","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"itsyme":4,"-":20}},{"path":"docs/diagrams/CreateFolderAlternative1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"class Folder","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"class FolderName","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"class Person","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"class Name","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"class Phone","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"class Tag","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"class Address","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"class Email","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"Folder --\u003e \"*\" Person","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"Folder --\u003e FolderName","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"Person --\u003e Name","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"Person --\u003e Phone","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"Person --\u003e Address","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"Person --\u003e Email","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"Person --\u003e \"*\" Tag","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsyme":26}},{"path":"docs/diagrams/CreateFolderAlternative2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"\u0027https://plantuml.com/class-diagram","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"class Folder","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"class Person","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"class FolderName","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"class Name","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"class Phone","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"class Tag","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"class Address","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"class Email","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"Person --\u003e Name","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"Person --\u003e Phone","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"Person --\u003e Address","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"Person --\u003e Email","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"Person --\u003e \"*\" Tag","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"Person --\u003e \"*\" Folder","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"Folder --\u003e FolderName","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsyme":25}},{"path":"docs/diagrams/CreateFolderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"participant \"f:CreateFolderCommand\" as CreateFolderCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"[-\u003e LogicManager : execute(mkdir)","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(mkdir)","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"create CreateFolderCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"AddressBookParser -\u003e CreateFolderCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"activate CreateFolderCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"CreateFolderCommand --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"deactivate CreateFolderCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"LogicManager -\u003e CreateFolderCommand : execute(m)","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"activate CreateFolderCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"CreateFolderCommand -\u003e Model : addFolder(f.folderToAdd)","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"Model --\u003e CreateFolderCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"CreateFolderCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"deactivate CreateFolderCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"CreateFolderCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"destroy CreateFolderCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"itsyme":50}},{"path":"docs/diagrams/FindFoldersSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xlzior"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"xlzior"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"xlzior"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"xlzior"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"xlzior"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"xlzior"},"content":"participant \":FindFoldersCommandParser\" as FindFoldersCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"participant \"f:FindFoldersCommand\" as FindFoldersCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"xlzior"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"xlzior"},"content":"[-\u003e LogicManager : execute(\"find -folders CS\")","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"xlzior"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find -folders CS\")","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"xlzior"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"xlzior"},"content":"create FindFoldersCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"xlzior"},"content":"AddressBookParser -\u003e FindFoldersCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"xlzior"},"content":"activate FindFoldersCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"xlzior"},"content":"FindFoldersCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"xlzior"},"content":"deactivate FindFoldersCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"xlzior"},"content":"AddressBookParser -\u003e FindFoldersCommandParser : parse(\"CS\")","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"xlzior"},"content":"activate FindFoldersCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"xlzior"},"content":"create FindFoldersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"xlzior"},"content":"FindFoldersCommandParser -\u003e FindFoldersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"xlzior"},"content":"activate FindFoldersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"xlzior"},"content":"FindFoldersCommand --\u003e FindFoldersCommandParser : f","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"xlzior"},"content":"deactivate FindFoldersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"xlzior"},"content":"FindFoldersCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"xlzior"},"content":"deactivate FindFoldersCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"xlzior"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"xlzior"},"content":"FindFoldersCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"xlzior"},"content":"destroy FindFoldersCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"xlzior"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"xlzior"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"xlzior"},"content":"LogicManager -\u003e FindFoldersCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"xlzior"},"content":"activate FindFoldersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"xlzior"},"content":"FindFoldersCommand -\u003e Model : updateFilteredFolderList(predicate)","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"xlzior"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"xlzior"},"content":"Model --\u003e FindFoldersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"xlzior"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"xlzior"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"xlzior"},"content":"FindFoldersCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"xlzior"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"xlzior"},"content":"CommandResult --\u003e FindFoldersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"xlzior"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"xlzior"},"content":"FindFoldersCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"xlzior"},"content":"deactivate FindFoldersCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"xlzior"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"xlzior"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"xlzior"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"xlzior":69}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"Class UniqueFolderList","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"Class Folder","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"Class FolderName","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"AddressBook *--\u003e \"1\" UniqueFolderList","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"UniqueFolderList --\u003e \"~* all\" Folder","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"Folder --\u003e FolderName","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"Folder -right-\u003e \"*\" Person","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"ModelManager --\u003e\"~* filtered\" Folder","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"itsyme":8,"-":53}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"Class JsonAdaptedFolder","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedFolder","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"JsonAdaptedFolder -right-\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"itsyme":3,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"Class FolderListPanel","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"Class FolderCard","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"MainWindow *-down-\u003e \"1\" FolderListPanel","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"FolderListPanel -down-\u003e \"*\" FolderCard","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"FolderListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"FolderCard --|\u003e UiPart","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"FolderCard ..\u003e Model","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sebbycake":7,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"layout: page ","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"title: UNIon - Manage your wide range of college contacts easily","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103-T16-1/tp/actions)","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-T16-1/tp/branch/master/graph/badge.svg?token\u003dJPVK5O2KBO)](https://codecov.io/gh/AY2122S1-CS2103-T16-1/tp)","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"**UNIon is a desktop app for organizing various types of contacts in college**, optimized for use for the vast majority of computing students. ","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface) based on **Unix**.","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"* If you are interested in using UNIon, head over to the [_Quick Start_ section of the **User","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"* If you are interested about developing UNIon, the [**Developer Guide**](DeveloperGuide.html) is a good place to","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  start.","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  , [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"sebbycake":7,"-":15}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":"    public static final String MESSAGE_FOLDERS_LISTED_OVERVIEW \u003d \"%1$d folders listed!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xlzior":1,"-":13}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"xlzior"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xlzior"},"content":"     * Returns true if the {@code sentence} contains the {@code text}.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"xlzior"},"content":"     *   Ignores case and matches partial words","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xlzior"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xlzior"},"content":"     *       containsTextIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"xlzior"},"content":"     *       containsTextIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xlzior"},"content":"     *       containsTextIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true // partial words match, unlike containsWordIgnoreCase","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xlzior"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"xlzior"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"xlzior"},"content":"     * @param text cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"xlzior"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"xlzior"},"content":"    public static boolean containsTextIgnoreCase(String sentence, String text) {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"xlzior"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"xlzior"},"content":"        requireNonNull(text);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"xlzior"},"content":"        String preppedWord \u003d text.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"xlzior"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Text parameter cannot be empty\");","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"xlzior"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Text parameter should be a single word\");","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"xlzior"},"content":"        return sentence.toLowerCase().contains(preppedWord.toLowerCase());","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xlzior":23,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"     * Returns an unmodifiable view of the filtered list of folders","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"    ObservableList\u003cFolder\u003e getFilteredFolderList();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"sebbycake":11,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"sebbycake"},"content":"    public ObservableList\u003cFolder\u003e getFilteredFolderList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"        return model.getFilteredFolderList();","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"sebbycake":6,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"    public static final String COMMAND_WORD \u003d \"touch\";","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xlzior":1,"-":66}},{"path":"src/main/java/seedu/address/logic/commands/AddToFolderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehmmann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rehmmann"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rehmmann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rehmmann"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rehmmann"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rehmmann"},"content":"public class AddToFolderCommand extends Command {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rehmmann"},"content":"    public static final String COMMAND_WORD \u003d \"echo\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rehmmann"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to folder in UNIon. \"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rehmmann"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rehmmann"},"content":"            + \"INDEX \u003e\u003e FOLDERNAME \\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rehmmann"},"content":"            + \"Example: \"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rehmmann"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rehmmann"},"content":"            + \"3 \u003e\u003e CS2103\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rehmmann"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"Contact has already been added to this folder\";","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"rehmmann"},"content":"    public static final String MESSAGE_NONEXISTENT_FOLDER \u003d \"This folder does not exist in UNIon\";","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"rehmmann"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contact added to Folder: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rehmmann"},"content":"    private final Index index;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rehmmann"},"content":"    private final FolderName folderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rehmmann"},"content":"     * Creates a AddToFolderCommand to add the specified {@code FolderName}","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rehmmann"},"content":"     * @param index","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"rehmmann"},"content":"     * @param folderName","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"rehmmann"},"content":"    public AddToFolderCommand(Index index, FolderName folderName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"rehmmann"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"rehmmann"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"rehmmann"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"rehmmann"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"rehmmann"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"rehmmann"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"rehmmann"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"rehmmann"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"rehmmann"},"content":"        Person personToAdd \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"rehmmann"},"content":"        if (!model.hasFolderName(folderName)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"rehmmann"},"content":"            throw new CommandException(MESSAGE_NONEXISTENT_FOLDER);","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"rehmmann"},"content":"        if (model.folderContainsPerson(personToAdd, folderName)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"rehmmann"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"rehmmann"},"content":"        model.addContactToFolder(personToAdd, folderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"rehmmann"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, folderName));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"rehmmann"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"rehmmann"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"rehmmann"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"rehmmann"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"rehmmann"},"content":"        if (!(other instanceof AddToFolderCommand)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"rehmmann"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"rehmmann"},"content":"        AddToFolderCommand that \u003d (AddToFolderCommand) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"rehmmann"},"content":"        return this.index.equals(that.index)","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"rehmmann"},"content":"                \u0026\u0026 this.folderName.equals(that.folderName);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"rehmmann"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rehmmann":75}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":"    public static final String COMMAND_WORD \u003d \"rm -contacts\";","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book contacts have been cleared!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"        AddressBook newAddressBook \u003d AddressBook.withFolders(model);","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        model.setAddressBook(newAddressBook);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xlzior":1,"itsyme":3,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/CreateFolderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"public class CreateFolderCommand extends Command {","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"    public static final String COMMAND_WORD \u003d \"mkdir\";","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a folder in UNIon. \"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"            + \"FOLDER_NAME \\n\"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"            + \"Example: \"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"            + \"School\";","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New folder added: %1$s\";","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    public static final String MESSAGE_DUPLICATE_FOLDER \u003d \"This folder already exists in UNIon\";","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    private final Folder folderToAdd;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"     * Creates a CreateFolderCommand to add the specified {@code Folder}","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"     * @param folder","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"    public CreateFolderCommand(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"        requireNonNull(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"        this.folderToAdd \u003d folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"        if (model.hasFolder(folderToAdd)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FOLDER);","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"        model.addFolder(folderToAdd);","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, folderToAdd));","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"        if (!(other instanceof CreateFolderCommand)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommand that \u003d (CreateFolderCommand) other;","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"        return Objects.equals(folderToAdd, that.folderToAdd);","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"itsyme":58}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"xlzior"},"content":"    public static final String COMMAND_WORD \u003d \"rm\";","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xlzior":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteFolderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":" * Deletes folder name specified by user.","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"public class DeleteFolderCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"    public static final String COMMAND_WORD \u003d \"rmdir\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"            + \": Deletes a folder in UNIon. \"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"            + \"FOLDER_NAME \\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"            + \"Example: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"            + \"CS2103\";","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Folder deleted: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    public static final String MESSAGE_NO_SUCH_FOLDER \u003d \"No such folder found in UNIon\";","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    private final Folder folderToRemove;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * Creates a DeleteFolderCommand to remove the specified {@code Folder}","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * @param folder","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"    public DeleteFolderCommand(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"        requireNonNull(folder);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        this.folderToRemove \u003d folder;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"        if (!model.hasFolder(folderToRemove)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"            throw new CommandException(MESSAGE_NO_SUCH_FOLDER);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        model.deleteFolder(folderToRemove);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, folderToRemove));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"        if (!(other instanceof DeleteFolderCommand)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand that \u003d (DeleteFolderCommand) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        return Objects.equals(folderToRemove, that.folderToRemove);","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"jiarong15":64}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"xlzior"},"content":"    public static final String COMMAND_WORD \u003d \"vim\";","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"xlzior":1,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/EditFolderNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":" * Edits the name of an existing folder in the address book.","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"public class EditFolderNameCommand extends Command {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    public static final String COMMAND_WORD \u003d \"mv\";","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"            + \": Renames the folder identified by the old \"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"            + \"folder name used in the displayed folders list.\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"            + \"Parameters: OLD_FOLDER_NAME (Name must be an existing folder)\"","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"            + \" + NEW_FOLDER_NAME (Name must not already exist in folder list)\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"            + \"Example: \" + COMMAND_WORD + \" OLD_FOLDER_NAME | \" + \"NEW_FOLDER_NAME\";","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"    public static final String MESSAGE_SUCCESS_EDIT_FOLDER_NAME \u003d \"Folder updated to: %1$s\";","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    public static final String MESSAGE_NO_SUCH_FOLDER \u003d \"No such folder found in UNIon to be renamed\";","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    public static final String MESSAGE_FOLDER_ALREADY_EXISTS \u003d \"Cannot rename folder to\"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"            + \" an already existing folder in UNIon\";","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    private final Folder oldFolder;","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    private final Folder newFolder;","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * Creates a EditFolderNameCommand to update","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * the specified {@code folderToRename} to the","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * {@code folderToReplace} name.","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * @param oldFolder folder name to be changed.","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     * @param newFolder new folder to replace old folder.","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"    public EditFolderNameCommand(Folder oldFolder, Folder newFolder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        requireAllNonNull(oldFolder, newFolder);","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"        this.oldFolder \u003d oldFolder;","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"        this.newFolder \u003d newFolder;","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        if (!model.hasFolder(oldFolder)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"            throw new CommandException(MESSAGE_NO_SUCH_FOLDER);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"        if (model.hasFolder(newFolder)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"            throw new CommandException(MESSAGE_FOLDER_ALREADY_EXISTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"        model.setNewFolder(oldFolder, newFolder);","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS_EDIT_FOLDER_NAME, newFolder));","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"            return true;","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"        if (!(other instanceof EditFolderNameCommand)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"            return false;","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"        // state check","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommand e \u003d (EditFolderNameCommand) other;","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"        return this.oldFolder.equals(e.oldFolder)","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"                \u0026\u0026 this.newFolder.equals(e.newFolder);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"jiarong15":76}},{"path":"src/main/java/seedu/address/logic/commands/FindFoldersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xlzior"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xlzior"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xlzior"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xlzior"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.folder.FolderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":" * Finds and lists all folders in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"xlzior"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xlzior"},"content":"public class FindFoldersCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xlzior"},"content":"    public static final String COMMAND_WORD \u003d \"find -folders\";","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all folders whose names contain any of \"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xlzior"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xlzior"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xlzior"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2103 group project\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xlzior"},"content":"    private final FolderNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xlzior"},"content":"    public FindFoldersCommand(FolderNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xlzior"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xlzior"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xlzior"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xlzior"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xlzior"},"content":"        model.updateFilteredFolderList(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xlzior"},"content":"        ObservableList\u003cFolder\u003e filteredFolders \u003d model.getFilteredFolderList();","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xlzior"},"content":"        assert filteredFolders !\u003d null : \"filteredFolders should not be null\";","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xlzior"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xlzior"},"content":"                String.format(Messages.MESSAGE_FOLDERS_LISTED_OVERVIEW, filteredFolders.size()));","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xlzior"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"xlzior"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xlzior"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"xlzior"},"content":"                || (other instanceof FindFoldersCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xlzior"},"content":"                \u0026\u0026 predicate.equals(((FindFoldersCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"xlzior"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xlzior":46}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":"    public static final String COMMAND_WORD \u003d \"ls\";","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xlzior":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ListFoldersCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FOLDERS;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":" * Lists all folders in the address book to the user.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"public class ListFoldersCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    public static final String COMMAND_WORD \u003d \"ls -folders\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all folders\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"        model.updateFilteredFolderList(PREDICATE_SHOW_ALL_FOLDERS);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"sebbycake":24}},{"path":"src/main/java/seedu/address/logic/parser/AddToFolderParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehmmann"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rehmmann"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"rehmmann"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rehmmann"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.commands.AddToFolderCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rehmmann"},"content":"public class AddToFolderParser implements Parser\u003cAddToFolderCommand\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rehmmann"},"content":"     * Parses the given {@code String} of arguments in the context of the AddToFolderCommand","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rehmmann"},"content":"     * and returns an AddToFolderCommand object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rehmmann"},"content":"     * @throws ParseException if the given {@code folderName} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rehmmann"},"content":"    public AddToFolderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rehmmann"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, new Prefix(\"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rehmmann"},"content":"        List\u003cString\u003e allValues \u003d argMultimap.getAllValues(new Prefix(\"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rehmmann"},"content":"        if (allValues.size() \u003c\u003d 3) {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"rehmmann"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddToFolderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rehmmann"},"content":"        Index index \u003d extractContactIndex(allValues);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rehmmann"},"content":"        FolderName folderName \u003d extractFolderName(allValues);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"rehmmann"},"content":"        return new AddToFolderCommand(index, folderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rehmmann"},"content":"     * Extracts the elements relevant to the folder name from {@code List} of inputs","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rehmmann"},"content":"     * and returns a folder name {@code FolderName}","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rehmmann"},"content":"     * @param allValues {@code List} of inputs","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rehmmann"},"content":"     * @return folder name {@code FolderName}","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rehmmann"},"content":"     * @throws ParseException if the given {@code List} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"rehmmann"},"content":"    private FolderName extractFolderName(List\u003cString\u003e allValues) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"rehmmann"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"rehmmann"},"content":"        if (!allValues.contains(\"\u003e\u003e\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"rehmmann"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddToFolderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"rehmmann"},"content":"        for (int i \u003d 1; i \u003c allValues.size(); i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"rehmmann"},"content":"            String curr \u003d allValues.get(i).trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"rehmmann"},"content":"            if (!curr.equals(\"\u003e\u003e\")) {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"rehmmann"},"content":"                stringBuilder.append(\" \").append(curr);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"rehmmann"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"rehmmann"},"content":"        return ParserUtil.parseFolderName(stringBuilder.toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"rehmmann"},"content":"     * Extracts the elements relevant to the index from {@code List} of inputs","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"rehmmann"},"content":"     * and returns an Index {@code Index}","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"rehmmann"},"content":"     * @param allValues {@code List} of inputs","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"rehmmann"},"content":"     * @return Index index {@code Index}","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"rehmmann"},"content":"     * @throws ParseException if the given {@code List} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"rehmmann"},"content":"    private Index extractContactIndex(List\u003cString\u003e allValues) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"rehmmann"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"rehmmann"},"content":"        for (int i \u003d 1; i \u003c allValues.size(); i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"rehmmann"},"content":"            try {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"rehmmann"},"content":"                int intValue \u003d Integer.parseInt(allValues.get(i));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"rehmmann"},"content":"                stringBuilder.append(allValues.get(i));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"rehmmann"},"content":"                allValues.remove(i);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"rehmmann"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"rehmmann"},"content":"                continue;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"rehmmann"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"rehmmann"},"content":"        return ParserUtil.parseIndex(stringBuilder.toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"rehmmann"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rehmmann":71}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.commands.AddToFolderCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.commands.CreateFolderCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.DeleteFolderCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.EditFolderNameCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"xlzior"},"content":"import seedu.address.logic.commands.FindFoldersCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.commands.ListFoldersCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"            .compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"xlzior"},"content":"        // using if-else and String.startsWith() instead of switch-case","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"xlzior"},"content":"        // allows for the flexibility of having commands with multiple words, e.g. rm -contacts","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"xlzior"},"content":"        if (userInput.startsWith(AddCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"        } else if (userInput.startsWith(EditFolderNameCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"            return new EditFolderNameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"        } else if (userInput.startsWith(DeleteFolderCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"            return new DeleteFolderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(EditCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(ClearCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(DeleteCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"xlzior"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(FindFoldersCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"xlzior"},"content":"            return new FindFoldersCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(FindCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"sebbycake"},"content":"        } else if (userInput.startsWith(ListFoldersCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"sebbycake"},"content":"            return new ListFoldersCommand();","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(ListCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(ExitCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(HelpCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"xlzior"},"content":"        } else if (userInput.startsWith(CreateFolderCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"            return new CreateFolderCommandParser().parse(arguments);","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"rehmmann"},"content":"        } else if (userInput.startsWith(AddToFolderCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"rehmmann"},"content":"            return new AddToFolderParser().parse(arguments);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"xlzior"},"content":"        } else {","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xlzior":16,"sebbycake":2,"rehmmann":5,"jiarong15":8,"itsyme":1,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-p\");","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-e\");","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a\");","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-t\");","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"xlzior":5,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/CreateFolderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import seedu.address.logic.commands.CreateFolderCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"public class CreateFolderCommandParser implements Parser\u003cCreateFolderCommand\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"     * Parses the given {@code String} of arguments in the context of the CreateFolderCommand","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"     * and returns an CreateFolderCommand object for execution.","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"     * @throws ParseException if the given {@code folderName} is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    public CreateFolderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, new Prefix(\"\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        List\u003cString\u003e allValues \u003d argMultimap.getAllValues(new Prefix(\"\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"        if (allValues.size() \u003c\u003d 1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateFolderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"        FolderName folderName \u003d extractFolderName(allValues);","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"        return new CreateFolderCommand(new Folder(folderName));","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"     * Extracts the elements relevant to the folder name from {@code List} of inputs","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"     * and returns a folder name {@code String}","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"     * @param allValues {@code List} of inputs","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"     * @return folder name {@code String}","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"     * @throws ParseException if the given {@code folderName} is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    private FolderName extractFolderName(List\u003cString\u003e allValues) throws ParseException {","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"        for (int i \u003d 1; i \u003c allValues.size(); i++) {","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"            if (i \u003e 1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"                stringBuilder.append(\" \").append(allValues.get(i));","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"                continue;","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"            stringBuilder.append(allValues.get(i));","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"        return ParserUtil.parseFolderName(stringBuilder.toString());","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"itsyme":48}},{"path":"src/main/java/seedu/address/logic/parser/DeleteFolderCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.DeleteFolderCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"public class DeleteFolderCommandParser implements Parser\u003cDeleteFolderCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteFolderCommand","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"     * and returns an DeleteFolderCommand object for execution.","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"     * @throws ParseException if the given {@code folderName} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    public DeleteFolderCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, new Prefix(\"\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"        List\u003cString\u003e allValues \u003d argMultimap.getAllValues(new Prefix(\"\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"        if (allValues.size() \u003c\u003d 1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteFolderCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"        FolderName folderName \u003d extractFolderName(allValues);","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"        return new DeleteFolderCommand(new Folder(folderName));","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"     * Extracts the elements relevant to the folder name from {@code List} of inputs","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"     * and returns a folder name {@code String}","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"     * @param allValues {@code List} of inputs","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"     * @return folder name {@code String}","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"     * @throws ParseException if the given {@code folderName} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"    private FolderName extractFolderName(List\u003cString\u003e allValues) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 1; i \u003c allValues.size(); i++) {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"            if (i \u003e 1) {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"                stringBuilder.append(\" \").append(allValues.get(i));","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"                continue;","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"            stringBuilder.append(allValues.get(i));","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"        return ParserUtil.parseFolderName(stringBuilder.toString());","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"jiarong15":49}},{"path":"src/main/java/seedu/address/logic/parser/EditFolderNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.EditFolderNameCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"public class EditFolderNameCommandParser implements Parser\u003cEditFolderNameCommand\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"    private static final String EDIT_COMMAND_SEPARATOR \u003d \"|\";","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    public static final String REGEX_FOR_MULTIPLE_FOLDER_SPLIT \u003d \"\\\\\"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"            + EDIT_COMMAND_SEPARATOR;","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"     * Parses the given {@code String} of arguments in the","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"     * context of the EditFolderNameCommand","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"     * and returns an EditFolderNameCommand object for execution.","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"     * @throws ParseException if the given {@code folderName} is invalid.","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    public EditFolderNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, new Prefix(\"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"        List\u003cString\u003e allValues \u003d argMultimap.getAllValues(new Prefix(\"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"        if (allValues.size() \u003c\u003d 1) {","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"                    EditFolderNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"        FolderName[] folderNames \u003d extractFolderNames(allValues);","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"        assert folderNames.length \u003d\u003d 2 : \"Should have exactly 2 folders only!\";","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"        return new EditFolderNameCommand(new Folder(folderNames[0]), new Folder(folderNames[1]));","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"     * Extracts the elements relevant to the","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"     * folder names from {@code List} of inputs","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"     * and returns 2 folder names {@code FolderName[]}","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"     * @param allValues {@code List} of inputs","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"     * @return folder names {@code FolderName[]}","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"     * @throws ParseException if the given {@code folderNames} are invalid.","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    private FolderName[] extractFolderNames(List\u003cString\u003e allValues) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        String folderStringNames \u003d buildFolderStringNames(allValues);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        FolderName[] allFolderNames \u003d extractIndividualFolders(folderStringNames);","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"        return allFolderNames;","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"     * Segments the joined string of folder name into","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"     * individual {@code FolderName[]} objects.","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"     * @param folderStringNames {@code String} Inputs of multiple","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"     * folder names joined together.","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"     * @return An array of folder names {@code FolderName[]}","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"     * @throws ParseException if the 2 given {@code folderNames} are","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"     * of an invalid format.","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"    private FolderName[] extractIndividualFolders(String folderStringNames) throws ParseException {","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"        int foldersLength \u003d folderStringNames.length();","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        String[] folders \u003d folderStringNames.split(REGEX_FOR_MULTIPLE_FOLDER_SPLIT);","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"        boolean startsWithInvalidInput \u003d folderStringNames.startsWith(EDIT_COMMAND_SEPARATOR);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"        boolean endsWithInvalidInput \u003d folderStringNames.startsWith(EDIT_COMMAND_SEPARATOR,","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"                foldersLength - 1);","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"        boolean isInvalidInputLength \u003d folders.length !\u003d 2;","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"        if (startsWithInvalidInput || endsWithInvalidInput || isInvalidInputLength) {","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"                    EditFolderNameCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"        FolderName[] allFolderNames \u003d new FolderName[2];","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"        for (int k \u003d 0; k \u003c folders.length; k++) {","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"            FolderName currentFolder \u003d ParserUtil.parseFolderName(folders[k]);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"            allFolderNames[k] \u003d currentFolder;","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"        return allFolderNames;","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"     * Concatenates the multiple folder names into a single string.","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"     * @param allValues {@code List} of inputs","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"     * @return concatenated folder names {@code String}","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"    private String buildFolderStringNames(List\u003cString\u003e allValues) {","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"        for (int i \u003d 1; i \u003c allValues.size(); i++) {","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"            if (i \u003e 1) {","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"                stringBuilder.append(\" \").append(allValues.get(i));","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"                continue;","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"            }","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"            stringBuilder.append(allValues.get(i));","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"jiarong15":100}},{"path":"src/main/java/seedu/address/logic/parser/FindFoldersCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xlzior"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xlzior"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xlzior"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xlzior"},"content":"import seedu.address.logic.commands.FindFoldersCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.folder.FolderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":" * Parses input arguments and creates a new FindFoldersCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"xlzior"},"content":"public class FindFoldersCommandParser implements Parser\u003cFindFoldersCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xlzior"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xlzior"},"content":"     * Parses the given {@code String} of arguments in the context of the FindFoldersCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xlzior"},"content":"     * and returns a FindFoldersCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xlzior"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xlzior"},"content":"    public FindFoldersCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xlzior"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xlzior"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xlzior"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xlzior"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFoldersCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xlzior"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xlzior"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xlzior"},"content":"        return new FindFoldersCommand(new FolderNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xlzior"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xlzior":33}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"     * Parses a {@code String name} into a {@code FolderName}.","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"     * @throws ParseException if the given {@code folderName} is invalid.","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"    public static FolderName parseFolderName(String folderName) throws ParseException {","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"        requireNonNull(folderName);","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"        String trimmedName \u003d folderName.trim();","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"        if (!FolderName.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"            throw new ParseException(FolderName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"itsyme"},"content":"        return new FolderName(trimmedName);","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"itsyme":16,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"xlzior"},"content":" * E.g. \u0027-t\u0027 in \u0027add James -t friend\u0027.","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"        return getPrefix() + \" \";","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"xlzior":2,"-":37}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"rehmmann"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.UniqueFolderList;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":" * Duplicates are not allowed (by .isSamePerson and .isSameFolder comparison)","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    private final UniqueFolderList folders;","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"        folders \u003d new UniqueFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"     * Creates an AddressBook using the Persons and Folders in the {@code toBeCopied}","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"    //// static operations","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"     * Returns a new address book with empty folders with the copied names from model","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"     * @param model model to copy folder names from","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"     * @return address book with copied folders","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"    public static AddressBook withFolders(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"        ObservableList\u003cFolder\u003e folders \u003d addressBook.getFolderList();","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"        AddressBook newAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"        for (Folder folder : folders) {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"            newAddressBook.addFolder(new Folder(folder.getFolderName()));","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"        return newAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"itsyme"},"content":"     * Replaces the contents of the folder list with {@code folders}.","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"itsyme"},"content":"     * {@code folders} must not contain duplicate folders.","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"itsyme"},"content":"    public void setFolders(List\u003cFolder\u003e folders) {","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"        this.folders.setFolders(folders);","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"itsyme"},"content":"        setFolders(newData.getFolderList());","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"itsyme"},"content":"    //// folder-level operations","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"itsyme"},"content":"     * Returns true if a folder with the same identity as {@code folder} exists in the address book.","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"itsyme"},"content":"    public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"itsyme"},"content":"        requireNonNull(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"itsyme"},"content":"        return folders.contains(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"     * Replaces the given folder {@code oldFolder} in the list with {@code newFolder}.","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"jiarong15"},"content":"     * {@code oldFolder} must exist in the address book.","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"jiarong15"},"content":"     * The folder identity of {@code newFolder} must not be the same as","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"jiarong15"},"content":"     * another existing folder in the address book.","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"jiarong15"},"content":"    public void setNewFolder(Folder oldFolder, Folder newFolder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"jiarong15"},"content":"        requireNonNull(newFolder);","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"jiarong15"},"content":"        folders.setFolder(oldFolder, newFolder);","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"rehmmann"},"content":"     * Checks and returns true if folder already exists","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"rehmmann"},"content":"    public boolean hasFolderName(FolderName folderName) {","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"rehmmann"},"content":"        requireNonNull(folderName);","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"rehmmann"},"content":"        return folders.containsFolderName(folderName);","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"rehmmann"},"content":"     * Checks and returns true if person has already been added to folder","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"rehmmann"},"content":"    public boolean folderContainsPerson(Person target, FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"rehmmann"},"content":"        requireAllNonNull(target, name);","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"rehmmann"},"content":"        return folders.folderContainsPerson(target, name);","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"itsyme"},"content":"     * Adds a folder to the address book.","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"itsyme"},"content":"     * The folder must not already exist in the address book.","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"itsyme"},"content":"    public void addFolder(Folder f) {","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"itsyme"},"content":"        folders.add(f);","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"rehmmann"},"content":"     * Adds a Contact to the Folder.","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"rehmmann"},"content":"     * The contact must not already exist in the Folder.","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"rehmmann"},"content":"    public void addContactToFolder(Person target, FolderName folderName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"rehmmann"},"content":"        requireAllNonNull(target, folderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"rehmmann"},"content":"        folders.addContact(target, folderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"jiarong15"},"content":"     * Deletes a folder in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"jiarong15"},"content":"     * The folder must already exist in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"jiarong15"},"content":"    public void deleteFolder(Folder f) {","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"jiarong15"},"content":"        folders.remove(f);","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":205,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"itsyme"},"content":"    public ObservableList\u003cFolder\u003e getFolderList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":207,"author":{"gitId":"itsyme"},"content":"        return folders.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-02"},{"lineNumber":208,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":209,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"rehmmann":27,"jiarong15":20,"itsyme":57,"-":117}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"    Predicate\u003cFolder\u003e PREDICATE_SHOW_ALL_FOLDERS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"itsyme"},"content":"    /** Returns an unmodifiable view of the filtered folder list */","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"itsyme"},"content":"    ObservableList\u003cFolder\u003e getFilteredFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"itsyme"},"content":"     * Updates the filter of the filtered folder list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"itsyme"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"itsyme"},"content":"    void updateFilteredFolderList(Predicate\u003cFolder\u003e predicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"itsyme"},"content":"     * Adds the given folder.","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"itsyme"},"content":"     * {@code folder} must not already exist in the address book.","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"    void addFolder(Folder folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"     * Replaces {@code oldFolder} with {@code newFolder}.","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"     * {@code oldFolder} must exist in the address book and","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"     * {@code newFolder} must not already exist.","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"    void setNewFolder(Folder oldFolder, Folder newFolder);","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"rehmmann"},"content":"     * Adds a Contact to the Folder.","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"rehmmann"},"content":"     * The contact must not already exist in the Folder.","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"rehmmann"},"content":"    public void addContactToFolder(Person target, FolderName name);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"rehmmann"},"content":"     * Checks and returns true if folder already exists","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"rehmmann"},"content":"    boolean hasFolderName(FolderName name);","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"rehmmann"},"content":"     * Checks and returns true if person has already been added to folder","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"rehmmann"},"content":"    boolean folderContainsPerson(Person target, FolderName name);","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"itsyme"},"content":"     * Returns true if a folder with the same identity as {@code folder} exists in the address book.","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"itsyme"},"content":"    boolean hasFolder(Folder folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"jiarong15"},"content":"     * Deletes the specified folder.","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"jiarong15"},"content":"     * {@code folder} must already exist in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"    void deleteFolder(Folder folder);","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"rehmmann":17,"jiarong15":13,"itsyme":22,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    private final FilteredList\u003cFolder\u003e filteredFolders;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"        filteredFolders \u003d new FilteredList\u003c\u003e(this.addressBook.getFolderList());","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"itsyme"},"content":"    public void addFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"itsyme"},"content":"        addressBook.addFolder(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"itsyme"},"content":"        updateFilteredFolderList(PREDICATE_SHOW_ALL_FOLDERS);","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"rehmmann"},"content":"     * Deletes a folder","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"rehmmann"},"content":"    public void deleteFolder(Folder folder) {","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"rehmmann"},"content":"        addressBook.deleteFolder(folder);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"rehmmann"},"content":"        updateFilteredFolderList(PREDICATE_SHOW_ALL_FOLDERS);","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"jiarong15"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"jiarong15"},"content":"    public void setNewFolder(Folder oldFolder, Folder newFolder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"jiarong15"},"content":"        requireAllNonNull(oldFolder, newFolder);","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"jiarong15"},"content":"        addressBook.setNewFolder(oldFolder, newFolder);","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"        updateFilteredFolderList(PREDICATE_SHOW_ALL_FOLDERS);","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"itsyme"},"content":"    public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"itsyme"},"content":"        requireNonNull(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"itsyme"},"content":"        return addressBook.hasFolder(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"rehmmann"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"rehmmann"},"content":"    public boolean hasFolderName(FolderName folderName) {","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"rehmmann"},"content":"        requireNonNull(folderName);","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"rehmmann"},"content":"        return addressBook.hasFolderName(folderName);","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"rehmmann"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"rehmmann"},"content":"    public boolean folderContainsPerson(Person target, FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"rehmmann"},"content":"        requireAllNonNull(target, name);","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"rehmmann"},"content":"        return addressBook.folderContainsPerson(target, name);","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"rehmmann"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"rehmmann"},"content":"    public void addContactToFolder(Person target, FolderName folderName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"rehmmann"},"content":"        requireAllNonNull(target, folderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"rehmmann"},"content":"        addressBook.addContactToFolder(target, folderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"sebbycake"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Folder List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":184,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":185,"author":{"gitId":"itsyme"},"content":"     * Returns an unmodifiable view of the list of {@code Folder} backed by the internal list of","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"itsyme"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":188,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"itsyme"},"content":"    public ObservableList\u003cFolder\u003e getFilteredFolderList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"itsyme"},"content":"        return filteredFolders;","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":193,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":194,"author":{"gitId":"itsyme"},"content":"    public void updateFilteredFolderList(Predicate\u003cFolder\u003e predicate) {","lastModifiedDate":"2021-10-02"},{"lineNumber":195,"author":{"gitId":"itsyme"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":196,"author":{"gitId":"itsyme"},"content":"        filteredFolders.setPredicate(predicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":197,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":215,"author":{"gitId":"itsyme"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-02"},{"lineNumber":216,"author":{"gitId":"itsyme"},"content":"                \u0026\u0026 filteredFolders.equals(other.filteredFolders);","lastModifiedDate":"2021-10-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"sebbycake":1,"rehmmann":27,"jiarong15":8,"itsyme":33,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"     * Returns an unmodifiable view of the folders list.","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"     * This list will not contain any duplicate folders.","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    ObservableList\u003cFolder\u003e getFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"itsyme":6,"-":17}},{"path":"src/main/java/seedu/address/model/folder/Folder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.model.folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":" * Represents a Folder in UNIon.","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"public class Folder {","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"    // Identity fields","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    private final FolderName folderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"    // Data fields","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    private final Set\u003cPerson\u003e contacts;","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    public Folder(FolderName folderName, Set\u003cPerson\u003e contacts) {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        requireAllNonNull(folderName, contacts);","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        this.contacts \u003d contacts;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    public Folder(FolderName folderName) {","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        requireAllNonNull(folderName);","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"        this.folderName \u003d folderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"        this.contacts \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"    public FolderName getFolderName() {","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"        return this.folderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"    public Set\u003cPerson\u003e getContacts() {","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"        return this.contacts;","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"rehmmann"},"content":"     * Checks if folder contains a specific person","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"rehmmann"},"content":"     * @param target","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"rehmmann"},"content":"     * @return true if person exists in folder","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"rehmmann"},"content":"    public boolean hasContact(Person target) {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"rehmmann"},"content":"        for (Person contact : contacts) {","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"rehmmann"},"content":"            if (contact.equals(target)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"rehmmann"},"content":"                return true;","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"rehmmann"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"rehmmann"},"content":"        return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"rehmmann"},"content":"    public void addContacts(Person contact) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"rehmmann"},"content":"        this.contacts.add(contact);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"    public void setAll(Folder oldFolder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"        this.contacts.addAll(oldFolder.contacts);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"itsyme"},"content":"     * Returns true if both folders have the same name.","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"     * This defines a weaker notion of equality between two folders.","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"itsyme"},"content":"    public boolean isSameFolder(Folder otherFolder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"itsyme"},"content":"        if (otherFolder \u003d\u003d this) {","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"itsyme"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"itsyme"},"content":"        return otherFolder !\u003d null","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"itsyme"},"content":"                \u0026\u0026 otherFolder.getFolderName().equals(getFolderName());","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"itsyme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"itsyme"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"itsyme"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"itsyme"},"content":"        if (!(other instanceof Folder)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"itsyme"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"itsyme"},"content":"        Folder folder \u003d (Folder) other;","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"sebbycake"},"content":"        return Objects.equals(folderName, folder.folderName);","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"itsyme"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"itsyme"},"content":"        return Objects.hash(folderName, contacts);","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"itsyme"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"itsyme"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"itsyme"},"content":"        builder.append(getFolderName());","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"itsyme"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"sebbycake":2,"rehmmann":18,"jiarong15":4,"itsyme":88}},{"path":"src/main/java/seedu/address/model/folder/FolderName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.model.folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":" * Represents a Folder\u0027s name in the address book.","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"public class FolderName {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    /*","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"    public final String folderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"     * Constructs a {@code FolderName}.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"     * @param name A valid folder name.","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"    public FolderName(String name) {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        folderName \u003d name;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        return folderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"                || (other instanceof FolderName // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"                \u0026\u0026 folderName.equals(((FolderName) other).folderName)); // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"        return folderName.hashCode();","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"itsyme":59}},{"path":"src/main/java/seedu/address/model/folder/FolderNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xlzior"},"content":"package seedu.address.model.folder;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xlzior"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xlzior"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xlzior"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":" * Tests that a {@code Folder}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"public class FolderNameContainsKeywordsPredicate implements Predicate\u003cFolder\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"xlzior"},"content":"    public FolderNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xlzior"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xlzior"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"    public boolean test(Folder folder) {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xlzior"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xlzior"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsTextIgnoreCase(folder.getFolderName().folderName, keyword));","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xlzior"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xlzior"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xlzior"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xlzior"},"content":"                || (other instanceof FolderNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xlzior"},"content":"                \u0026\u0026 keywords.equals(((FolderNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xlzior"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xlzior":31}},{"path":"src/main/java/seedu/address/model/folder/UniqueFolderList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.model.folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"rehmmann"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.exceptions.DuplicateFolderException;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.exceptions.DuplicatePersonInFolderException;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.exceptions.FolderNotFoundException;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":" * A list of folders that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":" * A Folder is considered unique by comparing using {@code Folder#isSameFolder(Folder)}. As such, adding and updating of","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":" * folders uses Folder#isSameFolder(Folder) for equality so as to ensure that the folder being added or updated is","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":" * unique in terms of identity in the UniqueFolderList. However, the removal of a folder uses Folder#equals(Object) so","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":" * as to ensure that the folder with exactly the same fields will be removed.","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":" *","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":" *","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":" * @see Folder#isSameFolder(Folder)","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"public class UniqueFolderList implements Iterable\u003cFolder\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"    private final ObservableList\u003cFolder\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"    private final ObservableList\u003cFolder\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"     * Returns true if the list contains an equivalent folder as the given argument.","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    public boolean contains(Folder toCheck) {","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"        return internalList.stream().anyMatch(toCheck::isSameFolder);","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"rehmmann"},"content":"     * Returns true if the list contains a folder with the same folder name.","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"rehmmann"},"content":"    public boolean containsFolderName(FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"rehmmann"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"rehmmann"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"rehmmann"},"content":"            Folder folder \u003d internalList.get(i);","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"rehmmann"},"content":"            if (folder.getFolderName().equals(name)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"rehmmann"},"content":"                return true;","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"rehmmann"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"rehmmann"},"content":"        return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"rehmmann"},"content":"     * Checks and returns true if person has already been added to folder","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"rehmmann"},"content":"    public boolean folderContainsPerson(Person person, FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"rehmmann"},"content":"        requireAllNonNull(person, name);","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"rehmmann"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"rehmmann"},"content":"            Folder folder \u003d internalList.get(i);","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"rehmmann"},"content":"            if (folder.getFolderName().equals(name) \u0026\u0026 folder.hasContact(person)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"rehmmann"},"content":"                return true;","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"rehmmann"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"rehmmann"},"content":"        return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"itsyme"},"content":"     * Adds a folder to the list.","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"itsyme"},"content":"     * The folder must not already exist in the list.","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"itsyme"},"content":"    public void add(Folder toAdd) {","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"itsyme"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"itsyme"},"content":"            throw new DuplicateFolderException();","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"itsyme"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"rehmmann"},"content":"     * Adds a contact to the folder.","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"rehmmann"},"content":"     * The contact must not already exist in the folder.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"rehmmann"},"content":"    public void addContact(Person contact, FolderName name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"rehmmann"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"rehmmann"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"rehmmann"},"content":"            Folder folder \u003d internalList.get(i);","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"rehmmann"},"content":"            if (folderContainsPerson(contact, name)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"rehmmann"},"content":"                throw new DuplicatePersonInFolderException();","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"rehmmann"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"rehmmann"},"content":"            if (folder.getFolderName().equals(name)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"rehmmann"},"content":"                Set\u003cPerson\u003e newContactList \u003d folder.getContacts();","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"rehmmann"},"content":"                newContactList.add(contact);","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"rehmmann"},"content":"                Folder newFolder \u003d new Folder(name, newContactList);","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"rehmmann"},"content":"                setFolder(folder, newFolder);","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"rehmmann"},"content":"                return;","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"rehmmann"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"     * Replaces the folder {@code target} in the list with {@code editedFolder}.","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"     * The folder identity of {@code editedFolder} must not be","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"     * the same as another existing folder in the list.","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"itsyme"},"content":"    public void setFolder(Folder target, Folder editedFolder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"itsyme"},"content":"        requireAllNonNull(target, editedFolder);","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"itsyme"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"itsyme"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"itsyme"},"content":"            throw new FolderNotFoundException();","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"itsyme"},"content":"        if (!target.isSameFolder(editedFolder) \u0026\u0026 contains(editedFolder)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"itsyme"},"content":"            throw new DuplicateFolderException();","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"jiarong15"},"content":"        editedFolder.setAll(target);","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"itsyme"},"content":"        internalList.set(index, editedFolder);","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"itsyme"},"content":"     * Removes the equivalent folder from the list.","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"itsyme"},"content":"     * The folder must exist in the list.","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"itsyme"},"content":"    public void remove(Folder toRemove) {","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"itsyme"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"itsyme"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"itsyme"},"content":"            throw new FolderNotFoundException();","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"itsyme"},"content":"    public void setFolders(UniqueFolderList replacement) {","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"itsyme"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"itsyme"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"itsyme"},"content":"     * Replaces the contents of this list with {@code folders}.","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"itsyme"},"content":"     * {@code folders} must not contain duplicate folders.","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"itsyme"},"content":"    public void setFolders(List\u003cFolder\u003e listFolders) {","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"itsyme"},"content":"        requireAllNonNull(listFolders);","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"itsyme"},"content":"        if (!foldersAreUnique(listFolders)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"itsyme"},"content":"            throw new DuplicateFolderException();","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"itsyme"},"content":"        internalList.setAll(listFolders);","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"itsyme"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"itsyme"},"content":"    public ObservableList\u003cFolder\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"itsyme"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"itsyme"},"content":"    public Iterator\u003cFolder\u003e iterator() {","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"itsyme"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"itsyme"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"itsyme"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"itsyme"},"content":"                || (other instanceof UniqueFolderList // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"itsyme"},"content":"                        \u0026\u0026 internalList.equals(((UniqueFolderList) other).internalList));","lastModifiedDate":"2021-10-02"},{"lineNumber":172,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":174,"author":{"gitId":"itsyme"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"itsyme"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"itsyme"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":178,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":180,"author":{"gitId":"itsyme"},"content":"     * Returns true if {@code folders} contains only unique folders.","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":182,"author":{"gitId":"itsyme"},"content":"    private boolean foldersAreUnique(List\u003cFolder\u003e listFolders) {","lastModifiedDate":"2021-10-02"},{"lineNumber":183,"author":{"gitId":"itsyme"},"content":"        for (int i \u003d 0; i \u003c listFolders.size() - 1; i++) {","lastModifiedDate":"2021-10-02"},{"lineNumber":184,"author":{"gitId":"itsyme"},"content":"            for (int j \u003d i + 1; j \u003c listFolders.size(); j++) {","lastModifiedDate":"2021-10-02"},{"lineNumber":185,"author":{"gitId":"itsyme"},"content":"                if (listFolders.get(i).isSameFolder(listFolders.get(j))) {","lastModifiedDate":"2021-10-02"},{"lineNumber":186,"author":{"gitId":"itsyme"},"content":"                    return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":187,"author":{"gitId":"itsyme"},"content":"                }","lastModifiedDate":"2021-10-02"},{"lineNumber":188,"author":{"gitId":"itsyme"},"content":"            }","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"itsyme"},"content":"        return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"rehmmann":55,"jiarong15":3,"itsyme":136}},{"path":"src/main/java/seedu/address/model/folder/exceptions/DuplicateFolderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.model.folder.exceptions;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":" * identity).","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"public class DuplicateFolderException extends RuntimeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"    public DuplicateFolderException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"        super(\"Operation would result in duplicate folders\");","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"itsyme":11}},{"path":"src/main/java/seedu/address/model/folder/exceptions/DuplicatePersonInFolderException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rehmmann"},"content":"package seedu.address.model.folder.exceptions;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"rehmmann"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"rehmmann"},"content":" * Signals that the contact already exists in folder (Persons are considered duplicates if they have the same","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"rehmmann"},"content":" * identity).","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"rehmmann"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"rehmmann"},"content":"public class DuplicatePersonInFolderException extends RuntimeException {","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"rehmmann"},"content":"    public DuplicatePersonInFolderException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"rehmmann"},"content":"        super(\"Folder already contains contact\");","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"rehmmann"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"rehmmann":11}},{"path":"src/main/java/seedu/address/model/folder/exceptions/FolderNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.model.folder.exceptions;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":" * Signals that the operation is unable to find the specified folder.","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"public class FolderNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"    public FolderNotFoundException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"        super(\"Folder not found. Please try again.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"sebbycake":3,"itsyme":7}},{"path":"src/main/java/seedu/address/ui/FolderCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":" * An UI component that displays information of a {@code Folder}.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"public class FolderCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"    private static final String FXML \u003d \"FolderListCard.fxml\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    public final Folder folder;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"    private Label folderName;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    private Label id;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"    private FlowPane contacts;","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"     * Creates a {@code FolderCode} with the given {@code Folder} and index to display.","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"    public FolderCard(Folder folder, int displayedIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"        super(FXML);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"        this.folder \u003d folder;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"        folderName.setText(folder.getFolderName().toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"        folder.getContacts()","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"                .forEach(person -\u003e contacts.getChildren().add(new Label(person.getName().toString())));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"        if (!(other instanceof FolderCard)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"        // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"sebbycake"},"content":"        FolderCard card \u003d (FolderCard) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"sebbycake"},"content":"                \u0026\u0026 folder.equals(card.folder);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"sebbycake":65}},{"path":"src/main/java/seedu/address/ui/FolderListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":" * Panel containing the list of folders.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"public class FolderListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    private static final String FXML \u003d \"FolderListPanel.fxml\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FolderListPanel.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    private ListView\u003cFolder\u003e folderListView;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"     * Creates a {@code FolderListPanel}","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"     * with the given {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    public FolderListPanel(ObservableList\u003cFolder\u003e folderList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"        super(FXML);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"        folderListView.setItems(folderList);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        folderListView.setCellFactory(listView -\u003e new FolderListViewCell());","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"sebbycake"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Folder} using a {@code FolderCard}.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"sebbycake"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"sebbycake"},"content":"    class FolderListViewCell extends ListCell\u003cFolder\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"sebbycake"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"sebbycake"},"content":"        protected void updateItem(Folder folder, boolean empty) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"sebbycake"},"content":"            super.updateItem(folder, empty);","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"sebbycake"},"content":"            if (empty || folder \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"sebbycake"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"sebbycake"},"content":"                setText(null);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"sebbycake"},"content":"            } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"sebbycake"},"content":"                setGraphic(new FolderCard(folder, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"sebbycake"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"sebbycake":51}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"            \"https://github.com/AY2122S1-CS2103-T16-1/tp/blob/master/docs/UserGuide.md\";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"jiarong15":2,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"sebbycake"},"content":"    private FolderListPanel folderListPanel;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"sebbycake"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"sebbycake"},"content":"    private StackPane folderListPanelPlaceholder;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"sebbycake"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"sebbycake"},"content":"        folderListPanel \u003d new FolderListPanel(logic.getFilteredFolderList());","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"sebbycake"},"content":"        folderListPanelPlaceholder.getChildren().add(folderListPanel.getRoot());","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sebbycake":8,"-":196}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/UNIon_logo.png\";","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"sebbycake":1,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":354,"author":{"gitId":"sebbycake"},"content":"#contacts {","lastModifiedDate":"2021-10-18"},{"lineNumber":355,"author":{"gitId":"sebbycake"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-18"},{"lineNumber":356,"author":{"gitId":"sebbycake"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-18"},{"lineNumber":357,"author":{"gitId":"sebbycake"},"content":"    -fx-padding: 6 0 0 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":358,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":359,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":360,"author":{"gitId":"sebbycake"},"content":"#contacts .label {","lastModifiedDate":"2021-10-18"},{"lineNumber":361,"author":{"gitId":"sebbycake"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":362,"author":{"gitId":"sebbycake"},"content":"    -fx-background-color: #17b978;","lastModifiedDate":"2021-10-18"},{"lineNumber":363,"author":{"gitId":"sebbycake"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-18"},{"lineNumber":364,"author":{"gitId":"sebbycake"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":365,"author":{"gitId":"sebbycake"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-18"},{"lineNumber":366,"author":{"gitId":"sebbycake"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2021-10-18"},{"lineNumber":367,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"sebbycake":15,"-":352}},{"path":"src/main/resources/view/FolderListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"70\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"                \u003cLabel fx:id\u003d\"folderName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"            \u003cFlowPane fx:id\u003d\"contacts\"/\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"sebbycake"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"sebbycake":33}},{"path":"src/main/resources/view/FolderListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"    \u003cListView fx:id\u003d\"folderListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"sebbycake":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"         title\u003d\"UNIon - Manage your wide range of college contacts easily\" minWidth\u003d\"450\" minHeight\u003d\"600\"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"         onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"        \u003cImage url\u003d\"@/images/UNIon_logo.png\"/\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"sebbycake"},"content":"                \u003cVBox fx:id\u003d\"folderList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"sebbycake"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"sebbycake"},"content":"                    \u003cLabel styleClass\u003d\"label-bright\"\u003eFolders\u003c/Label\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"sebbycake"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"sebbycake"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"sebbycake"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"sebbycake"},"content":"                    \u003cStackPane fx:id\u003d\"folderListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"sebbycake"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"sebbycake"},"content":"                \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"sebbycake"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"sebbycake"},"content":"                    \u003cLabel styleClass\u003d\"label-bright\"\u003eContacts\u003c/Label\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":70,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"sebbycake":17,"-":58}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"xlzior"},"content":"        // Matches a full word only","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"xlzior"},"content":"    //---------------- Tests for containsTextIgnoreCase --------------------------------------","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"xlzior"},"content":"    /*","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"xlzior"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"xlzior"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"xlzior"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"xlzior"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"xlzior"},"content":"    public void containsTextIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"xlzior"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsTextIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"xlzior"},"content":"    public void containsTextIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"xlzior"},"content":"        assertThrows(IllegalArgumentException.class, \"Text parameter cannot be empty\", ()","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"xlzior"},"content":"            -\u003e StringUtil.containsTextIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"xlzior"},"content":"    public void containsTextIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"xlzior"},"content":"        assertThrows(IllegalArgumentException.class, \"Text parameter should be a single word\", ()","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"xlzior"},"content":"            -\u003e StringUtil.containsTextIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"xlzior"},"content":"    public void containsTextIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"xlzior"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsTextIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"xlzior"},"content":"    /*","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"xlzior"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"xlzior"},"content":"     *   - any word","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"xlzior"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"xlzior"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"xlzior"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"xlzior"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"xlzior"},"content":"     *   - empty string","lastModifiedDate":"2021-10-18"},{"lineNumber":164,"author":{"gitId":"xlzior"},"content":"     *   - one word","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"xlzior"},"content":"     *   - multiple words","lastModifiedDate":"2021-10-18"},{"lineNumber":166,"author":{"gitId":"xlzior"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"xlzior"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"xlzior"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"xlzior"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"xlzior"},"content":"     *   - last word in sentence","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"xlzior"},"content":"     *   - middle word in sentence","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"xlzior"},"content":"     *   - matches multiple words","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"xlzior"},"content":"     *   - matches a partial word in sentence","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"xlzior"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"xlzior"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"xlzior"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2021-10-18"},{"lineNumber":177,"author":{"gitId":"xlzior"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2021-10-18"},{"lineNumber":178,"author":{"gitId":"xlzior"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"xlzior"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"xlzior"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":183,"author":{"gitId":"xlzior"},"content":"    public void containsTextIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2021-10-18"},{"lineNumber":184,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"xlzior"},"content":"        // Empty sentence","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"xlzior"},"content":"        assertFalse(StringUtil.containsTextIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"xlzior"},"content":"        assertFalse(StringUtil.containsTextIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"xlzior"},"content":"        // Matches a partial word, different upper/lower case letters","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"xlzior"},"content":"        assertTrue(StringUtil.containsTextIgnoreCase(\"aaa bbb ccc\", \"bB\")); // Sentence word bigger than query word","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"xlzior"},"content":"        assertFalse(StringUtil.containsTextIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"xlzior"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"xlzior"},"content":"        assertTrue(StringUtil.containsTextIgnoreCase(\"aaa bBb ccc\", \"Aaa\")); // First word (boundary case)","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"xlzior"},"content":"        assertTrue(StringUtil.containsTextIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"xlzior"},"content":"        assertTrue(StringUtil.containsTextIgnoreCase(\"aaa bBb ccc@1\", \"Bbb\")); // Middle word (boundary case)","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"xlzior"},"content":"        assertTrue(StringUtil.containsTextIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"xlzior"},"content":"        assertTrue(StringUtil.containsTextIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"xlzior"},"content":"        assertTrue(StringUtil.containsTextIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"xlzior"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"xlzior"},"content":"        assertTrue(StringUtil.containsTextIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"xlzior":80,"-":142}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"xlzior"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"xlzior"},"content":"        String deleteCommand \u003d DeleteCommand.COMMAND_WORD + \" 9\";","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xlzior":2,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"        assertThrows(CommandException.class, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"itsyme"},"content":"        public ObservableList\u003cFolder\u003e getFilteredFolderList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"itsyme"},"content":"        public void updateFilteredFolderList(Predicate\u003cFolder\u003e predicate) {","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"itsyme"},"content":"        public void addFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"rehmmann"},"content":"        public void addContactToFolder(Person target, FolderName name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"rehmmann"},"content":"        public boolean hasFolderName(FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"rehmmann"},"content":"        public boolean folderContainsPerson(Person target, FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"jiarong15"},"content":"        public void setNewFolder(Folder oldFolder, Folder newFolder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":187,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"itsyme"},"content":"        public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"jiarong15"},"content":"        public void deleteFolder(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"rehmmann":16,"jiarong15":11,"itsyme":22,"-":193}},{"path":"src/test/java/seedu/address/logic/commands/AddToFolderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehmmann"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rehmmann"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rehmmann"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rehmmann"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rehmmann"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rehmmann"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rehmmann"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rehmmann"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"rehmmann"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"rehmmann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"rehmmann"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rehmmann"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rehmmann"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rehmmann"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rehmmann"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rehmmann"},"content":"public class AddToFolderCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rehmmann"},"content":"    public void constructor_nullFolderNameAndIndex_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rehmmann"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddToFolderCommand(null, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"rehmmann"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"rehmmann"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"rehmmann"},"content":"        FolderName folderName \u003d new FolderName(\"Folder 1\");","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"rehmmann"},"content":"        Folder validFolder \u003d new Folder(folderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"rehmmann"},"content":"        Index index \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"rehmmann"},"content":"        CommandResult commandResult \u003d new AddToFolderCommand(index, folderName).execute(modelStub);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"rehmmann"},"content":"        assertEquals(String.format(AddToFolderCommand.MESSAGE_SUCCESS, validFolder), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"rehmmann"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"rehmmann"},"content":"        FolderName cs2100FolderName \u003d new FolderName(\"CS2100\");","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"rehmmann"},"content":"        Folder cs2100 \u003d new Folder(cs2100FolderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"rehmmann"},"content":"        Index indexOne \u003d ParserUtil.parseIndex(\"1\");","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"rehmmann"},"content":"        FolderName cs2103FolderName \u003d new FolderName(\"CS2103\");","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"rehmmann"},"content":"        Folder cs2103 \u003d new Folder(cs2103FolderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"rehmmann"},"content":"        Index indexTwo \u003d ParserUtil.parseIndex(\"2\");","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"rehmmann"},"content":"        AddToFolderCommand addCS2100Command \u003d new AddToFolderCommand(indexOne, cs2100FolderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"rehmmann"},"content":"        AddToFolderCommand addCS2103Command \u003d new AddToFolderCommand(indexTwo, cs2103FolderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"rehmmann"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"rehmmann"},"content":"        assertTrue(addCS2100Command.equals(addCS2100Command));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"rehmmann"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"rehmmann"},"content":"        AddToFolderCommand addCS2100CommandDuplicate \u003d new AddToFolderCommand(indexOne, cs2100FolderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"rehmmann"},"content":"        assertTrue(addCS2100Command.equals(addCS2100CommandDuplicate));","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"rehmmann"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"rehmmann"},"content":"        assertFalse(addCS2100Command.equals(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"rehmmann"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"rehmmann"},"content":"        assertFalse(addCS2100Command.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"rehmmann"},"content":"        // different folder -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"rehmmann"},"content":"        assertFalse(addCS2100Command.equals(addCS2103Command));","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"rehmmann"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"rehmmann"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"rehmmann"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"rehmmann"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"rehmmann"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"rehmmann"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"rehmmann"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"rehmmann"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"rehmmann"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"rehmmann"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"rehmmann"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"rehmmann"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"rehmmann"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"rehmmann"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"rehmmann"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"rehmmann"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"rehmmann"},"content":"        public ObservableList\u003cFolder\u003e getFilteredFolderList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"rehmmann"},"content":"        public void updateFilteredFolderList(Predicate\u003cFolder\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"rehmmann"},"content":"        public void addFolder(Folder folder) {","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"rehmmann"},"content":"        public void addContactToFolder(Person target, FolderName name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"rehmmann"},"content":"        public boolean hasFolderName(FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"rehmmann"},"content":"        public boolean folderContainsPerson(Person target, FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"jiarong15"},"content":"        public void setNewFolder(Folder oldFolder, Folder newFolder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":187,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"rehmmann"},"content":"        public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"rehmmann"},"content":"        public void deleteFolder(Folder folder) {","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"rehmmann"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"rehmmann"},"content":"     * A Model stub with one Person inside Folder.","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"rehmmann"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"rehmmann"},"content":"    private class ModelStubAcceptingPersonAdded extends AddToFolderCommandTest.ModelStub {","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":205,"author":{"gitId":"rehmmann"},"content":"        final ObservableList\u003cPerson\u003e personsAdded \u003d FXCollections.observableArrayList(new PersonBuilder().build());","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"rehmmann"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"rehmmann"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"rehmmann"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"rehmmann"},"content":"        public void addContactToFolder(Person target, FolderName folderName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"rehmmann"},"content":"            requireAllNonNull(target, folderName);","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"rehmmann"},"content":"            personsAdded.add(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":220,"author":{"gitId":"rehmmann"},"content":"        public boolean folderContainsPerson(Person target, FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":221,"author":{"gitId":"rehmmann"},"content":"            requireAllNonNull(target, name);","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"rehmmann"},"content":"            return false;","lastModifiedDate":"2021-10-14"},{"lineNumber":223,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":224,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":225,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"rehmmann"},"content":"        public boolean hasFolderName(FolderName folderName) {","lastModifiedDate":"2021-10-14"},{"lineNumber":227,"author":{"gitId":"rehmmann"},"content":"            requireNonNull(folderName);","lastModifiedDate":"2021-10-14"},{"lineNumber":228,"author":{"gitId":"rehmmann"},"content":"            return true;","lastModifiedDate":"2021-10-14"},{"lineNumber":229,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":230,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":231,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":232,"author":{"gitId":"rehmmann"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":233,"author":{"gitId":"rehmmann"},"content":"            return personsAdded;","lastModifiedDate":"2021-10-08"},{"lineNumber":234,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":235,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":236,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":237,"author":{"gitId":"rehmmann"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"rehmmann"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":239,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":240,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":241,"author":{"gitId":"rehmmann"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rehmmann":236,"jiarong15":5}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CS2103;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    public void execute_addressBookWithFolders_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"        AddressBook addressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        addressBook.addFolder(CS2103);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"        Model model \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"        expectedAddressBook.addFolder(CS2103);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"        expectedModel.setAddressBook(expectedAddressBook);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"        assertCommandSuccess(new ClearCommand(),","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"                model,","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"                new CommandResult(ClearCommand.MESSAGE_SUCCESS),","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"                expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"xlzior":1,"itsyme":15,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"    public static final String VALID_FOLDER_NAME_CCA \u003d \"CCA\";","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"itsyme":1,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/CreateFolderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"class CreateFolderCommandTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"    public void constructor_nullFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateFolderCommand(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"    public void execute_folderAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        ModelStubAcceptingFolderAdded modelStub \u003d new ModelStubAcceptingFolderAdded();","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"        Folder validFolder \u003d new Folder(new FolderName(\"Folder 1\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"        CommandResult commandResult \u003d new CreateFolderCommand(validFolder).execute(modelStub);","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"        assertEquals(String.format(CreateFolderCommand.MESSAGE_SUCCESS, validFolder),","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"        assertEquals(Arrays.asList(validFolder), modelStub.foldersAdded);","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    public void execute_duplicateFolder_throwsCommandException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"        Folder validFolder \u003d new Folder(new FolderName(\"Folder 1\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommand createFolderCommand \u003d new CreateFolderCommand(validFolder);","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"        ModelStub modelStub \u003d new ModelStubWithFolder(validFolder);","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"        assertThrows(CommandException.class, () -\u003e createFolderCommand.execute(modelStub));","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"    public void equals() {","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"        Folder nus \u003d new Folder(new FolderName(\"NUS\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"        Folder cs \u003d new Folder(new FolderName(\"CS\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommand addNusCommand \u003d new CreateFolderCommand(nus);","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommand addCsCommand \u003d new CreateFolderCommand(cs);","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"        assertTrue(addNusCommand.equals(addNusCommand));","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommand addNusCommandDuplicate \u003d new CreateFolderCommand(nus);","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"itsyme"},"content":"        assertTrue(addNusCommand.equals(addNusCommandDuplicate));","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"itsyme"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"itsyme"},"content":"        assertFalse(addNusCommand.equals(1));","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"itsyme"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"itsyme"},"content":"        assertFalse(addNusCommand.equals(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"itsyme"},"content":"        // different folder -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"itsyme"},"content":"        assertFalse(addNusCommand.equals(addCsCommand));","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"itsyme"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"itsyme"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"itsyme"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"itsyme"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"itsyme"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"itsyme"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"itsyme"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"itsyme"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"itsyme"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"itsyme"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"itsyme"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"itsyme"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"itsyme"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"itsyme"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"itsyme"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"itsyme"},"content":"        public ObservableList\u003cFolder\u003e getFilteredFolderList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"itsyme"},"content":"        public void updateFilteredFolderList(Predicate\u003cFolder\u003e predicate) {","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"itsyme"},"content":"        public void addFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"rehmmann"},"content":"        public void addContactToFolder(Person target, FolderName name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"rehmmann"},"content":"        public boolean hasFolderName(FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"rehmmann"},"content":"        public boolean folderContainsPerson(Person target, FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":184,"author":{"gitId":"jiarong15"},"content":"        public void setNewFolder(Folder oldFolder, Folder newFolder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":185,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":186,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":187,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":188,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":189,"author":{"gitId":"itsyme"},"content":"        public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":190,"author":{"gitId":"itsyme"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-02"},{"lineNumber":191,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":192,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"jiarong15"},"content":"        public void deleteFolder(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":198,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":199,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":200,"author":{"gitId":"itsyme"},"content":"     * A Model stub that contains a single folder.","lastModifiedDate":"2021-10-02"},{"lineNumber":201,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":202,"author":{"gitId":"itsyme"},"content":"    private class ModelStubWithFolder extends CreateFolderCommandTest.ModelStub {","lastModifiedDate":"2021-10-02"},{"lineNumber":203,"author":{"gitId":"itsyme"},"content":"        private final Folder folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":204,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":205,"author":{"gitId":"itsyme"},"content":"        ModelStubWithFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":206,"author":{"gitId":"itsyme"},"content":"            requireNonNull(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":207,"author":{"gitId":"itsyme"},"content":"            this.folder \u003d folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":208,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":209,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":210,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":211,"author":{"gitId":"itsyme"},"content":"        public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":212,"author":{"gitId":"itsyme"},"content":"            requireNonNull(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":213,"author":{"gitId":"itsyme"},"content":"            return this.folder.isSameFolder(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":214,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":215,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":216,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":217,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":218,"author":{"gitId":"itsyme"},"content":"     * A Model stub that always accept the folder being added.","lastModifiedDate":"2021-10-02"},{"lineNumber":219,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":220,"author":{"gitId":"itsyme"},"content":"    private class ModelStubAcceptingFolderAdded extends CreateFolderCommandTest.ModelStub {","lastModifiedDate":"2021-10-02"},{"lineNumber":221,"author":{"gitId":"itsyme"},"content":"        final ArrayList\u003cFolder\u003e foldersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-02"},{"lineNumber":222,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":223,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":224,"author":{"gitId":"itsyme"},"content":"        public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":225,"author":{"gitId":"itsyme"},"content":"            requireNonNull(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":226,"author":{"gitId":"itsyme"},"content":"            return foldersAdded.stream().anyMatch(folder::isSameFolder);","lastModifiedDate":"2021-10-02"},{"lineNumber":227,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":228,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":229,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":230,"author":{"gitId":"itsyme"},"content":"        public void addFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":231,"author":{"gitId":"itsyme"},"content":"            requireNonNull(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":232,"author":{"gitId":"itsyme"},"content":"            foldersAdded.add(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":233,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":234,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":235,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":236,"author":{"gitId":"itsyme"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-02"},{"lineNumber":237,"author":{"gitId":"itsyme"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-02"},{"lineNumber":238,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":239,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":240,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"rehmmann":15,"jiarong15":10,"itsyme":215}},{"path":"src/test/java/seedu/address/logic/commands/DeleteFolderCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"public class DeleteFolderCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    public void constructor_nullFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteFolderCommand(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    public void execute_deleteFolderFromModel_success() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"        Folder validFolder \u003d new Folder(new FolderName(\"Folder 1\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"        ModelStubWithFolder modelWithFolderStub \u003d new ModelStubWithFolder();","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"        modelWithFolderStub.addNewFolder(validFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        CommandResult commandResult \u003d new DeleteFolderCommand(validFolder).execute(modelWithFolderStub);","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"        assertEquals(String.format(DeleteFolderCommand.MESSAGE_SUCCESS, validFolder),","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"        assertEquals(new ArrayList\u003c\u003e(), modelWithFolderStub.existingFolders);","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    public void execute_deleteNonExistingFolder_throwsCommandException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        Folder firstFolder \u003d new Folder(new FolderName(\"Folder 1\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"        Folder otherFolder \u003d new Folder(new FolderName(\"Folder 2\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"        ModelStubWithFolder modelWithFolderStub \u003d new ModelStubWithFolder();","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"        modelWithFolderStub.addNewFolder(firstFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand deleteFolderCommand \u003d new DeleteFolderCommand(otherFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"        assertThrows(CommandException.class, () -\u003e deleteFolderCommand.execute(modelWithFolderStub));","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"    public void execute_deleteFromEmptyListOfFolders_throwsCommandException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"        Folder validFolder \u003d new Folder(new FolderName(\"Folder 1\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        ModelStubWithFolder modelWithFolderStub \u003d new ModelStubWithFolder();","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand deleteFolderCommand \u003d new DeleteFolderCommand(validFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"        assertThrows(CommandException.class, () -\u003e deleteFolderCommand.execute(modelWithFolderStub));","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"        Folder myFolder \u003d new Folder(new FolderName(\"myFolder\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"        Folder otherFolder \u003d new Folder(new FolderName(\"otherFolder\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand myFolderCommand \u003d new DeleteFolderCommand(myFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand otherFolderCommand \u003d new DeleteFolderCommand(otherFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"        // same Object -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"        assertTrue(myFolderCommand.equals(myFolderCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"        assertTrue(otherFolderCommand.equals(otherFolderCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand myFolderCommandDuplicate \u003d new DeleteFolderCommand(myFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"        assertTrue(myFolderCommand.equals(myFolderCommandDuplicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand otherFolderCommandDuplicate \u003d new DeleteFolderCommand(otherFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"        assertTrue(otherFolderCommand.equals(otherFolderCommandDuplicate));","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"jiarong15"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"jiarong15"},"content":"        assertFalse(myFolderCommand.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"jiarong15"},"content":"        assertFalse(otherFolderCommand.equals(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"jiarong15"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"jiarong15"},"content":"        assertFalse(myFolderCommand.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"jiarong15"},"content":"        assertFalse(otherFolderCommand.equals(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"jiarong15"},"content":"        // different folder -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"jiarong15"},"content":"        assertFalse(myFolderCommand.equals(otherFolderCommand));","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"jiarong15"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"jiarong15"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-09"},{"lineNumber":113,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":114,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"jiarong15"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":120,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"jiarong15"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-09"},{"lineNumber":123,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":126,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":127,"author":{"gitId":"jiarong15"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-09"},{"lineNumber":128,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"jiarong15"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"jiarong15"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"jiarong15"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"jiarong15"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"jiarong15"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":156,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"jiarong15"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"jiarong15"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":163,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":164,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":165,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":166,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"jiarong15"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":168,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":169,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":172,"author":{"gitId":"jiarong15"},"content":"        public ObservableList\u003cFolder\u003e getFilteredFolderList() {","lastModifiedDate":"2021-10-09"},{"lineNumber":173,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":175,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":176,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":177,"author":{"gitId":"jiarong15"},"content":"        public void updateFilteredFolderList(Predicate\u003cFolder\u003e predicate) {","lastModifiedDate":"2021-10-09"},{"lineNumber":178,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":179,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":181,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":182,"author":{"gitId":"jiarong15"},"content":"        public void addFolder(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":183,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"jiarong15"},"content":"        public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"jiarong15"},"content":"        public void deleteFolder(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":197,"author":{"gitId":"rehmmann"},"content":"        public void addContactToFolder(Person target, FolderName name) {","lastModifiedDate":"2021-10-10"},{"lineNumber":198,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":202,"author":{"gitId":"jiarong15"},"content":"        public void setNewFolder(Folder oldFolder, Folder newFolder) {","lastModifiedDate":"2021-10-15"},{"lineNumber":203,"author":{"gitId":"jiarong15"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-15"},{"lineNumber":204,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":205,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":206,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"rehmmann"},"content":"        public boolean hasFolderName(FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":209,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":211,"author":{"gitId":"rehmmann"},"content":"        @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":212,"author":{"gitId":"rehmmann"},"content":"        public boolean folderContainsPerson(Person target, FolderName name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":213,"author":{"gitId":"rehmmann"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"rehmmann"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":215,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"jiarong15"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"jiarong15"},"content":"     * A Model stub that contains a single folder.","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"jiarong15"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"jiarong15"},"content":"    private class ModelStubWithFolder extends DeleteFolderCommandTest.ModelStub {","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"jiarong15"},"content":"        private final ArrayList\u003cFolder\u003e existingFolders \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"jiarong15"},"content":"        public boolean hasFolder(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"jiarong15"},"content":"            requireNonNull(folder);","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"jiarong15"},"content":"            return existingFolders.stream().anyMatch(folder::isSameFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"jiarong15"},"content":"        public void addNewFolder(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"jiarong15"},"content":"            this.existingFolders.add(folder);","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"jiarong15"},"content":"        @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"jiarong15"},"content":"        public void deleteFolder(Folder folder) {","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"jiarong15"},"content":"            requireNonNull(folder);","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"jiarong15"},"content":"            this.existingFolders.remove(folder);","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"jiarong15"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"jiarong15":225,"rehmmann":15}},{"path":"src/test/java/seedu/address/logic/commands/EditFolderNameCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"public class EditFolderNameCommandTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    private Folder TestFolder1 \u003d new Folder(new FolderName(\"TestFolder1\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"    private Folder TestFolder2 \u003d new Folder(new FolderName(\"TestFolder2\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    private Folder TestFolder3 \u003d new Folder(new FolderName(\"TestFolder3\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    private Folder TestFolder4 \u003d new Folder(new FolderName(\"TestFolder4\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    public void execute_renameNonExistingFolder_failure() {","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"        model.addFolder(TestFolder1);","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"        model.addFolder(TestFolder2);","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommand editFolderNameCommand \u003d new EditFolderNameCommand(TestFolder3, TestFolder4);","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"        assertThrows(CommandException.class, () -\u003e editFolderNameCommand.execute(model));","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    public void execute_renameExistingFolderToAnotherExistingFolder_failure() {","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"        model.addFolder(TestFolder1);","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"        model.addFolder(TestFolder2);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommand editFolderNameCommand \u003d new EditFolderNameCommand(TestFolder1, TestFolder2);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"        assertThrows(CommandException.class, () -\u003e editFolderNameCommand.execute(model));","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"    public void execute_renameExistingFolderToNewFolder_success() throws CommandException {","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"        model.addFolder(TestFolder1);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"        model.addFolder(TestFolder2);","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommand editFolderNameCommand \u003d new EditFolderNameCommand(TestFolder1,","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"                TestFolder3);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        String expectedMessage \u003d String.format(EditFolderNameCommand","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"                .MESSAGE_SUCCESS_EDIT_FOLDER_NAME, TestFolder3);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"        expectedModel.addFolder(TestFolder3);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"        expectedModel.addFolder(TestFolder2);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"        assertCommandSuccess(editFolderNameCommand, model,","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"                expectedMessage, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"jiarong15":57}},{"path":"src/test/java/seedu/address/logic/commands/FindFoldersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xlzior"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xlzior"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xlzior"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xlzior"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xlzior"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FOLDERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xlzior"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CCA;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CS2103;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.TEAM_PROJECT;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.getTypicalAddressBookWithFolders;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"xlzior"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xlzior"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.folder.FolderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xlzior"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xlzior"},"content":" * Contains integration tests (interaction with the Model) for {@code FindFoldersCommand}.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xlzior"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xlzior"},"content":"public class FindFoldersCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xlzior"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithFolders(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xlzior"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithFolders(), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xlzior"},"content":"    public void equals() {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xlzior"},"content":"        FolderNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xlzior"},"content":"                new FolderNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xlzior"},"content":"        FolderNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xlzior"},"content":"                new FolderNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xlzior"},"content":"        FindFoldersCommand findFirstCommand \u003d new FindFoldersCommand(firstPredicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xlzior"},"content":"        FindFoldersCommand findSecondCommand \u003d new FindFoldersCommand(secondPredicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xlzior"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"xlzior"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"xlzior"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"xlzior"},"content":"        FindFoldersCommand findFirstCommandCopy \u003d new FindFoldersCommand(firstPredicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"xlzior"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"xlzior"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"xlzior"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"xlzior"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"xlzior"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"xlzior"},"content":"        // different folder -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"xlzior"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"xlzior"},"content":"    public void execute_zeroKeywords_noFolderFound() {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"xlzior"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FOLDERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"xlzior"},"content":"        FolderNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"xlzior"},"content":"        FindFoldersCommand command \u003d new FindFoldersCommand(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"xlzior"},"content":"        expectedModel.updateFilteredFolderList(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"xlzior"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"xlzior"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredFolderList());","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"xlzior"},"content":"    public void execute_multipleKeywords_multipleFoldersFound() {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"xlzior"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FOLDERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"xlzior"},"content":"        FolderNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"CS2103 Project CCA\");","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"xlzior"},"content":"        FindFoldersCommand command \u003d new FindFoldersCommand(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"xlzior"},"content":"        expectedModel.updateFilteredFolderList(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"xlzior"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"xlzior"},"content":"        assertEquals(Arrays.asList(CS2103, TEAM_PROJECT, CCA), model.getFilteredFolderList());","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"xlzior"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"xlzior"},"content":"     * Parses {@code userInput} into a {@code FolderNameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"xlzior"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"xlzior"},"content":"    private FolderNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"xlzior"},"content":"        return new FolderNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"xlzior"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xlzior":83}},{"path":"src/test/java/seedu/address/logic/commands/ListFoldersCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sebbycake"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"sebbycake"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"sebbycake"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"sebbycake"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"sebbycake"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"sebbycake"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"sebbycake"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"sebbycake"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"sebbycake"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListFoldersCommand.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"sebbycake"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"sebbycake"},"content":"public class ListFoldersCommandTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"sebbycake"},"content":"    private Model model;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"sebbycake"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"sebbycake"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"sebbycake"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"sebbycake"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"sebbycake"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"sebbycake"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"sebbycake"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"sebbycake"},"content":"        assertCommandSuccess(new ListFoldersCommand(), model, ListFoldersCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"sebbycake"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"sebbycake"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"sebbycake"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"sebbycake":32}},{"path":"src/test/java/seedu/address/logic/parser/AddToFolderParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rehmmann"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rehmmann"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rehmmann"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOLDER_NAME_CCA;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rehmmann"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rehmmann"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.commands.AddToFolderCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rehmmann"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rehmmann"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rehmmann"},"content":"class AddToFolderParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rehmmann"},"content":"    private AddToFolderParser parser \u003d new AddToFolderParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rehmmann"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rehmmann"},"content":"        FolderName expectedFolder \u003d new FolderName(VALID_FOLDER_NAME_CCA);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rehmmann"},"content":"        AddToFolderCommand expectedAddToFolderCommand \u003d new AddToFolderCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rehmmann"},"content":"                expectedFolder);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rehmmann"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rehmmann"},"content":"                \" 1 \u003e\u003e \" + VALID_FOLDER_NAME_CCA,","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rehmmann"},"content":"                expectedAddToFolderCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rehmmann"},"content":"    public void parse_folderNameWithWhitespace_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rehmmann"},"content":"        FolderName expectedFolder \u003d new FolderName(VALID_FOLDER_NAME_CCA + \" \" + VALID_FOLDER_NAME_CCA);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rehmmann"},"content":"        AddToFolderCommand expectedAddToFolderCommand \u003d new AddToFolderCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rehmmann"},"content":"                expectedFolder);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rehmmann"},"content":"        CommandParserTestUtil.assertParseSuccess(parser,","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rehmmann"},"content":"                \" 1 \u003e\u003e \" + VALID_FOLDER_NAME_CCA + \" \" + VALID_FOLDER_NAME_CCA,","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rehmmann"},"content":"                expectedAddToFolderCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"rehmmann"},"content":"    public void parse_missingFolderName_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"rehmmann"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" 1 \u003e\u003e \"));","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"rehmmann"},"content":"    public void parse_missingIndex_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"rehmmann"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \u003e\u003e CS2103\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"rehmmann"},"content":"    public void parse_invalidSyntax_failure() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"rehmmann"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \u003e CS2103\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"rehmmann"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"rehmmann"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"rehmmann"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"rehmmann"},"content":"    public void parse_nullValue_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"rehmmann"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"rehmmann"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"rehmmann"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"rehmmann"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rehmmann":62}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOLDER_NAME_CCA;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"import seedu.address.logic.commands.CreateFolderCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"    public void parseCommand_mkdir() throws Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"        Folder folder \u003d new Folder(new FolderName(VALID_FOLDER_NAME_CCA));","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommand command \u003d (CreateFolderCommand) parser.parseCommand((CreateFolderCommand.COMMAND_WORD","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"            + \" \" + VALID_FOLDER_NAME_CCA));","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"        assertEquals(new CreateFolderCommand(folder), command);","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"itsyme":12,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/CreateFolderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOLDER_NAME_CCA;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"import seedu.address.logic.commands.CreateFolderCommand;","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"class CreateFolderCommandParserTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"        Folder expectedFolder \u003d new Folder(new FolderName(VALID_FOLDER_NAME_CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommand expectedCreateFolderCommand \u003d new CreateFolderCommand(expectedFolder);","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommandParser createFolderCommandParser \u003d new CreateFolderCommandParser();","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"        CommandParserTestUtil.assertParseSuccess(createFolderCommandParser,","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"                \" \" + VALID_FOLDER_NAME_CCA,","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"                expectedCreateFolderCommand);","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    public void parse_folderNameWithWhitespace_success() {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        Folder expectedFolder \u003d new Folder(new FolderName(VALID_FOLDER_NAME_CCA + \" \" + VALID_FOLDER_NAME_CCA));","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommand expectedCreateFolderCommand \u003d new CreateFolderCommand(expectedFolder);","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommandParser createFolderCommandParser \u003d new CreateFolderCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        CommandParserTestUtil.assertParseSuccess(createFolderCommandParser,","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"                \" \" + VALID_FOLDER_NAME_CCA + \" \" + VALID_FOLDER_NAME_CCA,","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"                expectedCreateFolderCommand);","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommandParser createFolderCommandParser \u003d new CreateFolderCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"        assertThrows(ParseException.class, () -\u003e createFolderCommandParser.parse(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"    public void parse_nullValue_failure() {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        CreateFolderCommandParser createFolderCommandParser \u003d new CreateFolderCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e createFolderCommandParser.parse(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"itsyme":47}},{"path":"src/test/java/seedu/address/logic/parser/DeleteFolderCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.DeleteFolderCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"public class DeleteFolderCommandParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"        String testFolderName \u003d \"TEST1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"        Folder expectedFolder \u003d new Folder(new FolderName(testFolderName));","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand expectedDeleteFolderCommand \u003d new DeleteFolderCommand(expectedFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommandParser deleteFolderCommandParser \u003d new DeleteFolderCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"        assertParseSuccess(deleteFolderCommandParser,","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"                \" \" + testFolderName,","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"                expectedDeleteFolderCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"    public void parse_folderNameWithWhitespace_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"        String testFolderNameWithSpace \u003d \"TEST 1\" + \" \" + \"TEST 1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"        Folder expectedFolder \u003d new Folder(new FolderName(testFolderNameWithSpace));","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommand expectedDeleteFolderCommand \u003d new DeleteFolderCommand(expectedFolder);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommandParser deleteFolderCommandParser \u003d new DeleteFolderCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"        CommandParserTestUtil.assertParseSuccess(deleteFolderCommandParser,","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"                \" \" + testFolderNameWithSpace,","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"                expectedDeleteFolderCommand);","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommandParser deleteFolderCommandParser \u003d new DeleteFolderCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"        assertThrows(ParseException.class, () -\u003e deleteFolderCommandParser.parse(\" \"));","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    public void parse_nullValue_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"        DeleteFolderCommandParser deleteFolderCommandParser \u003d new DeleteFolderCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        assertThrows(NullPointerException.class, () -\u003e deleteFolderCommandParser.parse(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"jiarong15":52}},{"path":"src/test/java/seedu/address/logic/parser/EditFolderNameCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jiarong15"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"jiarong15"},"content":"import static seedu.address.model.folder.FolderName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"jiarong15"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"jiarong15"},"content":"import seedu.address.logic.commands.EditFolderNameCommand;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"jiarong15"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"jiarong15"},"content":"public class EditFolderNameCommandParserTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"jiarong15"},"content":"    private Folder TestFolder1 \u003d new Folder(new FolderName(\"TestFolder1\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"jiarong15"},"content":"    private Folder TestFolder2 \u003d new Folder(new FolderName(\"TestFolder2\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"jiarong15"},"content":"    private Folder TestFolder3 \u003d new Folder(new FolderName(\"TestFolder3\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"jiarong15"},"content":"    private Folder TestFolder4 \u003d new Folder(new FolderName(\"TestFolder4\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"jiarong15"},"content":"    public void parse_properFolderInput_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"jiarong15"},"content":"        String successStringInput \u003d \" TestFolder1 | TestFolder2\";","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommand expectedEditFolderNameCommand \u003d new EditFolderNameCommand(","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"jiarong15"},"content":"                TestFolder1, TestFolder2);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommandParser editFolderNameCommandParser \u003d new EditFolderNameCommandParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"jiarong15"},"content":"        assertParseSuccess(","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"jiarong15"},"content":"                editFolderNameCommandParser,","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"jiarong15"},"content":"                successStringInput,","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"jiarong15"},"content":"                expectedEditFolderNameCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"jiarong15"},"content":"    public void parse_folderSeparatorAtStart_failure() {","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"jiarong15"},"content":"        String failureStringInput \u003d \" | TestFolder1 | TestFolder2\";","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"jiarong15"},"content":"        String expectedFailureMessage \u003d String.format(","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"jiarong15"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"jiarong15"},"content":"                EditFolderNameCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommandParser editFolderNameCommandParser \u003d new EditFolderNameCommandParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"jiarong15"},"content":"        assertParseFailure(","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"jiarong15"},"content":"                editFolderNameCommandParser,","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"jiarong15"},"content":"                failureStringInput,","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"jiarong15"},"content":"                expectedFailureMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"jiarong15"},"content":"    public void parse_multipleFolderNameSpecified_failure() {","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"jiarong15"},"content":"        String failureStringInput \u003d \" TestFolder1 | TestFolder2 | TestFolder3\";","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"jiarong15"},"content":"        String expectedFailureMessage \u003d String.format(","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"jiarong15"},"content":"                MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"jiarong15"},"content":"                EditFolderNameCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommandParser editFolderNameCommandParser \u003d new EditFolderNameCommandParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"jiarong15"},"content":"        assertParseFailure(","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"jiarong15"},"content":"                editFolderNameCommandParser,","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"jiarong15"},"content":"                failureStringInput,","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"jiarong15"},"content":"                expectedFailureMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"jiarong15"},"content":"    public void parse_blankFolderNameSpecified_failure() {","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"jiarong15"},"content":"        String failureStringInput1 \u003d \"        | TestFolder2 \";","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"jiarong15"},"content":"        String failureStringInput2 \u003d \" TestFolder2 |       \";","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"jiarong15"},"content":"        String failureStringInput3 \u003d \"        |       \";","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"jiarong15"},"content":"        String expectedFailureMessage \u003d String.format(MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"jiarong15"},"content":"        EditFolderNameCommandParser editFolderNameCommandParser \u003d new EditFolderNameCommandParser();","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"jiarong15"},"content":"        assertParseFailure(","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"jiarong15"},"content":"                editFolderNameCommandParser,","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"jiarong15"},"content":"                failureStringInput1,","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"jiarong15"},"content":"                expectedFailureMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"jiarong15"},"content":"        assertParseFailure(","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"jiarong15"},"content":"                editFolderNameCommandParser,","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"jiarong15"},"content":"                failureStringInput2,","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"jiarong15"},"content":"                expectedFailureMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"jiarong15"},"content":"        assertParseFailure(","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"jiarong15"},"content":"                editFolderNameCommandParser,","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"jiarong15"},"content":"                failureStringInput3,","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"jiarong15"},"content":"                expectedFailureMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"jiarong15"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"jiarong15":83}},{"path":"src/test/java/seedu/address/logic/parser/FindFoldersCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xlzior"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xlzior"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xlzior"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xlzior"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xlzior"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"import seedu.address.logic.commands.FindFoldersCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.folder.FolderNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"xlzior"},"content":"public class FindFoldersCommandParserTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xlzior"},"content":"    private FindFoldersCommandParser parser \u003d new FindFoldersCommandParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xlzior"},"content":"        String expectedParseException \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindFoldersCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xlzior"},"content":"        assertParseFailure(parser, \"     \", expectedParseException);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xlzior"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xlzior"},"content":"    public void parse_validArgs_returnsFindFoldersCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xlzior"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xlzior"},"content":"        FindFoldersCommand expectedFindFoldersCommand \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xlzior"},"content":"                new FindFoldersCommand(new FolderNameContainsKeywordsPredicate(Arrays.asList(\"CS2103\", \"CCA\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xlzior"},"content":"        assertParseSuccess(parser, \"CS2103 CCA\", expectedFindFoldersCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xlzior"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xlzior"},"content":"        assertParseSuccess(parser, \" \\n CS2103 \\n \\t CCA  \\t\", expectedFindFoldersCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xlzior"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xlzior":35}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOLDER_NAME_CCA;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"itsyme"},"content":"    public void parseFolderName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFolderName((String) null));","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"itsyme"},"content":"    public void parseFolderName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"itsyme"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFolderName(INVALID_NAME));","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"itsyme"},"content":"    public void parseFolderName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"itsyme"},"content":"        FolderName expectedName \u003d new FolderName(VALID_FOLDER_NAME_CCA);","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"itsyme"},"content":"        assertEquals(expectedName, ParserUtil.parseFolderName(VALID_FOLDER_NAME_CCA));","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":101,"author":{"gitId":"itsyme"},"content":"    public void parseFolderName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-03"},{"lineNumber":102,"author":{"gitId":"itsyme"},"content":"        String folderNameWithWhitespace \u003d WHITESPACE + VALID_FOLDER_NAME_CCA + WHITESPACE;","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"itsyme"},"content":"        FolderName expectedFolderName \u003d new FolderName(VALID_FOLDER_NAME_CCA);","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"        assertEquals(expectedFolderName, ParserUtil.parseFolderName(folderNameWithWhitespace));","lastModifiedDate":"2021-10-03"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"itsyme":25,"-":196}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CCA;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CS2103;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.EXCLUDED_FOLDER;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.getTypicalAddressBookWithFolders;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.exceptions.DuplicateFolderException;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"        assertEquals(Collections.emptyList(), addressBook.getFolderList());","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"    public void resetData_withValidReadOnlyAddressBookWithFolders_replacesData() {","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"        AddressBook newData \u003d getTypicalAddressBookWithFolders();","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"itsyme"},"content":"    public void resetData_withDuplicateFolders_throwsDuplicateFolderException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"itsyme"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"        Folder ccaDuplicate \u003d new Folder(new FolderName(\"CCA\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"        List\u003cFolder\u003e newFolders \u003d Arrays.asList(CCA, ccaDuplicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"        AddressBookStub newData \u003d new AddressBookStub(addressBook.getPersonList(), newFolders);","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"itsyme"},"content":"        assertThrows(DuplicateFolderException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"itsyme"},"content":"    public void hasFolder_nullFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasFolder(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"itsyme"},"content":"    public void hasFolder_folderNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"itsyme"},"content":"        assertFalse(addressBook.hasFolder(EXCLUDED_FOLDER));","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"itsyme"},"content":"    public void hasFolder_folderInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"itsyme"},"content":"        addressBook.addFolder(CS2103);","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"itsyme"},"content":"        assertTrue(addressBook.hasFolder(CS2103));","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"itsyme"},"content":"    public void hasFolder_folderWithSameName_returnsTrue() {","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"itsyme"},"content":"        addressBook.addFolder(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"itsyme"},"content":"        Folder ccaDuplicate \u003d new Folder(new FolderName(\"CCA\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"itsyme"},"content":"        assertTrue(addressBook.hasFolder(ccaDuplicate));","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"itsyme"},"content":"    public void withFolders_success() {","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"itsyme"},"content":"        addressBook.addFolder(CS2103);","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"itsyme"},"content":"        Model model \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"itsyme"},"content":"        Model actualModel \u003d new ModelManager(AddressBook.withFolders(model), new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"itsyme"},"content":"        AddressBook addressBookWithFolder \u003d new AddressBook();","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"itsyme"},"content":"        addressBookWithFolder.addFolder(CS2103);","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"itsyme"},"content":"        Model expectedModel \u003d new ModelManager(addressBookWithFolder, new UserPrefs());","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"itsyme"},"content":"        assertEquals(actualModel, expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"itsyme"},"content":"     * A stub ReadOnlyAddressBook whose persons and folders list can violate interface constraints.","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"itsyme"},"content":"        private final ObservableList\u003cFolder\u003e folders \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"itsyme"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cFolder\u003e folders) {","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"itsyme"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"itsyme"},"content":"            this.folders.setAll(folders);","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"itsyme"},"content":"            this.folders.setAll(Collections.emptyList());","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":166,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"itsyme"},"content":"        @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"itsyme"},"content":"        public ObservableList\u003cFolder\u003e getFolderList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":169,"author":{"gitId":"itsyme"},"content":"            return folders;","lastModifiedDate":"2021-10-02"},{"lineNumber":170,"author":{"gitId":"itsyme"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"xlzior":4,"itsyme":68,"-":101}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FOLDERS;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CCA;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"itsyme"},"content":"    public void hasFolder_nullFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFolder(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"jiarong15"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"jiarong15"},"content":"    public void folderRemoved_folderInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"jiarong15"},"content":"        modelManager.addFolder(CCA);","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"jiarong15"},"content":"        modelManager.deleteFolder(CCA);","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"jiarong15"},"content":"        assertFalse(modelManager.hasFolder(CCA));","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"jiarong15"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"jiarong15"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"    public void hasFolder_folderNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"itsyme"},"content":"        assertFalse(modelManager.hasFolder(CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"itsyme"},"content":"    public void hasFolder_folderInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"itsyme"},"content":"        modelManager.addFolder(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"itsyme"},"content":"        assertTrue(modelManager.hasFolder(CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"itsyme"},"content":"    public void getFilteredFolderList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"itsyme"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredFolderList().remove(0));","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":128,"author":{"gitId":"itsyme"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).withFolder(CCA).build();","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"itsyme"},"content":"        // different filteredPersonList -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"itsyme"},"content":"        // different filteredFolderList -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":158,"author":{"gitId":"itsyme"},"content":"        modelManager.updateFilteredFolderList(x -\u003e false);","lastModifiedDate":"2021-10-03"},{"lineNumber":159,"author":{"gitId":"itsyme"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2021-10-03"},{"lineNumber":160,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":161,"author":{"gitId":"itsyme"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2021-10-03"},{"lineNumber":162,"author":{"gitId":"itsyme"},"content":"        modelManager.updateFilteredFolderList(PREDICATE_SHOW_ALL_FOLDERS);","lastModifiedDate":"2021-10-03"},{"lineNumber":163,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"xlzior":1,"jiarong15":7,"itsyme":31,"-":130}},{"path":"src/test/java/seedu/address/model/folder/FolderNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.model.folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"class FolderNameTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FolderName(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"    public void constructor_invalidFolderName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"        String invalidFolderName \u003d \"\";","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FolderName(invalidFolderName));","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"        // null name","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e FolderName.isValidName(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"        // invalid name","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        assertFalse(FolderName.isValidName(\"\")); // empty string","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"        assertFalse(FolderName.isValidName(\" \")); // spaces only","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"        assertFalse(FolderName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        assertFalse(FolderName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"        // valid name","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"        assertTrue(FolderName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"        assertTrue(FolderName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        assertTrue(FolderName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"        assertTrue(FolderName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"        assertTrue(FolderName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"itsyme":40}},{"path":"src/test/java/seedu/address/model/folder/FolderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.model.folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"itsyme"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FOLDER_NAME_CCA;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CCA;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CS2103;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"class FolderTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"    public void constructor_validParameters_success() {","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"        Folder validFolder \u003d new Folder(new FolderName(VALID_FOLDER_NAME_CCA), new HashSet\u003cPerson\u003e());","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"        assertEquals(validFolder, CCA);","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    public void constructor_nullParameters_throwsNullPointerException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Folder(null, null));","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    public void getContacts_success() {","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"        HashSet\u003cPerson\u003e people \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"        people.add(ALICE);","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"        Folder validFolder \u003d new Folder(new FolderName(VALID_FOLDER_NAME_CCA), people);","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        assertEquals(validFolder.getContacts(), people);","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"    public void isSameFolder() {","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"        assertTrue(CCA.isSameFolder(CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"        assertFalse(CCA.isSameFolder(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"        Folder ccaDuplicate \u003d new Folder(new FolderName(VALID_FOLDER_NAME_CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"        assertTrue(CCA.isSameFolder(ccaDuplicate));","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"        Folder editedCca \u003d new Folder(new FolderName(VALID_FOLDER_NAME_CCA.toLowerCase()));","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"        assertFalse(CCA.isSameFolder(editedCca));","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"        String nameWithTrailingSpaces \u003d VALID_FOLDER_NAME_CCA + \" \";","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"        editedCca \u003d new Folder(new FolderName(nameWithTrailingSpaces));","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"        assertFalse(CCA.isSameFolder(editedCca));","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"    public void equals() {","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"        Folder ccaCopy \u003d new Folder(new FolderName(VALID_FOLDER_NAME_CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"        assertTrue(CCA.equals(ccaCopy));","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"itsyme"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"itsyme"},"content":"        assertTrue(CCA.equals(CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"itsyme"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"itsyme"},"content":"        assertFalse(CCA.equals(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"itsyme"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"itsyme"},"content":"        assertFalse(CCA.equals(5));","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"itsyme"},"content":"        // different folder -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"        assertFalse(CCA.equals(CS2103));","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"itsyme"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"itsyme"},"content":"        Folder editedCca \u003d new Folder(new FolderName(\"ABC\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"itsyme"},"content":"        assertFalse(CCA.equals(editedCca));","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"xlzior":2,"itsyme":81}},{"path":"src/test/java/seedu/address/model/folder/UniqueFolderListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itsyme"},"content":"package seedu.address.model.folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"itsyme"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"itsyme"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CCA;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"import static seedu.address.testutil.TypicalFolders.CS2103;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"itsyme"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"itsyme"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"itsyme"},"content":"import java.util.List;","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"itsyme"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.exceptions.DuplicateFolderException;","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.exceptions.FolderNotFoundException;","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"itsyme"},"content":"class UniqueFolderListTest {","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"itsyme"},"content":"    private final UniqueFolderList uniqueFolderList \u003d new UniqueFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"itsyme"},"content":"    public void contains_nullFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFolderList.contains(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"itsyme"},"content":"    public void contains_folderNotInList_returnsFalse() {","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"itsyme"},"content":"        assertFalse(uniqueFolderList.contains(CS2103));","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"    public void contains_folderInList_returnsTrue() {","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CS2103);","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"        assertTrue(uniqueFolderList.contains(CS2103));","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"itsyme"},"content":"    public void contains_folderWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"itsyme"},"content":"        Folder ccaDuplicate \u003d new Folder(new FolderName(\"CCA\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"itsyme"},"content":"        assertTrue(uniqueFolderList.contains(ccaDuplicate));","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"itsyme"},"content":"    public void add_nullFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFolderList.add(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"itsyme"},"content":"    public void add_duplicateFolder_throwsDuplicateFolderException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"itsyme"},"content":"        assertThrows(DuplicateFolderException.class, () -\u003e uniqueFolderList.add(CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"itsyme"},"content":"    public void setFolder_nullTargetFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFolderList.setFolder(null, CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"itsyme"},"content":"    public void setFolder_nullEditedFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFolderList.setFolder(CCA, null));","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"itsyme"},"content":"    public void setFolder_targetFolderNotInList_throwsFolderNotFoundException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"itsyme"},"content":"        assertThrows(FolderNotFoundException.class, () -\u003e uniqueFolderList.setFolder(CCA, CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"itsyme"},"content":"    public void setFolder_editedFolderIsSameFolder_success() {","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":76,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.setFolder(CCA, CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":77,"author":{"gitId":"itsyme"},"content":"        UniqueFolderList expectedUniqueFolderList \u003d new UniqueFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":78,"author":{"gitId":"itsyme"},"content":"        expectedUniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":79,"author":{"gitId":"itsyme"},"content":"        assertEquals(expectedUniqueFolderList, uniqueFolderList);","lastModifiedDate":"2021-10-02"},{"lineNumber":80,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":81,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":82,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":83,"author":{"gitId":"itsyme"},"content":"    public void setFolder_editedFolderHasSameIdentity_success() {","lastModifiedDate":"2021-10-02"},{"lineNumber":84,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":85,"author":{"gitId":"itsyme"},"content":"        Folder ccaDuplicate \u003d new Folder(new FolderName(\"CCA\"));","lastModifiedDate":"2021-10-02"},{"lineNumber":86,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.setFolder(CCA, ccaDuplicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":87,"author":{"gitId":"itsyme"},"content":"        UniqueFolderList expectedUniqueFolderList \u003d new UniqueFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":88,"author":{"gitId":"itsyme"},"content":"        expectedUniqueFolderList.add(ccaDuplicate);","lastModifiedDate":"2021-10-02"},{"lineNumber":89,"author":{"gitId":"itsyme"},"content":"        assertEquals(expectedUniqueFolderList, uniqueFolderList);","lastModifiedDate":"2021-10-02"},{"lineNumber":90,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":91,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":92,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":93,"author":{"gitId":"itsyme"},"content":"    public void setFolder_editedFolderHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-02"},{"lineNumber":94,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":95,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.setFolder(CCA, CS2103);","lastModifiedDate":"2021-10-02"},{"lineNumber":96,"author":{"gitId":"itsyme"},"content":"        UniqueFolderList expectedUniqueFolderList \u003d new UniqueFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":97,"author":{"gitId":"itsyme"},"content":"        expectedUniqueFolderList.add(CS2103);","lastModifiedDate":"2021-10-02"},{"lineNumber":98,"author":{"gitId":"itsyme"},"content":"        assertEquals(expectedUniqueFolderList, uniqueFolderList);","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":100,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":101,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":102,"author":{"gitId":"itsyme"},"content":"    public void setFolder_editedFolderHasNonUniqueIdentity_throwsDuplicateFolderException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":103,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":104,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CS2103);","lastModifiedDate":"2021-10-02"},{"lineNumber":105,"author":{"gitId":"itsyme"},"content":"        assertThrows(DuplicateFolderException.class, () -\u003e uniqueFolderList.setFolder(CCA, CS2103));","lastModifiedDate":"2021-10-02"},{"lineNumber":106,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":107,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":108,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":109,"author":{"gitId":"itsyme"},"content":"    public void remove_nullFolder_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":110,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFolderList.remove(null));","lastModifiedDate":"2021-10-02"},{"lineNumber":111,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":112,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":113,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":114,"author":{"gitId":"itsyme"},"content":"    public void remove_folderDoesNotExist_throwsFolderNotFoundException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":115,"author":{"gitId":"itsyme"},"content":"        assertThrows(FolderNotFoundException.class, () -\u003e uniqueFolderList.remove(CCA));","lastModifiedDate":"2021-10-02"},{"lineNumber":116,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":117,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":118,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"itsyme"},"content":"    public void remove_existingFolder_removesFolder() {","lastModifiedDate":"2021-10-02"},{"lineNumber":120,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.remove(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"itsyme"},"content":"        UniqueFolderList expectedUniqueFolderList \u003d new UniqueFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":123,"author":{"gitId":"itsyme"},"content":"        assertEquals(expectedUniqueFolderList, uniqueFolderList);","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":125,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":127,"author":{"gitId":"itsyme"},"content":"    public void setFolders_nullUniqueFolderList_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":128,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFolderList.setFolders((UniqueFolderList) null));","lastModifiedDate":"2021-10-02"},{"lineNumber":129,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":130,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":131,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":132,"author":{"gitId":"itsyme"},"content":"    public void setFolders_uniqueFolderList_replacesOwnListWithProvidedUniqueFolderList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":133,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":134,"author":{"gitId":"itsyme"},"content":"        UniqueFolderList expectedUniqueFolderList \u003d new UniqueFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":135,"author":{"gitId":"itsyme"},"content":"        expectedUniqueFolderList.add(CS2103);","lastModifiedDate":"2021-10-02"},{"lineNumber":136,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.setFolders(expectedUniqueFolderList);","lastModifiedDate":"2021-10-02"},{"lineNumber":137,"author":{"gitId":"itsyme"},"content":"        assertEquals(expectedUniqueFolderList, uniqueFolderList);","lastModifiedDate":"2021-10-02"},{"lineNumber":138,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":139,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":140,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":141,"author":{"gitId":"itsyme"},"content":"    public void setFolders_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":142,"author":{"gitId":"itsyme"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFolderList.setFolders((List\u003cFolder\u003e) null));","lastModifiedDate":"2021-10-02"},{"lineNumber":143,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":144,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":145,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":146,"author":{"gitId":"itsyme"},"content":"    public void setFolders_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-02"},{"lineNumber":147,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.add(CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":148,"author":{"gitId":"itsyme"},"content":"        List\u003cFolder\u003e folderList \u003d Collections.singletonList(CS2103);","lastModifiedDate":"2021-10-02"},{"lineNumber":149,"author":{"gitId":"itsyme"},"content":"        uniqueFolderList.setFolders(folderList);","lastModifiedDate":"2021-10-02"},{"lineNumber":150,"author":{"gitId":"itsyme"},"content":"        UniqueFolderList expectedUniqueFolderList \u003d new UniqueFolderList();","lastModifiedDate":"2021-10-02"},{"lineNumber":151,"author":{"gitId":"itsyme"},"content":"        expectedUniqueFolderList.add(CS2103);","lastModifiedDate":"2021-10-02"},{"lineNumber":152,"author":{"gitId":"itsyme"},"content":"        assertEquals(expectedUniqueFolderList, uniqueFolderList);","lastModifiedDate":"2021-10-02"},{"lineNumber":153,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":154,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":155,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":156,"author":{"gitId":"itsyme"},"content":"    public void setFolders_listWithDuplicateFolders_throwsDuplicateFolderException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":157,"author":{"gitId":"itsyme"},"content":"        List\u003cFolder\u003e listWithDuplicateFolders \u003d Arrays.asList(CCA, CCA);","lastModifiedDate":"2021-10-02"},{"lineNumber":158,"author":{"gitId":"itsyme"},"content":"        assertThrows(DuplicateFolderException.class, () -\u003e uniqueFolderList.setFolders(listWithDuplicateFolders));","lastModifiedDate":"2021-10-02"},{"lineNumber":159,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":160,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":161,"author":{"gitId":"itsyme"},"content":"    @Test","lastModifiedDate":"2021-10-02"},{"lineNumber":162,"author":{"gitId":"itsyme"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-02"},{"lineNumber":163,"author":{"gitId":"itsyme"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e uniqueFolderList","lastModifiedDate":"2021-10-02"},{"lineNumber":164,"author":{"gitId":"itsyme"},"content":"                .asUnmodifiableObservableList()","lastModifiedDate":"2021-10-02"},{"lineNumber":165,"author":{"gitId":"itsyme"},"content":"                .remove(0));","lastModifiedDate":"2021-10-02"},{"lineNumber":166,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":167,"author":{"gitId":"itsyme"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"xlzior":2,"itsyme":165}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"itsyme"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"itsyme"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"itsyme"},"content":"     * Adds a new {@code Folder} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"itsyme"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"itsyme"},"content":"    public AddressBookBuilder withFolder(Folder folder) {","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"itsyme"},"content":"        addressBook.addFolder(folder);","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"itsyme"},"content":"        return this;","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"itsyme"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"itsyme"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"itsyme":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/TypicalFolders.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xlzior"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"xlzior"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"xlzior"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"xlzior"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.folder.Folder;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.folder.FolderName;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"xlzior"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"xlzior"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"xlzior"},"content":" * A utility class containing a list of {@code Folder} objects to be used in tests.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"xlzior"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"xlzior"},"content":"public class TypicalFolders {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"xlzior"},"content":"    public static final Folder CS2103 \u003d new Folder(new FolderName(\"CS2103\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"xlzior"},"content":"    public static final Folder TEAM_PROJECT \u003d new Folder(new FolderName((\"Team Project\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"xlzior"},"content":"    public static final Folder CCA \u003d new Folder(new FolderName(\"CCA\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"xlzior"},"content":"    public static final Folder EXCLUDED_FOLDER \u003d new Folder(new FolderName(\"Excluded folder\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"xlzior"},"content":"    private TypicalFolders() {} // prevents instantiation","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"xlzior"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"xlzior"},"content":"     * Returns an {@code AddressBook} with all the typical persons and folders.","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"xlzior"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"xlzior"},"content":"    public static AddressBook getTypicalAddressBookWithFolders() {","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"xlzior"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"xlzior"},"content":"        for (Person person : TypicalPersons.getTypicalPersons()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"xlzior"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"xlzior"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"xlzior"},"content":"        for (Folder folder : getTypicalFolders()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"xlzior"},"content":"            ab.addFolder(folder);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"xlzior"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"xlzior"},"content":"        return ab;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"xlzior"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"xlzior"},"content":"    public static List\u003cFolder\u003e getTypicalFolders() {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"xlzior"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2103, TEAM_PROJECT, CCA));","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"xlzior"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"xlzior"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"xlzior":41}}]
