[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-T17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-T17-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T17-4/tp/branch/master/graph/badge.svg?token\u003dW8OO51MUAS)](https://codecov.io/gh/AY2122S1-CS2103T-T17-4/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"## Welcome to InsurancePal","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"* InsurancePal is a client management software specially designed to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"* This application is built from [Address Book Level 3](https://github.com/nus-cs2103-AY2122S1/tp)","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"**InsurancePal** aims to help insurance agents","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"1. Manage client information","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"2. Manage insurance claims","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"3. Manage appointments","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"This application is specially designed for insurance agents who can type fast and prefer to use a","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"*Command Line Interface* (CLI) to interact with the aaplication","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"For the detailed documentation of this project, see the **[InsurancePal website](https://ay2122s1-cs2103t-t17-4.github.io/tp)**.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"*This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).*","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"JoelChanZhiYang":17,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"run {","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JoelChanZhiYang":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"### Cheah Yan (Xie Yan)","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"\u003cimg src\u003d\"images/cheahyan.png\" width\u003d\"200px\" height\u003d\"300px\"\u003e","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"[[github](https://github.com/CheahYan)]","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"[[portfolio](team/cheahyan.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"* Role: Developer","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"### Joel Chan","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003cimg src\u003d\"images/joelchanzhiyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"[[github](https://github.com/JoelChanZhiYang/)]","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"[[portfolio](team/joelchanzhiyang.md)]","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"* Responsibilities: Deliverables and deadlines + Scheduling and Tracking","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"### Richard Li","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003cimg src\u003d\"images/rldefa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"[[github](http://github.com/rldefa)] [[portfolio](team/rldefa.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"* Role: Git Expert","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"xianlinc"},"content":"### Chng Xian Lin","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"xianlinc"},"content":"\u003cimg src\u003d\"images/xianlinc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"xianlinc"},"content":"[[github](http://github.com/xianlinc)]","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"xianlinc"},"content":"[[portfolio](team/xianlinc.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"xianlinc"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"xianlinc"},"content":"* Responsibilities: Looks after code quality + Ensure adherence to coding standards + In charge of feature \u0027note\u0027","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"### Gabriel Goh Kheng Lin","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003cimg src\u003d\"images/kawaiigabrielneko.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"[[github](http://github.com/kawaiigabrielneko)]","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"[[portfolio](team/kawaiigabrielneko.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"* Responsibilities: Insurance + Glossary","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":6,"CheahYan":6,"xianlinc":6,"kawaiigabrielneko":5,"-":31,"rldefa":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"xianlinc"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-10-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"xianlinc"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-10-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"xianlinc"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-10-03"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"xianlinc"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2021-10-03"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"CheahYan"},"content":"* works as an insurance agent","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"CheahYan"},"content":"* has a need to manage a large number of his/her Singaporean clients and their details","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"CheahYan"},"content":"* has a need to be reminded about his/her meeting timings with clients","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"CheahYan"},"content":"* has a need to manage revenue and costs for his clients","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"xianlinc"},"content":"**Value proposition**: manage clients faster than a typical mouse/GUI driven app and to also be able","lastModifiedDate":"2021-10-06"},{"lineNumber":267,"author":{"gitId":"CheahYan"},"content":"to collate details of clients in one application.","lastModifiedDate":"2021-09-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority   | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"CheahYan"},"content":"| -----------| ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | insurance agent                            | add clients\u0027 names to the client list        | connect with them easier on future meetups.              |","lastModifiedDate":"2021-10-03"},{"lineNumber":277,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | insurance agent whose clients live in Singapore                            | add the address of clients to the client list              | plan meetups with them in the future easily                                                                 |","lastModifiedDate":"2021-10-03"},{"lineNumber":278,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | insurance agent                            | add clients\u0027 client number to the client list               | contact them when I want to                                  |","lastModifiedDate":"2021-10-03"},{"lineNumber":279,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                            | keep track of clients\u0027 claim status         | update the client about it |","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | add total revenue from each of my clients  |  determine the quality of my clients|","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | add total costs from each of my clients         | determine how much to spend on gifts for clients.|","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user                                                | save my total costs for future use         | save time on having to type them everytime.|","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | keep notes about the client      | remember the health condition and ailments of all my clients.|","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":285,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | add the time and place of my appointments for my respective clients in the contact page        | be punctual|","lastModifiedDate":"2021-10-09"},{"lineNumber":286,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user                                     | save my contacts upon closing my address book        | save time on having to type them everytime |","lastModifiedDate":"2021-09-29"},{"lineNumber":287,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | organised user                                    | sort the clients in my address book by their first name         | locate a client easily|","lastModifiedDate":"2021-10-09"},{"lineNumber":288,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":289,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | organised and shrewd insurance agent                                     | sort my clients based on how much money I am making from them         | know which clients to prioritise|","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | calculate the commissions I get from my client        | know the revenue obtained from the policy my client buys. |","lastModifiedDate":"2021-10-09"},{"lineNumber":291,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | organised insurance agent                                    | remember what insurance my client already has        |  sell the client insurance he/she does not have yet |","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":293,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user with many contacts in the address book                                     | search for contacts in my contacts list whose name matches my input         |  navigate to the person I am looking for quickly |","lastModifiedDate":"2021-09-29"},{"lineNumber":294,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user                                     | delete clients from my contact list         | remove a client from my contact list I no longer need to keep in contact with|","lastModifiedDate":"2021-10-09"},{"lineNumber":295,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user                                    | use programs on Windows and Mac         | use it on all my laptops |","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user                                    | exit the program safely        | free up resources on his computer |","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | new user                                     |  install the application        | I can use it |","lastModifiedDate":"2021-10-09"},{"lineNumber":298,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | keep track of clients\u0027 claim status         | update the client about it |","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | keep track of clients\u0027 claim status         | update the client about it |","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent                                      | keep track of the birthday of my clients   | maintain customer relations with them|","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent that labels my clients    | delete labels that I have assigned  | correct mislabels and inaccurate labels","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"CheahYan"},"content":"| `* *`    | user                                       | import my contacts from a different source   | easily add multiple contacts at once","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"CheahYan"},"content":"| `* *`    | user                                       | filter out the contacts in my address book based on address   | better plan out my appointments","lastModifiedDate":"2021-10-09"},{"lineNumber":304,"author":{"gitId":"CheahYan"},"content":"| `* *`    | user                                       | see my contact list as a user interface   | read the list easily|","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"CheahYan"},"content":"| `* *`    | experienced user                                      | back up my client data  | not lose the data|","lastModifiedDate":"2021-10-09"},{"lineNumber":306,"author":{"gitId":"CheahYan"},"content":"| `* *`    | expert insurance agent                                      | give my clients a nickname   | more easily search for my regular contacts |","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent with a lot of clients                                       | create labels for my clients   |  classify and keep track of each of their characteristics|","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent                                      | see the labels attached to each client easily   |  quickly reference it when I am about to meet the client|","lastModifiedDate":"2021-10-09"},{"lineNumber":309,"author":{"gitId":"CheahYan"},"content":"| `* *`    | user                                       | edit the information of entries in my address book   | ensure the information is accurate and up to date.|","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent with a lot of clients                                       | create labels for my clients   |  classify and keep track of each of their characteristics|","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"CheahYan"},"content":"| `*`      | user | see how much space the program is using          | easily manage my computer memory |","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"xianlinc"},"content":"(For all use cases below, the **System** is the `InsurancePal` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"xianlinc"},"content":"**Use case: Viewing help**","lastModifiedDate":"2021-09-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":323,"author":{"gitId":"xianlinc"},"content":"1. User requests to see the help menu","lastModifiedDate":"2021-09-28"},{"lineNumber":324,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows the user how to access the help webpage","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"xianlinc"},"content":"3. User accesses the help webpage","lastModifiedDate":"2021-09-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":327,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"xianlinc"},"content":"**Use case: Add a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":330,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":331,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":332,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":333,"author":{"gitId":"xianlinc"},"content":"1. User requests to add a client","lastModifiedDate":"2021-10-03"},{"lineNumber":334,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal adds the client","lastModifiedDate":"2021-10-03"},{"lineNumber":335,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":336,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":338,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":340,"author":{"gitId":"xianlinc"},"content":"* 1a. The given details are of an invalid format","lastModifiedDate":"2021-10-03"},{"lineNumber":341,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":342,"author":{"gitId":"xianlinc"},"content":"    * 1a1. InsurancePal shows an error message","lastModifiedDate":"2021-10-03"},{"lineNumber":343,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"xianlinc"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":345,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":346,"author":{"gitId":"xianlinc"},"content":"**Use case: List all clients**","lastModifiedDate":"2021-10-03"},{"lineNumber":347,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":348,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":349,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":350,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":351,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":352,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":353,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":355,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":356,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":357,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":358,"author":{"gitId":"xianlinc"},"content":"    * 2a1. InsurancePal displays an empty list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":359,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":360,"author":{"gitId":"xianlinc"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":361,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":362,"author":{"gitId":"xianlinc"},"content":"**Use case: Edit a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":363,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":364,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":365,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":366,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":367,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":368,"author":{"gitId":"xianlinc"},"content":"3. User requests to edit a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":369,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal edits the client","lastModifiedDate":"2021-10-03"},{"lineNumber":370,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":371,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":377,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":380,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":382,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":383,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":384,"author":{"gitId":"xianlinc"},"content":"**Use case: Finding a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":385,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":386,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":387,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":388,"author":{"gitId":"xianlinc"},"content":"1. User requests to find a client using keywords","lastModifiedDate":"2021-10-03"},{"lineNumber":389,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients whose names match at least one keyword","lastModifiedDate":"2021-10-03"},{"lineNumber":390,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":391,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"xianlinc"},"content":"**Use case: Delete a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":398,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":399,"author":{"gitId":"xianlinc"},"content":"3. User requests to delete a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":400,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal delete the client","lastModifiedDate":"2021-10-03"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"xianlinc"},"content":"**Use case: Clear the InsurancePal**","lastModifiedDate":"2021-09-29"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":417,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"xianlinc"},"content":"1. User requests to clear the InsurancePal","lastModifiedDate":"2021-09-29"},{"lineNumber":420,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal clears all entries in it","lastModifiedDate":"2021-09-29"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"xianlinc"},"content":"**Use case: Add reveneue to a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":425,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":426,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":427,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":428,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":429,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":430,"author":{"gitId":"xianlinc"},"content":"3. User requests to add revenue to a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":431,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal adds revenue to the client","lastModifiedDate":"2021-10-03"},{"lineNumber":432,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":433,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":437,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":439,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":440,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":441,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":442,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"xianlinc"},"content":"* 3b. The given revenue is of an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":447,"author":{"gitId":"xianlinc"},"content":"    * 3b1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":448,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":449,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":450,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":451,"author":{"gitId":"xianlinc"},"content":"**Use case: Add a claim to a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":452,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":453,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":454,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":455,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":456,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":457,"author":{"gitId":"xianlinc"},"content":"3. User requests to add a claim to a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":458,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal adds the claim to the client","lastModifiedDate":"2021-10-03"},{"lineNumber":459,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":460,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":465,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":466,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":469,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":470,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":471,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":472,"author":{"gitId":"xianlinc"},"content":"* 3b. The given claim is of an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":473,"author":{"gitId":"xianlinc"},"content":"    * 3b1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":474,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":475,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":476,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"xianlinc"},"content":"**Use case: Add a note to a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":478,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":479,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":481,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":482,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":483,"author":{"gitId":"xianlinc"},"content":"3. User requests to add a note to a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":484,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal adds a note to the client","lastModifiedDate":"2021-10-03"},{"lineNumber":485,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":487,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":494,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":496,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":499,"author":{"gitId":"xianlinc"},"content":"**Use case: Schedule a meeting**","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":501,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":502,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":503,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":504,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":505,"author":{"gitId":"xianlinc"},"content":"3. User requests to schedule a meeting with a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":506,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal schedules a meeting with the client","lastModifiedDate":"2021-10-03"},{"lineNumber":507,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":513,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":514,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":515,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":516,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":517,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":518,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":520,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":521,"author":{"gitId":"xianlinc"},"content":"* 3b. The given meeting time is of an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":522,"author":{"gitId":"xianlinc"},"content":"    * 3b1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":523,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":524,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"xianlinc"},"content":"**Use case: Add insurance to a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":527,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":528,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":529,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":530,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":531,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":532,"author":{"gitId":"xianlinc"},"content":"3. User requests to add insurance to a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":533,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal adds insurance to the client","lastModifiedDate":"2021-10-03"},{"lineNumber":534,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":535,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":536,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":537,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":538,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":539,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":540,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":541,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":542,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":543,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":544,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":545,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":546,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":547,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":548,"author":{"gitId":"xianlinc"},"content":"* 3b. The given insurance is of an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":549,"author":{"gitId":"xianlinc"},"content":"    * 3b1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":550,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":551,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"xianlinc"},"content":"2. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-03"},{"lineNumber":557,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"rldefa"},"content":"4. New users should be able to easily see where to find information on how to use the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":559,"author":{"gitId":"rldefa"},"content":"5. Should inform user of the necessary amendments to make to their input when receiving a bad input.","lastModifiedDate":"2021-09-27"},{"lineNumber":560,"author":{"gitId":"rldefa"},"content":"6. Data should be transferable between different devices that are both running InsurancePal.","lastModifiedDate":"2021-09-27"},{"lineNumber":561,"author":{"gitId":"rldefa"},"content":"7. Each command should be successfully executed within 1 second.","lastModifiedDate":"2021-09-27"},{"lineNumber":562,"author":{"gitId":"rldefa"},"content":"8. Should not exit unexpectedly as a result of software implementation regardless of user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":563,"author":{"gitId":"rldefa"},"content":"9. Should not modify information stored without explicit permission or instruction by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":564,"author":{"gitId":"rldefa"},"content":"10. Should not allow duplicate entries.","lastModifiedDate":"2021-09-27"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Notes**: A short paragraph that is written for a person to remind the user about details of that person","lastModifiedDate":"2021-09-30"},{"lineNumber":570,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Client**: A person the user is selling or trying to sell insurance to","lastModifiedDate":"2021-10-11"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"xianlinc"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample clients. The window size may not be optimum.","lastModifiedDate":"2021-10-03"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"xianlinc"},"content":"### Deleting a client","lastModifiedDate":"2021-10-03"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"xianlinc"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2021-10-03"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"xianlinc"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-10-03"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"xianlinc"},"content":"      Expected: First client is deleted from the list. Details of the deleted client shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-03"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"xianlinc"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-03"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JoelChanZhiYang":3,"xianlinc":214,"CheahYan":36,"kawaiigabrielneko":2,"-":362,"rldefa":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"Insurance Pal is a client management software specially designed to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"1. Download the latest `InsurancePal.jar` from [here](https://github.com/AY2122S1-CS2103T-T17-4/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your InsurancePal.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"kawaiigabrielneko"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… [i/INSURANCE]…​`","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"kawaiigabrielneko"},"content":"* `INSURANCE` is limited to the following, with any capitalization: `life`, `health`, `general`","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"kawaiigabrielneko"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal i/life`","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"kawaiigabrielneko"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]… [i/INSURANCE]…​`","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"kawaiigabrielneko"},"content":"* `INSURANCE` is limited to the following, with any capitalization: `life`, `health`, `general`","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"kawaiigabrielneko"},"content":"* When editing tags or insurances, the existing tags/insurances of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"kawaiigabrielneko"},"content":"* You can remove all the person’s tags/insurances by typing `t/`/`i/` without","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"kawaiigabrielneko"},"content":"    specifying any tags/insurances after it.","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"kawaiigabrielneko"},"content":"*  `edit 2 n/Betsy Crower t/ i/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags and insurances.","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"JoelChanZhiYang"},"content":"### Adding a claim: `claim`","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"JoelChanZhiYang"},"content":"Adds a insurance claim to an existing person in the address book","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"JoelChanZhiYang"},"content":"Format: `claim INDEX t/TITLE d/DESCRIPTION s/STATUS`","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"JoelChanZhiYang"},"content":"* Adds an insurance claim to the person specified at `INDEX`","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"JoelChanZhiYang"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"JoelChanZhiYang"},"content":"* The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"JoelChanZhiYang"},"content":"* `TITLE` is a unique identifying description of the claim","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"JoelChanZhiYang"},"content":"* `DESCRIPTION` is a string describing the nature of the insurance claim","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"JoelChanZhiYang"},"content":"* `STATUS` is a string describing the status of the insurance claim","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"JoelChanZhiYang"},"content":"* If the person has a claim with the same title exists, the claim is updated instead","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"JoelChanZhiYang"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"JoelChanZhiYang"},"content":"* `claim 1 t/Hospital Claim d/Broke a leg s/Pending`","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"JoelChanZhiYang"},"content":"* `claim 1 t/Hospital Claim d/Broke left leg`","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"JoelChanZhiYang"},"content":"    * If a claim titled “Hospital Claim” already exists, the description will be updated to “Broke left leg”","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"xianlinc"},"content":"### Adding a note: `note`","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"xianlinc"},"content":"Adds a note to an existing person in the address book","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"xianlinc"},"content":"Format: `note INDEX n/NOTE`","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"xianlinc"},"content":"* Adds a note to the person at the specified `INDEX`.","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"xianlinc"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"xianlinc"},"content":"* The index must be a positive integer 1, 2, 3,...","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"xianlinc"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"xianlinc"},"content":"* `list` followed by `note 2 n/Meet for lunch` adds a note that says Meet for lunch to the 2nd person in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"xianlinc"},"content":"* `find Betsy` followed by `note 1 n/Birthday on 12 Dec` adds a note that says Birthday on 12 Dec  to the 1st person in the results of the find command.","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"rldefa"},"content":"### Schedule appointment: `schedule`","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"rldefa"},"content":"Schedule a meeting with a specific person","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"rldefa"},"content":"Format: `schedule INDEX m/MEETING_TIME`","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"rldefa"},"content":"* Schedule a meeting with the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"rldefa"},"content":"* `MEETING_TIME` must be of the format `dd-mmm-yyyy hh:mm`","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"rldefa"},"content":"* First letter of month is capitalised while rest are not.","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"rldefa"},"content":"* Only store 1 appointment for each user","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"rldefa"},"content":"* Use the same command with different datetime to change the meeting timing","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"rldefa"},"content":"* You can remove the appointment by specifying `m/` without any datetime after it.","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":194,"author":{"gitId":"rldefa"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":195,"author":{"gitId":"rldefa"},"content":"* `schedule 3 m/05-Feb-2022 15:30`","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"rldefa"},"content":"* `schedule 5 m/05-Dec-2021 20:00`","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"CheahYan"},"content":"### Adding Revenue: `revenue` ","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"CheahYan"},"content":"Adds revenue earned from an existing person in the address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"CheahYan"},"content":"Format: `revenue INDEX r/AMOUNT`","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"CheahYan"},"content":"* Adds to the revenue earned from an existing person specified by `INDEX` in the address book by the given `AMOUNT`.","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"CheahYan"},"content":"The amount refers to the amount of revenue that the user earn from an existing person in S$. The amount can be **any","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"CheahYan"},"content":"float number of up to 2 decimal places 100, 250.11, 50000, ...**","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"CheahYan"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"CheahYan"},"content":"* The index must be **a positive integer 1, 2, 3, ...**","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"CheahYan"},"content":"* Existing value will be updated with the current value added to the `AMOUNT` given.","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"CheahYan"},"content":"* Default value for revenue of a person will be 0 when he/she is added to the address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"CheahYan"},"content":"* Revenue of an existing person in the address book should never be **negative**.","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"CheahYan"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"CheahYan"},"content":"* `revenue 1 r/100.95` will update the revenue of first person in the contact list to be `100.95`. (Assuming revenue of","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"CheahYan"},"content":"the first person in the contact list was 0).","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"CheahYan"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal` (Assuming Betsy Crowe is","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"CheahYan"},"content":"the second person in the contact list) followed by `revenue 2 r/350` and followed by `revenue 2 r/-100.11` will update the ","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"CheahYan"},"content":"revenue of Betsy Crowe to be `249.89`.","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"JoelChanZhiYang"},"content":"InsurancePal data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":235,"author":{"gitId":"JoelChanZhiYang"},"content":"InsurancePal data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":238,"author":{"gitId":"JoelChanZhiYang"},"content":"If your changes to the data file makes its format invalid, InsurancePal will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"JoelChanZhiYang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InsurancePal home folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"kawaiigabrielneko"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… [i/INSURANCE]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague i/life i/health`","lastModifiedDate":"2021-09-28"},{"lineNumber":256,"author":{"gitId":"JoelChanZhiYang"},"content":"**Claim** | `claim 1 t/Hospital Claim d/Broke a leg s/Pending`","lastModifiedDate":"2021-09-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"kawaiigabrielneko"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]… [i/INSURANCE]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-09-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"JoelChanZhiYang"},"content":"**Note** | `note 2 n/Meet for lunch`","lastModifiedDate":"2021-09-30"},{"lineNumber":264,"author":{"gitId":"JoelChanZhiYang"},"content":"**Revenue** | `revenue -100.11`","lastModifiedDate":"2021-09-30"},{"lineNumber":265,"author":{"gitId":"JoelChanZhiYang"},"content":"**Schedule** | `schedule 3 m/05-Feb-2022 15:30`","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":32,"xianlinc":12,"CheahYan":22,"kawaiigabrielneko":11,"-":173,"rldefa":15}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"title: InsurancePal","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-T17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-T17-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T17-4/tp/branch/master/graph/badge.svg?token\u003dW8OO51MUAS)](https://codecov.io/gh/AY2122S1-CS2103T-T17-4/tp)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"InsurancePal is a client management software specially designed to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"* If you are interested in using InsurancePal, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"* If you are interested about developing InsurancePal, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JoelChanZhiYang":6,"-":13}},{"path":"docs/team/cheahyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"title: Cheah Yan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"### Project: InsurancePal","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"Insurance Pal is a client management software specially designed","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"* **Project Management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"  * User Guide","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"      * Wrote documentation for revenue feature","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"  * Developer Guide","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"      * Added target user profile, value proposition and user stories to the developer guide","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"CheahYan":21}},{"path":"docs/team/joelchanzhiyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"title: Joel Chan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"### Project: InsurancePal","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"Insurance Pal is a client management software specially designed","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"* **New Feature**: Added the ability for the user to add the status of insurance","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"claims to a contact","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"  * *What it does:*: Given the title, description and status of the claim, a user can add a insurance claim to ","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"  * *Justification:* Insurance agents have to manage insurance claims of their clients","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Project Management**:","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"  * Managed issues for milestone v1.1 on GitHub","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"  * Managed issues for milestone v1.2 on GitHub","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"  * Wrote documentation for claims feature","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Community**:","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"  * PRs Reviewed (with non-trivial comments): [#23](https://github.com/AY2122S1-CS2103T-T17-4/tp/pull/23)","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Tools**:","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"  * Added CodeCov integration to the repo","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"  * Set up project website","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Code Contributed**","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"  * [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dJoelChanZhiYang\u0026tabRepo\u003dAY2122S1-CS2103T-T17-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"JoelChanZhiYang":27}},{"path":"docs/team/kawaiigabrielneko.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"title: Gabriel Goh\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"* **New Feature**: Added insurances.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"  * What it does: Allows the user keep track of all insurances held by each person in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kawaiigabrielneko":25}},{"path":"docs/team/rldefa.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"title: Richard Li\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"### Project: InsurancePal","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"Insurance Pal is a client management software specially designed","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"* **New Feature**: Added the ability to schedule meetings with individual contacts.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    * What it does: allows the user to schedule meetings with individuals. User can remove and edit scheduled meetings through the same feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    * Justification: Our target users are insurance agents, who have to meet up with many clients often. This feature allows them to keep track of who they are meeting and when.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"        * Added documentation for the features `schedule` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"        * Add more non-functional requirements to developers guide.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rldefa":25}},{"path":"docs/team/xianlinc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xianlinc"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"xianlinc"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"xianlinc"},"content":"title: Chng Xian Lin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"xianlinc"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"xianlinc"},"content":"### Project: InsurancePal","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"Insurance Pal is a client management software specially designed","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xianlinc"},"content":"to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"xianlinc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"xianlinc"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"xianlinc"},"content":"    * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"xianlinc"},"content":"        * Added documentation for the features `note`","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"xianlinc"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"xianlinc"},"content":"        * Added use cases to the developer guide.","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"xianlinc":17}},{"path":"src/main/java/seedu/address/commons/core/Money.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"public class Money {","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"    private static final float CONVERT_BETWEEN_CURRENCY \u003d 100f;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"    private int cents;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"    public Money(float dollars) {","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"        this.cents \u003d (int) (dollars * CONVERT_BETWEEN_CURRENCY);","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"    public int getCents() {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"        return this.cents;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    public float getInDollars() {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"        return (this.cents / CONVERT_BETWEEN_CURRENCY);","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"                || (other instanceof Money // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"                \u0026\u0026 (cents \u003d\u003d ((Money) other).getCents())); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"        return \"S$\" + String.format(\"%.02f\", this.getInDollars());","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"CheahYan":30}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"xianlinc"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"            + \"[\" + PREFIX_INSURANCE + \"INSURANCE]... \"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"xianlinc"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE]\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"xianlinc"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"            + PREFIX_INSURANCE + \"Life \"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"xianlinc"},"content":"            + PREFIX_NOTE + \"Has a medical condition\";","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xianlinc":5,"CheahYan":1,"kawaiigabrielneko":3,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/ClaimCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ClaimCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String COMMAND_WORD \u003d \"claim\";","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"            + \": Adds a claim to the person identified by the index number used in the displayed person list.\"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"            + \"Claims with the same name will be overwritten. Statuses can only be \u0027pending\u0027 or \u0027completed\u0027 \\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"            + \"[\" + PREFIX_NAME + \"TITLE]\"","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]\"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS]\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"            + \"Example: \" + COMMAND_WORD + \"1\"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"            + PREFIX_NAME + \"Heart surgery\"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"            + PREFIX_DESCRIPTION + \"Pre-existing condition\"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"            + PREFIX_STATUS + \"Pending\";","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String MESSAGE_CLAIM_ADDED_SUCCESS \u003d \"Claim added: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final Index index;","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final Claim claim;","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructs an {@Code ClaimCommand}","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param index A valid index","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param claim A valid claim","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ClaimCommand(Index index, Claim claim) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireAllNonNull(index, claim);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.claim \u003d claim;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"        Person personToAddClaim \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"        HashSet\u003cClaim\u003e claims \u003d new HashSet\u003c\u003e(personToAddClaim.getClaims());","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"        claims.remove(this.claim);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"        claims.add(this.claim);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"        Person newPerson \u003d new Person(personToAddClaim, claims);","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"        model.setPerson(personToAddClaim, newPerson);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new CommandResult(String.format(MESSAGE_CLAIM_ADDED_SUCCESS, claim));","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"            return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!(other instanceof ClaimCommand)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"JoelChanZhiYang"},"content":"            return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"JoelChanZhiYang"},"content":"        ClaimCommand e \u003d (ClaimCommand) other;","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"JoelChanZhiYang"},"content":"        return index.equals(e.index) \u0026\u0026 claim.equals(e.claim);","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"JoelChanZhiYang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"JoelChanZhiYang"},"content":"        return Objects.hash(index, claim);","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":93}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"xianlinc"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"            + \"[\" + PREFIX_INSURANCE + \"INSURANCE]...\"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"xianlinc"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE]\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"CheahYan"},"content":"        Revenue originalRevenue \u003d personToEdit.getRevenue();","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"kawaiigabrielneko"},"content":"        Set\u003cInsurance\u003e updatedInsurances \u003d editPersonDescriptor.getInsurances()","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"kawaiigabrielneko"},"content":"                .orElse(personToEdit.getInsurances());","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"JoelChanZhiYang"},"content":"        Set\u003cClaim\u003e originalClaims \u003d personToEdit.getClaims();","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"xianlinc"},"content":"        Note updatedNote \u003d editPersonDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"rldefa"},"content":"        Appointment originalAppointment \u003d personToEdit.getAppointment();","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, originalRevenue, updatedAddress,","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"JoelChanZhiYang"},"content":"                updatedTags, updatedInsurances, updatedNote, originalAppointment, originalClaims);","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"CheahYan"},"content":"        private Revenue revenue;","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Set\u003cInsurance\u003e insurances;","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"xianlinc"},"content":"        private Note note;","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"CheahYan"},"content":"            setRevenue(toCopy.revenue);","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setInsurances(toCopy.insurances);","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"xianlinc"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"xianlinc"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, insurances, note);","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"CheahYan"},"content":"        public void setRevenue(Revenue revenue) {","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"CheahYan"},"content":"            this.revenue \u003d revenue;","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"CheahYan"},"content":"        public Optional\u003cRevenue\u003e getRevenue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"CheahYan"},"content":"            return Optional.ofNullable(revenue);","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-09-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * Sets {@code insurances} to this object\u0027s {@code insurances}.","lastModifiedDate":"2021-09-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code insurances} is used internally.","lastModifiedDate":"2021-09-14"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-09-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void setInsurances(Set\u003cInsurance\u003e insurances) {","lastModifiedDate":"2021-09-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            this.insurances \u003d (insurances !\u003d null) ? new HashSet\u003c\u003e(insurances) : null;","lastModifiedDate":"2021-09-14"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-09-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable insurance set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-09-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code insurances} is null.","lastModifiedDate":"2021-09-14"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-09-14"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cInsurance\u003e\u003e getInsurances() {","lastModifiedDate":"2021-09-14"},{"lineNumber":248,"author":{"gitId":"kawaiigabrielneko"},"content":"            return (insurances !\u003d null)","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"kawaiigabrielneko"},"content":"                    ? Optional.of(Collections.unmodifiableSet(insurances)) : Optional.empty();","lastModifiedDate":"2021-10-10"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":251,"author":{"gitId":"xianlinc"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2021-10-08"},{"lineNumber":252,"author":{"gitId":"xianlinc"},"content":"            this.note \u003d note;","lastModifiedDate":"2021-10-08"},{"lineNumber":253,"author":{"gitId":"xianlinc"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":254,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":255,"author":{"gitId":"xianlinc"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2021-10-08"},{"lineNumber":256,"author":{"gitId":"xianlinc"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2021-10-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":277,"author":{"gitId":"CheahYan"},"content":"                    \u0026\u0026 getRevenue().equals(e.getRevenue())","lastModifiedDate":"2021-10-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-08"},{"lineNumber":280,"author":{"gitId":"kawaiigabrielneko"},"content":"                    \u0026\u0026 getInsurances().equals(e.getInsurances())","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"xianlinc"},"content":"                    \u0026\u0026 getNote().equals(e.getNote());","lastModifiedDate":"2021-10-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"JoelChanZhiYang":3,"xianlinc":15,"CheahYan":13,"kawaiigabrielneko":9,"-":242,"rldefa":2}},{"path":"src/main/java/seedu/address/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xianlinc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"xianlinc"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"xianlinc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xianlinc"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"xianlinc"},"content":"//@author xianlinc-reused","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"xianlinc"},"content":"//Reused from https://nus-cs2103-ay2122s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"xianlinc"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xianlinc"},"content":" * Edits a note of an existing person in the InsurancePal","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"xianlinc"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xianlinc"},"content":"public class NoteCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"xianlinc"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"xianlinc"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xianlinc"},"content":"            + \": Edits the note of the person identified \"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"xianlinc"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"xianlinc"},"content":"            + \"Existing note will be overwritten by the input.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xianlinc"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xianlinc"},"content":"            + \"no/[NOTE]\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"xianlinc"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xianlinc"},"content":"            + \"Enjoys western cuisine\";","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"xianlinc"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Note: %2$s\";","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"xianlinc"},"content":"    public static final String MESSAGE_ADD_NOTE_SUCCESS \u003d \"Added note to Person: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"xianlinc"},"content":"    public static final String MESSAGE_DELETE_NOTE_SUCCESS \u003d \"Removed note from Person: %1$s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"xianlinc"},"content":"    private final Index index;","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"xianlinc"},"content":"    private final Note note;","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"xianlinc"},"content":"     * @param index of the person in the filtered person list to add or edit the note","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"xianlinc"},"content":"     * @param note of the person to be updated to","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"xianlinc"},"content":"    public NoteCommand(Index index, Note note) {","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"xianlinc"},"content":"        requireAllNonNull(index, note);","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"xianlinc"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"xianlinc"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"xianlinc"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"xianlinc"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"xianlinc"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"xianlinc"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"xianlinc"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"xianlinc"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"xianlinc"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"xianlinc"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"xianlinc"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), personToEdit.getInsurances(),","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"                note, personToEdit.getAppointment(), personToEdit.getClaims());","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"xianlinc"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"xianlinc"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"xianlinc"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"xianlinc"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"xianlinc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"xianlinc"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"xianlinc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"xianlinc"},"content":"            return true;","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"xianlinc"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"xianlinc"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"xianlinc"},"content":"        if (!(other instanceof NoteCommand)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"xianlinc"},"content":"            return false;","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"xianlinc"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"xianlinc"},"content":"        // state check","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"xianlinc"},"content":"        NoteCommand e \u003d (NoteCommand) other;","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"xianlinc"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"xianlinc"},"content":"                \u0026\u0026 note.equals(e.note);","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"xianlinc"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"xianlinc"},"content":"     * the note is added to or removed from","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"xianlinc"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"xianlinc"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"xianlinc"},"content":"        String message \u003d !note.value.isEmpty() ? MESSAGE_ADD_NOTE_SUCCESS : MESSAGE_DELETE_NOTE_SUCCESS;","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"xianlinc"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"xianlinc"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"JoelChanZhiYang":1,"xianlinc":96,"kawaiigabrielneko":1}},{"path":"src/main/java/seedu/address/logic/commands/RevenueCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":" * Updates the revenue of an existing client in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"public class RevenueCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"    public static final String COMMAND_WORD \u003d \"revenue\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"    public static final String MESSAGE_ADD_REVENUE_SUCCESS \u003d \"Added revenue to Person: %1$s\";","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"    public static final String MESSAGE_ADD_REVENUE_FAIL \u003d \"Failed to add revenue from Person: %1$s, \"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"            + \"resulting revenue is negative!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"    private final Index index;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    private final Revenue revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"     * @param revenue of the person to be updated to","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"    public RevenueCommand(Index index, Revenue revenue) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"        requireAllNonNull(index, revenue);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"        this.revenue \u003d revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"                this.revenue.addRevenue(personToEdit.getRevenue()),","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"                personToEdit.getAddress(), personToEdit.getTags(),","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"                personToEdit.getInsurances(), personToEdit.getNote(),","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"                personToEdit.getAppointment(), personToEdit.getClaims());","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"        if (!editedPerson.getRevenue().isValidResultingRevenue()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"            throw new CommandException((MESSAGE_ADD_REVENUE_FAIL));","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"        return String.format(MESSAGE_ADD_REVENUE_SUCCESS, personToEdit);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"CheahYan"},"content":"                || (other instanceof RevenueCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"CheahYan"},"content":"                \u0026\u0026 revenue.equals(((RevenueCommand) other).revenue) \u0026\u0026 index.equals(((RevenueCommand) other).index));","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"JoelChanZhiYang":1,"CheahYan":77,"kawaiigabrielneko":2}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import java.util.List;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Schedule an appointment with the person identified \"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"            + PREFIX_MEETING + \"MEETING (format: dd-MMM-yyyy HH:mm, only first alphabet of month is capital)\\n\"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"            + PREFIX_MEETING + \"05-Feb-2022 15:00 \\n\";","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"    public static final String MESSAGE_MEET_PERSON_SUCCESS \u003d \"Meeting updated: %1$s\";","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"    private final Index index;","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"    private final Appointment newAppointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"     * @param index of the person to update appointment with","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"     * @param newAppointment the new appointment with the person","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"    public ScheduleCommand(Index index, Appointment newAppointment) {","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"        this.newAppointment \u003d newAppointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"        Person personToMeet \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"        Person newAppointmentPerson \u003d scheduleAppointment(personToMeet, this.newAppointment);","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"        model.setPerson(personToMeet, newAppointmentPerson);","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"        return new CommandResult(String.format(MESSAGE_MEET_PERSON_SUCCESS, newAppointmentPerson));","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"    private static Person scheduleAppointment(Person personToMeet, Appointment desiredAppointment) {","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"rldefa"},"content":"        requireNonNull(personToMeet);","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"rldefa"},"content":"        Name originalName \u003d personToMeet.getName();","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"rldefa"},"content":"        Phone originalPhone \u003d personToMeet.getPhone();","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"rldefa"},"content":"        Email originalEmail \u003d personToMeet.getEmail();","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"kawaiigabrielneko"},"content":"        Revenue originalRevenue \u003d personToMeet.getRevenue();","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"rldefa"},"content":"        Address originalAddress \u003d personToMeet.getAddress();","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"rldefa"},"content":"        Set\u003cTag\u003e originalTags \u003d personToMeet.getTags();","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"kawaiigabrielneko"},"content":"        Set\u003cInsurance\u003e originalInsurances \u003d personToMeet.getInsurances();","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"xianlinc"},"content":"        Note originalNote \u003d personToMeet.getNote();","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"JoelChanZhiYang"},"content":"        Set\u003cClaim\u003e originalClaims \u003d personToMeet.getClaims();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new Person(originalName, originalPhone, originalEmail, originalRevenue,","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"JoelChanZhiYang"},"content":"                originalAddress, originalTags, originalInsurances, originalNote, desiredAppointment,","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"JoelChanZhiYang"},"content":"                originalClaims);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"rldefa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"rldefa"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"rldefa"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"rldefa"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":97,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"rldefa"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"rldefa"},"content":"        if (!(other instanceof ScheduleCommand)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"rldefa"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"rldefa"},"content":"        // state check","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"rldefa"},"content":"        ScheduleCommand e \u003d (ScheduleCommand) other;","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"rldefa"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"rldefa"},"content":"                \u0026\u0026 newAppointment.equals(e.newAppointment);","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"JoelChanZhiYang":4,"xianlinc":2,"kawaiigabrielneko":5,"rldefa":98}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"kawaiigabrielneko"},"content":"                        PREFIX_TAG, PREFIX_INSURANCE, PREFIX_NOTE);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Set\u003cInsurance\u003e insuranceList \u003d ParserUtil.parseInsurances(argMultimap.getAllValues(PREFIX_INSURANCE));","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"xianlinc"},"content":"        Note note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).orElse(\"\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, insuranceList,","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"                note, new Appointment(\"\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"JoelChanZhiYang":4,"xianlinc":3,"kawaiigabrielneko":5,"-":49,"rldefa":1}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.logic.commands.ClaimCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"xianlinc"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"import seedu.address.logic.commands.RevenueCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"        case RevenueCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"            return new RevenueCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"            return new ScheduleCommandParser().parse(arguments);","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"        case ClaimCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"JoelChanZhiYang"},"content":"            return new ClaimCommandParser().parse(arguments);","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"xianlinc"},"content":"        case NoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"xianlinc"},"content":"            return new NoteCommandParser().parse(arguments);","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JoelChanZhiYang":4,"xianlinc":3,"CheahYan":4,"-":77,"rldefa":4}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean arePrefixesPresent(Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e this.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"JoelChanZhiYang":8,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/ClaimCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.logic.commands.ClaimCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Description;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Status;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Title;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ClaimCommandParser implements Parser\u003cClaimCommand\u003e {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ClaimCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"                PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_STATUS);","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_NAME, PREFIX_DESCRIPTION, PREFIX_STATUS)","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClaimCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"        Index index;","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClaimCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        Title title \u003d ParserUtil.parseTitle(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"        Claim claim \u003d new Claim(title, description, status);","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new ClaimCommand(index, claim);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":45}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_INSURANCE \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    public static final Prefix PREFIX_REVENUE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    public static final Prefix PREFIX_MEETING \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"xianlinc"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"no/\");","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JoelChanZhiYang":2,"CheahYan":1,"xianlinc":1,"-":15,"rldefa":1}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"kawaiigabrielneko"},"content":"                        PREFIX_TAG, PREFIX_INSURANCE, PREFIX_NOTE);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"        parseInsurancesForEdit(argMultimap.getAllValues(PREFIX_INSURANCE))","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"                .ifPresent(editPersonDescriptor::setInsurances);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"xianlinc"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"xianlinc"},"content":"            editPersonDescriptor.setNote(ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get()));","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"xianlinc"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e insurances} into a {@code Set\u003cInsurance\u003e}","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * if {@code insurances} is non-empty.","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * If {@code insurances} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code Set\u003cInsurance\u003e} containing zero insurances.","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cInsurance\u003e\u003e parseInsurancesForEdit(Collection\u003cString\u003e insurances)","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throws ParseException {","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert insurances !\u003d null;","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (insurances.isEmpty()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e insuranceSet \u003d insurances.size() \u003d\u003d 1 \u0026\u0026 insurances.contains(\"\")","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                ? Collections.emptySet() : insurances;","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseInsurances(insuranceSet));","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"JoelChanZhiYang":1,"xianlinc":4,"kawaiigabrielneko":4,"-":99}},{"path":"src/main/java/seedu/address/logic/parser/NoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xianlinc"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"xianlinc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"xianlinc"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xianlinc"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"xianlinc"},"content":"//@author xianlinc-reused","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"xianlinc"},"content":"//Reused from https://nus-cs2103-ay2122s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"xianlinc"},"content":"public class NoteCommandParser {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xianlinc"},"content":"     * Parses the given {@code String} of arguments in the context of the NoteCommand","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xianlinc"},"content":"     * and returns a NoteCommand for execution.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xianlinc"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if the user input","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"xianlinc"},"content":"     * does not conform the expected format","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"xianlinc"},"content":"    public NoteCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"xianlinc"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xianlinc"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"xianlinc"},"content":"                PREFIX_NOTE);","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xianlinc"},"content":"        Index index;","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xianlinc"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xianlinc"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xianlinc"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xianlinc"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"xianlinc"},"content":"                    NoteCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"xianlinc"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"xianlinc"},"content":"        Note note \u003d new Note(argMultimap.getValue(PREFIX_NOTE).orElse(\"\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"xianlinc"},"content":"        return new NoteCommand(index, note);","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"xianlinc"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"xianlinc":41}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"import seedu.address.logic.commands.RevenueCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Description;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Status;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Title;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"CheahYan"},"content":"     * Parses a {@code String revenue} into a {@code Revenue}.","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"CheahYan"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"CheahYan"},"content":"     * @throws ParseException if the given {@code revenue} is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"CheahYan"},"content":"    public static Revenue parseRevenue(String revenue) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"CheahYan"},"content":"        requireNonNull(revenue);","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"CheahYan"},"content":"        String trimmedRevenue \u003d revenue.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"CheahYan"},"content":"        if (!Revenue.isValidRevenue(trimmedRevenue)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"CheahYan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"CheahYan"},"content":"                    RevenueCommand.COMMAND_WORD));","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"CheahYan"},"content":"        float number \u003d Float.valueOf(trimmedRevenue);","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"CheahYan"},"content":"        return new Revenue(new Money(number));","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Parses a {@code String insurance} into an {@code Insurance}.","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code insurance} is invalid.","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static Insurance parseInsurance(String insurance) throws ParseException {","lastModifiedDate":"2021-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(insurance);","lastModifiedDate":"2021-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String trimmedInsurance \u003d insurance.trim();","lastModifiedDate":"2021-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Insurance.of(trimmedInsurance);","lastModifiedDate":"2021-09-14"},{"lineNumber":165,"author":{"gitId":"kawaiigabrielneko"},"content":"        } catch (IllegalValueException exception) {","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new ParseException(Insurance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e insurances} into a {@code Set\u003cInsurance\u003e}.","lastModifiedDate":"2021-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public static Set\u003cInsurance\u003e parseInsurances(Collection\u003cString\u003e insurances) throws ParseException {","lastModifiedDate":"2021-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        requireNonNull(insurances);","lastModifiedDate":"2021-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final Set\u003cInsurance\u003e insuranceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        for (String insuranceName : insurances) {","lastModifiedDate":"2021-09-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            insuranceSet.add(parseInsurance(insuranceName));","lastModifiedDate":"2021-09-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        return insuranceSet;","lastModifiedDate":"2021-09-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":181,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"xianlinc"},"content":"     * Parses {@code String note} into a {@code Note}","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"xianlinc"},"content":"    public static Note parseNote(String note) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"xianlinc"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"xianlinc"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"xianlinc"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":192,"author":{"gitId":"rldefa"},"content":"     * Parses a {@code String meetingDateTime} into a {@code Appointment}.","lastModifiedDate":"2021-09-24"},{"lineNumber":193,"author":{"gitId":"rldefa"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-24"},{"lineNumber":194,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":195,"author":{"gitId":"rldefa"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-09-24"},{"lineNumber":196,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":197,"author":{"gitId":"rldefa"},"content":"    public static Appointment parseAppointment(String meetingDateTime) throws ParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":198,"author":{"gitId":"rldefa"},"content":"        requireNonNull(meetingDateTime);","lastModifiedDate":"2021-09-24"},{"lineNumber":199,"author":{"gitId":"rldefa"},"content":"        String trimmedDateTime \u003d meetingDateTime.trim();","lastModifiedDate":"2021-09-24"},{"lineNumber":200,"author":{"gitId":"rldefa"},"content":"        if (!Appointment.isValidMeetingTime(trimmedDateTime)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":201,"author":{"gitId":"rldefa"},"content":"            throw new ParseException(Appointment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-24"},{"lineNumber":202,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":203,"author":{"gitId":"rldefa"},"content":"        return new Appointment(trimmedDateTime);","lastModifiedDate":"2021-09-24"},{"lineNumber":204,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":205,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws ParseException if given {@code description} is invalid","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":214,"author":{"gitId":"JoelChanZhiYang"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":215,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!(Description.isValidDescription(trimmedDescription))) {","lastModifiedDate":"2021-10-07"},{"lineNumber":216,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":217,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":218,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new Description(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":219,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":220,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":221,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Parses a {@code String title} into a {@code Title}.","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws ParseException if given {@code title} is invalid","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static Title parseTitle(String title) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":228,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-07"},{"lineNumber":229,"author":{"gitId":"JoelChanZhiYang"},"content":"        String trimmedTitle \u003d title.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":230,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!Title.isValidTitle(trimmedTitle)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":231,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":233,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new Title(title);","lastModifiedDate":"2021-10-07"},{"lineNumber":234,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":236,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @throws ParseException if given {@code status} is invalid","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"JoelChanZhiYang"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":245,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":246,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":247,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":248,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new Status(status);","lastModifiedDate":"2021-10-07"},{"lineNumber":249,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"JoelChanZhiYang":48,"CheahYan":22,"xianlinc":10,"kawaiigabrielneko":4,"-":151,"rldefa":15}},{"path":"src/main/java/seedu/address/logic/parser/RevenueCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REVENUE;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"import seedu.address.logic.commands.RevenueCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"public class RevenueCommandParser implements Parser\u003cRevenueCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"     * Parses the given {@code String} of arguments in the context of the RevenueCommand","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"     * and returns a RevenueCommand object for execution.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"     * @param args Command input by the user to be parsed.","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"     * @return RevenueCommand object for execution based on the command input given.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"     * @throws ParseException If the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"    public RevenueCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REVENUE);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"        Index index;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"                    RevenueCommand.COMMAND_WORD), ive);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"        Revenue revenue \u003d ParserUtil.parseRevenue(argMultimap.getValue(PREFIX_REVENUE).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"        return new RevenueCommand(index, revenue);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"CheahYan":39}},{"path":"src/main/java/seedu/address/logic/parser/ScheduleCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEETING;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"public class ScheduleCommandParser implements Parser\u003cScheduleCommand\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"     * Parses the given {@code String} of arguments in the context of the ScheduleCommand","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"     * and returns an ScheduleCommand object for execution.","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"     * @throws seedu.address.logic.parser.exceptions.ParseException if user input does not conform the expected format","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    public ScheduleCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_MEETING);","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"        Index index;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        if (!argMultimap.getValue(PREFIX_MEETING).isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"        Appointment newAppointment \u003d ParserUtil.parseAppointment(argMultimap.getValue(PREFIX_MEETING).get());","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"        return new ScheduleCommand(index, newAppointment);","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"rldefa":40}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":" * Represents a scheduled appointment with an individual.","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":" * If appointment does not exist, appointment field is null.","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"public class Appointment {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"            \"Meeting should be in the following format: dd-MMM-yyyy HH:mm \"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"                    + \"where only first alphabet of the month is capitalised.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"            .ofPattern(\"dd-MMM-yyyy HH:mm\"); // Specific format as described in argument.","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"    private final LocalDateTime appointmentTime;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"     * Creates an appointment that describes","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"     * @param dateTimeString the string representation of the desired appointment.","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"    public Appointment(String dateTimeString) {","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        requireNonNull(dateTimeString);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"        checkArgument(isValidMeetingTime(dateTimeString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"        if (dateTimeString.equals(\"\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"            this.appointmentTime \u003d null;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"        } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"            this.appointmentTime \u003d Appointment.parseString(dateTimeString);","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"    public String toString() {","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"        if (appointmentTime \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"            return \"\";","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"        return this.appointmentTime.format(FORMATTER);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"                || (other instanceof Appointment // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"                    \u0026\u0026 (appointmentTime \u003d\u003d null \u0026\u0026 ((Appointment) other).appointmentTime \u003d\u003d null // both no apptmt","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"                        || appointmentTime.equals(((Appointment) other).appointmentTime))); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"     * Checks whether the string that is supposed to represent a meeting timing is valid.","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"     * @param meetingDateTime the string to check.","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"     * @return true if string is parsable, empty or null.","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"    public static boolean isValidMeetingTime(String meetingDateTime) {","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"        if (meetingDateTime.equals(\"\")) {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"            LocalDateTime.parse(meetingDateTime, FORMATTER);","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"     * Parses and converts the dateTimeString to LocalDateTime object.","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"rldefa"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"rldefa"},"content":"     * @param dateTimeString provided by the user.","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"rldefa"},"content":"     * @return DateTime object representing the date and time of the appointment.","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"rldefa"},"content":"    private static LocalDateTime parseString(String dateTimeString) {","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"rldefa"},"content":"        requireNonNull(dateTimeString);","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"rldefa"},"content":"        return LocalDateTime.parse(dateTimeString, FORMATTER);","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"rldefa"},"content":"    public String getValue() {","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"rldefa"},"content":"        if (this.appointmentTime \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"rldefa"},"content":"            return \"\";","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"rldefa"},"content":"        return this.appointmentTime.format(FORMATTER);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"rldefa":91}},{"path":"src/main/java/seedu/address/model/claim/Claim.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.model.claim;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * Represents a Person\u0027s claim in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" * Guarantees: immutable","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Claim {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final Title title;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final Description description;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final Status status;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructs a {@code Claim}","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param title A valid title","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param description A valid description","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param status A valid status","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Claim(Title title, Description description, Status status) {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireAllNonNull(title, description, status);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Title getTitle() {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"        return title;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"        return description;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Status getStatus() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        return status;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        return \"Claim: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"                + getTitle()","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"                + \"; Description: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"                + getDescription()","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"                + \"; Status: \"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"                + getStatus();","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (o \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!(o instanceof Claim)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"        Claim otherClaim \u003d (Claim) o;","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.title.equals(otherClaim.title);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"        return Objects.hash(title.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":69}},{"path":"src/main/java/seedu/address/model/claim/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.model.claim;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":" * Represents a Claim\u0027s description in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Description {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}\\\\p{Punct}\\\\p{Blank}]*\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description should only contain alphanumeric letters\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructs a {@Code Description}","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param description A valid description","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Description(String description) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.description;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"                \u0026\u0026 this.description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":43}},{"path":"src/main/java/seedu/address/model/claim/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.model.claim;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":" * Represents a Claim\u0027s status in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Status {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"A status can only be pending or completed\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String status;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    private enum StatusState {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"        PENDING, COMPLETED","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructs a {@Code Status}","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param status A valid status","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Status(String status) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(status);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns if a given string is valid","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        for (StatusState state : StatusState.values()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"            if (state.name().equals(test.toUpperCase())) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"                return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.status.toUpperCase();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"                \u0026\u0026 this.status.equalsIgnoreCase(((Status) other).status)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":54}},{"path":"src/main/java/seedu/address/model/claim/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.model.claim;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":" * Represents a Claim\u0027s title in the address book.","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public class Title implements Comparable\u003cTitle\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}\\\\p{Space}]*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Title should only contain alphanumeric letters\";","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String title;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructs a {@Code Title}.","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param title A valid title","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Title(String title) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireNonNull(title);","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        checkArgument(isValidTitle(title), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.title;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"                || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"                \u0026\u0026 this.title.equals(((Title) other).title)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"    public int compareTo(Title o) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this.title.compareTo(o.title);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":48}},{"path":"src/main/java/seedu/address/model/person/Insurance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents an insurance policy that a person can own.","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Insurance {","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /** The suffix that is added to the end of each insurance type */","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String INSURANCE_SUFFIX \u003d \" insurance\";","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String INVALID_ARG_SUFFIX \u003d \" is not an insurance type\";","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \"Insurance type must be one of the following: \"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + String.join(\", \", Arrays.stream(InsuranceType.values())","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                    .map(InsuranceType::getTypeName)","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private InsuranceType type;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Class constructor","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param type The type of this insurance","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Insurance(InsuranceType type) {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Returns an Insurance with the given name","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @param insuranceName The name of the Insurance to return","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return The Insurance with the supplied name","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static Insurance of(String insuranceName) throws IllegalValueException {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        for (InsuranceType type : InsuranceType.values()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"            if (type.getTypeName().equalsIgnoreCase(insuranceName)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                return new Insurance(type);","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"        throw new IllegalValueException(insuranceName + INVALID_ARG_SUFFIX);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Gets the type of this Insurance","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"     * @return","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public InsuranceType getType() {","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return type;","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (this \u003d\u003d obj) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else if (!(obj instanceof Insurance)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"kawaiigabrielneko"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"            Insurance insuranceObj \u003d (Insurance) obj;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"kawaiigabrielneko"},"content":"            return this.type.equals(insuranceObj.type);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"kawaiigabrielneko"},"content":"        return type.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return type.getTypeName() + INSURANCE_SUFFIX;","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"kawaiigabrielneko":30,"-":43}},{"path":"src/main/java/seedu/address/model/person/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xianlinc"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"xianlinc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"xianlinc"},"content":"//@author xianlinc-reused","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"xianlinc"},"content":"//Reused from https://nus-cs2103-ay2122s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"xianlinc"},"content":" * Represents a Note of the person in the InsurancePal.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xianlinc"},"content":" * Guarantees: immutable;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xianlinc"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"xianlinc"},"content":"public class Note {","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"xianlinc"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Notes can take any values, and it should not be blank\";","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"xianlinc"},"content":"    public final String value;","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"xianlinc"},"content":"     * Constructs an {@code Note}.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xianlinc"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xianlinc"},"content":"     * @param note A valid Note.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"xianlinc"},"content":"    public Note(String note) {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"xianlinc"},"content":"        requireNonNull(note);","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"xianlinc"},"content":"        value \u003d note;","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"xianlinc"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"xianlinc"},"content":"    public String toString() {","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xianlinc"},"content":"        return value;","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xianlinc"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xianlinc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"xianlinc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"xianlinc"},"content":"                || (other instanceof Note // instanceof handles nulls","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"xianlinc"},"content":"                \u0026\u0026 value.equals(((Note) other).value)); // state check","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"xianlinc"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"xianlinc"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"xianlinc"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"xianlinc"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"xianlinc":44}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    private final Revenue revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Set\u003cInsurance\u003e insurances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final Set\u003cClaim\u003e claims \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"xianlinc"},"content":"    private final Note note;","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    private final Appointment appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"     * Every field except revenue must be present and not null. Revenue will be set to 0 by default if not stated.","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"                  Set\u003cTag\u003e tags, Set\u003cInsurance\u003e insurances, Note note, Appointment appointment, Set\u003cClaim\u003e claims) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireAllNonNull(name, phone, email, address, tags, insurances, note, appointment, claims);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"        this.revenue \u003d new Revenue(new Money(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.insurances.addAll(insurances);","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.claims.addAll(claims);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"     * Every field for this case is provided and hence a revenue value will be tagged to the person.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"    public Person(Name name, Phone phone, Email email, Revenue revenue, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"             Set\u003cInsurance\u003e insurances, Note note, Appointment appointment, Set\u003cClaim\u003e claims) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"        requireAllNonNull(name, phone, email, revenue, address, tags, insurances, note, appointment, claims);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"        this.revenue \u003d revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.insurances.addAll(insurances);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"xianlinc"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.claims.addAll(claims);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Overridden constructor which takes in a person and overwrites its claims with another set of claims.","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Person(Person previousPerson, Set\u003cClaim\u003e claims) {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"        this(previousPerson.name,","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"                previousPerson.phone,","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"                previousPerson.email,","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"                previousPerson.address,","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"                previousPerson.tags,","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"                previousPerson.insurances,","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"                previousPerson.note,","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"JoelChanZhiYang"},"content":"                previousPerson.appointment,","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"JoelChanZhiYang"},"content":"                claims);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"CheahYan"},"content":"    public Revenue getRevenue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"CheahYan"},"content":"        return revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":106,"author":{"gitId":"xianlinc"},"content":"    public Note getNote() {","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"xianlinc"},"content":"        return note;","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"rldefa"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"rldefa"},"content":"        return appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Returns an immutable claims set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"JoelChanZhiYang"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Set\u003cClaim\u003e getClaims() {","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"JoelChanZhiYang"},"content":"        return Collections.unmodifiableSet(this.claims);","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns an immutable insurance set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public Set\u003cInsurance\u003e getInsurances() {","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(insurances);","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":169,"author":{"gitId":"CheahYan"},"content":"                \u0026\u0026 otherPerson.getRevenue().equals(getRevenue())","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-10-07"},{"lineNumber":172,"author":{"gitId":"JoelChanZhiYang"},"content":"                \u0026\u0026 otherPerson.getClaims().equals(getClaims())","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"kawaiigabrielneko"},"content":"                \u0026\u0026 otherPerson.getInsurances().equals(getInsurances())","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"xianlinc"},"content":"                \u0026\u0026 otherPerson.getNote().equals(getNote());","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"JoelChanZhiYang"},"content":"        return Objects.hash(name, phone, email, revenue, address, tags, insurances, note, claims);","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":190,"author":{"gitId":"CheahYan"},"content":"                .append(\"; Revenue: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"CheahYan"},"content":"                .append(getRevenue())","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":193,"author":{"gitId":"rldefa"},"content":"                .append(getAddress())","lastModifiedDate":"2021-09-24"},{"lineNumber":194,"author":{"gitId":"xianlinc"},"content":"                .append(\"; Note: \")","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"xianlinc"},"content":"                .append(getNote())","lastModifiedDate":"2021-10-10"},{"lineNumber":196,"author":{"gitId":"rldefa"},"content":"                .append(\"; Meeting: \")","lastModifiedDate":"2021-09-24"},{"lineNumber":197,"author":{"gitId":"rldefa"},"content":"                .append(getAppointment());","lastModifiedDate":"2021-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Set\u003cInsurance\u003e insurances \u003d getInsurances();","lastModifiedDate":"2021-09-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        if (!insurances.isEmpty()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            builder.append(\"; Insurances: \");","lastModifiedDate":"2021-09-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            insurances.forEach(builder::append);","lastModifiedDate":"2021-09-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":209,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!claims.isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":210,"author":{"gitId":"JoelChanZhiYang"},"content":"            builder.append(\"; Claims: \");","lastModifiedDate":"2021-10-07"},{"lineNumber":211,"author":{"gitId":"JoelChanZhiYang"},"content":"            claims.forEach(builder::append);","lastModifiedDate":"2021-10-07"},{"lineNumber":212,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"JoelChanZhiYang":37,"CheahYan":19,"xianlinc":9,"kawaiigabrielneko":3,"-":138,"rldefa":10}},{"path":"src/main/java/seedu/address/model/person/Revenue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":" * Represents a Person\u0027s revenue in the address book.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"public class Revenue {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Revenue can take any values, and it should not be negative\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    public final Money value;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"     * @param revenue A valid address.","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"    public Revenue(Money revenue) {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"        requireNonNull(revenue);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"        value \u003d revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"     * Returns true if the resulting Revenue value is a valid.","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    public boolean isValidResultingRevenue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"        return this.value.getInDollars() \u003e\u003d 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"     * Returns true if a given string is a valid revenue.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    public static boolean isValidRevenue(String test) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"            float number \u003d Float.valueOf(test);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"    public String toString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"        return this.value.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"                || (other instanceof Revenue // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"                \u0026\u0026 value.equals(((Revenue) other).value)); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"     * Adds a revenue value to the current revenue.","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"     * @param revenueToBeAdded Revenue value to be added.","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"     * @return A new revenue object with its value the result of the 2 added revenues.","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"    public Revenue addRevenue(Revenue revenueToBeAdded) {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"        int updatedValue \u003d this.value.getCents() + revenueToBeAdded.value.getCents();","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"        float updatedValueInDollars \u003d updatedValue / 100f;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"        Revenue revenue \u003d new Revenue(new Money(updatedValueInDollars));","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"        return revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"CheahYan":76}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.InsuranceType;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"    public static final Revenue ZERO_REVENUE \u003d new Revenue(new Money(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"                new Revenue(new Money(0)), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"                getTagSet(\"friends\"), getInsuranceSet(\"Life\"), new Note(\"Likes chicken\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"                new Appointment(\"\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"                getTagSet(\"colleagues\", \"friends\"), getInsuranceSet(\"Health\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"                new Note(\"Enjoys beef\"), new Appointment(\"\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"kawaiigabrielneko"},"content":"                getTagSet(\"neighbours\"), getInsuranceSet(\"Life\", \"Health\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"                new Note(\"Eats chinese food\"), new Appointment(\"\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"                getTagSet(\"family\"), getInsuranceSet(\"General\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"                new Note(\"Does not eat pork\"), new Appointment(\"\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"                getTagSet(\"classmates\"), getInsuranceSet(\"Life\", \"General\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"                new Note(\"Does not like cake\"), new Appointment(\"\"), new HashSet\u003c\u003e()),","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"                getTagSet(\"colleagues\"), getInsuranceSet(), new Note(\"Does not like coffee\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"                    new Appointment(\"\"), new HashSet\u003c\u003e())","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Returns an Insurance, assumed to be valid","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static Insurance ofValidInsurance(String insuranceName) {","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"kawaiigabrielneko"},"content":"        for (InsuranceType type : InsuranceType.values()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"kawaiigabrielneko"},"content":"            if (type.getTypeName().equalsIgnoreCase(insuranceName)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"kawaiigabrielneko"},"content":"                return new Insurance(type);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"kawaiigabrielneko"},"content":"        assert false; // This shouldn\u0027t happen in testing","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"kawaiigabrielneko"},"content":"        return null;","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Returns an insurance set containing the list of insurances given.","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static Set\u003cInsurance\u003e getInsuranceSet(String... insurances) {","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"kawaiigabrielneko"},"content":"        return Arrays.stream(insurances)","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"kawaiigabrielneko"},"content":"                .map(SampleDataUtil::ofValidInsurance)","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"kawaiigabrielneko"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"JoelChanZhiYang":8,"CheahYan":6,"xianlinc":1,"kawaiigabrielneko":29,"-":53,"rldefa":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClaim.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Description;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Status;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Title;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"class JsonAdaptedClaim {","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Claim\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String title;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String description;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final String status;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    public JsonAdaptedClaim(@JsonProperty(\"title\") String title,","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"                            @JsonProperty(\"description\") String description,","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"                            @JsonProperty(\"status\") String status) {","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.title \u003d title;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    public JsonAdaptedClaim(Claim claim) {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.title \u003d claim.getTitle().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.description \u003d claim.getDescription().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.status \u003d claim.getStatus().toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Claim toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Title.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new Claim(modelTitle, modelDescription, modelStatus);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"JoelChanZhiYang":66}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInsurance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Insurance}.","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedInsurance {","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String insuranceName;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedInsurance(String insuranceName) {","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.insuranceName \u003d insuranceName;","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedInsurance(Insurance source) {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        insuranceName \u003d source.getType().getTypeName();","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getInsuranceName() {","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return insuranceName;","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Insurance toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Insurance.of(insuranceName);","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"kawaiigabrielneko":1,"-":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonIgnoreProperties;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    private final String revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final List\u003cJsonAdaptedClaim\u003e claims \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedInsurance\u003e insurances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"    private final String appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"xianlinc"},"content":"    private final String note;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @JsonIgnoreProperties(ignoreUnknown \u003d true)","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"revenue\") String revenue,","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kawaiigabrielneko"},"content":"            @JsonProperty(\"insurances\") List\u003cJsonAdaptedInsurance\u003e insurances,","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"            @JsonProperty(\"note\") String note, @JsonProperty(\"appointment\") String appointment,","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"            @JsonProperty(\"claims\") List\u003cJsonAdaptedClaim\u003e claims) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"        this.revenue \u003d revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"        if (claims !\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"            this.claims.addAll(claims);","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (insurances !\u003d null) {","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            this.insurances.addAll(insurances);","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"xianlinc"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"CheahYan"},"content":"        revenue \u003d String.valueOf(source.getRevenue().value.getInDollars());","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        insurances.addAll(source.getInsurances().stream()","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedInsurance::new)","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"xianlinc"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"rldefa"},"content":"        appointment \u003d source.getAppointment().getValue();","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"JoelChanZhiYang"},"content":"        claims.addAll(source.getClaims().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"JoelChanZhiYang"},"content":"                .map(JsonAdaptedClaim::new)","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"JoelChanZhiYang"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"JoelChanZhiYang"},"content":"        final List\u003cClaim\u003e personClaims \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"JoelChanZhiYang"},"content":"        for (JsonAdaptedClaim claim : claims) {","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"JoelChanZhiYang"},"content":"            personClaims.add(claim.toModelType());","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"JoelChanZhiYang"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final List\u003cInsurance\u003e personInsurances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (JsonAdaptedInsurance insurance : insurances) {","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            personInsurances.add(insurance.toModelType());","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"CheahYan"},"content":"        final Revenue modelRevenue;","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"CheahYan"},"content":"        if (revenue \u003d\u003d null) {","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"CheahYan"},"content":"            modelRevenue \u003d new Revenue(new Money(0));","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"CheahYan"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"CheahYan"},"content":"            modelRevenue \u003d new Revenue(new Money(Float.parseFloat(revenue)));","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"CheahYan"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"JoelChanZhiYang"},"content":"        final Set\u003cClaim\u003e modelClaims \u003d new HashSet\u003c\u003e(personClaims);","lastModifiedDate":"2021-10-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Set\u003cInsurance\u003e modelInsurances \u003d new HashSet\u003c\u003e(personInsurances);","lastModifiedDate":"2021-09-14"},{"lineNumber":159,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"xianlinc"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"xianlinc"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"xianlinc"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"xianlinc"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"rldefa"},"content":"        if (!Appointment.isValidMeetingTime(appointment)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"rldefa"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"rldefa"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"rldefa"},"content":"        final Appointment modelAppointment \u003d new Appointment(appointment);","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"kawaiigabrielneko"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelRevenue, modelAddress, modelTags,","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"JoelChanZhiYang"},"content":"                modelInsurances, modelNote, modelAppointment, modelClaims);","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JoelChanZhiYang":17,"CheahYan":13,"xianlinc":10,"kawaiigabrielneko":4,"-":121,"rldefa":10}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane insurances;","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"    private Label revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"xianlinc"},"content":"    private Label note;","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"xianlinc"},"content":"    @FXML","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"    private Label meeting;","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"    private VBox claims;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"        revenue.setText(String.valueOf(person.getRevenue().value));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        person.getInsurances().stream()","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .forEach(insurance -\u003e insurances.getChildren().add(","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                        new Label(insurance.getType().getTypeName())));","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"xianlinc"},"content":"        note.setText(person.getNote().value);","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"        meeting.setText(\"Meeting: \" + person.getAppointment().getValue());","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"        person.getClaims().stream()","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"                .sorted(Comparator.comparing(claim -\u003e claim.getTitle()))","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"                .forEach(claim -\u003e claims.getChildren().add(new Label(claim.toString() + \"\\n\")));","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"JoelChanZhiYang":6,"CheahYan":3,"xianlinc":3,"kawaiigabrielneko":1,"-":82,"rldefa":2}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"insurances\" /\u003e","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"      \u003cLabel fx:id\u003d\"revenue\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$revenue\" /\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"xianlinc"},"content":"      \u003cLabel fx:id\u003d\"note\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"      \u003cLabel fx:id\u003d\"meeting\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$meeting\" /\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"      \u003cVBox fx:id\u003d\"claims\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"JoelChanZhiYang":1,"CheahYan":1,"xianlinc":1,"-":37,"rldefa":1}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"xianlinc"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"valid note\",","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xianlinc":2,"-":11,"rldefa":3}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":7,"rldefa":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has asthma\",","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"xianlinc"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has asthma\",","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"xianlinc":4,"-":12,"rldefa":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":7,"rldefa":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    \"insurances\" : [ \"Life\" ],","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has asthma\",","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    \"claims\" : [","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"      {\"title\": \"Knee Surgery\",","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"      \"description\": \"Caused by a fall\",","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"      \"status\": \"completed\"}","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    ],","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"    \"insurances\" : [ \"Life\", \"Health\", \"General\"],","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has cancer\",","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"xianlinc"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has dementia\",","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"xianlinc"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has diabetes\",","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"xianlinc"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has wrist pain\",","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"xianlinc"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has migraines\",","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"xianlinc"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"kawaiigabrielneko"},"content":"    \"insurances\": [\"Health\"],","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"xianlinc"},"content":"    \"note\" : \"Has covid\",","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"    \"appointment\": \"\"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JoelChanZhiYang":6,"xianlinc":13,"kawaiigabrielneko":3,"-":39,"rldefa":7}},{"path":"src/test/java/seedu/address/logic/commands/ClaimCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.ClaimCommand.MESSAGE_CLAIM_ADDED_SUCCESS;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLAIM_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLAIM_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ClaimCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void execute_validInput_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"        Person personToAddClaim \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"        ClaimCommand claimCommand \u003d new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_AMY);","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"        Person personAfterAddClaim \u003d new Person(personToAddClaim, Set.of(CLAIM_AMY));","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        expectedModel.setPerson(personToAddClaim, personAfterAddClaim);","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CLAIM_ADDED_SUCCESS, CLAIM_AMY);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertCommandSuccess(claimCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        ClaimCommand claimCommand \u003d new ClaimCommand(outOfBoundIndex, CLAIM_AMY);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertCommandFailure(claimCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void equals() {","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"        // same values -\u003e return true","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_AMY), new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_AMY));","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        ClaimCommand claimCommand \u003d new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_AMY);","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(claimCommand, claimCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"        // different index -\u003e return false","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertNotEquals(new ClaimCommand(INDEX_SECOND_PERSON, CLAIM_AMY),","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"                new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_AMY));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"        // different claim -\u003e return false","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertNotEquals(new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_BOB),","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"                new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_AMY));","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertNotEquals(new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_AMY), 2);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"JoelChanZhiYang":73}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Description;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Title;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"    public static final String VALID_REVENUE_AMY \u003d \"0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"    public static final String VALID_REVENUE_BOB \u003d \"0\";","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String VALID_INSURANCE_LIFE \u003d \"Life\";","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"kawaiigabrielneko"},"content":"    public static final String VALID_INSURANCE_HEALTH \u003d \"Health\";","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"xianlinc"},"content":"    public static final String VALID_NOTE_AMY \u003d \"Has diabetes\";","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"xianlinc"},"content":"    public static final String VALID_NOTE_BOB \u003d \"Has chronic back pain\";","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String VALID_CLAIM_TITLE_AMY \u003d \"Heart Surgery\";","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String VALID_CLAIM_TITLE_BOB \u003d \"Knee Surgery\";","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String VALID_CLAIM_DESCRIPTION_AMY \u003d \"Done at TTSH\";","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String VALID_CLAIM_DESCRIPTION_BOB \u003d \"Caused by a fall\";","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String VALID_CLAIM_STATUS_AMY \u003d \"Pending\";","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String VALID_CLAIM_STATUS_BOB \u003d \"Completed\";","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String CLAIM_TITLE_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_CLAIM_TITLE_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String CLAIM_DESCRIPTION_DESC_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_CLAIM_DESCRIPTION_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String CLAIM_STATUS_DESC_AMY \u003d \" \" + PREFIX_STATUS + VALID_CLAIM_STATUS_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final Claim CLAIM_AMY \u003d new Claim(new Title(VALID_CLAIM_TITLE_AMY),","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"            new Description(VALID_CLAIM_DESCRIPTION_AMY),","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"            new Status(VALID_CLAIM_STATUS_AMY));","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final Claim CLAIM_BOB \u003d new Claim(new Title(VALID_CLAIM_TITLE_BOB),","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"            new Description(VALID_CLAIM_DESCRIPTION_BOB),","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"            new Status(VALID_CLAIM_STATUS_BOB));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"xianlinc"},"content":"                .withTags(VALID_TAG_FRIEND).withNote(VALID_NOTE_AMY).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"xianlinc"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withNote(VALID_NOTE_BOB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"JoelChanZhiYang":24,"CheahYan":2,"xianlinc":5,"kawaiigabrielneko":2,"-":126}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSURANCE_LIFE;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"kawaiigabrielneko"},"content":"                .withTags(VALID_TAG_HUSBAND).withInsurances(VALID_INSURANCE_LIFE).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).withInsurances(VALID_INSURANCE_LIFE)","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"kawaiigabrielneko"},"content":"                .build();","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kawaiigabrielneko":4,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/NoteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xianlinc"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"xianlinc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"xianlinc"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.commons.core.index.Index.fromZeroBased;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NOTE_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"xianlinc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"xianlinc"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"xianlinc"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"xianlinc"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"xianlinc"},"content":"//@author xianlinc-reused","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"xianlinc"},"content":"//Reused from https://nus-cs2103-ay2122s1.github.io/tp/tutorials/AddRemark.html","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"xianlinc"},"content":"class NoteCommandTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"xianlinc"},"content":"    private static final String Note_STUB \u003d \"Some Note\";","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"xianlinc"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"xianlinc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"xianlinc"},"content":"    public void execute_addNoteUnfilteredList_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"xianlinc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"xianlinc"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNote(Note_STUB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"xianlinc"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(editedPerson.getNote().value));","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"xianlinc"},"content":"        String expectedMessage \u003d String.format(NoteCommand.MESSAGE_ADD_NOTE_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"xianlinc"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"xianlinc"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"xianlinc"},"content":"        assertCommandSuccess(noteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"xianlinc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"xianlinc"},"content":"    public void execute_deleteNoteUnfilteredList_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"xianlinc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"xianlinc"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withNote(\"\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"xianlinc"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"xianlinc"},"content":"                new Note(editedPerson.getNote().toString()));","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"xianlinc"},"content":"        String expectedMessage \u003d String.format(NoteCommand.MESSAGE_DELETE_NOTE_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"xianlinc"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"xianlinc"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"xianlinc"},"content":"        assertCommandSuccess(noteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"xianlinc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"xianlinc"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"xianlinc"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"xianlinc"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"xianlinc"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"xianlinc"},"content":"                .withNote(Note_STUB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"xianlinc"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(INDEX_FIRST_PERSON, new Note(editedPerson.getNote().value));","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"xianlinc"},"content":"        String expectedMessage \u003d String.format(NoteCommand.MESSAGE_ADD_NOTE_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"xianlinc"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"xianlinc"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"xianlinc"},"content":"        assertCommandSuccess(noteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"xianlinc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"xianlinc"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"xianlinc"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"xianlinc"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(outOfBoundIndex, new Note(VALID_NOTE_BOB));","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"xianlinc"},"content":"        assertCommandFailure(noteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"xianlinc"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"xianlinc"},"content":"     * but smaller than size of InsurancePal","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"xianlinc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"xianlinc"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"xianlinc"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"xianlinc"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"xianlinc"},"content":"        // ensures that outOfBoundIndex is still in bounds of InsurancePal list","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"xianlinc"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"xianlinc"},"content":"        NoteCommand noteCommand \u003d new NoteCommand(outOfBoundIndex, new Note(VALID_NOTE_BOB));","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"xianlinc"},"content":"        assertCommandFailure(noteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"xianlinc"},"content":"     * Check if the equals method of NoteCommand is behaving as expected","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"xianlinc"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"xianlinc"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"xianlinc"},"content":"        Index index0 \u003d fromZeroBased(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"xianlinc"},"content":"        Index index1 \u003d fromZeroBased(1);","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"xianlinc"},"content":"        NoteCommand aliceIndex0 \u003d new NoteCommand(index0, ALICE.getNote());","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"xianlinc"},"content":"        NoteCommand aliceIndex1 \u003d new NoteCommand(index1, ALICE.getNote());","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"xianlinc"},"content":"        NoteCommand bobIndex0 \u003d new NoteCommand(index0, BOB.getNote());","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"xianlinc"},"content":"        NoteCommand bobIndex1 \u003d new NoteCommand(index1, BOB.getNote());","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"xianlinc"},"content":"        // same Index and Note -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"xianlinc"},"content":"        assertTrue(aliceIndex0.equals(aliceIndex0));","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"xianlinc"},"content":"        // different Index and Same Note -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"xianlinc"},"content":"        assertFalse(aliceIndex0.equals(aliceIndex1));","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"xianlinc"},"content":"        // same Index and different Note -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"xianlinc"},"content":"        assertFalse(aliceIndex0.equals(bobIndex0));","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"xianlinc"},"content":"        // different Index and Note -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"xianlinc"},"content":"        assertFalse(aliceIndex0.equals(bobIndex1));","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"xianlinc"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"xianlinc":135}},{"path":"src/test/java/seedu/address/logic/commands/RevenueCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REVENUE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"public class RevenueCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"    private static final String REVENUE_STUB \u003d \"100.21f\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"    public void execute_addRevenueUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRevenue(REVENUE_STUB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"        RevenueCommand revenueCommand \u003d new RevenueCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"                new Revenue(editedPerson.getRevenue().value));","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"CheahYan"},"content":"        String expectedMessage \u003d String.format(RevenueCommand.MESSAGE_ADD_REVENUE_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"CheahYan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"CheahYan"},"content":"        assertCommandSuccess(revenueCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"    public void execute_addRevenueFilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"                .withRevenue(REVENUE_STUB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"CheahYan"},"content":"        RevenueCommand revenueCommand \u003d new RevenueCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"CheahYan"},"content":"                new Revenue(editedPerson.getRevenue().value));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"CheahYan"},"content":"        String expectedMessage \u003d String.format(RevenueCommand.MESSAGE_ADD_REVENUE_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"CheahYan"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"CheahYan"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"        assertCommandSuccess(revenueCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"CheahYan"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"        Money moneyOfBob \u003d new Money(Float.valueOf(VALID_REVENUE_BOB));","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"CheahYan"},"content":"        RevenueCommand revenueCommand \u003d new RevenueCommand(outOfBoundIndex, new Revenue(moneyOfBob));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"        assertCommandFailure(revenueCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"CheahYan"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"CheahYan"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"CheahYan"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"CheahYan"},"content":"        Money moneyOfBob \u003d new Money(Float.valueOf(VALID_REVENUE_BOB));","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"CheahYan"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"CheahYan"},"content":"        RevenueCommand revenueCommand \u003d new RevenueCommand(outOfBoundIndex, new Revenue(moneyOfBob));","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"CheahYan"},"content":"        assertCommandFailure(revenueCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"CheahYan"},"content":"    public void execute_resultingRevenueNegativeUnfilteredList_failure() {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"CheahYan"},"content":"        Money negativeMoneyOfBob \u003d new Money((-1) * Float.valueOf(REVENUE_STUB));","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"CheahYan"},"content":"        RevenueCommand revenueCommand \u003d new RevenueCommand(INDEX_FIRST_PERSON, new Revenue(negativeMoneyOfBob));","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"CheahYan"},"content":"        assertCommandFailure(revenueCommand, model, RevenueCommand.MESSAGE_ADD_REVENUE_FAIL);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"CheahYan":95}},{"path":"src/test/java/seedu/address/logic/commands/ScheduleCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"public class ScheduleCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        Person personToMeet \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"        Appointment sampleAppointment \u003d new Appointment(\"04-Feb-2021 05:00\");","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, sampleAppointment);","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"        Person newAppointmentPerson \u003d new PersonBuilder(personToMeet).withAppointment(sampleAppointment).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"        expectedModel.setPerson(personToMeet, newAppointmentPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"        String expectedMessage \u003d String.format(ScheduleCommand.MESSAGE_MEET_PERSON_SUCCESS, newAppointmentPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"        assertCommandSuccess(scheduleCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"        Appointment sampleAppointment \u003d new Appointment(\"04-Feb-2021 05:00\");","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"        ScheduleCommand scheduleCommand \u003d new ScheduleCommand(outOfBoundIndex, sampleAppointment);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"        assertCommandFailure(scheduleCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"        Appointment sampleAppointment1 \u003d new Appointment(\"04-Feb-2021 05:00\");","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"        Appointment sampleAppointment2 \u003d new Appointment(\"05-Feb-2021 05:00\");","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"        ScheduleCommand scheduleFirstCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, sampleAppointment1);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"        ScheduleCommand scheduleSecondCommand \u003d new ScheduleCommand(INDEX_FIRST_PERSON, sampleAppointment2);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"        ScheduleCommand scheduleThirdCommand \u003d new ScheduleCommand(INDEX_SECOND_PERSON, sampleAppointment1);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"        assertTrue(scheduleFirstCommand.equals(scheduleFirstCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"        Appointment sampleAppointment1Copy \u003d new Appointment(\"04-Feb-2021 05:00\");","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"rldefa"},"content":"        ScheduleCommand scheduleFirstCommandCopy \u003d new ScheduleCommand(INDEX_FIRST_PERSON, sampleAppointment1Copy);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"rldefa"},"content":"        assertTrue(scheduleFirstCommand.equals(scheduleFirstCommandCopy));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"rldefa"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"rldefa"},"content":"        assertFalse(scheduleFirstCommand.equals(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"rldefa"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"rldefa"},"content":"        assertFalse(scheduleFirstCommand.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"rldefa"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"rldefa"},"content":"        assertFalse(scheduleFirstCommand.equals(scheduleSecondCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"rldefa"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"rldefa"},"content":"        assertFalse(scheduleFirstCommand.equals(scheduleThirdCommand));","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"rldefa":79}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"xianlinc"},"content":"import seedu.address.logic.commands.NoteCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"import seedu.address.logic.commands.RevenueCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"xianlinc"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"xianlinc"},"content":"    public void parseCommand_note() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"xianlinc"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"xianlinc"},"content":"        NoteCommand command \u003d (NoteCommand) parser.parseCommand(","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"xianlinc"},"content":"                NoteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"xianlinc"},"content":"                        + \" \" + PersonUtil.getNoteDetails(person));","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"xianlinc"},"content":"        assertEquals(new NoteCommand(INDEX_FIRST_PERSON, person.getNote()), command);","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"CheahYan"},"content":"    public void parseCommand_revenue() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"CheahYan"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"CheahYan"},"content":"        RevenueCommand command \u003d (RevenueCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"CheahYan"},"content":"                RevenueCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"CheahYan"},"content":"                        + \" \" + CliSyntax.PREFIX_REVENUE + \"0\");","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"CheahYan"},"content":"        assertEquals(new RevenueCommand(INDEX_FIRST_PERSON, person.getRevenue()), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"xianlinc":10,"CheahYan":10,"-":101}},{"path":"src/test/java/seedu/address/logic/parser/ClaimCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLAIM_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLAIM_DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLAIM_STATUS_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CLAIM_TITLE_DESC_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.logic.commands.ClaimCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ClaimCommandParserTest {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    private ClaimCommandParser parser \u003d new ClaimCommandParser();","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_allFieldPresent_success() {","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertParseSuccess(parser, \"1\" + CLAIM_TITLE_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"                + CLAIM_DESCRIPTION_DESC_AMY + CLAIM_STATUS_DESC_AMY,","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"                new ClaimCommand(INDEX_FIRST_PERSON, CLAIM_AMY));","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_titleFieldMissing_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertParseFailure(parser, \"1\" + CLAIM_DESCRIPTION_DESC_AMY + CLAIM_STATUS_DESC_AMY,","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClaimCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_descriptionFieldMissing_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertParseFailure(parser, \"1\" + CLAIM_TITLE_DESC_AMY + CLAIM_STATUS_DESC_AMY,","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClaimCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_statusFieldMissing_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertParseFailure(parser, \"1\" + CLAIM_TITLE_DESC_AMY + CLAIM_DESCRIPTION_DESC_AMY,","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClaimCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_indexMissing_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertParseFailure(parser, CLAIM_TITLE_DESC_AMY + CLAIM_DESCRIPTION_DESC_AMY + CLAIM_STATUS_DESC_AMY,","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClaimCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parse_invalidIndex_throwsParseException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertParseFailure(parser, \"a\" + CLAIM_TITLE_DESC_AMY + CLAIM_DESCRIPTION_DESC_AMY + CLAIM_STATUS_DESC_AMY,","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClaimCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"JoelChanZhiYang":54}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kawaiigabrielneko":1,"-":210}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Description;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Status;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Title;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static final String INVALID_INSURANCE \u003d \"Money\";","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String INVALID_CLAIM_TITLE \u003d \"@Title \";","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String INVALID_CLAIM_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String INVALID_CLAIM_STATUS \u003d \"isCompleted\";","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static final String VALID_INSURANCE_1 \u003d \"Life\";","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static final String VALID_INSURANCE_2 \u003d \"Health\";","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static final String VALID_INSURANCE_ANY_CAPS \u003d \"gENEraL\";","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String VALID_CLAIM_TITLE \u003d \"Title\";","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String VALID_CLAIM_DESCRIPTION \u003d \"Description description.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final String VALID_CLAIM_STATUS \u003d \"Completed\";","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"JoelChanZhiYang"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseDescription_null_throwsException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseDescription_validDescription_returnDescription() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"JoelChanZhiYang"},"content":"        Description actualDescription \u003d ParserUtil.parseDescription(VALID_CLAIM_DESCRIPTION);","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"JoelChanZhiYang"},"content":"        Description expectedDescription \u003d new Description(VALID_CLAIM_DESCRIPTION);","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":221,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(actualDescription, expectedDescription);","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":223,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseDescription_invalidDescription_throwsException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_CLAIM_DESCRIPTION));","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":228,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":229,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":230,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseTitle_null_throwsException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":231,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTitle(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseTitle_validTitle_returnTitle() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"JoelChanZhiYang"},"content":"        Title actualTitle \u003d ParserUtil.parseTitle(VALID_CLAIM_TITLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"JoelChanZhiYang"},"content":"        Title expectedTitle \u003d new Title(VALID_CLAIM_TITLE);","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(actualTitle, expectedTitle);","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseTitle_invalidTitle_throwsException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTitle(INVALID_CLAIM_TITLE));","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseStatus_null_throwsException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStatus(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseStatus_validStatus_returnStatus() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"JoelChanZhiYang"},"content":"        Status actualStatus \u003d ParserUtil.parseStatus(VALID_CLAIM_STATUS);","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"JoelChanZhiYang"},"content":"        Status expectedStatus \u003d new Status(VALID_CLAIM_STATUS);","lastModifiedDate":"2021-10-09"},{"lineNumber":256,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":257,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(actualStatus, expectedStatus);","lastModifiedDate":"2021-10-09"},{"lineNumber":258,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":259,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":260,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void parseStatus_invalidStatus_throwsException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(INVALID_CLAIM_STATUS));","lastModifiedDate":"2021-10-09"},{"lineNumber":263,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":264,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":266,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void parseInsurance_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":267,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInsurance(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":268,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":269,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":270,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":271,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void parseInsurance_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":272,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInsurance(INVALID_INSURANCE));","lastModifiedDate":"2021-10-11"},{"lineNumber":273,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":274,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":275,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":276,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void parseInsurance_validValue_returnsTag() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":277,"author":{"gitId":"kawaiigabrielneko"},"content":"        Insurance expectedInsurance \u003d Insurance.of(VALID_INSURANCE_1);","lastModifiedDate":"2021-10-11"},{"lineNumber":278,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(expectedInsurance, ParserUtil.parseInsurance(VALID_INSURANCE_1));","lastModifiedDate":"2021-10-11"},{"lineNumber":279,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":280,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":281,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":282,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void parseInsurance_validValueAnyCaps_returnsTag() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":283,"author":{"gitId":"kawaiigabrielneko"},"content":"        Insurance expectedInsurance \u003d Insurance.of(VALID_INSURANCE_ANY_CAPS);","lastModifiedDate":"2021-10-11"},{"lineNumber":284,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(expectedInsurance, ParserUtil.parseInsurance(VALID_INSURANCE_ANY_CAPS));","lastModifiedDate":"2021-10-11"},{"lineNumber":285,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":286,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":287,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":288,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void parseInsurances_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":289,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInsurances(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":290,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":292,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":293,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void parseInsurances_collectionWithInvalidInsurances_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":294,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInsurances(","lastModifiedDate":"2021-10-11"},{"lineNumber":295,"author":{"gitId":"kawaiigabrielneko"},"content":"                Arrays.asList(VALID_INSURANCE_1, INVALID_INSURANCE)));","lastModifiedDate":"2021-10-11"},{"lineNumber":296,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":297,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":298,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":299,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void parseInsurances_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":300,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertTrue(ParserUtil.parseInsurances(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":302,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":303,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":304,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void parseInsurances_collectionWithValidInsurances_returnsInsuranceSet() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":305,"author":{"gitId":"kawaiigabrielneko"},"content":"        Set\u003cInsurance\u003e actualInsuranceSet \u003d ParserUtil.parseInsurances(","lastModifiedDate":"2021-10-11"},{"lineNumber":306,"author":{"gitId":"kawaiigabrielneko"},"content":"                Arrays.asList(VALID_INSURANCE_1, VALID_INSURANCE_2));","lastModifiedDate":"2021-10-11"},{"lineNumber":307,"author":{"gitId":"kawaiigabrielneko"},"content":"        Set\u003cInsurance\u003e expectedInsuranceSet \u003d new HashSet\u003cInsurance\u003e(","lastModifiedDate":"2021-10-11"},{"lineNumber":308,"author":{"gitId":"kawaiigabrielneko"},"content":"                Arrays.asList(Insurance.of(VALID_INSURANCE_1), Insurance.of(VALID_INSURANCE_2)));","lastModifiedDate":"2021-10-11"},{"lineNumber":309,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":310,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(expectedInsuranceSet, actualInsuranceSet);","lastModifiedDate":"2021-10-11"},{"lineNumber":311,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"JoelChanZhiYang":69,"kawaiigabrielneko":52,"-":191}},{"path":"src/test/java/seedu/address/logic/parser/RevenueCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"import seedu.address.logic.commands.RevenueCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"public class RevenueCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"    private RevenueCommandParser parser \u003d new RevenueCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"                RevenueCommand.COMMAND_WORD));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"CheahYan"},"content":"    public void parse_validArgs_returnsRevenueCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"CheahYan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"CheahYan"},"content":"        RevenueCommand expectedRevenueCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"CheahYan"},"content":"                new RevenueCommand(INDEX_FIRST_PERSON, new Revenue(new Money(100.21f)));","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"CheahYan"},"content":"        assertParseSuccess(parser, \"1 r/100.21\", expectedRevenueCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"CheahYan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"CheahYan"},"content":"        assertParseFailure(parser, \"1 r10\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"CheahYan"},"content":"                RevenueCommand.COMMAND_WORD));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"CheahYan":38}},{"path":"src/test/java/seedu/address/logic/parser/ScheduleCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"public class ScheduleCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    private ScheduleCommandParser parser \u003d new ScheduleCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"    public void parse_validArgs_returnsScheduleCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"        assertParseSuccess(parser, \"1 m/\", new ScheduleCommand(INDEX_FIRST_PERSON, new Appointment(\"\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ScheduleCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"rldefa":25}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"public class AppointmentTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"    void testToString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"        String sampleMeetingTime \u003d \"05-Feb-2011 05:30\";","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"        Appointment appointment \u003d new Appointment(sampleMeetingTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"        assertTrue(sampleMeetingTime.equals(appointment.toString()));","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"    void testEquals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"        String sampleMeetingTime1 \u003d \"05-Feb-2011 05:30\";","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"        String sampleMeetingTime2 \u003d \"06-Feb-2011 05:30\";","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"        Appointment appointment1 \u003d new Appointment(sampleMeetingTime1);","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"        Appointment appointment2 \u003d new Appointment(sampleMeetingTime2);","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"        assertTrue(appointment1.equals(appointment1));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"rldefa"},"content":"        assertTrue(appointment1.equals(new Appointment(sampleMeetingTime1)));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"rldefa"},"content":"        assertFalse(appointment1.equals(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"        assertFalse(appointment1.equals(appointment2));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"    public void isValidMeetingTime() {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"rldefa"},"content":"        // null phone number","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"        assertThrows(NullPointerException.class, () -\u003e Appointment.isValidMeetingTime(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"rldefa"},"content":"        // invalid phone numbers","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"rldefa"},"content":"        assertFalse(Appointment.isValidMeetingTime(\" \")); // spaces only","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"rldefa"},"content":"        assertFalse(Appointment.isValidMeetingTime(\"05 Feb 2021 05:30\")); // no dash","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"        assertFalse(Appointment.isValidMeetingTime(\"05-Feb-2021\")); // no time","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"rldefa"},"content":"        assertFalse(Appointment.isValidMeetingTime(\"05-02-2021 05:30\")); // incorrect month format","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"rldefa"},"content":"        assertFalse(Appointment.isValidMeetingTime(\"2021-Feb-05 05:30\")); // wrong order","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"rldefa"},"content":"        // valid date time","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"rldefa"},"content":"        assertTrue(Appointment.isValidMeetingTime(\"\")); // empty string","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"rldefa"},"content":"        assertTrue(Appointment.isValidMeetingTime(\"05-Feb-2021 05:30\")); // correct format","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"rldefa"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"rldefa"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"rldefa"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"    public void constructor_invalidDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"rldefa"},"content":"        String invalidDateTimeString \u003d \"blahblah\";","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"rldefa"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Appointment(invalidDateTimeString));","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"rldefa"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"rldefa":62}},{"path":"src/test/java/seedu/address/model/claim/ClaimTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.model.claim;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLAIM_DESCRIPTION_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLAIM_DESCRIPTION_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLAIM_STATUS_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLAIM_STATUS_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLAIM_TITLE_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLAIM_TITLE_BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.testutil.ClaimBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ClaimTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    private final Claim defaultClaim \u003d new ClaimBuilder(VALID_CLAIM_TITLE_AMY,","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"            VALID_CLAIM_DESCRIPTION_AMY, VALID_CLAIM_STATUS_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void getTitle() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(defaultClaim.getTitle().toString().equals(VALID_CLAIM_TITLE_AMY));","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void getDescription() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(defaultClaim.getDescription().toString().equals(VALID_CLAIM_DESCRIPTION_AMY));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void getStatus() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(defaultClaim.getStatus().toString().equals(VALID_CLAIM_STATUS_AMY.toUpperCase()));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(defaultClaim.toString().equals(String.format(\"Claim: %s; Description: %s; Status: %s\",","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"                VALID_CLAIM_TITLE_AMY, VALID_CLAIM_DESCRIPTION_AMY, VALID_CLAIM_STATUS_AMY.toUpperCase())));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(defaultClaim.equals(defaultClaim));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(defaultClaim.equals(5));","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        // different status, same title -\u003e return true","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(defaultClaim.equals(new ClaimBuilder(defaultClaim)","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"                .withStatus(VALID_CLAIM_STATUS_BOB).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"        // different description, same title 0","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(defaultClaim.equals(new ClaimBuilder(defaultClaim)","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"                .withDescription(VALID_CLAIM_DESCRIPTION_BOB).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Different title","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(defaultClaim.equals(new ClaimBuilder(defaultClaim)","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"                .withTitle(VALID_CLAIM_TITLE_BOB).build()));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"JoelChanZhiYang":60}},{"path":"src/test/java/seedu/address/model/claim/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.model.claim;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Empty Description","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(Description.isValidDescription(\"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Only spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(Description.isValidDescription(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Normal Description","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(Description.isValidDescription(\"Description\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Description with spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(Description.isValidDescription(\"Description title\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Proper toString behavior","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(new Description(\"Description 1\").toString().equals(\"Description 1\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Improper toString behavior","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(new Description(\"Description 1\").toString().equals(\"Description 2\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Different titles","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(new Description(\"Description 1\").equals(new Description(\"Description 2\")));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Same titles","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(new Description(\"Description 1\").equals(new Description(\"Description 1\")));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"JoelChanZhiYang":48}},{"path":"src/test/java/seedu/address/model/claim/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.model.claim;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"public class StatusTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void isValidStatus() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Empty Status","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(Status.isValidStatus(\"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Only spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(Status.isValidStatus(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Pending status","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(Status.isValidStatus(\"pending\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Completed status","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(Status.isValidStatus(\"completed\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Status capitalised","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(Status.isValidStatus(\"COMPLETED\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Proper toString behavior","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(new Status(\"pending\").toString().equals(\"PENDING\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Improper toString behavior","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(new Status(\"pending\").toString() \u003d\u003d \"pending\");","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Same status","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(new Status(\"pending\").equals(new Status(\"Pending\")));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Same status","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(new Status(\"pending\").equals(new Status(\"pending\")));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Different status","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(new Status(\"Pending\").equals(new Status(\"Completed\")));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"JoelChanZhiYang":54}},{"path":"src/test/java/seedu/address/model/claim/TitleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.model.claim;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public class TitleTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Title(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"        String invalidTitle \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Title(invalidTitle));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void isValidTitle() {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Empty Title","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(Title.isValidTitle(\"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Only spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(Title.isValidTitle(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Normal Title","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(Title.isValidTitle(\"Title\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Title with spaces","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(Title.isValidTitle(\"Title title\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Different titles","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertNotEquals(new Title(\"Title 2\"), new Title(\"Title 1\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Same titles","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(new Title(\"Title 1\"), new Title(\"Title 1\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    public void compareTo() {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Equal titles","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertEquals(new Title(\"a\").compareTo(new Title(\"a\")), 0);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"        // Less","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(new Title(\"a\").compareTo(new Title(\"b\")) \u003c 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        // More","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertTrue(new Title(\"b\").compareTo(new Title(\"a\")) \u003e 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"JoelChanZhiYang":52}},{"path":"src/test/java/seedu/address/model/person/InsuranceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"public class InsuranceTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void of_invalidInsurance_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertThrows(IllegalValueException.class, () -\u003e Insurance.of(\"Money\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertThrows(IllegalValueException.class, () -\u003e Insurance.of(\"Hospital\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void of() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.GENERAL), Insurance.of(\"General\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.LIFE), Insurance.of(\"Life\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.HEALTH), Insurance.of(\"Health\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.GENERAL).hashCode(),","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"                Insurance.of(\"General\").hashCode());","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.LIFE).hashCode(),","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"                Insurance.of(\"Life\").hashCode());","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.HEALTH).hashCode(),","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"kawaiigabrielneko"},"content":"                Insurance.of(\"Health\").hashCode());","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.GENERAL), Insurance.of(\"General\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.GENERAL), Insurance.of(\"GENERAL\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.GENERAL), Insurance.of(\"general\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(new Insurance(InsuranceType.GENERAL), Insurance.of(\"gENeRal\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kawaiigabrielneko":35}},{"path":"src/test/java/seedu/address/model/person/InsuranceTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"public class InsuranceTypeTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void getTypeName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"Life\", InsuranceType.LIFE.getTypeName());","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"General\", InsuranceType.GENERAL.getTypeName());","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertEquals(\"Health\", InsuranceType.HEALTH.getTypeName());","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kawaiigabrielneko":14}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INSURANCE_HEALTH;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.testutil.ClaimBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"CheahYan"},"content":"        // different revenue -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"CheahYan"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRevenue(\"100.21\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"CheahYan"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"kawaiigabrielneko"},"content":"        // different insurances -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"kawaiigabrielneko"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withInsurances(VALID_INSURANCE_HEALTH).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"JoelChanZhiYang"},"content":"        // different claims -\u003e returns false","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"JoelChanZhiYang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withClaim(new ClaimBuilder()).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"JoelChanZhiYang"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"JoelChanZhiYang":6,"CheahYan":4,"kawaiigabrielneko":4,"-":91}},{"path":"src/test/java/seedu/address/model/person/RevenueTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"public class RevenueTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Revenue(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"    public void addRevenue_addingValidRevenue_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"        Revenue originalRevenue \u003d new Revenue(new Money(100.21f));","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"        Revenue expectedRevenue \u003d new Revenue(new Money(350.00f));","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"        Revenue updatedRevenue \u003d originalRevenue.addRevenue(new Revenue(new Money(249.79f)));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"CheahYan"},"content":"        assertEquals(updatedRevenue, expectedRevenue);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"CheahYan"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"CheahYan":24}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static final String INVALID_INSURANCE \u003d \"College\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"CheahYan"},"content":"    private static final String VALID_REVENUE \u003d String.valueOf(BENSON.getRevenue().value.getInDollars());","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"kawaiigabrielneko"},"content":"    private static final List\u003cJsonAdaptedInsurance\u003e VALID_INSURANCES \u003d BENSON.getInsurances().stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"kawaiigabrielneko"},"content":"            .map(JsonAdaptedInsurance::new)","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"kawaiigabrielneko"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"    private static final List\u003cJsonAdaptedClaim\u003e VALID_CLAIMS \u003d BENSON.getClaims().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"            .map(JsonAdaptedClaim::new)","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"xianlinc"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"    private static final String VALID_MEETING \u003d BENSON.getAppointment().toString();","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_REVENUE,","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"CheahYan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_REVENUE,","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"CheahYan"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_REVENUE, VALID_ADDRESS,","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"                VALID_TAGS, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"CheahYan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_REVENUE,","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"kawaiigabrielneko"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"JoelChanZhiYang"},"content":"                VALID_REVENUE, VALID_ADDRESS, VALID_TAGS, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"CheahYan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_REVENUE,","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"JoelChanZhiYang"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"kawaiigabrielneko"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_REVENUE,","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"JoelChanZhiYang"},"content":"                        INVALID_ADDRESS, VALID_TAGS, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"CheahYan"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_REVENUE,","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"JoelChanZhiYang"},"content":"                null, VALID_TAGS, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"kawaiigabrielneko"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_REVENUE,","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"JoelChanZhiYang"},"content":"                        VALID_ADDRESS, invalidTags, VALID_INSURANCES, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"kawaiigabrielneko"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"kawaiigabrielneko"},"content":"    public void toModelType_invalidInsurances_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"kawaiigabrielneko"},"content":"        List\u003cJsonAdaptedInsurance\u003e invalidInsurances \u003d new ArrayList\u003c\u003e(VALID_INSURANCES);","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"kawaiigabrielneko"},"content":"        invalidInsurances.add(new JsonAdaptedInsurance(INVALID_INSURANCE));","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"kawaiigabrielneko"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_REVENUE,","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"JoelChanZhiYang"},"content":"                VALID_ADDRESS, VALID_TAGS, invalidInsurances, VALID_NOTE, VALID_MEETING, VALID_CLAIMS);","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"kawaiigabrielneko"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"JoelChanZhiYang":13,"CheahYan":7,"xianlinc":1,"kawaiigabrielneko":15,"-":99,"rldefa":1}},{"path":"src/test/java/seedu/address/testutil/ClaimBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Description;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Status;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Title;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":" * A utility class to help with building Claim objects.","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"public class ClaimBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String DEFAULT_TITLE \u003d \"Heart Surgery\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"by Dr. Chan Keng Song at TTSH\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"    public static final String DEFAULT_STATUS \u003d \"Pending\";","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Title title;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Description description;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Status status;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor for a default claim","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ClaimBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"JoelChanZhiYang"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor for a specific claim","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param title A valid title","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param description A valid description","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param status A valid status","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ClaimBuilder(String title, String description, String status) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Constructor that copies a claim into a claim builder","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param claim A valid claim","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ClaimBuilder(Claim claim) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.title \u003d claim.getTitle();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.description \u003d claim.getDescription();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.status \u003d claim.getStatus();","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Sets the {@code Title} of the {@code Claim} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param title A valid title","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ClaimBuilder withTitle(String title) {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Sets the {@code Description} of the {@code Claim} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param description A valid description","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ClaimBuilder withDescription(String description) {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Sets the {@code Status} of the {@code Claim} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @param status A valid status","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"JoelChanZhiYang"},"content":"    public ClaimBuilder withStatus(String status) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Build the claim and returns it.","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"JoelChanZhiYang"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"JoelChanZhiYang"},"content":"     * @return A valid with the given attributes","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"JoelChanZhiYang"},"content":"    public Claim build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new Claim(title, description, status);","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"JoelChanZhiYang"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"JoelChanZhiYang":92}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"        descriptor.setInsurances(person.getInsurances());","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"xianlinc"},"content":"        descriptor.setNote(person.getNote());","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Parses the {@code insurances} into a {@code Set\u003cInsurance\u003e} and set it to the","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"kawaiigabrielneko"},"content":"     * {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"kawaiigabrielneko"},"content":"    public EditPersonDescriptorBuilder withInsurances(String... insurances) {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"kawaiigabrielneko"},"content":"        Set\u003cInsurance\u003e insuranceSet \u003d Stream.of(insurances)","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kawaiigabrielneko"},"content":"                .map(SampleDataUtil::ofValidInsurance).collect(Collectors.toSet());","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kawaiigabrielneko"},"content":"        descriptor.setInsurances(insuranceSet);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"kawaiigabrielneko"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"xianlinc"},"content":"     * Parses the {@code Note} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":103,"author":{"gitId":"xianlinc"},"content":"    public EditPersonDescriptorBuilder withNote(String note) {","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"xianlinc"},"content":"        descriptor.setNote(new Note(note));","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"xianlinc"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"xianlinc":10,"kawaiigabrielneko":14,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"import seedu.address.commons.core.Money;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"import seedu.address.model.claim.Claim;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"xianlinc"},"content":"import seedu.address.model.person.Note;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"import seedu.address.model.person.Revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"CheahYan"},"content":"    public static final Money DEFAULT_REVENUE \u003d new Money(0);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"xianlinc"},"content":"    public static final String DEFAULT_NOTE \u003d \"\";","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"rldefa"},"content":"    public static final String DEFAULT_MEETING \u003d \"\";","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"CheahYan"},"content":"    private Revenue revenue;","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"kawaiigabrielneko"},"content":"    private Set\u003cInsurance\u003e insurances;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"xianlinc"},"content":"    private Note note;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"rldefa"},"content":"    private Appointment appointment;","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"JoelChanZhiYang"},"content":"    private Set\u003cClaim\u003e claims;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"CheahYan"},"content":"        revenue \u003d new Revenue(DEFAULT_REVENUE);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"kawaiigabrielneko"},"content":"        insurances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"xianlinc"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"rldefa"},"content":"        appointment \u003d new Appointment(DEFAULT_MEETING);","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"JoelChanZhiYang"},"content":"        claims \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"        revenue \u003d personToCopy.getRevenue();","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"        insurances \u003d new HashSet\u003c\u003e(personToCopy.getInsurances());","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"xianlinc"},"content":"        note \u003d personToCopy.getNote();","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"rldefa"},"content":"        appointment \u003d personToCopy.getAppointment();","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"JoelChanZhiYang"},"content":"        claims \u003d new HashSet\u003c\u003e(personToCopy.getClaims());","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"CheahYan"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"CheahYan"},"content":"     * Sets the {@code Revenue} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"CheahYan"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"CheahYan"},"content":"    public PersonBuilder withRevenue(String revenue) {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"CheahYan"},"content":"        float revenueInFloat \u003d Float.valueOf(revenue);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"CheahYan"},"content":"        this.revenue \u003d new Revenue(new Money(revenueInFloat));","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"CheahYan"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"CheahYan"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"kawaiigabrielneko"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"kawaiigabrielneko"},"content":"     * Sets the {@code Insurances} of the {@code Insurance} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"kawaiigabrielneko"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"kawaiigabrielneko"},"content":"    public PersonBuilder withInsurances(String... insurances) {","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"kawaiigabrielneko"},"content":"        this.insurances \u003d SampleDataUtil.getInsuranceSet(insurances);","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"kawaiigabrielneko"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"kawaiigabrielneko"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"xianlinc"},"content":"     * Sets the {@code Note} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"xianlinc"},"content":"    public PersonBuilder withNote(String note) {","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"xianlinc"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"xianlinc"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"xianlinc"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"rldefa"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"rldefa"},"content":"     * Sets the {@code Appointment} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"rldefa"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"rldefa"},"content":"    public PersonBuilder withAppointment(Appointment appointment) {","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"rldefa"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"rldefa"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"rldefa"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"JoelChanZhiYang"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"JoelChanZhiYang"},"content":"     * Sets the {@code Claim} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"JoelChanZhiYang"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"JoelChanZhiYang"},"content":"    public PersonBuilder withClaim(ClaimBuilder ... claims) {","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"JoelChanZhiYang"},"content":"        this.claims \u003d Arrays.stream(claims)","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"JoelChanZhiYang"},"content":"                .map(claim -\u003e claim.build())","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"JoelChanZhiYang"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"JoelChanZhiYang"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"JoelChanZhiYang"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":161,"author":{"gitId":"JoelChanZhiYang"},"content":"        return new Person(name, phone, email, revenue, address, tags, insurances, note, appointment, claims);","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"JoelChanZhiYang":17,"CheahYan":15,"xianlinc":13,"kawaiigabrielneko":11,"-":95,"rldefa":13}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INSURANCE;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"import seedu.address.model.person.Insurance;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"kawaiigabrielneko"},"content":"        person.getInsurances().stream().forEach(","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"kawaiigabrielneko"},"content":"            i -\u003e sb.append(PREFIX_TAG + i.getType().getTypeName() + \" \")","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"kawaiigabrielneko"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"xianlinc"},"content":"        descriptor.getNote().ifPresent(note -\u003e sb.append(PREFIX_NOTE).append(note.value).append(\" \"));","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"kawaiigabrielneko"},"content":"                sb.append(PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"kawaiigabrielneko"},"content":"        if (descriptor.getInsurances().isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"kawaiigabrielneko"},"content":"            Set\u003cInsurance\u003e insurances \u003d descriptor.getInsurances().get();","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"kawaiigabrielneko"},"content":"            if (insurances.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"kawaiigabrielneko"},"content":"                sb.append(PREFIX_INSURANCE).append(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"kawaiigabrielneko"},"content":"            } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"kawaiigabrielneko"},"content":"                insurances.forEach(i -\u003e sb.append(PREFIX_INSURANCE)","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"kawaiigabrielneko"},"content":"                        .append(i.getType().getTypeName()).append(\" \"));","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"kawaiigabrielneko"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"kawaiigabrielneko"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"xianlinc"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"xianlinc"},"content":"     * Returns the part of command string for the given {@code Person}\u0027s note","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"xianlinc"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"xianlinc"},"content":"    public static String getNoteDetails(Person person) {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"xianlinc"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"xianlinc"},"content":"        sb.append(PREFIX_NOTE).append(person.getNote().value);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"xianlinc":10,"kawaiigabrielneko":15,"-":63}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REVENUE_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REVENUE_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"kawaiigabrielneko"},"content":"            .withPhone(\"94351253\").withRevenue(\"0.00f\").withTags(\"friends\")","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"kawaiigabrielneko"},"content":"            .withInsurances(\"Life\").withNote(\"Has asthma\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"CheahYan"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withRevenue(\"0.00f\")","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"kawaiigabrielneko"},"content":"            .withTags(\"owesMoney\", \"friends\").withInsurances(\"Life\", \"Health\", \"General\")","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"JoelChanZhiYang"},"content":"            .withNote(\"Has cancer\")","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"JoelChanZhiYang"},"content":"            .withClaim(new ClaimBuilder().withTitle(\"Knee Surgery\")","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"JoelChanZhiYang"},"content":"                    .withDescription(\"Caused by a fall\")","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"JoelChanZhiYang"},"content":"                    .withStatus(\"completed\"))","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"JoelChanZhiYang"},"content":"            .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"CheahYan"},"content":"            .withRevenue(\"0.00f\").withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"CheahYan"},"content":"            .withNote(\"Has dementia\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"CheahYan"},"content":"            .withRevenue(\"0.00f\").withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"xianlinc"},"content":"            .withTags(\"friends\").withNote(\"Has diabetes\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"CheahYan"},"content":"            .withRevenue(\"0.00f\").withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"CheahYan"},"content":"            .withNote(\"Has wrist pain\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"CheahYan"},"content":"            .withRevenue(\"0.00f\").withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"CheahYan"},"content":"            .withNote(\"Has migraines\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"CheahYan"},"content":"            .withRevenue(\"0.00f\").withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"            .withInsurances(\"Health\").withNote(\"Has covid\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"xianlinc"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withNote(\"Has heart disease\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"xianlinc"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withNote(\"Has had a hip replacement\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"CheahYan"},"content":"            .withEmail(VALID_EMAIL_AMY).withRevenue(VALID_REVENUE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"xianlinc"},"content":"            .withTags(VALID_TAG_FRIEND).withNote(\"\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"CheahYan"},"content":"            .withEmail(VALID_EMAIL_BOB).withRevenue(VALID_REVENUE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"CheahYan"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withNote(\"\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"JoelChanZhiYang":5,"CheahYan":14,"xianlinc":4,"kawaiigabrielneko":4,"-":62}}]
