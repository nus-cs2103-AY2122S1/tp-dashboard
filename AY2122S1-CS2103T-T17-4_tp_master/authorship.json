[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-T17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-T17-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T17-4/tp/branch/master/graph/badge.svg?token\u003dW8OO51MUAS)](https://codecov.io/gh/AY2122S1-CS2103T-T17-4/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"## Welcome to InsurancePal","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"* InsurancePal is a client management software specially designed to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"* This application is built from [Address Book Level 3](https://github.com/nus-cs2103-AY2122S1/tp)","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"**InsurancePal** aims to help insurance agents","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"1. Manage client information","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"2. Manage insurance claims","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"3. Manage appointments","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"This application is specially designed for insurance agents who can type fast and prefer to use a ","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"*Command Line Interface* (CLI) to interact with the aaplication","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"For the detailed documentation of this project, see the **[InsurancePal website](https://ay2122s1-cs2103t-t17-4.github.io/tp)**.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"*This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).*","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"JoelChanZhiYang":17,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"### Cheah Yan (Xie Yan)","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003cimg src\u003d\"images/cheahyan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"[[github](https://github.com/CheahYan)]","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"[[portfolio](team/cheahyan.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"* Role: Developer","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"### Joel Chan","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003cimg src\u003d\"images/joelchanzhiyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"JoelChanZhiYang"},"content":"[[github](https://github.com/JoelChanZhiYang/)]","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"JoelChanZhiYang"},"content":"[[portfolio](team/joelchanzhiyang.md)]","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"* Responsibilities: Deliverables and deadlines + Scheduling and Tracking","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"rldefa"},"content":"### Richard Li","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"JoelChanZhiYang"},"content":"\u003cimg src\u003d\"images/rldefa.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"rldefa"},"content":"[[github](http://github.com/rldefa)] [[portfolio](team/rldefa.md)]","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"rldefa"},"content":"* Role: Git Expert","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"rldefa"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"xianlinc"},"content":"### Chng Xian Lin","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"xianlinc"},"content":"\u003cimg src\u003d\"images/xianlinc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"xianlinc"},"content":"[[github](http://github.com/xianlinc)]","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"xianlinc"},"content":"[[portfolio](team/xianlinc.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"xianlinc"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"xianlinc"},"content":"* Responsibilities: Looks after code quality + Ensure adherence to coding standards + In charge of feature \u0027note\u0027","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"kawaiigabrielneko"},"content":"### Gabriel Goh Kheng Lin","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"kawaiigabrielneko"},"content":"\u003cimg src\u003d\"images/kawaiigabrielneko.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kawaiigabrielneko"},"content":"[[github](http://github.com/kawaiigabrielneko)]","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"kawaiigabrielneko"},"content":"[[portfolio](team/kawaiigabrielneko.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"kawaiigabrielneko"},"content":"* Responsibilities: Insurance + Glossary","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":7,"CheahYan":5,"xianlinc":6,"kawaiigabrielneko":5,"-":31,"rldefa":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"xianlinc"},"content":"Step 2. The user executes `delete 5` command to delete the 5th client in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-10-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"xianlinc"},"content":"Step 3. The user executes `add n/David …​` to add a new client. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-10-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"xianlinc"},"content":"Step 4. The user now decides that adding the client was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-10-03"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"xianlinc"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the client being deleted).","lastModifiedDate":"2021-10-03"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"CheahYan"},"content":"* works as an insurance agent","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"CheahYan"},"content":"* has a need to manage a large number of his/her Singaporean clients and their details","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"CheahYan"},"content":"* has a need to be reminded about his/her meeting timings with clients","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"CheahYan"},"content":"* has a need to manage revenue and costs for his clients","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"xianlinc"},"content":"**Value proposition**: manage clients faster than a typical mouse/GUI driven app and to also be able","lastModifiedDate":"2021-10-06"},{"lineNumber":267,"author":{"gitId":"CheahYan"},"content":"to collate details of clients in one application.","lastModifiedDate":"2021-09-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority   | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"CheahYan"},"content":"| -----------| ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | insurance agent                            | add clients\u0027 names to the client list        | connect with them easier on future meetups.              |","lastModifiedDate":"2021-10-03"},{"lineNumber":277,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | insurance agent whose clients live in Singapore                            | add the address of clients to the client list              | plan meetups with them in the future easily                                                                 |","lastModifiedDate":"2021-10-03"},{"lineNumber":278,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | insurance agent                            | add clients\u0027 client number to the client list               | contact them when I want to                                  |","lastModifiedDate":"2021-10-03"},{"lineNumber":279,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                            | keep track of clients\u0027 claim status         | update the client about it |","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | add total revenue from each of my clients  |  determine the quality of my clients|","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | add total costs from each of my clients         | determine how much to spend on gifts for clients.|","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user                                                | save my total costs for future use         | save time on having to type them everytime.|","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | keep notes about the client      | remember the health condition and ailments of all my clients.|","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     |  wants to record the time and place of my appointments          | be punctual|","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | user                                     | save my clients upon closing my address book        | save time on having to type them everytime |","lastModifiedDate":"2021-10-03"},{"lineNumber":286,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | organised user                                    | all the clients in my address book to be arranged alphabetically by their First Name         | find whoever I am looking for faster|","lastModifiedDate":"2021-10-03"},{"lineNumber":287,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | organised and shrewd insurance agent                                     | sort my clients based on how much money I am making from them         | know which clients to prioritise|","lastModifiedDate":"2021-09-29"},{"lineNumber":288,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | be able to easily calculate the commissions I get from my clients        | know the revenue obtained from each client |","lastModifiedDate":"2021-09-29"},{"lineNumber":289,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | organised insurance agent                                    | remember what insurance my client already has        |  sell the client insurance he/she does not have yet |","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | user with many clients in the address book                                     | search for clients in my clients list whose name matches my input         |  navigate to the client I am looking for quickly |","lastModifiedDate":"2021-10-03"},{"lineNumber":291,"author":{"gitId":"xianlinc"},"content":"| `* * *`  | user                                     | be able to delete people from my client list         | remove a client from my client list I no longer need to keep in contact with|","lastModifiedDate":"2021-10-03"},{"lineNumber":292,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user                                    | be able to use programs on Windows and Mac         | use it on all my laptops |","lastModifiedDate":"2021-09-29"},{"lineNumber":293,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | user                                    | exit the program safely        | free up resources on his computer |","lastModifiedDate":"2021-09-29"},{"lineNumber":294,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | new user                                     |  be able to install the application        | I can use it |","lastModifiedDate":"2021-09-29"},{"lineNumber":295,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | keep track of clients\u0027 claim status         | update the client about it |","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"CheahYan"},"content":"| `* * *`  | insurance agent                                     | keep track of clients\u0027 claim status         | update the client about it |","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent                                      | keep track of the birthday of my clients   | maintain customer relations with them|","lastModifiedDate":"2021-09-29"},{"lineNumber":298,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent that labels my clients    | delete labels that I have assigned  | correct mislabels and inaccurate labels","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"xianlinc"},"content":"| `* *`    | user                                       | import my clients from a different source   | easily add multiple clients at once","lastModifiedDate":"2021-10-03"},{"lineNumber":300,"author":{"gitId":"xianlinc"},"content":"| `* *`    | user                                       | be able to filter out the clients in my address book based on address   | better plan out my appointments","lastModifiedDate":"2021-10-03"},{"lineNumber":301,"author":{"gitId":"xianlinc"},"content":"| `* *`    | user                                       | see my client list as a user interface   | read the list easily|","lastModifiedDate":"2021-10-03"},{"lineNumber":302,"author":{"gitId":"CheahYan"},"content":"| `* *`    | experienced user                                      | be able to back up my client data  | not lose the data|","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"xianlinc"},"content":"| `* *`    | expert insurance agent                                      | give my clients a nickname   | more easily search for my regular clients |","lastModifiedDate":"2021-10-03"},{"lineNumber":304,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent with a lot of clients                                       | create labels for my clients   |  classify and keep track of each of their characteristics|","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent                                      | be able to see the labels attached to each client easily   |  quickly reference it when I am about to meet the client|","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"CheahYan"},"content":"| `* *`    | user                                       | edit the information of entries in my address book   | ensure the information is accurate and up to date.|","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"CheahYan"},"content":"| `* *`    | insurance agent with a lot of clients                                       | create labels for my clients   |  classify and keep track of each of their characteristics|","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"CheahYan"},"content":"| `*`      | user | see how much space the program is using          | easily manage my computer memory |","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"xianlinc"},"content":"(For all use cases below, the **System** is the `InsurancePal` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"xianlinc"},"content":"**Use case: Viewing help**","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":320,"author":{"gitId":"xianlinc"},"content":"1. User requests to see the help menu","lastModifiedDate":"2021-09-28"},{"lineNumber":321,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows the user how to access the help webpage","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"xianlinc"},"content":"3. User accesses the help webpage","lastModifiedDate":"2021-09-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":324,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":325,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":326,"author":{"gitId":"xianlinc"},"content":"**Use case: Add a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":327,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":330,"author":{"gitId":"xianlinc"},"content":"1. User requests to add a client","lastModifiedDate":"2021-10-03"},{"lineNumber":331,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal adds the client","lastModifiedDate":"2021-10-03"},{"lineNumber":332,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":333,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":334,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":335,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":336,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"xianlinc"},"content":"* 1a. The given details are of an invalid format","lastModifiedDate":"2021-10-03"},{"lineNumber":338,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"xianlinc"},"content":"    * 1a1. InsurancePal shows an error message","lastModifiedDate":"2021-10-03"},{"lineNumber":340,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"xianlinc"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":342,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":343,"author":{"gitId":"xianlinc"},"content":"**Use case: List all clients**","lastModifiedDate":"2021-10-03"},{"lineNumber":344,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":345,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":346,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":347,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":348,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":349,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":350,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":351,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":352,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":353,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":355,"author":{"gitId":"xianlinc"},"content":"    * 2a1. InsurancePal displays an empty list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":356,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":357,"author":{"gitId":"xianlinc"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":358,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":359,"author":{"gitId":"xianlinc"},"content":"**Use case: Edit a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":360,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":361,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":362,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":363,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":364,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":365,"author":{"gitId":"xianlinc"},"content":"3. User requests to edit a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":366,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal edits the client","lastModifiedDate":"2021-10-03"},{"lineNumber":367,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":368,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":370,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":372,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":374,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":377,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":379,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":380,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":381,"author":{"gitId":"xianlinc"},"content":"**Use case: Finding a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":382,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":383,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":384,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":385,"author":{"gitId":"xianlinc"},"content":"1. User requests to find a client using keywords","lastModifiedDate":"2021-10-03"},{"lineNumber":386,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients whose names match at least one keyword","lastModifiedDate":"2021-10-03"},{"lineNumber":387,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":388,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"xianlinc"},"content":"**Use case: Delete a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":395,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":396,"author":{"gitId":"xianlinc"},"content":"3. User requests to delete a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":397,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal delete the client","lastModifiedDate":"2021-10-03"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":412,"author":{"gitId":"xianlinc"},"content":"**Use case: Clear the InsurancePal**","lastModifiedDate":"2021-09-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":414,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"xianlinc"},"content":"1. User requests to clear the InsurancePal","lastModifiedDate":"2021-09-29"},{"lineNumber":417,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal clears all entries in it","lastModifiedDate":"2021-09-29"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":420,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"xianlinc"},"content":"**Use case: Add reveneue to a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":422,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":423,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":424,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":425,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":426,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":427,"author":{"gitId":"xianlinc"},"content":"3. User requests to add revenue to a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":428,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal adds revenue to the client","lastModifiedDate":"2021-10-03"},{"lineNumber":429,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":430,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":431,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":432,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":433,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":435,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":436,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":437,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":438,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":439,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"xianlinc"},"content":"* 3b. The given revenue is of an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":444,"author":{"gitId":"xianlinc"},"content":"    * 3b1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"xianlinc"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":446,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":447,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":448,"author":{"gitId":"xianlinc"},"content":"**Use case: Add a claim to a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":449,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":450,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":451,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":452,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":453,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":454,"author":{"gitId":"xianlinc"},"content":"3. User requests to add a claim to a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":455,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal adds the claim to the client","lastModifiedDate":"2021-10-03"},{"lineNumber":456,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":457,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":458,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":459,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":460,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":465,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":466,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":467,"author":{"gitId":"xianlinc"},"content":" ","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":469,"author":{"gitId":"xianlinc"},"content":"* 3b. The given claim is of an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":470,"author":{"gitId":"xianlinc"},"content":"    * 3b1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":471,"author":{"gitId":"xianlinc"},"content":" ","lastModifiedDate":"2021-09-28"},{"lineNumber":472,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":473,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"xianlinc"},"content":"**Use case: Add a note to a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":475,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":476,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":479,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":480,"author":{"gitId":"xianlinc"},"content":"3. User requests to add a note to a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":481,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal adds a note to the client","lastModifiedDate":"2021-10-03"},{"lineNumber":482,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":483,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":485,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":487,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":493,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":494,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":496,"author":{"gitId":"xianlinc"},"content":"**Use case: Schedule a meeting**","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":499,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":501,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":502,"author":{"gitId":"xianlinc"},"content":"3. User requests to schedule a meeting with a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":503,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal schedules a meeting with the client","lastModifiedDate":"2021-10-03"},{"lineNumber":504,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":505,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":506,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":507,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":513,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":514,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":515,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":516,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":517,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":518,"author":{"gitId":"xianlinc"},"content":"* 3b. The given meeting time is of an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"xianlinc"},"content":"    * 3b1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":520,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":521,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":522,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":523,"author":{"gitId":"xianlinc"},"content":"**Use case: Add insurance to a client**","lastModifiedDate":"2021-10-03"},{"lineNumber":524,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"xianlinc"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":526,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":527,"author":{"gitId":"xianlinc"},"content":"1. User requests to list clients","lastModifiedDate":"2021-10-03"},{"lineNumber":528,"author":{"gitId":"xianlinc"},"content":"2. InsurancePal shows a list of clients","lastModifiedDate":"2021-10-03"},{"lineNumber":529,"author":{"gitId":"xianlinc"},"content":"3. User requests to add insurance to a specific client in the list","lastModifiedDate":"2021-10-03"},{"lineNumber":530,"author":{"gitId":"xianlinc"},"content":"4. InsurancePal adds insurance to the client","lastModifiedDate":"2021-10-03"},{"lineNumber":531,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":532,"author":{"gitId":"xianlinc"},"content":"   Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":533,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":534,"author":{"gitId":"xianlinc"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":535,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":536,"author":{"gitId":"xianlinc"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":537,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":538,"author":{"gitId":"xianlinc"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":539,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":540,"author":{"gitId":"xianlinc"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":541,"author":{"gitId":"xianlinc"},"content":"    * 3a1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":542,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":543,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":544,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":545,"author":{"gitId":"xianlinc"},"content":"* 3b. The given insurance is of an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":546,"author":{"gitId":"xianlinc"},"content":"    * 3b1. InsurancePal shows an error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":547,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":548,"author":{"gitId":"xianlinc"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"xianlinc"},"content":"2. Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-03"},{"lineNumber":554,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"rldefa"},"content":"4. New users should be able to easily see where to find information on how to use the application.","lastModifiedDate":"2021-09-27"},{"lineNumber":556,"author":{"gitId":"rldefa"},"content":"5. Should inform user of the necessary amendments to make to their input when receiving a bad input.","lastModifiedDate":"2021-09-27"},{"lineNumber":557,"author":{"gitId":"rldefa"},"content":"6. Data should be transferable between different devices that are both running InsurancePal.","lastModifiedDate":"2021-09-27"},{"lineNumber":558,"author":{"gitId":"rldefa"},"content":"7. Each command should be successfully executed within 1 second.","lastModifiedDate":"2021-09-27"},{"lineNumber":559,"author":{"gitId":"rldefa"},"content":"8. Should not exit unexpectedly as a result of software implementation regardless of user input.","lastModifiedDate":"2021-09-27"},{"lineNumber":560,"author":{"gitId":"rldefa"},"content":"9. Should not modify information stored without explicit permission or instruction by the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":561,"author":{"gitId":"rldefa"},"content":"10. Should not allow duplicate entries.","lastModifiedDate":"2021-09-27"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"xianlinc"},"content":"* **Notes**: A short paragraph that is written for a client to remind the user about details of that client","lastModifiedDate":"2021-10-03"},{"lineNumber":567,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Above average typing speed**: More than 40 words per minute","lastModifiedDate":"2021-09-30"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"xianlinc"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample clients. The window size may not be optimum.","lastModifiedDate":"2021-10-03"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"xianlinc"},"content":"### Deleting a client","lastModifiedDate":"2021-10-03"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"xianlinc"},"content":"1. Deleting a client while all clients are being shown","lastModifiedDate":"2021-10-03"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"xianlinc"},"content":"   1. Prerequisites: List all clients using the `list` command. Multiple clients in the list.","lastModifiedDate":"2021-10-03"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"xianlinc"},"content":"      Expected: First client is deleted from the list. Details of the deleted client shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-10-03"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"xianlinc"},"content":"      Expected: No client is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-03"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"xianlinc":223,"CheahYan":28,"kawaiigabrielneko":1,"-":361,"rldefa":7}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"Insurance Pal is a client management software specially designed to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"1. Download the latest `InsurancePal.jar` from [here](https://github.com/AY2122S1-CS2103T-T17-4/tp/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your InsurancePal.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"JoelChanZhiYang"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the address book.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"kawaiigabrielneko"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… [i/INSURANCE]…​`","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"kawaiigabrielneko"},"content":"* `INSURANCE` is limited to the following, with any capitalization: `life`, `health`, `general`","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"kawaiigabrielneko"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal i/life`","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"kawaiigabrielneko"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]… [i/INSURANCE]…​`","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"kawaiigabrielneko"},"content":"* `INSURANCE` is limited to the following, with any capitalization: `life`, `health`, `general`","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"kawaiigabrielneko"},"content":"* When editing tags or insurances, the existing tags/insurances of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"kawaiigabrielneko"},"content":"* You can remove all the person’s tags/insurances by typing `t/`/`i/` without","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"kawaiigabrielneko"},"content":"    specifying any tags/insurances after it.","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"kawaiigabrielneko"},"content":"*  `edit 2 n/Betsy Crower t/ i/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags and insurances.","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"JoelChanZhiYang"},"content":"### Adding a claim: `claim`","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"JoelChanZhiYang"},"content":"Adds a insurance claim to an existing person in the address book","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"JoelChanZhiYang"},"content":"Format: `claim INDEX t/TITLE d/DESCRIPTION s/STATUS`","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"JoelChanZhiYang"},"content":"* Adds an insurance claim to the person specified at `INDEX`","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"JoelChanZhiYang"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"JoelChanZhiYang"},"content":"* The index must be a positive integer 1, 2, 3, …","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"JoelChanZhiYang"},"content":"* `TITLE` is a unique identifying description of the claim","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"JoelChanZhiYang"},"content":"* `DESCRIPTION` is a string describing the nature of the insurance claim","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"JoelChanZhiYang"},"content":"* `STATUS` is a string describing the status of the insurance claim","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"JoelChanZhiYang"},"content":"* If the person has a claim with the same title exists, the claim is updated instead","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"JoelChanZhiYang"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"JoelChanZhiYang"},"content":"* `claim 1 t/Hospital Claim d/Broke a leg s/Pending`","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"JoelChanZhiYang"},"content":"* `claim 1 t/Hospital Claim d/Broke left leg`","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"JoelChanZhiYang"},"content":"    * If a claim titled “Hospital Claim” already exists, the description will be updated to “Broke left leg”","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"xianlinc"},"content":"### Adding a note: `note`","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"xianlinc"},"content":"Adds a note to an existing person in the address book","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"xianlinc"},"content":"Format: `note INDEX n/NOTE`","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"xianlinc"},"content":"* Adds a note to the person at the specified `INDEX`.","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"xianlinc"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"xianlinc"},"content":"* The index must be a positive integer 1, 2, 3,...","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"xianlinc"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"xianlinc"},"content":"* `list` followed by `note 2 n/Meet for lunch` adds a note that says Meet for lunch to the 2nd person in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"xianlinc"},"content":"* `find Betsy` followed by `note 1 n/Birthday on 12 Dec` adds a note that says Birthday on 12 Dec  to the 1st person in the results of the find command.","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"rldefa"},"content":"### Schedule appointment: `schedule`","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"rldefa"},"content":"Schedule a meeting with a specific person","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"rldefa"},"content":"Format: `schedule INDEX m/MEETING_TIME`","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"rldefa"},"content":"* Schedule a meeting with the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"rldefa"},"content":"* `MEETING_TIME` must be of the format `dd-mmm-yyyy hh:mm`","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"rldefa"},"content":"* First letter of month is capitalised while rest are not.","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"rldefa"},"content":"* Only store 1 appointment for each user","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"rldefa"},"content":"* Use the same command with different datetime to change the meeting timing","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"rldefa"},"content":"* You can remove the appointment by specifying `m/` without any datetime after it.","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":194,"author":{"gitId":"rldefa"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":195,"author":{"gitId":"rldefa"},"content":"* `schedule 3 m/05-Feb-2022 15:30`","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"rldefa"},"content":"* `schedule 5 m/05-Dec-2021 20:00`","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"CheahYan"},"content":"### Adding Revenue: `revenue` [coming soon]","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"CheahYan"},"content":"Adds revenue earned from an existing person in the address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"CheahYan"},"content":"Format: `revenue AMOUNT`","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"CheahYan"},"content":"* Adds to the revenue earned from an existing person in the address book by the given `AMOUNT`. The amount refers to the","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"CheahYan"},"content":"amount of revenue that the user earn from an existing person in S$. The amount can be **any float number of up to 2 ","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"CheahYan"},"content":"decimal places 100, 250.11, 50000, ...**","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"CheahYan"},"content":"* Existing value will be updated with the current value added to the `AMOUNT` given.","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"CheahYan"},"content":"* Default value for revenue of a person will be 0 when he/she is added to the address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"CheahYan"},"content":"* Revenue of an existing person in the address book should never be **negative**.","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"CheahYan"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"CheahYan"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` followed by `revenue 100.95`","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"CheahYan"},"content":"will update the revenue of John Doe to be `100.95`.","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"CheahYan"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal` followed by","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"CheahYan"},"content":"`revenue 350` and followed by `revenue -100.11` will update the revenue of Betsy Crowe to be `249.89`.","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"JoelChanZhiYang"},"content":"InsurancePal data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"JoelChanZhiYang"},"content":"InsurancePal data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"JoelChanZhiYang"},"content":"If your changes to the data file makes its format invalid, InsurancePal will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"JoelChanZhiYang"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous InsurancePal home folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"kawaiigabrielneko"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… [i/INSURANCE]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague i/life i/health`","lastModifiedDate":"2021-09-28"},{"lineNumber":251,"author":{"gitId":"JoelChanZhiYang"},"content":"**Claim** | `claim 1 t/Hospital Claim d/Broke a leg s/Pending`","lastModifiedDate":"2021-09-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"kawaiigabrielneko"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]… [i/INSURANCE]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-09-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"JoelChanZhiYang"},"content":"**Note** | `note 2 n/Meet for lunch`","lastModifiedDate":"2021-09-30"},{"lineNumber":259,"author":{"gitId":"JoelChanZhiYang"},"content":"**Revenue** | `revenue -100.11`","lastModifiedDate":"2021-09-30"},{"lineNumber":260,"author":{"gitId":"JoelChanZhiYang"},"content":"**Schedule** | `schedule 3 m/05-Feb-2022 15:30`","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"JoelChanZhiYang":30,"xianlinc":12,"CheahYan":19,"kawaiigabrielneko":11,"-":173,"rldefa":15}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"title: InsurancePal","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103T-T17-4/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-T17-4/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T17-4/tp/branch/master/graph/badge.svg?token\u003dW8OO51MUAS)](https://codecov.io/gh/AY2122S1-CS2103T-T17-4/tp)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"InsurancePal is a client management software specially designed to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"* If you are interested in using InsurancePal, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"* If you are interested about developing InsurancePal, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"JoelChanZhiYang":6,"-":13}},{"path":"docs/team/cheahyan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CheahYan"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"CheahYan"},"content":"layout: page","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"CheahYan"},"content":"title: Cheah Yan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"CheahYan"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"CheahYan"},"content":"### Project: InsurancePal","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"CheahYan"},"content":"Insurance Pal is a client management software specially designed","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"CheahYan"},"content":"to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"CheahYan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"CheahYan"},"content":"* **New Feature**: ","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"CheahYan"},"content":"* **Project Management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"CheahYan"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"CheahYan"},"content":"  * User Guide","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"CheahYan"},"content":"      * Wrote documentation for revenue feature","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"CheahYan"},"content":"  * Developer Guide","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"CheahYan"},"content":"      * Added target user profile, value proposition and user stories to the developer guide","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"CheahYan"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"CheahYan"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"CheahYan"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"CheahYan":21}},{"path":"docs/team/joelchanzhiyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"JoelChanZhiYang"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"JoelChanZhiYang"},"content":"layout: page","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"JoelChanZhiYang"},"content":"title: Joel Chan\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"JoelChanZhiYang"},"content":"---","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoelChanZhiYang"},"content":"### Project: InsurancePal ","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JoelChanZhiYang"},"content":"Insurance Pal is a client management software specially designed ","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"JoelChanZhiYang"},"content":"to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JoelChanZhiYang"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JoelChanZhiYang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"JoelChanZhiYang"},"content":"* **New Feature**: Added the ability for the user to add the status of insurance","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"JoelChanZhiYang"},"content":"claims to a contact","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Project Management**:","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"JoelChanZhiYang"},"content":"  * Managed issues for milestone v1.1 on GitHub","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Documentation**: ","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"JoelChanZhiYang"},"content":"  * Wrote documentation for claims feature","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Community**:","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"JoelChanZhiYang"},"content":"  * PRs Reviewed (with non-trivial comments): [#23](https://github.com/AY2122S1-CS2103T-T17-4/tp/pull/23)","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"JoelChanZhiYang"},"content":"* **Tools**: ","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"JoelChanZhiYang"},"content":"  * Added CodeCov integration to the repo","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"JoelChanZhiYang":21}},{"path":"docs/team/kawaiigabrielneko.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kawaiigabrielneko"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kawaiigabrielneko"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"kawaiigabrielneko"},"content":"title: Gabriel Goh\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kawaiigabrielneko"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kawaiigabrielneko"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kawaiigabrielneko"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kawaiigabrielneko"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kawaiigabrielneko"},"content":"* **New Feature**: Added insurances.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kawaiigabrielneko"},"content":"  * What it does: Allows the user keep track of all insurances held by each person in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kawaiigabrielneko"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kawaiigabrielneko"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kawaiigabrielneko":25}},{"path":"docs/team/rldefa.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rldefa"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"rldefa"},"content":"layout: page","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"rldefa"},"content":"title: Richard Li\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"rldefa"},"content":"---","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"rldefa"},"content":"### Project: InsurancePal","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"rldefa"},"content":"Insurance Pal is a client management software specially designed","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"rldefa"},"content":"to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"rldefa"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"rldefa"},"content":"* **New Feature**: Added the ability to schedule meetings with individual contacts.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"rldefa"},"content":"    * What it does: allows the user to schedule meetings with individuals. User can remove and edit scheduled meetings through the same feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"rldefa"},"content":"    * Justification: Our target users are insurance agents, who have to meet up with many clients often. This feature allows them to keep track of who they are meeting and when.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"rldefa"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"rldefa"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"rldefa"},"content":"    * User Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"rldefa"},"content":"        * Added documentation for the features `schedule` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"rldefa"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"rldefa"},"content":"        * Add more non-functional requirements to developers guide.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"rldefa"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"rldefa"},"content":"* **Community**:","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"rldefa":25}},{"path":"docs/team/xianlinc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"xianlinc"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"xianlinc"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"xianlinc"},"content":"title: Chng Xian Lin\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"xianlinc"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"xianlinc"},"content":"### Project: InsurancePal","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"xianlinc"},"content":"Insurance Pal is a client management software specially designed","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xianlinc"},"content":"to help manage the logistics of being an insurance agent.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"xianlinc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"xianlinc"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"xianlinc"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"xianlinc"},"content":"    * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"xianlinc"},"content":"        * Added documentation for the features `note`","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"xianlinc"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"xianlinc"},"content":"        * Added use cases to the developer guide.","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"xianlinc":17}}]
