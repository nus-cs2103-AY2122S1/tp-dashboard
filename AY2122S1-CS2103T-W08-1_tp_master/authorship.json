[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W08-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W08-1/tp/actions)","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"# Notor","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"Notor aims to help mentors who wish to informally keep tabs on their mentees, by providing a quick way to take notes and mantain records on their mentees","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"## Getting started with Notor","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"New users should start with our [User Guide](docs/UserGuide.md).","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"Developers should note points on [Setting Up](docs/SettingUp.md) and the [Developer Guide](docs/DeveloperGuide.md).","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"## Credits and Notes","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"* This project was created for a software engineering class, CS2103T","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"* It is morphed from the `AddressBook Level 3` (`AB3` for short) project.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"  * AB3 is a **part of the se-education.org** initiative. See [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":14,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"mainClassName \u003d \u0027seedu.notor.Main\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"    archiveName \u003d \u0027notor.jar\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"You can reach us at the email `e0588244.nus.edu.sg`","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"### Hannah Chia","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"\u003cimg src\u003d\"images/kaixin-hc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"[[github](https://github.com/kaixin-hc)]","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"[[portfolio](team/kaixin-hc.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"* Role: Team Lead, Developer","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"* Responsibilities: Project Management","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"### Xu Yukun","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"\u003cimg src\u003d\"images/yukun99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"[[github](http://github.com/yukun99)]","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"[[portfolio](team/yukun99.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"* Role: Developer","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"* Responsibilities: Code Quality, Java + IntelliJ expert","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"### Elton Goh","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"\u003cimg src\u003d\"images/eltongohjh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"kaixin-hc"},"content":"[[github](http://github.com/eltongohjh)]","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"kaixin-hc"},"content":"[[portfolio](team/eltongohjh.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"* Responsibilities: Documentation, Integration","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"### Elroy Goh","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"kaixin-hc"},"content":"\u003cimg src\u003d\"images/elroygohjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"kaixin-hc"},"content":"[[github](http://github.com/elroygohjy)]","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kaixin-hc"},"content":"[[portfolio](team/elroygohjy.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"kaixin-hc"},"content":"### Jonathan Kwok","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"\u003cimg src\u003d\"2103t/tp/docs/images/halphasx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"[[github](http://github.com/HalphasX)]","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"[[portfolio](team/halphasx.md)]","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"kaixin-hc"},"content":"* Responsibilities: Deliverables, Integration","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"kaixin-hc"},"content":"## Instructor","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"kaixin-hc"},"content":"### Professor Damith C. Rajapakse","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"kaixin-hc"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"kaixin-hc"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"[[github](https://github.com/damithc)]","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":37,"-":32}},{"path":"docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Configuration guide","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"Certain properties of the application can be controlled (e.g user preferences file location, logging level) through the","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"configuration file (default: `config.json`).","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":2,"-":5}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"  outdated*.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"    * `./gradlew test` — Runs all tests","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"    * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kaixin-hc"},"content":"the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"kaixin-hc"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kaixin-hc"},"content":"of this repository.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kaixin-hc"},"content":"   repo with it so that the","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"   badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"kaixin-hc"},"content":"   in that page reflects the coverage of your project.","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"files used in the build process, these repository-wide checks cover all files in the repository. They check for","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"kaixin-hc"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"kaixin-hc"},"content":"as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"kaixin-hc"},"content":"directory:","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"kaixin-hc"},"content":"  automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"kaixin-hc"},"content":"  the rest.","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"kaixin-hc"},"content":"1. Update the version number","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"   in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"kaixin-hc"},"content":"   .","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"kaixin-hc"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kaixin-hc"},"content":"   created.","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":29,"-":63}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"## Introduction","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"Thank you for your interest in the developing of Notor! This is an open-source project aimed at helping mentors take","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"quick, efficient notes to facillitate effective and efficient mentoring of many mentees. The design principles","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"scaffolding Notor are as follows.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"1. **Efficient UX for the User:**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"    - You shouldn\u0027t have to wait for Notor; it should simply run -- quickly and without hassle.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"    - Look for how you can make the process faster, more streamlined, or more effective for our clients: mentors.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"2. **CLI-first**","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"    - We target fast-typers who are comfortable taking notes on their computer.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"In particular, we tackle the needs of mentor professors, who tend to be busy and are assigned mentees they are unlikely","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"to personally know or even contact often outside of the mentor relationship. Key features of Notor which scaffold this","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"are:","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"1. Powerful Organisation which is up to the user","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"    - useful for managing many mentees","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"2. A clean note-taking system","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"    - designed so that they can take notes concurrently with meeting the mentee so no information is forgotten","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"3. A last-contact / next-contact model","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"    - helps them contact the mentee regularly","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"### **Acknowledgements**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"This project is a further iteration of the [_Notor-Level 3 (","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"AB-3)_](https://nus-cs2103-ay2122s1.github.io/tp/DeveloperGuide.html) project. All features we have are in addition to","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"those already present in AB-3. Removed features may or may not be listed as well.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"## Glossary","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"* **Autocomplete**: A functionality to complete a `Tag` or a `Command` without users typing the complete strings","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"* **Command structure**: The order in which parameters and command words must be written in order for the command to be","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"  correctly parsed","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"* **Dummy data**: Sample data used in testing or example data present on first launch of application","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"* **Group**: A container containing `Person` objects with shared traits that is created by the user","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"* **Key power features**: Essential features that will be used often when running the software application","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"* **Metadata**: Personal data about a `Person` object","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"* **Note**: A general description of each `Person` to record their activities, with last edit timestamp attached","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"* **Pin**: Fixing a `Person` to the top of the current list of `Person` objects or a `Group`","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"* **Subgroup**: A child of a `Group` used to store multiple persons based on a more specific category than `Group`. A **","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"  Subgroup** can be created by specifying the parent group of the **Subgroup**. A person in a **Subgroup** is","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"  automatically in the parent `Group` as well","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"* **Tag**: A string descriptor attached to `Group` objects or `Person` objects","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"* **Ungrouped**: Used to describe a `Person` object with no grouping","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"The **Architecture** of our iteration is built upon AB-3. Please refer to the AB-3 **Architecture**","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"Yukun99"},"content":"section for the general Architectural design of the app. Only changes will be listed here.","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"### Logic Changes","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"Yukun99"},"content":"#### Command Changes","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"Yukun99"},"content":"![CommandClassDiagram](images/ParserClasses.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"Yukun99"},"content":"Due to the addition of many new commands and refactoring of the command structure, we have had to create a better class","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"Yukun99"},"content":"system to handle them.","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"Yukun99"},"content":"* `Parser` now takes in generic `T extends Command` since we have multiple types of commands, each with their own unique","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"Yukun99"},"content":"  parser","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"* `Executor` instances are created by each `Command` class, which then handle the actual execution of commands and","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"  returning of `CommandResult`","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"* Commands now come in 3 general types, `PersonCommand`, `GroupCommand` and `Command`","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"    * `PersonCommand` operates on `Person` objects","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"    * `GroupCommand` operates on `Group` objects","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"    * `Command` operates without either a `Person` or `Group` object","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"* `Parser` and `Executor` classes come in the same 3 categories as `Command` classes","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"Yukun99"},"content":"* `NotorParser` now parses both the `commandWord` and `subCommandWord` for user commands","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"Yukun99"},"content":"    * `commandWord` refers to either `Person`, `Group` or one of the object agnostic commands","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"Yukun99"},"content":"    * `subCommandWord` refers to an operation that can be carried out on a `Person` or `Group`","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"Yukun99"},"content":"New Workflow for Adding Commands:","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"1. Create a `XYZCommand` class that extends either `PersonCommand`, `GroupCommand` or simply `implements Command`.","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"Yukun99"},"content":"2. Create a `XYZCommandParser` class that extends the same type of `Parser` as the `Command` above is.","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"3. Add the new `XYZCommandParser` to the `parse()` method in `NotorParser`.","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"4. Create a `XYZCommandExecutor` class that extends the same type of `Executor` as the `Command` from step 1.","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"Yukun99"},"content":"5. Implement all required methods and ensure all fields used by the methods are present.","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"Yukun99"},"content":"### Model Changes","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"Yukun99"},"content":"*(placeholder API for now, will update to our own link later when implemented.)*","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"kaixin-hc"},"content":"**","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"API** : [`Model.java`](https://github.com/se-edu/Notor-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"Yukun99"},"content":"![ModelClassDiagram](images/ModelClassDiagram.png)","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"Yukun99"},"content":"* `Person` does not contain the `Address` field anymore.","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"* `Person` contains a new `Note` field, `SuperGroup` field and `SubGroup` field.","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"EltonGohJH"},"content":"* `Person` does not contain direct reference to `SuperGroup` and `SubGroup` but ","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"EltonGohJH"},"content":"strings of SuperGroup and for display purposes.","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"Yukun99"},"content":"* This UML diagram is the current class structure implemented.","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"Yukun99"},"content":"Here is the better class structure to be implemented:","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"Yukun99"},"content":"![ModelClassDiagram2](images/BetterModelClassDiagram.png)","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"Yukun99"},"content":"* `Trie` allows tags to be autocompleted as commands are entered.","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"EltonGohJH"},"content":"* Storing `String` objects in a `Trie` in Notor allows all tags to only get created once instead of once per","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"Yukun99"},"content":"  object.","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"Yukun99"},"content":"* Storing tags as `String` objects in a trie is simpler than a dedicated `Tag` class.","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Yukun99"},"content":"*(placeholder API for now, will update to our own link later when implemented.)*","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"kaixin-hc"},"content":"**","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"EltonGohJH"},"content":"API** : [`Storage.java`](https://github.com/se-edu/Notor-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Yukun99"},"content":"![StorageClassDiagram](images/StorageClassDiagram.png)","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"Yukun99"},"content":"* now includes a new `Archive` Storage component","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"Yukun99"},"content":"* `Archive` allows users to temporarily remove `Person`s from their Address Book","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"Yukun99"},"content":"**","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"Yukun99"},"content":"API** : [`Trie.java`](https://github.com/AY2122S1-CS2103T-W08-1/tp/blob/master/src/main/java/seedu/address/commons/core/trie/Trie.java)","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"Yukun99"},"content":"* Allows grouping and autocompletion of `Tag` and `Command` objects.","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"Yukun99"},"content":"* Supports addition and deletion of items.","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"Yukun99"},"content":"* Supports finding of first item.","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"Yukun99"},"content":"* Supports finding of first item that contains specified keyword.","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"EltonGohJH"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedNotor`. It extends `Notor` with an undo/redo","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"EltonGohJH"},"content":"history, stored internally as an `NotorStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"kaixin-hc"},"content":"following operations:","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"EltonGohJH"},"content":"* `VersionedNotor#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"EltonGohJH"},"content":"* `VersionedNotor#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"EltonGohJH"},"content":"* `VersionedNotor#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"EltonGohJH"},"content":"These operations are exposed in the `Model` interface as `Model#commitNotor()`, `Model#undoNotor()`","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"EltonGohJH"},"content":"and `Model#redoNotor()` respectively.","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"EltonGohJH"},"content":"Step 1. The user launches the application for the first time. The `VersionedNotor` will be initialized with the","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"kaixin-hc"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"kaixin-hc"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"EltonGohJH"},"content":"calls `Model#commitNotor()`, causing the modified state of the address book after the `delete 5` command executes","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"EltonGohJH"},"content":"to be saved in the `NotorStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"kaixin-hc"},"content":"state.","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"EltonGohJH"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitNotor()`","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"EltonGohJH"},"content":", causing another modified address book state to be saved into the `NotorStateList`.","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"EltonGohJH"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitNotor()`, so the address book state will not be saved into the `NotorStateList`.","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"kaixin-hc"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"EltonGohJH"},"content":"the `undo` command. The `undo` command will call `Model#undoNotor()`, which will shift the `currentStatePointer`","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"kaixin-hc"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"EltonGohJH"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial Notor state, then there are no previous Notor states to restore. The `undo` command uses `Model#canUndoNotor()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2021-10-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"EltonGohJH"},"content":"The `redo` command does the opposite — it calls `Model#redoNotor()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"kaixin-hc"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"EltonGohJH"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `NotorStateList.size() - 1`, pointing to the latest address book state, then there are no undone Notor states to restore. The `redo` command uses `Model#canRedoNotor()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"kaixin-hc"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"EltonGohJH"},"content":"as `list`, will usually not call `Model#commitNotor()`, `Model#undoNotor()` or `Model#redoNotor()`.","lastModifiedDate":"2021-10-20"},{"lineNumber":224,"author":{"gitId":"EltonGohJH"},"content":"Thus, the `NotorStateList` remains unchanged.","lastModifiedDate":"2021-10-20"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"EltonGohJH"},"content":"Step 6. The user executes `clear`, which calls `Model#commitNotor()`. Since the `currentStatePointer` is not","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"EltonGohJH"},"content":"pointing at the end of the `NotorStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"kaixin-hc"},"content":"purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"kaixin-hc"},"content":"desktop applications follow.","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"kaixin-hc"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by itself.","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"Yukun99"},"content":"**Target user profile**: mentor professors","lastModifiedDate":"2021-10-06"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"Yukun99"},"content":"* has groups of contacts that have different needs","lastModifiedDate":"2021-10-06"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"Yukun99"},"content":"Priorities:\u003cp\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":288,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":289,"author":{"gitId":"Yukun99"},"content":"* High - must have\u003cp\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":290,"author":{"gitId":"Yukun99"},"content":"* Medium - nice to have\u003cp\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":291,"author":{"gitId":"Yukun99"},"content":"* Low - unlikely to have\u003cp\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":292,"author":{"gitId":"Yukun99"},"content":"* Default - already implemented)","lastModifiedDate":"2021-09-30"},{"lineNumber":293,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":294,"author":{"gitId":"Yukun99"},"content":"|As a …                                                                                      |I want to …                                                                                                   |So that I can …                                            |Priority    |Status     |When?         |","lastModifiedDate":"2021-09-30"},{"lineNumber":295,"author":{"gitId":"Yukun99"},"content":"|--------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------|------------|-----------|--------------|","lastModifiedDate":"2021-09-30"},{"lineNumber":296,"author":{"gitId":"Yukun99"},"content":"|on the go user                                                                              |add notes without wifi or internet access                                                                     |use the app anywhere                                       |Default     |           |Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":297,"author":{"gitId":"Yukun99"},"content":"|new user                                                                                    |have dummy data                                                                                               |see what my entries look like                              |Default     |           |Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":298,"author":{"gitId":"Yukun99"},"content":"|new user                                                                                    |remove all dummy entries easily                                                                               |start doing work quickly                                   |Medium      |           |Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":299,"author":{"gitId":"Yukun99"},"content":"|general user, new user                                                                      |see a simple UI which shows essential features immediately and hides away advanced features till you need them|slowly learn the features                                  |High        |           |Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":300,"author":{"gitId":"Yukun99"},"content":"|general user, mentor professor, module professor                                            |take notes with timestamps                                                                                    |see my notes chronologically                               |High        |           |Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":301,"author":{"gitId":"Yukun99"},"content":"|general user, mentor professor, module professor                                            |edit the groups or tags of a student                                                                          |                                                           |High        |           |Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":302,"author":{"gitId":"Yukun99"},"content":"|mentor professor                                                                            |group the students based on the mentoring subjects                                                            |tag or comment on each group separately                    |High        |           |Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":303,"author":{"gitId":"Yukun99"},"content":"|general user, mentor professor, module professor                                            |have easy-to-remember commands for inputting information                                                      |                                                           |High        |           |Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":304,"author":{"gitId":"Yukun99"},"content":"|general user                                                                                |delete groups/subgroups                                                                                       |                                                           |High        |Not started|Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":305,"author":{"gitId":"Yukun99"},"content":"|experienced user, general user                                                              |add tags cumulatively                                                                                         |not retype my old tags                                     |High        |Not started|Iteration 1.2 |","lastModifiedDate":"2021-09-30"},{"lineNumber":306,"author":{"gitId":"Yukun99"},"content":"|new user                                                                                    |see clear error messages that explains how to enter the correct command                                       |learn the right syntax from my errors                      |High        |Not started|Iteration 1.2b|","lastModifiedDate":"2021-10-01"},{"lineNumber":307,"author":{"gitId":"Yukun99"},"content":"|experienced user, general user, mentor professor, module professor                          |edit previous notes I have taken                                                                              |                                                           |High        |           |Iteration 1.2b|","lastModifiedDate":"2021-10-01"},{"lineNumber":308,"author":{"gitId":"Yukun99"},"content":"|mentor professor, module professor, new user                                                |have an easily accessible help page                                                                           |                                                           |High        |           |Iteration 1.2b|","lastModifiedDate":"2021-10-01"},{"lineNumber":309,"author":{"gitId":"Yukun99"},"content":"|experienced user, general user, mentor professor, module professor, new user, on the go user|search by tag/category                                                                                        |find students based on tag/category                        |High        |Not started|Iteration 1.2b|","lastModifiedDate":"2021-10-01"},{"lineNumber":310,"author":{"gitId":"Yukun99"},"content":"|general user, mentor professor, module professor                                            |have notes attached to categories                                                                             |save notes relevant to a whole group                       |Medium      |           |Iteration 1.2b|","lastModifiedDate":"2021-09-30"},{"lineNumber":311,"author":{"gitId":"Yukun99"},"content":"|general user                                                                                |create general notes                                                                                          |take down any thoughts I have on the fly                   |Medium      |Not started|Iteration 1.2b|","lastModifiedDate":"2021-09-30"},{"lineNumber":312,"author":{"gitId":"Yukun99"},"content":"|new user                                                                                    |see a confirmation message if I choose to delete something                                                    |avoid accidental deletions                                 |Medium      |           |Iteration 1.2b|","lastModifiedDate":"2021-09-30"},{"lineNumber":313,"author":{"gitId":"Yukun99"},"content":"|experienced user, mentor professor, module professor                                        |specify the kinds of data attached to contacts which is viewable from the front page                          |only see information that I need                           |Nice To Have|           |Iteration 1.3 |","lastModifiedDate":"2021-10-01"},{"lineNumber":314,"author":{"gitId":"Yukun99"},"content":"|general user                                                                                |display all of the user information in an easy to reference format                                            |read large amounts of information at once easily           |Medium      |           |Iteration 1.3 |","lastModifiedDate":"2021-10-01"},{"lineNumber":315,"author":{"gitId":"Yukun99"},"content":"|mentor professor, module professor                                                          |initialise the contacts for many students at once                                                             |add similar students by batch                              |Medium      |           |Iteration 1.3 |","lastModifiedDate":"2021-10-01"},{"lineNumber":316,"author":{"gitId":"Yukun99"},"content":"|mentor professor                                                                            |see the last time I contacted a student                                                                       |know if I need to check up on them                         |Medium      |           |Iteration 1.3 |","lastModifiedDate":"2021-10-01"},{"lineNumber":317,"author":{"gitId":"Yukun99"},"content":"|new user                                                                                    |get prompted for the arguments.                                                                               |learn the command structure                                |Medium      |           |Iteration 1.3 |","lastModifiedDate":"2021-10-01"},{"lineNumber":318,"author":{"gitId":"Yukun99"},"content":"|experienced user                                                                            |pin users I need to access regularly                                                                          |see commonly accessed users easily                         |Low         |           |Iteration 1.3b|","lastModifiedDate":"2021-10-01"},{"lineNumber":319,"author":{"gitId":"Yukun99"},"content":"|experienced user                                                                            |see personal metadata such as number of high-priority students \u0026 number of contacts                           |determine my own usage                                     |Low         |           |Iteration 1.3b|","lastModifiedDate":"2021-10-01"},{"lineNumber":320,"author":{"gitId":"Yukun99"},"content":"|new user                                                                                    |see a short tutorial                                                                                          |get familiar with key features                             |Low         |Not started|Iteration 1.3b|","lastModifiedDate":"2021-10-01"},{"lineNumber":321,"author":{"gitId":"Yukun99"},"content":"|general user                                                                                |see a list of recently looked up people                                                                       |quickly add on thoughts on the people I\u0027ve just seen       |Medium      |           |Iteration 1.3b|","lastModifiedDate":"2021-10-01"},{"lineNumber":322,"author":{"gitId":"Yukun99"},"content":"|mentor professor, module professor                                                          |hide groups                                                                                                   |ignore groups no longer relevant to me                     |Low         |           |Iteration 1.3b|","lastModifiedDate":"2021-10-01"},{"lineNumber":323,"author":{"gitId":"Yukun99"},"content":"|general user, mentor professor, module professor, on the go user                            |export the data to PDF \u0026 CSV / Excel                                                                          |reference the information in another format                |Low         |           |Iteration 1.3b|","lastModifiedDate":"2021-10-01"},{"lineNumber":324,"author":{"gitId":"Yukun99"},"content":"|experienced user                                                                            |sort by complete inclusion of terms rather than matching any term                                             |narrow down my search results easily                       |Low         |Not started|Iteration 1.3b|","lastModifiedDate":"2021-10-01"},{"lineNumber":325,"author":{"gitId":"Yukun99"},"content":"|general user                                                                                |create general reminders                                                                                      |remind myself of tasks I need to do for my mentees/students|Low         |Not started|Iteration 1.3b|","lastModifiedDate":"2021-10-01"},{"lineNumber":326,"author":{"gitId":"Yukun99"},"content":"|experienced user, module professor                                                          |set my own command aliases                                                                                    |use my own commands when I am used to them                 |Low         |           |Delay         |","lastModifiedDate":"2021-10-01"},{"lineNumber":327,"author":{"gitId":"Yukun99"},"content":"|experienced user, mentor professor, module professor                                        |use shorter commands                                                                                          |save time                                                  |Medium      |           |Delay         |","lastModifiedDate":"2021-10-01"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"EltonGohJH"},"content":"(For all use cases below, the **System** is the `Notor` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2021-10-20"},{"lineNumber":332,"author":{"gitId":"kaixin-hc"},"content":"otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"EltonGohJH"},"content":"**Use case: Add a note to a person**","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"Yukun99"},"content":"1. User requests to add a note to the person","lastModifiedDate":"2021-09-30"},{"lineNumber":339,"author":{"gitId":"EltonGohJH"},"content":"2. Notor shows a list of persons","lastModifiedDate":"2021-10-20"},{"lineNumber":340,"author":{"gitId":"Yukun99"},"content":"3. User requests to add a note to a specific person in the list","lastModifiedDate":"2021-09-30"},{"lineNumber":341,"author":{"gitId":"EltonGohJH"},"content":"4. Notor opens up a pop up dialogue for the user to type the note for the person","lastModifiedDate":"2021-10-20"},{"lineNumber":342,"author":{"gitId":"Yukun99"},"content":"5. User requests to save the note to the person","lastModifiedDate":"2021-09-30"},{"lineNumber":343,"author":{"gitId":"EltonGohJH"},"content":"6. Notor stores the book to the person","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"EltonGohJH"},"content":"7. Notor saves the note to storage","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"Yukun99"},"content":"* 2a. The list is empty. Use case ends.","lastModifiedDate":"2021-10-06"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"EltonGohJH"},"content":"    * 3a1. Notor shows an error message. Use case resumes at step 2.","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"Yukun99"},"content":"**Use case: User types a command**","lastModifiedDate":"2021-09-30"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":357,"author":{"gitId":"Yukun99"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":359,"author":{"gitId":"EltonGohJH"},"content":"1. User starts typing a command in Notor","lastModifiedDate":"2021-10-20"},{"lineNumber":360,"author":{"gitId":"EltonGohJH"},"content":"2. Notor shows possible commands starting with what user has typed","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"Yukun99"},"content":"3. User presses tab to select the right command","lastModifiedDate":"2021-09-30"},{"lineNumber":362,"author":{"gitId":"Yukun99"},"content":"4. User presses enter to execute the selected command","lastModifiedDate":"2021-09-30"},{"lineNumber":363,"author":{"gitId":"EltonGohJH"},"content":"5. Notor \u003cu\u003eruns command (UC1)\u003c/u\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":365,"author":{"gitId":"Yukun99"},"content":"   Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":367,"author":{"gitId":"Yukun99"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":369,"author":{"gitId":"Yukun99"},"content":"* 2a. The typed string is not in any command.","lastModifiedDate":"2021-09-30"},{"lineNumber":370,"author":{"gitId":"EltonGohJH"},"content":"    * 2a1. Notor displays no commands. Use case resumes at step 1.","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"Yukun99"},"content":"3. A user with above average typing speed for regular English text (i.e., not code, not system admin commands) should be","lastModifiedDate":"2021-10-06"},{"lineNumber":377,"author":{"gitId":"Yukun99"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-06"},{"lineNumber":378,"author":{"gitId":"Yukun99"},"content":"4. Installing a new update shall not in any way, modify or erase existing data and value from the previous version, and","lastModifiedDate":"2021-10-06"},{"lineNumber":379,"author":{"gitId":"Yukun99"},"content":"   the new update should be compatible with the data produced earlier within the system.","lastModifiedDate":"2021-10-06"},{"lineNumber":380,"author":{"gitId":"HalphasX"},"content":"5. Should be able to store notes in English language, and provisions shall be made to support all languages.","lastModifiedDate":"2021-10-01"},{"lineNumber":381,"author":{"gitId":"Yukun99"},"content":"6. The system should be able to handle notes with at most 1000 lines without any noticeable decrease in performance, so","lastModifiedDate":"2021-10-06"},{"lineNumber":382,"author":{"gitId":"Yukun99"},"content":"   that users can keep extensive notes on their mentees.","lastModifiedDate":"2021-10-06"},{"lineNumber":383,"author":{"gitId":"HalphasX"},"content":"7. The user should not lose any data if the system exits prematurely.","lastModifiedDate":"2021-10-01"},{"lineNumber":384,"author":{"gitId":"HalphasX"},"content":"8. The system should be able to reply to the prompt or command from the user within 3 seconds.","lastModifiedDate":"2021-10-01"},{"lineNumber":385,"author":{"gitId":"HalphasX"},"content":"9. The system should be intuitive to use for a mentor professor.","lastModifiedDate":"2021-10-01"},{"lineNumber":386,"author":{"gitId":"HalphasX"},"content":"10. Should ensure personal data privacy and security of data access.","lastModifiedDate":"2021-10-01"},{"lineNumber":387,"author":{"gitId":"Yukun99"},"content":"11. Software testing will require the use of automated testing. The test will be deleted after successful implementation","lastModifiedDate":"2021-10-06"},{"lineNumber":388,"author":{"gitId":"Yukun99"},"content":"    of the software system.","lastModifiedDate":"2021-10-06"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"kaixin-hc"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2021-09-29"},{"lineNumber":408,"author":{"gitId":"kaixin-hc"},"content":"       optimum.","lastModifiedDate":"2021-09-29"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"kaixin-hc"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-09-29"},{"lineNumber":427,"author":{"gitId":"kaixin-hc"},"content":"       Timestamp in the status bar is updated.","lastModifiedDate":"2021-09-29"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":34,"HalphasX":5,"Yukun99":129,"EltonGohJH":43,"-":232}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"  documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"    * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"      as the top navigation bar.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"    * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml`","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"      and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"      documentation pages to PDF format).","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files,","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"  as explained in [_[se-edu/guides] **Intellij IDEA: Useful","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"  settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"  standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* See the [_[se-edu/guides] **Using PlantUML**_](https://se-education.org/guides/tutorials/plantUml.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kaixin-hc"},"content":"  files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":14,"-":22}},{"path":"docs/Logging.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Logging guide","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-06-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* We are using `java.util.logging` package for logging.","lastModifiedDate":"2020-06-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* The `LogsCenter` class is used to manage the logging levels and logging destinations.","lastModifiedDate":"2020-06-07"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)` which will log messages according to the","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"  specified logging level.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Log messages are output through the console and to a `.log` file.","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"* The output logging level can be controlled using the `logLevel` setting in the configuration file (See","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"  the [Configuration guide](Configuration.md) section).","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"* **When choosing a level for a log message**, follow the conventions given in [_[se-edu/guides] Java: Logging","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"  conventions_](https://se-education.org/guides/conventions/java/logging.html).","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":6,"-":8}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"   JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"   11**.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"   project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"   IDEA.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kaixin-hc"},"content":"   style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"   ours.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"kaixin-hc"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"kaixin-hc"},"content":"   Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kaixin-hc"},"content":"   e.g., to report problems _as_ you write code.","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kaixin-hc"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kaixin-hc"},"content":"   files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kaixin-hc"},"content":"   required.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kaixin-hc"},"content":"   about [Notor’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"kaixin-hc":19,"-":44}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"    * To run a subset of tests, you can right-click on a test package, test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"   working).\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.storage.StorageManagerTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"   together.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.logic.LogicManagerTest`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":6,"-":30}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"HalphasX"},"content":"## Overview \u003cbr\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"HalphasX"},"content":"Notor is a desktop application for mentors to keep tabs on their mentees, **optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type faster than the average typing speed, Notor allows you to take notes quickly and efficiently, while keeping them in an easy to reference format, which is vital if you are taking notes during meetings with mentees.","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"HalphasX"},"content":"## Quick Start","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"HalphasX"},"content":"### 1. Setup","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"HalphasX"},"content":"Ensure you have Java `11` or above installed in your computer. You can install Java `11` from [here](https://www.oracle.com/in/java/technologies/javase/jdk11-archive-downloads.html).","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"HalphasX"},"content":"### 2. Installing the project","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"HalphasX"},"content":"Download the latest `notor.jar` [here](), and copy the file to the folder you want to use as the _home folder_ for your **Notor**.","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"HalphasX"},"content":"### 3. Running the application","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"HalphasX"},"content":"Double-click the file to start the application. If you have set up Java `11` correctly, the application should open, and the GUI similar to below should appear in a few seconds.","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"HalphasX"},"content":"Note how the app contains some sample data. \u003cbr\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"HalphasX"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"HalphasX"},"content":"### 4. Try Running Examples!","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"HalphasX"},"content":"Type the command in the command box and press Enter to execute it. e.g. Typing **help** and pressing Enter will","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"HalphasX"},"content":"open the help window. \u003cbr\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"HalphasX"},"content":"* **`person /list`** : Lists all contacts.","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"HalphasX"},"content":"* **`person 3 /delete`** : Deletes the 3rd contact (contact with index number `3`) shown in the current list.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"HalphasX"},"content":"* **`person User /create`** : Creates a person named `User`.","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"* **`group 1 /create t:Students`** : Creates a group at index 1` tagged with `Students`.","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"HalphasX"},"content":"* **`person 3 /add g:Orbital`** : Adds the person with index `3` to the group `Orbital`.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"HalphasX"},"content":"* **`group /list`** : Lists all groups.","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"* **`group 1 /note`** : Edits the group note for the group with index number `1`.","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"HalphasX"},"content":"* **`group 1 /create n:Artemis`** : Creates a subgroup `Artemis` inside the group with index number `1`.","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"HalphasX"},"content":"* **`group 1 /untag t:Students`** : Removes the tag `Students` from the group with index number `1`.","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **`clear`** : Deletes all contacts.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"HalphasX"},"content":"* **`exit`** : Exits the application. \u003cbr\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"HalphasX"},"content":"Refer to the [Features](#Features) below for details of each command.","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"**Information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"kaixin-hc"},"content":"  e.g. in `person /create n:NAME`, `NAME` is a parameter which can be used as `/create n:John Doe`.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"* Round brackets `()` refer to COMPULSORY arguments.\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"kaixin-hc"},"content":"  e.g `g:(GROUP_NAME)` means that the group name must be entered a that position.","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"  ","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"  e.g `n:NAME [g:GROUP_NAME]` can be used as `n:Elton g:Orbital` or as `n:Elton`.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"* Items with `…`​ after them can be used multiple times including zero times, with a comma separating terms.\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"  e.g. `[t/TAG…​]` can be used as ` ` (i.e. 0 times), `t:tag1, tag2, tag3` etc.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"[comment]: \u003c\u003e (Check if this is actually the correct format!!)","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"kaixin-hc"},"content":"  e.g. if the command specifies `g:GROUP_NAME sg:SUBGROUP_NAME`, `sg:SUBGROUP_NAME g:GROUP_NAME` is also acceptable.","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"kaixin-hc"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"kaixin-hc"},"content":"  e.g. if you specify `p:12341234 p:56785678`, only `p:56785678` will be taken.)","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"kaixin-hc"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"kaixin-hc"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"## General Commands","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"kaixin-hc"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"kaixin-hc"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"kaixin-hc"},"content":"Clears all entries from Notor. Be warned; data will be deleted and **will not be saved**. The intended use of this ","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"kaixin-hc"},"content":"command is to clear the dummy starting data, but you can also use it to reset your Notor from within the program.","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"kaixin-hc"},"content":"Format: `clear`","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"kaixin-hc"},"content":"* Take care not to confuse this command with the more specific`/clearnote` command.","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"kaixin-hc"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"kaixin-hc"},"content":"Exits the program and saves your data.","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"Format: `exit`","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"## Working with people","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"kaixin-hc"},"content":"The base functionality of Notor is to allow you to mantain notes on people who you mentor. These are the commands you can use with the `person` prefix to manage your contacts.","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"### Adding a person: `person (NAME) /create`","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"kaixin-hc"},"content":"Creates a person.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"elroygohjy"},"content":"Format: `person (NAME) /create [p:PHONE] [e:EMAIL] [t:TAG1,TAG2,...] [g:GROUP_INDEX]`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"elroygohjy"},"content":"Advanced user Format: `p (NAME) /c [p:PHONE] [e:EMAIL] [t:TAG1,TAG2,...] [g:GROUP_INDEX]`","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"kaixin-hc"},"content":"* Creates a person with the `NAME`.","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"kaixin-hc"},"content":"* Optional arguments:","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"elroygohjy"},"content":"  * `PHONE`: Phone number of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"elroygohjy"},"content":"  * `EMAIL`: Email of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"elroygohjy"},"content":"  * `TAG1,TAG2..`: Tag(s) that describe the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"elroygohjy"},"content":"  * `GROUP_INDEX`: Index of the group in notor to add the person to.","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"elroygohjy"},"content":"* `person John Lim /create p:91119111 e:notor@notor.com t:Loves Dancing g:1`","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"elroygohjy"},"content":"* `p Michael Joe /c p:92229222 e:notor@notor.com t:Loves Singing g:2`","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"elroygohjy"},"content":"### Adding a person to a group: `person (INDEX) /add (g:GROUP_NAME)`","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"elroygohjy"},"content":"Adds a person at the given index to a specified group.","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"elroygohjy"},"content":"Format: `person (INDEX) /add (g:GROUP_NAME)`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"elroygohjy"},"content":"Advanced user Format: `p (INDEX) /a (g:GROUP_NAME)`","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"elroygohjy"},"content":"* Adds a person with the `NAME` to `GROUP_NAME`.","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"elroygohjy"},"content":"Examples:","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"elroygohjy"},"content":"* `p John /add Lim g:CS2103T`","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"elroygohjy"},"content":"* `p Mary /a g:CS2103T`","lastModifiedDate":"2021-10-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"elroygohjy"},"content":"### Deleting a person : `person (INDEX) /delete`","lastModifiedDate":"2021-10-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"kaixin-hc"},"content":"Deletes an existing person.","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"elroygohjy"},"content":"Format: `person (INDEX) /delete`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"elroygohjy"},"content":"Advanced user Format: `p (INDEX) /d`","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"elroygohjy"},"content":"* Deletes an existing person at the given `INDEX`.","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"kaixin-hc"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"elroygohjy"},"content":"* `person 1 /d `","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"elroygohjy"},"content":"* `p 2 /d`","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"elroygohjy"},"content":"### Editing a person : `person (INDEX) /edit [n:NAME] [p:PHONE] [e:EMAIL]`","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"kaixin-hc"},"content":"Edit an existing person\u0027s data.","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"kaixin-hc"},"content":"Format: `person (INDEX) /edit [n:NAME] [p:PHONE] [e:EMAIL]`\u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"elroygohjy"},"content":"Advanced user Format:`p (INDEX) /e [n:NAME] [p:PHONE] [e:EMAIL]`","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"kaixin-hc"},"content":"* Edits the person at the index `INDEX` and replaces the fields specified with the new parameters.","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"kaixin-hc"},"content":"* Please specify at least one field to be edited.","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"elroygohjy"},"content":"* Optional arguments:","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"elroygohjy"},"content":"  * `NAME`: Name of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"elroygohjy"},"content":"  * `PHONE`: Phone number of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"elroygohjy"},"content":"  * `EMAIL`: Email of the person.","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"elroygohjy"},"content":"* `person 1 /edit n:John Cena e:notor@notor.com`","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"elroygohjy"},"content":"* `p 2 /e n:Little Lamb p:93339333`","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"elroygohjy"},"content":"### Removing a person from group: `person (INDEX) /remove (g:GROUP_NAME)`","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"elroygohjy"},"content":"Removes an existing person from a group.","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"elroygohjy"},"content":"Format: `person (INDEX) /remove (g:GROUP_NAME)`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"elroygohjy"},"content":"Advanced user Format:`p (INDEX) /r (g:GROUP_NAME)`","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"kaixin-hc"},"content":"* Removes an existing person with the `NAME` from a `GROUP_NAME`.","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"kaixin-hc"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"elroygohjy"},"content":"* `person 1 /remove g:CS2103T`","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"elroygohjy"},"content":"* `p 2 /r g:CS2103T sg:W08`","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"elroygohjy"},"content":"### Taking notes for a person : `person (INDEX) /note`","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"kaixin-hc"},"content":"Pops up a note window to take note for an existing person.","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"elroygohjy"},"content":"Format: `person (INDEX) /note`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"elroygohjy"},"content":"Advanced user Format:`p (INDEX) /n`","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"kaixin-hc"},"content":"* Pops up a note window for an existing person with the `NAME` to take note.","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"elroygohjy"},"content":"* `person 1 /note`","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"elroygohjy"},"content":"* `p 2 /n`","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"elroygohjy"},"content":"### Clearing notes of a person : `person (INDEX) /clearnote`","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"elroygohjy"},"content":"Removes note of an existing person.","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"elroygohjy"},"content":"Format: `person (INDEX) /clearnote`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"elroygohjy"},"content":"Advanced user Format:`p (INDEX) /cn`","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"elroygohjy"},"content":"* Removes note of an existing person at the given `INDEX`.","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"elroygohjy"},"content":"* `person 1 /clearnote`","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"elroygohjy"},"content":"* `p 2 /cn`","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"EltonGohJH"},"content":"## Working with groups/subgroups","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"EltonGohJH"},"content":":warning: **These commands will work only will only work when groups or subgroups are listed.** :warning:","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"EltonGohJH"},"content":"### Creating a group: `group (GROUP_NAME) /create`","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"kaixin-hc"},"content":"Creates a group.","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"EltonGohJH"},"content":"Format: `group (GROUP_NAME) /create`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"EltonGohJH"},"content":"Advanced user Format: `g (GROUP_NAME) /c`","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"elroygohjy"},"content":"* Creates a new group with the name `GROUP_NAME`.","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"kaixin-hc"},"content":"* The new group must not have a same name with other existing groups.","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"EltonGohJH"},"content":"* The new group\u0027s name must not include backslash (`/`) or underscore (`_`).","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"EltonGohJH"},"content":"* `group CS2103T /create` will create a new group called CS2103T.","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"EltonGohJH"},"content":"* `g CS2103T /c`","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"EltonGohJH"},"content":"### Deleting a group: `group (INDEX) /delete`","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"kaixin-hc"},"content":"Deletes an existing group.","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"EltonGohJH"},"content":"Format: `group (INDEX) /delete`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"EltonGohJH"},"content":"Advanced user Format: `g (INDEX) /d`","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"EltonGohJH"},"content":"* Deletes the group at the index specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"kaixin-hc"},"content":"Examples :","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"EltonGohJH"},"content":"* `group 1 /delete` will delete the group at index 1.","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"EltonGohJH"},"content":"* `g 1 /d`","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"EltonGohJH"},"content":"### Editing a group: `group (INDEX) /edit [n:NEW_NAME]`","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"kaixin-hc"},"content":"Edits the name of an existing group.","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"EltonGohJH"},"content":"Format: `group (INDEX) /edit [n:NEW_NAME]`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"EltonGohJH"},"content":"Advanced user Format: `group (INDEX) /edit [n:NEW_NAME]`","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"EltonGohJH"},"content":"* Renames an existing group at the index specified to `NEW_NAME` .","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"kaixin-hc"},"content":"* The new group must not have a same name with other existing groups.","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"EltonGohJH"},"content":"* The new group\u0027s name must not include backslash (`/`) or underscore (`_`).","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":244,"author":{"gitId":"kaixin-hc"},"content":"Examples :","lastModifiedDate":"2021-09-29"},{"lineNumber":245,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"EltonGohJH"},"content":"* `group 1 /edit n:CS2101` will rename the group at index 1 to CS2101.","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"EltonGohJH"},"content":"* `g 1 /e CS2101`","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"EltonGohJH"},"content":"### Creating a subgroup: `group (INDEX) /create n:SUBGROUP_NAME`","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"EltonGohJH"},"content":"Creates a new subgroup. **This command only works when group are listed and not when subgroups are listed.**","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"EltonGohJH"},"content":"Format: `group (INDEX) /create n:SUBGROUP_NAME`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"EltonGohJH"},"content":"Advanced user Format: `g (INDEX) /c n:SUBGROUP_NAME`","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"EltonGohJH"},"content":"* Creates a new subgroup of group at the index specified with the name `SUBGROUP_NAME`.","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"kaixin-hc"},"content":"* The new subgroup must not have a same name with other existing subgroups in the same group.","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"EltonGohJH"},"content":"* The new subgroup\u0027s name must not include backslash (`/`) or underscore (`_`).","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"kaixin-hc"},"content":"Examples :","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"EltonGohJH"},"content":"* `group 1 /create n:Artemis` will create a new subgroup Artemis in group at index 1.","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"EltonGohJH"},"content":"* `g 1 /create n:Artemis`","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"EltonGohJH"},"content":"### Adding notes on a group: `group (INDEX) /note`","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":267,"author":{"gitId":"EltonGohJH"},"content":"Add notes on a group and saves the time when the note is added.","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"EltonGohJH"},"content":"Format: `group (INDEX) /note`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"EltonGohJH"},"content":"Advanced user Format: `group (INDEX) /note`","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"EltonGohJH"},"content":"* Add notes on a group at the index specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"EltonGohJH"},"content":"* Entering the command will lead to a popup window where the user can edit notes for group at that index`.","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"EltonGohJH"},"content":"* The time when the note is edited will be saved.","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"kaixin-hc"},"content":"Examples :","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"EltonGohJH"},"content":"* `group 1 /note` will prompt a popup window where the user can edit the notes for group at index 1.","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"EltonGohJH"},"content":"* `g 1 /n`","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"EltonGohJH"},"content":"### Adding tags to a group: `group (INDEX) /tag [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"EltonGohJH"},"content":"Add tags to a group.","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"EltonGohJH"},"content":"Format: `group (INDEX) /tag [t:TAG1,TAG2,...]`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"EltonGohJH"},"content":"Advanced user Format: `g (INDEX) /t [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":288,"author":{"gitId":"EltonGohJH"},"content":"* Add tags to a group at the index specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"EltonGohJH"},"content":"* The tags must not have a same name with other existing tags in the same group.","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":291,"author":{"gitId":"kaixin-hc"},"content":"Examples :","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":293,"author":{"gitId":"EltonGohJH"},"content":"* `group 1 /tag t:orbital,CS2103` add tags orbital and CS2103 to group 1.","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"EltonGohJH"},"content":"* `g 1 /t t:orbital,CS2103`","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"EltonGohJH"},"content":"### Untag tags from a group: `group (INDEX) /untag [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":298,"author":{"gitId":"EltonGohJH"},"content":"Untag tags from a group.","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"EltonGohJH"},"content":"Format: `group (INDEX) /untag [t:TAG1,TAG2,...]`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"EltonGohJH"},"content":"Advanced user Format: `g (INDEX) /u [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"EltonGohJH"},"content":"* Remove tags from a group at the index specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"kaixin-hc"},"content":"Examples :","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"EltonGohJH"},"content":"* `group 1 /untag t:orbital,CS2103` remove tags orbital and CS2103 to group 1.","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"EltonGohJH"},"content":"* `g 1 /ut t:orbital,CS2103`","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"EltonGohJH"},"content":"### Clear tags from a group: `group (INDEX) /cleartags`","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"EltonGohJH"},"content":"Clear tags from a group.","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":313,"author":{"gitId":"EltonGohJH"},"content":"Format: `group (INDEX) /cleartags`\u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"EltonGohJH"},"content":"Advanced user Format: `g (INDEX) /ct`","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":316,"author":{"gitId":"EltonGohJH"},"content":"* Clear all tags from a group at the index specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"EltonGohJH"},"content":"Examples :","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"EltonGohJH"},"content":"* `group 1 /cleartags` clears all tags from group 1.","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"EltonGohJH"},"content":"* `g 1 /ct`","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"kaixin-hc"},"content":"## Filtering with Notor","lastModifiedDate":"2021-10-20"},{"lineNumber":324,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"kaixin-hc"},"content":"Sometimes, you will want to view all people, groups, subgroups, or tags to understand what you have saved in your Notor. At other times, you will want to find those which fit into certain parameters. Here are the ways to view a subset of your data.","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":327,"author":{"gitId":"kaixin-hc"},"content":"### List","lastModifiedDate":"2021-10-20"},{"lineNumber":328,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":329,"author":{"gitId":"kaixin-hc"},"content":"List can show all persons, groups, subgroups, or tags which you have added to Notor.","lastModifiedDate":"2021-10-20"},{"lineNumber":330,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"kaixin-hc"},"content":"#### _Listing all persons_ : `person /list`","lastModifiedDate":"2021-10-20"},{"lineNumber":332,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"kaixin-hc"},"content":"Lists all persons.","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"kaixin-hc"},"content":"Format: `person /list`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":336,"author":{"gitId":"kaixin-hc"},"content":"Advanced user Format:`p /l`","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"HalphasX"},"content":"#### _List all groups_ : `group /list`","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":340,"author":{"gitId":"HalphasX"},"content":"Format:  `group /list`\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"HalphasX"},"content":"Advanced user Format: `g /l`","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":343,"author":{"gitId":"kaixin-hc"},"content":"#### _Listing all persons in a group_ : `group (INDEX) /list`","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"kaixin-hc"},"content":"Use after you have listed out all groups (so you can select the index). Lists all persons in that group.","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":347,"author":{"gitId":"kaixin-hc"},"content":"Format: `group (INDEX)/list`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"HalphasX"},"content":"Advanced user Format:`g (INDEX) /l`","lastModifiedDate":"2021-10-21"},{"lineNumber":349,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"kaixin-hc"},"content":"* Lists all persons of a group that is at the given `INDEX` .","lastModifiedDate":"2021-10-20"},{"lineNumber":351,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"kaixin-hc"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":353,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"HalphasX"},"content":"* `group 1 /list`","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"HalphasX"},"content":"* `g 2 /l`","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":357,"author":{"gitId":"kaixin-hc"},"content":"#### _List all subgroups in a group_ : `group (INDEX) /listsubgroup`","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":359,"author":{"gitId":"kaixin-hc"},"content":"List all the subgroups within a group. Use after you have listed out all groups (so you can select the index)","lastModifiedDate":"2021-10-20"},{"lineNumber":360,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"kaixin-hc"},"content":"Format: `group (INDEX) /listsubgroup`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":362,"author":{"gitId":"kaixin-hc"},"content":"Advanced user Format: `g (INDEX) /lsg`","lastModifiedDate":"2021-10-20"},{"lineNumber":363,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":364,"author":{"gitId":"kaixin-hc"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"kaixin-hc"},"content":"* `group 3 /listsubgroup`","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"kaixin-hc"},"content":"* `g 2 /lsg`","lastModifiedDate":"2021-10-20"},{"lineNumber":368,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":369,"author":{"gitId":"kaixin-hc"},"content":"#### _List all tags_ : `tag /list`","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"kaixin-hc"},"content":"Lists out all tags which you have used so far, so that you can understand what metadata you are tracking.","lastModifiedDate":"2021-10-20"},{"lineNumber":372,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"kaixin-hc"},"content":"Format: `tag /list` \u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"kaixin-hc"},"content":"Advanced Format: `t /l`","lastModifiedDate":"2021-10-20"},{"lineNumber":375,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":376,"author":{"gitId":"kaixin-hc"},"content":"### Find","lastModifiedDate":"2021-10-20"},{"lineNumber":377,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":378,"author":{"gitId":"kaixin-hc"},"content":"Find allows you to obtain the results that match with the keyword specified. You can filter in this way on people, groups, and subgroups. In addition, you may add additional parameters to your search, in order to narrow the search further.","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":380,"author":{"gitId":"kaixin-hc"},"content":"### _Finding persons_ : `person /find (n:QUERY)`","lastModifiedDate":"2021-10-20"},{"lineNumber":381,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":382,"author":{"gitId":"kaixin-hc"},"content":"Finds all persons that match your search term.","lastModifiedDate":"2021-10-20"},{"lineNumber":383,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":384,"author":{"gitId":"kaixin-hc"},"content":"Format: `person  /find (n:QUERY)`\u003cbr\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":385,"author":{"gitId":"kaixin-hc"},"content":"Advanced user Format:`p /f (n:QUERY)`","lastModifiedDate":"2021-10-20"},{"lineNumber":386,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":387,"author":{"gitId":"kaixin-hc"},"content":"* Finds all persons that match with given `QUERY`.","lastModifiedDate":"2021-10-20"},{"lineNumber":388,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":389,"author":{"gitId":"kaixin-hc"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":390,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":391,"author":{"gitId":"kaixin-hc"},"content":"* `person /find n:John`","lastModifiedDate":"2021-10-20"},{"lineNumber":392,"author":{"gitId":"kaixin-hc"},"content":"* `p 2 /f n:Mary`","lastModifiedDate":"2021-10-20"},{"lineNumber":393,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":394,"author":{"gitId":"HalphasX"},"content":"### _Find a group or subgroup_ : `group /find (g:KEYWORD)`","lastModifiedDate":"2021-10-21"},{"lineNumber":395,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":396,"author":{"gitId":"kaixin-hc"},"content":"Find all the groups with the keyword specified. This can also be used to find all the subgroups with the group and subgroup name specified.","lastModifiedDate":"2021-10-20"},{"lineNumber":397,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":398,"author":{"gitId":"HalphasX"},"content":"Format:  `group /find g:KEYWORD`","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"HalphasX"},"content":"Advanced user Format: `g /find g:KEYWORD`","lastModifiedDate":"2021-10-21"},{"lineNumber":400,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":401,"author":{"gitId":"kaixin-hc"},"content":"* Find all the group that matches the `KEYWORD`.","lastModifiedDate":"2021-10-20"},{"lineNumber":402,"author":{"gitId":"kaixin-hc"},"content":"* The keyword must not include backslash (`/`) or underscore (`_`).","lastModifiedDate":"2021-10-20"},{"lineNumber":403,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":404,"author":{"gitId":"kaixin-hc"},"content":"Examples of finding group:","lastModifiedDate":"2021-10-20"},{"lineNumber":405,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":406,"author":{"gitId":"kaixin-hc"},"content":"* `group /find g:Orbital_Team_1`","lastModifiedDate":"2021-10-20"},{"lineNumber":407,"author":{"gitId":"kaixin-hc"},"content":"* `g /f g:W08`","lastModifiedDate":"2021-10-20"},{"lineNumber":408,"author":{"gitId":"kaixin-hc"},"content":"* `group /f sg:W08 g:CS2103T`","lastModifiedDate":"2021-10-20"},{"lineNumber":409,"author":{"gitId":"kaixin-hc"},"content":"* `g /f sg:Artemis g:Orbital`","lastModifiedDate":"2021-10-20"},{"lineNumber":410,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":411,"author":{"gitId":"kaixin-hc"},"content":"## Miscellaneous information","lastModifiedDate":"2021-09-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"kaixin-hc"},"content":"Notor data are saved in the hard disk automatically after any command that changes the data. There is no need to save","lastModifiedDate":"2021-09-29"},{"lineNumber":416,"author":{"gitId":"kaixin-hc"},"content":"manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":420,"author":{"gitId":"kaixin-hc"},"content":"Notor data are saved as a JSON file `[JAR file location]/data/Notor.json`. Advanced users are welcome to update data","lastModifiedDate":"2021-09-29"},{"lineNumber":421,"author":{"gitId":"kaixin-hc"},"content":"directly by editing that data file.","lastModifiedDate":"2021-09-29"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":423,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":424,"author":{"gitId":"kaixin-hc"},"content":"If your changes to the data file makes its format invalid, Notor will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-06"},{"lineNumber":425,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":427,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"kaixin-hc"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"kaixin-hc"},"content":"the data of your previous Notor home folder.","lastModifiedDate":"2021-10-06"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"Yukun99"},"content":"Round brackets `()` refer to COMPULSORY arguments.","lastModifiedDate":"2021-10-11"},{"lineNumber":443,"author":{"gitId":"Yukun99"},"content":"Square brackets `[]` refer to optional arguments.\u003cp\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":444,"author":{"gitId":"Yukun99"},"content":"*TODO: Make command action words below link to their entries above.*","lastModifiedDate":"2021-10-11"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"Yukun99"},"content":"### Person","lastModifiedDate":"2021-10-11"},{"lineNumber":447,"author":{"gitId":"Yukun99"},"content":"**Note**:","lastModifiedDate":"2021-10-11"},{"lineNumber":448,"author":{"gitId":"kaixin-hc"},"content":"* For the **Create** and **List** commands, if you want to automatically add them to a group, please use the **List** command to make sure the `Group` you want to","lastModifiedDate":"2021-10-11"},{"lineNumber":449,"author":{"gitId":"Yukun99"},"content":"  use the command on is displayed before using them via `GROUP_INDEX`.","lastModifiedDate":"2021-10-11"},{"lineNumber":450,"author":{"gitId":"Yukun99"},"content":"* For the **Add** and **Remove** commands, please make sure that the `GROUP_NAME` is typed exactly as how it is spelt on","lastModifiedDate":"2021-10-11"},{"lineNumber":451,"author":{"gitId":"Yukun99"},"content":"  the card.","lastModifiedDate":"2021-10-11"},{"lineNumber":452,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":453,"author":{"gitId":"kaixin-hc"},"content":"Action                    | Format                                                                        | Advanced Format","lastModifiedDate":"2021-09-29"},{"lineNumber":454,"author":{"gitId":"Yukun99"},"content":"--------------------------|-------------------------------------------------------------------------------|--------------------------------------------------------------------","lastModifiedDate":"2021-10-15"},{"lineNumber":455,"author":{"gitId":"kaixin-hc"},"content":"**Create**                | `person (NAME) /create [p:PHONE] [e:EMAIL] [t:TAG1,TAG2,...] [g:GROUP_INDEX]` | `p (NAME) /c [p:phone] [e:email] [t:TAG1,TAG2,...] [g:GROUP_INDEX]`","lastModifiedDate":"2021-10-17"},{"lineNumber":456,"author":{"gitId":"kaixin-hc"},"content":"**Edit**                  | `person (INDEX) /edit [n:NAME] [p:PHONE] [e:EMAIL]`                           | `p (INDEX) /e [n:NAME] [p:phone] [e:email]`","lastModifiedDate":"2021-10-11"},{"lineNumber":457,"author":{"gitId":"Yukun99"},"content":"**Delete**                | `person (INDEX) /delete`                                                      | `p (INDEX) /d`","lastModifiedDate":"2021-10-11"},{"lineNumber":458,"author":{"gitId":"Yukun99"},"content":"**Add**                   | `person (INDEX) /add (g:GROUP_NAME) `                                         | `p (INDEX) /a (g:GROUP_NAME)`","lastModifiedDate":"2021-10-11"},{"lineNumber":459,"author":{"gitId":"Yukun99"},"content":"**Remove**                | `person (INDEX) /remove (g:GROUP_NAME) `                                      | `p (INDEX) /r (g:GROUP_NAME)`","lastModifiedDate":"2021-10-11"},{"lineNumber":460,"author":{"gitId":"EltonGohJH"},"content":"**Note**                  | `person (INDEX) /note`                                                        | `p (INDEX) /n`","lastModifiedDate":"2021-10-19"},{"lineNumber":461,"author":{"gitId":"elroygohjy"},"content":"**Clear Note**            | `person (INDEX) /clearnote`                                                   | `p (INDEX) /cn`","lastModifiedDate":"2021-10-20"},{"lineNumber":462,"author":{"gitId":"Yukun99"},"content":"**Tag**                   | `person (INDEX) /tag [t:TAG1,TAG2,...]`                                       | `p (INDEX) /t [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-11"},{"lineNumber":463,"author":{"gitId":"Yukun99"},"content":"**Untag**                 | `person (INDEX) /untag [t:TAG1,TAG2,...]`                                     | `p (INDEX) /u [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-11"},{"lineNumber":464,"author":{"gitId":"kaixin-hc"},"content":"**Clear Tags**            | `person (INDEX) /cleartags`                                                   | `p (INDEX) / ct`","lastModifiedDate":"2021-10-11"},{"lineNumber":465,"author":{"gitId":"elroygohjy"},"content":"**List Persons**          | `person /list`                                                                | `p /l`","lastModifiedDate":"2021-10-20"},{"lineNumber":466,"author":{"gitId":"Yukun99"},"content":"**List Persons in Group** | `person [INDEX] /list`                                                        | `p [INDEX] /l`","lastModifiedDate":"2021-10-15"},{"lineNumber":467,"author":{"gitId":"Yukun99"},"content":"**Find**                  | `person /find (n:QUERY)`                                                      | `p /f (n:QUERY)`","lastModifiedDate":"2021-10-11"},{"lineNumber":468,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":469,"author":{"gitId":"Yukun99"},"content":"### Group","lastModifiedDate":"2021-10-11"},{"lineNumber":470,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":471,"author":{"gitId":"Yukun99"},"content":"Action                 | Format                                         | Short Format","lastModifiedDate":"2021-10-11"},{"lineNumber":472,"author":{"gitId":"HalphasX"},"content":"-----------------------|------------------------------------------------|---------------------------------------","lastModifiedDate":"2021-10-17"},{"lineNumber":473,"author":{"gitId":"kaixin-hc"},"content":"**Create Group**       | `group (GROUP_NAME) /create [t:TAG1,TAG2,...]` | `g (GROUP_NAME) /c  [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-11"},{"lineNumber":474,"author":{"gitId":"HalphasX"},"content":"**Create Subgroup**    | `group (INDEX) /create n:SUBGROUP_NAME`        | `g (INDEX) /c n:SUBGROUP_NAME`","lastModifiedDate":"2021-10-17"},{"lineNumber":475,"author":{"gitId":"Yukun99"},"content":"**Edit**               | `group (INDEX) /edit [n:NEW_NAME]`             | `g (INDEX) /e [n:NEW_NAME]`","lastModifiedDate":"2021-10-11"},{"lineNumber":476,"author":{"gitId":"Yukun99"},"content":"**Delete**             | `group (INDEX) /delete`                        | `g (INDEX) /d`","lastModifiedDate":"2021-10-11"},{"lineNumber":477,"author":{"gitId":"EltonGohJH"},"content":"**Note**               | `group (INDEX) /note`                          | `g (INDEX) /n`","lastModifiedDate":"2021-10-19"},{"lineNumber":478,"author":{"gitId":"Yukun99"},"content":"**Tag**                | `group (INDEX) /tag [t:TAG1,TAG2,...]`         | `g (INDEX) /t [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-11"},{"lineNumber":479,"author":{"gitId":"Yukun99"},"content":"**Untag**              | `group (INDEX) /untag [t:TAG1,TAG2,...]`       | `g (INDEX) /u [t:TAG1,TAG2,...]`","lastModifiedDate":"2021-10-11"},{"lineNumber":480,"author":{"gitId":"kaixin-hc"},"content":"**Clear Tags**         | `group (INDEX) /cleartags`                     | `g (INDEX) / ct`","lastModifiedDate":"2021-10-11"},{"lineNumber":481,"author":{"gitId":"kaixin-hc"},"content":"**List Groups**        | `group /list`                                  | `g /l`","lastModifiedDate":"2021-10-11"},{"lineNumber":482,"author":{"gitId":"kaixin-hc"},"content":"**List Out Subgroups** | `group (INDEX) /list`                          | `g (INDEX) /l`","lastModifiedDate":"2021-10-11"},{"lineNumber":483,"author":{"gitId":"Yukun99"},"content":"**Find**               | `group /find (n:QUERY)`                        | `g /f (n:QUERY)`","lastModifiedDate":"2021-10-11"},{"lineNumber":484,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":485,"author":{"gitId":"Yukun99"},"content":"**Note**: for the **List** command, the `INDEX` argument can be either a `Group` or a `Person`, depending on what you","lastModifiedDate":"2021-10-11"},{"lineNumber":486,"author":{"gitId":"Yukun99"},"content":"have listed after using `person /list` or `group /list`.","lastModifiedDate":"2021-10-11"},{"lineNumber":487,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":488,"author":{"gitId":"Yukun99"},"content":"Action   | Format              | Short Format","lastModifiedDate":"2021-10-11"},{"lineNumber":489,"author":{"gitId":"Yukun99"},"content":"---------|---------------------|---------------","lastModifiedDate":"2021-10-15"},{"lineNumber":490,"author":{"gitId":"Yukun99"},"content":"**List** | `tag [INDEX] /list` | `t [INDEX] /l`","lastModifiedDate":"2021-10-15"},{"lineNumber":491,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":492,"author":{"gitId":"Yukun99"},"content":"### General","lastModifiedDate":"2021-10-11"},{"lineNumber":493,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":494,"author":{"gitId":"kaixin-hc"},"content":"Action    | Format  | Advanced Format","lastModifiedDate":"2021-09-29"},{"lineNumber":495,"author":{"gitId":"Yukun99"},"content":"----------|---------|----------","lastModifiedDate":"2021-10-11"},{"lineNumber":496,"author":{"gitId":"Yukun99"},"content":"**Help**  | `help`  | `h`","lastModifiedDate":"2021-10-11"},{"lineNumber":497,"author":{"gitId":"Yukun99"},"content":"**Exit**  | `exit`  | `e`","lastModifiedDate":"2021-10-11"},{"lineNumber":498,"author":{"gitId":"Yukun99"},"content":"**Clear** | `clear` | `c`","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":188,"HalphasX":34,"elroygohjy":54,"EltonGohJH":73,"Yukun99":37,"-":112}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    content: \"AB-3\";","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"kaixin-hc":4,"-":284}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":".site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"kaixin-hc"},"content":"  h1, h2, h3 {","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"kaixin-hc"},"content":"    margin-top: $spacing-unit * 2","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"kaixin-hc"},"content":"  h4, h5, h6 {","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"kaixin-hc"},"content":"    margin-top: $spacing-unit","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  h5 {","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"kaixin-hc"},"content":"    \u0026:last-of-type {","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"kaixin-hc"},"content":"      margin-right: 0","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"kaixin-hc"},"content":"      \u0026:hover {","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"kaixin-hc"},"content":"        border-color: darken($brand-color-light, 10%)","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"kaixin-hc"},"content":"      }","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    a, div {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":22,"-":255}},{"path":"docs/_sass/minima/initialize.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Define defaults for each variable.","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$base-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"$code-font-family: \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$base-font-size: 16px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$base-font-weight: 400 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$small-font-size: $base-font-size * 0.875 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$base-line-height: 1.5 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$spacing-unit: 30px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$table-text-align: left !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Width of the content area","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$content-width: 800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$on-palm: 600px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$on-laptop: 800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$on-medium: $on-palm !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$on-large: $on-laptop !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Use media queries like this:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//   .wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//     padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//     padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//   }","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"// }","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"// Notice the following mixin uses max-width, in a deprecated, desktop-first","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"// approach, whereas media queries used elsewhere now use min-width.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"@mixin media-query($device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @media screen and (max-width: $device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @content;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@mixin relative-font-size($ratio) {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-size: #{$ratio}rem;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"// Import pre-styling-overrides hook and style-partials.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kaixin-hc"},"content":"@import \"minima/custom-variables\", // Hook to override predefined variables.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\"minima/custom-mixins\", // Hook to add custom mixins.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\"minima/base\", // Defines element resets.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\"minima/layout\", // Defines structure and style based on CSS selectors.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\"minima/custom-styles\" // Hook to override existing styles.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":";","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":1,"-":49}},{"path":"docs/_sass/minima/skins/classic.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"$brand-color: #828282 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"$brand-color-light: lighten($brand-color, 40%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"$brand-color-dark: darken($brand-color, 25%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$text-color: #111 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$background-color: #fdfdfd !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$code-background-color: #eef !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"$link-base-color: #2a7ae2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$link-visited-color: darken($link-base-color, 15%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$table-text-color: lighten($text-color, 18%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"$table-zebra-color: lighten($brand-color, 46%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"$table-header-bg-color: lighten($brand-color, 43%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$table-header-border: lighten($brand-color, 36%) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$table-border-color: $brand-color-light !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"// Syntax highlighting styles should be adjusted appropriately for every \"skin\"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// ----------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"  .c {","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"    color: #998;","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"  // Comment","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"  .err {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"    color: #a61717;","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"    background-color: #e3d2d2","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kaixin-hc"},"content":"  // Error","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"kaixin-hc"},"content":"  .k {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"  .o {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kaixin-hc"},"content":"  // Operator","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kaixin-hc"},"content":"  .cm {","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"    color: #998;","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kaixin-hc"},"content":"  // Comment.Multiline","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kaixin-hc"},"content":"  .cp {","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"    color: #999;","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kaixin-hc"},"content":"  // Comment.Preproc","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"kaixin-hc"},"content":"  .c1 {","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"kaixin-hc"},"content":"    color: #998;","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"kaixin-hc"},"content":"  // Comment.Single","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"  .cs {","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"kaixin-hc"},"content":"    color: #999;","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold;","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"kaixin-hc"},"content":"  // Comment.Special","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"kaixin-hc"},"content":"  .gd {","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"kaixin-hc"},"content":"    color: #000;","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"kaixin-hc"},"content":"    background-color: #fdd","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Deleted","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"kaixin-hc"},"content":"  .gd .x {","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"kaixin-hc"},"content":"    color: #000;","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"kaixin-hc"},"content":"    background-color: #faa","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Deleted.Specific","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"kaixin-hc"},"content":"  .ge {","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Emph","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"kaixin-hc"},"content":"  .gr {","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"kaixin-hc"},"content":"    color: #a00","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Error","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"kaixin-hc"},"content":"  .gh {","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"kaixin-hc"},"content":"    color: #999","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Heading","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"kaixin-hc"},"content":"  .gi {","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"kaixin-hc"},"content":"    color: #000;","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"kaixin-hc"},"content":"    background-color: #dfd","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Inserted","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"kaixin-hc"},"content":"  .gi .x {","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"kaixin-hc"},"content":"    color: #000;","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"kaixin-hc"},"content":"    background-color: #afa","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Inserted.Specific","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"kaixin-hc"},"content":"  .go {","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"kaixin-hc"},"content":"    color: #888","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Output","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"kaixin-hc"},"content":"  .gp {","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"kaixin-hc"},"content":"    color: #555","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Prompt","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"kaixin-hc"},"content":"  .gs {","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Strong","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"kaixin-hc"},"content":"  .gu {","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"kaixin-hc"},"content":"    color: #aaa","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Subheading","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"kaixin-hc"},"content":"  .gt {","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"kaixin-hc"},"content":"    color: #a00","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Traceback","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"kaixin-hc"},"content":"  .kc {","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Constant","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"kaixin-hc"},"content":"  .kd {","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Declaration","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"kaixin-hc"},"content":"  .kp {","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Pseudo","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"kaixin-hc"},"content":"  .kr {","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Reserved","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"kaixin-hc"},"content":"  .kt {","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"kaixin-hc"},"content":"    color: #458;","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Type","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"kaixin-hc"},"content":"  .m {","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"kaixin-hc"},"content":"    color: #099","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"kaixin-hc"},"content":"  .s {","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"kaixin-hc"},"content":"  .na {","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"kaixin-hc"},"content":"    color: #008080","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Attribute","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"kaixin-hc"},"content":"  .nb {","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"kaixin-hc"},"content":"    color: #0086B3","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Builtin","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"kaixin-hc"},"content":"  .nc {","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"kaixin-hc"},"content":"    color: #458;","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Class","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"kaixin-hc"},"content":"  .no {","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"kaixin-hc"},"content":"    color: #008080","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Constant","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"kaixin-hc"},"content":"  .ni {","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"kaixin-hc"},"content":"    color: #800080","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Entity","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"kaixin-hc"},"content":"  .ne {","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"kaixin-hc"},"content":"    color: #900;","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Exception","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"kaixin-hc"},"content":"  .nf {","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"kaixin-hc"},"content":"    color: #900;","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Function","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"kaixin-hc"},"content":"  .nn {","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"kaixin-hc"},"content":"    color: #555","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Namespace","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"kaixin-hc"},"content":"  .nt {","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"kaixin-hc"},"content":"    color: #000080","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Tag","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"kaixin-hc"},"content":"  .nv {","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"kaixin-hc"},"content":"    color: #008080","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Variable","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"kaixin-hc"},"content":"  .ow {","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"kaixin-hc"},"content":"  // Operator.Word","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"kaixin-hc"},"content":"  .w {","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"kaixin-hc"},"content":"    color: #bbb","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"kaixin-hc"},"content":"  // Text.Whitespace","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"kaixin-hc"},"content":"  .mf {","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"kaixin-hc"},"content":"    color: #099","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Float","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"kaixin-hc"},"content":"  .mh {","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"kaixin-hc"},"content":"    color: #099","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":244,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Hex","lastModifiedDate":"2021-09-29"},{"lineNumber":245,"author":{"gitId":"kaixin-hc"},"content":"  .mi {","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"kaixin-hc"},"content":"    color: #099","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Integer","lastModifiedDate":"2021-09-29"},{"lineNumber":250,"author":{"gitId":"kaixin-hc"},"content":"  .mo {","lastModifiedDate":"2021-09-29"},{"lineNumber":251,"author":{"gitId":"kaixin-hc"},"content":"    color: #099","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":253,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":254,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Oct","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"kaixin-hc"},"content":"  .sb {","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Backtick","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"kaixin-hc"},"content":"  .sc {","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":262,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Char","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"kaixin-hc"},"content":"  .sd {","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":267,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":268,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Doc","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"kaixin-hc"},"content":"  .s2 {","lastModifiedDate":"2021-09-29"},{"lineNumber":271,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":273,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Double","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"kaixin-hc"},"content":"  .se {","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Escape","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"kaixin-hc"},"content":"  .sh {","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Heredoc","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"kaixin-hc"},"content":"  .si {","lastModifiedDate":"2021-09-29"},{"lineNumber":286,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":287,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":288,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":289,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Interpol","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"kaixin-hc"},"content":"  .sx {","lastModifiedDate":"2021-09-29"},{"lineNumber":291,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":293,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":294,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Other","lastModifiedDate":"2021-09-29"},{"lineNumber":295,"author":{"gitId":"kaixin-hc"},"content":"  .sr {","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"kaixin-hc"},"content":"    color: #009926","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":298,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Regex","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"kaixin-hc"},"content":"  .s1 {","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"kaixin-hc"},"content":"    color: #d14","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Single","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"kaixin-hc"},"content":"  .ss {","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"kaixin-hc"},"content":"    color: #990073","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Symbol","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"kaixin-hc"},"content":"  .bp {","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"kaixin-hc"},"content":"    color: #999","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":313,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":314,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Builtin.Pseudo","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"kaixin-hc"},"content":"  .vc {","lastModifiedDate":"2021-09-29"},{"lineNumber":316,"author":{"gitId":"kaixin-hc"},"content":"    color: #008080","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":319,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Variable.Class","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"kaixin-hc"},"content":"  .vg {","lastModifiedDate":"2021-09-29"},{"lineNumber":321,"author":{"gitId":"kaixin-hc"},"content":"    color: #008080","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Variable.Global","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"kaixin-hc"},"content":"  .vi {","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"kaixin-hc"},"content":"    color: #008080","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":328,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":329,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Variable.Instance","lastModifiedDate":"2021-09-29"},{"lineNumber":330,"author":{"gitId":"kaixin-hc"},"content":"  .il {","lastModifiedDate":"2021-09-29"},{"lineNumber":331,"author":{"gitId":"kaixin-hc"},"content":"    color: #099","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Integer.Long","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":310,"-":25}},{"path":"docs/_sass/minima/skins/solarized.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Solarized skin","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"// \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"// Created by Sander Voerman \u003cmailto:sander@savoerman.nl\u003e using the Solarized","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// color scheme by Ethan Schoonover \u003chttps://ethanschoonover.com/solarized\u003e.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// This style sheet implements two options for the minima.skin setting:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"// \"solarized\" for light mode and \"solarized-dark\" for dark mode.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$sol-is-dark: false !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"// Color scheme","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"// ------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"// The inline comments show the canonical L*a*b values for each color.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$sol-base03: #002b36; // 15 -12 -12","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"$sol-base02: #073642; // 20 -12 -12","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$sol-base01: #586e75; // 45 -07 -07","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$sol-base00: #657b83; // 50 -07 -07","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"$sol-base0: #839496; // 60 -06 -03","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$sol-base1: #93a1a1; // 65 -05 -02","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$sol-base2: #eee8d5; // 92 -00  10","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"$sol-base3: #fdf6e3; // 97  00  10","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"$sol-yellow: #b58900; // 60  10  65","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"$sol-orange: #cb4b16; // 50  50  55","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"$sol-red: #dc322f; // 50  65  45","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"$sol-magenta: #d33682; // 50  65 -05","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"$sol-violet: #6c71c4; // 50  15 -45","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"$sol-blue: #268bd2; // 55 -10 -45","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"$sol-cyan: #2aa198; // 60 -35 -05","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"$sol-green: #859900; // 60 -20  65","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"$sol-mono3: $sol-base3;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"$sol-mono2: $sol-base2;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"$sol-mono1: $sol-base1;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"$sol-mono00: $sol-base00;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"$sol-mono01: $sol-base01;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@if $sol-is-dark {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  $sol-mono3: $sol-base03;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  $sol-mono2: $sol-base02;","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  $sol-mono1: $sol-base01;","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  $sol-mono00: $sol-base0;","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  $sol-mono01: $sol-base1;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"// Minima color variables","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"// ----------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"$brand-color: $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"$brand-color-light: mix($sol-mono1, $sol-mono3) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"$brand-color-dark: $sol-mono00 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"$text-color: $sol-mono01 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"$background-color: $sol-mono3 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"$code-background-color: $sol-mono2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"$link-base-color: $sol-blue !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"$link-visited-color: mix($sol-blue, $sol-mono00) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"$table-text-color: $sol-mono00 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"$table-zebra-color: mix($sol-mono2, $sol-mono3) !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"$table-header-bg-color: $sol-mono2 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"$table-header-border: $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"$table-border-color: $sol-mono1 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"// Syntax highlighting styles","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"// --------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"kaixin-hc"},"content":"  .c {","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1;","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"kaixin-hc"},"content":"  // Comment","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"kaixin-hc"},"content":"  .err {","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-red","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"kaixin-hc"},"content":"  // Error","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"kaixin-hc"},"content":"  .k {","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono01;","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"kaixin-hc"},"content":"  .o {","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono01;","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"kaixin-hc"},"content":"  // Operator","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"kaixin-hc"},"content":"  .cm {","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1;","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"kaixin-hc"},"content":"  // Comment.Multiline","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"kaixin-hc"},"content":"  .cp {","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1;","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"kaixin-hc"},"content":"  // Comment.Preproc","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"kaixin-hc"},"content":"  .c1 {","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1;","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"kaixin-hc"},"content":"  // Comment.Single","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"kaixin-hc"},"content":"  .cs {","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1;","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold;","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"kaixin-hc"},"content":"  // Comment.Special","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"kaixin-hc"},"content":"  .gd {","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-red","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Deleted","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"kaixin-hc"},"content":"  .gd .x {","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-red","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Deleted.Specific","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"kaixin-hc"},"content":"  .ge {","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono00;","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"kaixin-hc"},"content":"    font-style: italic","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Emph","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"kaixin-hc"},"content":"  .gr {","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-red","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Error","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"kaixin-hc"},"content":"  .gh {","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Heading","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"kaixin-hc"},"content":"  .gi {","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-green","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Inserted","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"kaixin-hc"},"content":"  .gi .x {","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-green","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Inserted.Specific","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"kaixin-hc"},"content":"  .go {","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono00","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Output","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"kaixin-hc"},"content":"  .gp {","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono00","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Prompt","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"kaixin-hc"},"content":"  .gs {","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono01;","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Strong","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"kaixin-hc"},"content":"  .gu {","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Subheading","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"kaixin-hc"},"content":"  .gt {","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-red","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"kaixin-hc"},"content":"  // Generic.Traceback","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"kaixin-hc"},"content":"  .kc {","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono01;","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Constant","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"kaixin-hc"},"content":"  .kd {","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono01;","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Declaration","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"kaixin-hc"},"content":"  .kp {","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono01;","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Pseudo","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"kaixin-hc"},"content":"  .kr {","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono01;","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Reserved","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"kaixin-hc"},"content":"  .kt {","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-violet;","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"kaixin-hc"},"content":"  // Keyword.Type","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"kaixin-hc"},"content":"  .m {","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"kaixin-hc"},"content":"  .s {","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"kaixin-hc"},"content":"  .na {","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Attribute","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"kaixin-hc"},"content":"  .nb {","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-blue","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Builtin","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"kaixin-hc"},"content":"  .nc {","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-violet;","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Class","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"kaixin-hc"},"content":"  .no {","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":244,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Constant","lastModifiedDate":"2021-09-29"},{"lineNumber":245,"author":{"gitId":"kaixin-hc"},"content":"  .ni {","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-violet","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Entity","lastModifiedDate":"2021-09-29"},{"lineNumber":250,"author":{"gitId":"kaixin-hc"},"content":"  .ne {","lastModifiedDate":"2021-09-29"},{"lineNumber":251,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-violet;","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":253,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":254,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Exception","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"kaixin-hc"},"content":"  .nf {","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-blue;","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Function","lastModifiedDate":"2021-09-29"},{"lineNumber":262,"author":{"gitId":"kaixin-hc"},"content":"  .nn {","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono00","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Namespace","lastModifiedDate":"2021-09-29"},{"lineNumber":267,"author":{"gitId":"kaixin-hc"},"content":"  .nt {","lastModifiedDate":"2021-09-29"},{"lineNumber":268,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-blue","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":271,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Tag","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"kaixin-hc"},"content":"  .nv {","lastModifiedDate":"2021-09-29"},{"lineNumber":273,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Variable","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"kaixin-hc"},"content":"  .ow {","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono01;","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"kaixin-hc"},"content":"    font-weight: bold","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"kaixin-hc"},"content":"  // Operator.Word","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"kaixin-hc"},"content":"  .w {","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":286,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":287,"author":{"gitId":"kaixin-hc"},"content":"  // Text.Whitespace","lastModifiedDate":"2021-09-29"},{"lineNumber":288,"author":{"gitId":"kaixin-hc"},"content":"  .mf {","lastModifiedDate":"2021-09-29"},{"lineNumber":289,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":291,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Float","lastModifiedDate":"2021-09-29"},{"lineNumber":293,"author":{"gitId":"kaixin-hc"},"content":"  .mh {","lastModifiedDate":"2021-09-29"},{"lineNumber":294,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":295,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Hex","lastModifiedDate":"2021-09-29"},{"lineNumber":298,"author":{"gitId":"kaixin-hc"},"content":"  .mi {","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Integer","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"kaixin-hc"},"content":"  .mo {","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Oct","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"kaixin-hc"},"content":"  .sb {","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Backtick","lastModifiedDate":"2021-09-29"},{"lineNumber":313,"author":{"gitId":"kaixin-hc"},"content":"  .sc {","lastModifiedDate":"2021-09-29"},{"lineNumber":314,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":316,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Char","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"kaixin-hc"},"content":"  .sd {","lastModifiedDate":"2021-09-29"},{"lineNumber":319,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":321,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Doc","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"kaixin-hc"},"content":"  .s2 {","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Double","lastModifiedDate":"2021-09-29"},{"lineNumber":328,"author":{"gitId":"kaixin-hc"},"content":"  .se {","lastModifiedDate":"2021-09-29"},{"lineNumber":329,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":330,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":331,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Escape","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"kaixin-hc"},"content":"  .sh {","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Heredoc","lastModifiedDate":"2021-09-29"},{"lineNumber":338,"author":{"gitId":"kaixin-hc"},"content":"  .si {","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":342,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Interpol","lastModifiedDate":"2021-09-29"},{"lineNumber":343,"author":{"gitId":"kaixin-hc"},"content":"  .sx {","lastModifiedDate":"2021-09-29"},{"lineNumber":344,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Other","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"kaixin-hc"},"content":"  .sr {","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-green","lastModifiedDate":"2021-09-29"},{"lineNumber":350,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Regex","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"kaixin-hc"},"content":"  .s1 {","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":356,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Single","lastModifiedDate":"2021-09-29"},{"lineNumber":358,"author":{"gitId":"kaixin-hc"},"content":"  .ss {","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-magenta","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.String.Symbol","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"kaixin-hc"},"content":"  .bp {","lastModifiedDate":"2021-09-29"},{"lineNumber":364,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-mono1","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Builtin.Pseudo","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"kaixin-hc"},"content":"  .vc {","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Variable.Class","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"kaixin-hc"},"content":"  .vg {","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Variable.Global","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"kaixin-hc"},"content":"  .vi {","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":380,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":382,"author":{"gitId":"kaixin-hc"},"content":"  // Name.Variable.Instance","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"kaixin-hc"},"content":"  .il {","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"kaixin-hc"},"content":"    color: $sol-cyan","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"kaixin-hc"},"content":"  }","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"kaixin-hc"},"content":"  // Literal.Number.Integer.Long","lastModifiedDate":"2021-09-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":314,"-":74}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveNotor(notor)","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"\u0027class Trie\u003cT\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"\u0027class \"Trie\u003cTag\u003e\" as Trie_Tag_List","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"Notor *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"Notor *-right-\u003e \"1\" UniqueSuperGroupList","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"Notor *-right-\u003e \"1\" Trie","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"Trie -[hidden]down- UniquePersonList","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"Trie -[hidden]down- UniquePersonList","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"Trie *-right-\u003e \"*\" String","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"UniqueSuperGroupList -right-\u003e SuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"SuperGroup  *--\u003e \"*\" SubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"Group \u003c|-- SuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"Group \u003c|-- SubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"Group  *--\u003e \"*\" Person","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"Group *--\u003e Note","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"Person -up-\u003e \"*\" String","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"Person *--\u003e Note","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"Person *--\u003e \"*\" DisplaySuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"Person *--\u003e \"*\" DisplaySubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Yukun99":7,"EltonGohJH":13,"-":16}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"if () then ([command commits Notor])","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    :Save Notor to","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    NotorStateList;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":3,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"participant \":NotorParser\" as NotorParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"LogicManager -\u003e NotorParser : parseCommand(\"delete 1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"activate NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"NotorParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"DeleteCommandParser --\u003e NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"NotorParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"DeleteCommandParser --\u003e NotorParser : d","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"DeleteCommandParser -[hidden]-\u003e NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"NotorParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"deactivate NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":10,"-":59}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"Class NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"LogicManager -right-\u003e\"1\" NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"NotorParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"Interface ReadOnlyNotor \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"Class Notor","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"Class ReadOnlyNotor","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"Class UniqueSuperGroupsList","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"Class Note","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"Class UniqueSuperGroupList","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"Class DisplaySuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"Class DisplaySubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"Class Group","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"Class SuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"Class SubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"Notor .up.|\u003e ReadOnlyNotor","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"Model .left.\u003e ReadOnlyNotor","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"ModelManager -left-\u003e \"1\" Notor","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"Notor *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"Notor *--\u003e \"1\" UniqueSuperGroupList","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"Person *--\u003e Note","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"Person *--\u003e \"*\" DisplaySuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"Person *--\u003e \"*\" DisplaySubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"UniqueSuperGroupList *--\u003e \"*\" SuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"SuperGroup *--\u003e \"*\" SubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"Group \u003c|-- SuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"Group \u003c|-- SubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"Group *--\u003e Note","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"Group *--\u003e \"*\" Person","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":25,"Yukun99":2,"-":42}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"Class NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"HiddenOutside ..\u003e NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"NotorParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"NotorParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"EltonGohJH":4,"-":34}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"package \"Notor Storage\" #F4F6F6{","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"Interface NotorStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"Class JsonNotorStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"Class JsonSerializableNotor","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"package \"Archive Storage\" #F4F6F6{","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"Interface ArchiveStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"Class JsonArchiveStorage","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"Class JsonSerializableArchive","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"Class JsonAdaptedSuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"Class JsonAdaptedSubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"StorageManager -up-\u003e \"1\" NotorStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"StorageManager -up-\u003e \"1\" ArchiveStorage","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"Storage -left-|\u003e NotorStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"Storage -left-|\u003e ArchiveStorage","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"Storage -right-|\u003e UserPrefsStorage","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"JsonNotorStorage .up.|\u003e NotorStorage","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"JsonArchiveStorage .up.|\u003e ArchiveStorage","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"JsonNotorStorage ..\u003e JsonSerializableNotor","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"JsonArchiveStorage ..\u003e JsonSerializableArchive","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"JsonSerializableNotor --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"JsonSerializableNotor --\u003e \"*\" JsonAdaptedSuperGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"JsonAdaptedSuperGroup --\u003e \"*\" JsonAdaptedSubGroup","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"JsonSerializableArchive --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":13,"Yukun99":12,"-":33}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    class State1 as \"__ab0:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    class State2 as \"__ab1:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    class State3 as \"__ab2:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State1","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":4,"-":16}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"delete 5\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    class State1 as \"__ab0:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    class State2 as \"__ab1:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    class State3 as \"__ab2:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":4,"-":18}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"add n/David\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    class State1 as \"__ab0:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    class State2 as \"__ab1:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    class State3 as \"__ab2:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":4,"-":16}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    class State1 as \"__ab0:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    class State2 as \"__ab1:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    class State3 as \"__ab2:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":4,"-":16}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"list\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    class State1 as \"__ab0:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    class State2 as \"__ab1:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    class State3 as \"__ab2:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":4,"-":16}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    class State1 as \"__ab0:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    class State2 as \"__ab1:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    class State3 as \"__ab3:Notor__\"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":4,"-":17}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"participant \":NotorParser\" as NotorParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"participant \":VersionedNotor\" as VersionedNotor MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"LogicManager -\u003e NotorParser : parseCommand(undo)","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"activate NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"NotorParser -\u003e UndoCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"UndoCommand --\u003e NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"NotorParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"deactivate NotorParser","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"UndoCommand -\u003e Model : undoNotor()","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"Model -\u003e VersionedNotor : undo()","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"activate VersionedNotor","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"VersionedNotor -\u003e VersionedNotor :resetData(ReadOnlyNotor)","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"VersionedNotor --\u003e Model :","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"deactivate VersionedNotor","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EltonGohJH":14,"-":39}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"Participant \":NotorParser\" as abp LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"EltonGohJH":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"title: Notor","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W08-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103T-W08-1/tp/actions)","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W08-1/tp/branch/master/graph/badge.svg?token\u003d2I1HSRYBDN)](https://codecov.io/gh/AY2122S1-CS2103T-W08-1/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"**Notor** aims to help **mentors** who wish to keep tabs on their mentees, by providing **a quick way to take notes and mantain records on their mentees**. While it has a GUI, most of the user","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"* If you are interested in using Notor, head over to the [_Quick Start_ section of the **User","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"  Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"* If you are interested about developing Notor, the [**Developer Guide**](DeveloperGuide.html) is a good place to","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"  start.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"  , [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":10,"-":12}},{"path":"docs/team/elroygohjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"layout: page","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"title: Elroy\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"### Project: Notor","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"Notor aims to help mentors who wish to informally keep tabs on their mentees, by providing a quick way to take notes and","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"mantain records on their mentees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":29}},{"path":"docs/team/eltongohjh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"layout: page","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"title: Elton\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"### Project: Notor","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"Notor aims to help mentors who wish to informally keep tabs on their mentees, by providing a quick way to take notes and","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"mantain records on their mentees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"    * User Guide: Feature list \u0026 Command Summary(with [Jonathan](halphasx.md))","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":29}},{"path":"docs/team/halphasx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"layout: page","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"title: Jonathan\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"### Project: Notor","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"Notor aims to help mentors who wish to informally keep tabs on their mentees, by providing a quick way to take notes and","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"mantain records on their mentees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"    * Developer Guide: NFRs and Glossary","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"    * User Guide: Feature list \u0026 Command Summary(with [Elton](eltongohjh.md))","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":31}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"      by using the redo command.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"      the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"      analysis of design alternatives. The implementation too was challenging as it required changes to existing","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"      commands.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36]()","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"      , [\\#38]())","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":13,"-":40}},{"path":"docs/team/kaixin-hc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"layout: page","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"title: Hannah\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"### Project: Notor","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"Notor aims to help mentors who wish to informally keep tabs on their mentees, by providing a quick way to take notes and","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"mantain records on their mentees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"* **New Feature**:","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"    * ReadMe","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"    * Setting up AboutUs page + portfolios","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":29}},{"path":"docs/team/yukun99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"layout: page","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"title: Yukun\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"---","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"### Project: Notor","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"Notor aims to help mentors who wish to informally keep tabs on their mentees, by providing a quick way to take notes and","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"mantain records on their mentees. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"* **New Feature**: Trie","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"    * What it does:","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"    * Justification:","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"    * Highlights:","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"      the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"* **Project management**:","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"    * Revised code throughout to improve code quality (_{link PRs here ok}_)","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"* **Community**:","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"* **Tools**:","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kaixin-hc":35}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"layout: page title: \"Tutorial: Tracing code\"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e — Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"* Table of Contents {:toc}","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution.","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"kaixin-hc"},"content":"For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kaixin-hc"},"content":"the `main` method.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"kaixin-hc"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e.,","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kaixin-hc"},"content":"somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks,","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kaixin-hc"},"content":"which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"the `Logic` component.","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"kaixin-hc"},"content":":bulb: **Intellij Tip:** The [\u0027**Search","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"kaixin-hc"},"content":"Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular,","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"kaixin-hc"},"content":"the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"kaixin-hc"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"looking for.","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"kaixin-hc"},"content":"But apparently, this is an interface, not a concrete implementation. That should be fine because","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"kaixin-hc"},"content":"the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"kaixin-hc"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI`","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kaixin-hc"},"content":"to the `Logic`.","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"kaixin-hc"},"content":":bulb: **Intellij Tip:** The [\u0027**Find","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"kaixin-hc"},"content":"Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"kaixin-hc"},"content":"of the code a class/method/variable is being used.","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"kaixin-hc"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"kaixin-hc"},"content":"left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"kaixin-hc"},"content":"Recall from the User Guide that the `edit` command has the","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"kaixin-hc"},"content":"format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"kaixin-hc"},"content":"command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"kaixin-hc"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"kaixin-hc"},"content":"Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"kaixin-hc"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"kaixin-hc"},"content":"   put the breakpoint).","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"kaixin-hc"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"kaixin-hc"},"content":"   call:\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"   ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"kaixin-hc"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()`","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"kaixin-hc"},"content":"   method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"kaixin-hc"},"content":"   of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"kaixin-hc"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"kaixin-hc"},"content":"   at each one.","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"kaixin-hc"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"kaixin-hc"},"content":"   the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"kaixin-hc"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"kaixin-hc"},"content":"   the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"kaixin-hc"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"kaixin-hc"},"content":"   command we typed is an edit command).","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"kaixin-hc"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"kaixin-hc"},"content":"   multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"kaixin-hc"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"kaixin-hc"},"content":"   obtain the arguments and index required.","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"kaixin-hc"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"kaixin-hc"},"content":"   and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"kaixin-hc"},"content":"   of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"kaixin-hc"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"kaixin-hc"},"content":"   where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"kaixin-hc"},"content":"   The sequence diagram below shows the details of the execution path through the Logic component. Does the execution","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"kaixin-hc"},"content":"   path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"kaixin-hc"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received,","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"kaixin-hc"},"content":"   and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"Yukun99"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, personEditDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":245,"author":{"gitId":"kaixin-hc"},"content":"    * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"kaixin-hc"},"content":"      usual pattern) to update the person data.","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"kaixin-hc"},"content":"    * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"kaixin-hc"},"content":"      persons.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"kaixin-hc"},"content":"      FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the","lastModifiedDate":"2021-09-29"},{"lineNumber":250,"author":{"gitId":"kaixin-hc"},"content":"      user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the","lastModifiedDate":"2021-09-29"},{"lineNumber":251,"author":{"gitId":"kaixin-hc"},"content":"      edited person along with all other persons. If this was a `find` command, we would be setting that list to contain","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"kaixin-hc"},"content":"      the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":253,"author":{"gitId":"kaixin-hc"},"content":"      To provide some context, given below is the class diagram of the `Model` component. See if you can figure out","lastModifiedDate":"2021-09-29"},{"lineNumber":254,"author":{"gitId":"kaixin-hc"},"content":"      where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"      \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":256,"author":{"gitId":"kaixin-hc"},"content":"    * :bulb: This may be a good time to read through","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"kaixin-hc"},"content":"      the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"kaixin-hc"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"kaixin-hc"},"content":"   a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"kaixin-hc"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()`","lastModifiedDate":"2021-09-29"},{"lineNumber":262,"author":{"gitId":"kaixin-hc"},"content":"   method.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"kaixin-hc"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"kaixin-hc"},"content":"   this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"kaixin-hc"},"content":"   structure of the `Logic` component:","lastModifiedDate":"2021-09-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"kaixin-hc"},"content":"    * :bulb: This may be a good time to read through","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"kaixin-hc"},"content":"      the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"kaixin-hc"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"kaixin-hc"},"content":"   control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-09-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"kaixin-hc"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"kaixin-hc"},"content":"   the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"kaixin-hc"},"content":"   an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"kaixin-hc"},"content":"   with added line breaks for easier readability):","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"   **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"       persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"kaixin-hc"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"kaixin-hc"},"content":"   the `JsonSerializableAddressBook`. This is because regular Java objects need to go through an _adaptation_ for them","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"kaixin-hc"},"content":"   to be suitable to be saved in JSON format.","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"kaixin-hc"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"kaixin-hc"},"content":"   you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":306,"author":{"gitId":"kaixin-hc"},"content":"    * :bulb: This may be a good time to read through","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"kaixin-hc"},"content":"      the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"kaixin-hc"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"kaixin-hc"},"content":"   the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"   **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":323,"author":{"gitId":"kaixin-hc"},"content":"   :bulb: This may be a good time to read through","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"kaixin-hc"},"content":"   the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"kaixin-hc"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From","lastModifiedDate":"2021-09-29"},{"lineNumber":329,"author":{"gitId":"kaixin-hc"},"content":"this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-09-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"kaixin-hc"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"kaixin-hc"},"content":"further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"kaixin-hc"},"content":"1. In this tutorial, we traced the \"happy path\" (i.e., no errors). What do you think will happen if we traced the","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"kaixin-hc"},"content":"   following commands instead? What exceptions do you think will be thrown (if any), where will the exceptions be thrown","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"kaixin-hc"},"content":"   and where will they be handled?","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    1. `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    2. `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    3. `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    4. `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    5. `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    6. `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"kaixin-hc"},"content":"2. What components will you have to modify to perform the following enhancements to the application?","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    1. Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    2. Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    3. Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    4. Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    5. Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    6. Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kaixin-hc":119,"Yukun99":1,"-":242}},{"path":"src/main/java/seedu/notor/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.FileUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kaixin-hc":3,"-":61}},{"path":"src/main/java/seedu/notor/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"kaixin-hc":1,"-":24}},{"path":"src/main/java/seedu/notor/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.Config;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.Version;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.trie.Trie;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.Logic;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.LogicManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.Executor;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.JsonNotorStorage;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.NotorStorage;","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.StorageManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.ui.Ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.ui.UiManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Notor ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        Trie.setup();","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"kaixin-hc"},"content":"        NotorStorage notorStorage \u003d new JsonNotorStorage(userPrefs.getNotorFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"        storage \u003d new StorageManager(notorStorage, userPrefsStorage);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"        Executor.setup(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"kaixin-hc"},"content":"     * The data from the sample Notor will be used instead if {@code storage}\u0027s notor is not found,","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"kaixin-hc"},"content":"     * or an empty Notor will be used instead if errors occur when reading {@code storage}\u0027s notor.","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"kaixin-hc"},"content":"        Optional\u003cReadOnlyNotor\u003e notorOptional;","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kaixin-hc"},"content":"        ReadOnlyNotor initialData;","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"            notorOptional \u003d storage.readNotor();","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"kaixin-hc"},"content":"            if (notorOptional.isEmpty()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"kaixin-hc"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Notor\");","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"kaixin-hc"},"content":"            initialData \u003d notorOptional.orElseGet(SampleDataUtil::getSampleNotor);","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"kaixin-hc"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Notor\");","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"kaixin-hc"},"content":"            initialData \u003d new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"kaixin-hc"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Notor\");","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"kaixin-hc"},"content":"            initialData \u003d new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"kaixin-hc"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Notor\");","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"kaixin-hc"},"content":"        logger.info(\"Starting Notor \" + MainApp.VERSION);","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"kaixin-hc"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Notor ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":44,"EltonGohJH":1,"Yukun99":4,"-":141}},{"path":"src/main/java/seedu/notor/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":1,"-":62}},{"path":"src/main/java/seedu/notor/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":1,"-":78}},{"path":"src/main/java/seedu/notor/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"    private static final String LOG_FILE \u003d \"notor.log\";","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":1,"-":110}},{"path":"src/main/java/seedu/notor/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_INVALID_GROUP_DISPLAYED_INDEX \u003d \"The group index provided is invalid\";","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_GROUPS_LISTED_OVERVIEW \u003d \"%1$d groups listed!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":2,"-":12}},{"path":"src/main/java/seedu/notor/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"                versionMatcher.group(4) !\u003d null);","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":2,"-":114}},{"path":"src/main/java/seedu/notor/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core.index;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    private final int zeroBasedIndex;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"        return Objects.hash(zeroBasedIndex);","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":7,"-":53}},{"path":"src/main/java/seedu/notor/commons/core/trie/Trie.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core.trie;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import java.util.Map;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":" * Implementation of a Trie data structure for command and tag autocompletion.","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"public class Trie {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    private static final String NO_VALUE_MESSAGE_FORMAT \u003d \"Message %s is not stored in this Trie!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(Trie.class);","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    private final Map\u003cString, Integer\u003e messageCounts \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    private final TrieNode root \u003d TrieNode.create();","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"     * Creates a Trie with the specified elements.","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"     * @param elements Elements to create the Trie with.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"     * @return Elements to create the Trie with.","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    public static Trie createTrie(String... elements) {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"        Trie trie \u003d new Trie();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        for (String element : elements) {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"            trie.add(element);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        return trie;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"     * Sets up TrieNode class with the proper ordering for checking for children.","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"    public static void setup() {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        logger.info(\"Setting up Tries...\");","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        TrieNode.setup();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"     * Adds a message to the Trie.","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"     * @param message Message to be added to the Trie.","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"    public void add(String message) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        if (messageCounts.containsKey(message)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"            messageCounts.put(message, messageCounts.get(message) + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"            messageCounts.put(message, 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        root.add(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"     * Removes a message from the Trie.","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"     * @param message Message to be removed from the Trie.","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"     * @throws IllegalValueException If the Trie does not contain the message.","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"    public void remove(String message) throws IllegalValueException {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"        if (!messageCounts.containsKey(message)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"            throw new IllegalValueException(String.format(NO_VALUE_MESSAGE_FORMAT, message));","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        if (messageCounts.get(message) \u003e 1) {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"            messageCounts.put(message, messageCounts.get(message) - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"        root.remove(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"        messageCounts.remove(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"     * Searches for a message in the Trie.","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"Yukun99"},"content":"     * @param query Message to search for in the Trie.","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"Yukun99"},"content":"     * @return String starting with the query message.","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"Yukun99"},"content":"    public String findSingle(String query) {","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Yukun99"},"content":"        return root.findSingle(query);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"    public List\u003cString\u003e findAllMatches(String query) {","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"        return root.findAllMatches(query);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"     * Gets first item in the Trie by order.","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"Yukun99"},"content":"     * @return First item in the Trie by order.","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"Yukun99"},"content":"    public String getFirst() {","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"Yukun99"},"content":"        return root.getFirst();","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"Yukun99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"        return messageCounts.keySet().toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":99}},{"path":"src/main/java/seedu/notor/commons/core/trie/TrieNode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core.trie;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import java.util.Map;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":" * Implentation of TrieNode data structure to create Tries.","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"public class TrieNode {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    private static final List\u003cCharacter\u003e ORDER \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    private final Map\u003cCharacter, TrieNode\u003e children \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    private final String value;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    private boolean isWord;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    private TrieNode(Character character, String previousValue, boolean isWord) {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"        if (character !\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"            this.value \u003d previousValue + character;","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            this.value \u003d previousValue;","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"        this.isWord \u003d isWord;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    protected static void setup() {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"        ORDER.add(\u0027 \u0027);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        for (char c \u003d \u00270\u0027; c \u003c\u003d \u00279\u0027; c++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"            ORDER.add(c);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        for (char c \u003d \u0027a\u0027; c \u003c\u003d \u0027z\u0027; c++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"            ORDER.add(c);","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"        for (char c \u003d \u0027A\u0027; c \u003c\u003d \u0027Z\u0027; c++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"            ORDER.add(c);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    protected static TrieNode create() {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"        return new TrieNode(null, \"\", false);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"    protected void add(String message) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        if (message.equals(\"\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"            isWord \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        Character nextChar \u003d message.charAt(0);","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        String nextWord \u003d message.length() \u003e\u003d 2 ? message.substring(1) : \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"        TrieNode nextNode;","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        if (children.containsKey(nextChar)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"            nextNode \u003d children.get(nextChar);","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"            nextNode \u003d new TrieNode(nextChar, value, false);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        nextNode.add(nextWord);","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        children.remove(nextChar);","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"        children.put(nextChar, nextNode);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"    protected boolean remove(String message) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"        if (message.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"            isWord \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        Character nextChar \u003d message.charAt(0);","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        String nextWord \u003d message.length() \u003e\u003d 2 ? message.substring(1) : \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"        if (children.get(nextChar).remove(nextWord)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"            if (children.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"                children.remove(nextChar);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"                return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"        return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"Yukun99"},"content":"    protected String getFirst() {","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"Yukun99"},"content":"        if (isWord) {","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"Yukun99"},"content":"            return value;","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"Yukun99"},"content":"        for (Character character : ORDER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"Yukun99"},"content":"            if (children.containsKey(character)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"Yukun99"},"content":"                if (children.get(character).getFirst() !\u003d null) {","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"                    return children.get(character).getFirst();","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"        return null;","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"Yukun99"},"content":"    protected String findSingle(String query) {","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Yukun99"},"content":"        if (query.equals(\"\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"Yukun99"},"content":"            return getFirst();","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"Yukun99"},"content":"        Character nextChar \u003d query.charAt(0);","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"Yukun99"},"content":"        String nextWord \u003d query.length() \u003e\u003d 2 ? query.substring(1) : \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"        if (!children.containsKey(nextChar)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"Yukun99"},"content":"            return null;","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"        return children.get(nextChar).findSingle(nextWord);","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"Yukun99"},"content":"    protected List\u003cString\u003e findAllMatches(String query) {","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"Yukun99"},"content":"        List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Yukun99"},"content":"        findAllMatches(query, matches);","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"Yukun99"},"content":"        return matches;","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"Yukun99"},"content":"    protected void findAllMatches(String query, List\u003cString\u003e matches) {","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Yukun99"},"content":"        if (isWord) {","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"Yukun99"},"content":"            matches.add(value);","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"Yukun99"},"content":"        if (children.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"Yukun99"},"content":"            return;","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"Yukun99"},"content":"        if (query.equals(\"\")) {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"Yukun99"},"content":"            for (TrieNode child : children.values()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"Yukun99"},"content":"                child.findAllMatches(query, matches);","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"Yukun99"},"content":"            return;","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"Yukun99"},"content":"        Character nextChar \u003d query.charAt(0);","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"        String nextWord \u003d query.length() \u003e\u003d 2 ? query.substring(1) : \"\";","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"Yukun99"},"content":"        if (!children.containsKey(nextChar)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"Yukun99"},"content":"            return;","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"Yukun99"},"content":"        children.get(nextChar).findAllMatches(nextWord, matches);","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"Yukun99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"Yukun99"},"content":"        if (isWord) {","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"Yukun99"},"content":"            return value + \", \";","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"Yukun99"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"Yukun99"},"content":"        for (TrieNode child : children.values()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"Yukun99"},"content":"            result.append(child.toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"Yukun99"},"content":"        return result.toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":141}},{"path":"src/main/java/seedu/notor/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":1,"-":10}},{"path":"src/main/java/seedu/notor/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":1,"-":20}},{"path":"src/main/java/seedu/notor/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.MainApp;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kaixin-hc":2,"-":40}},{"path":"src/main/java/seedu/notor/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":3,"-":33}},{"path":"src/main/java/seedu/notor/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.Config;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kaixin-hc":3,"-":20}},{"path":"src/main/java/seedu/notor/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":" * A class for getting current Date time in (E, MMM dd yyyy HH:mm) format.","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"public class DateUtil {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    public static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"E, MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"     * Returns the String representation of current date and time.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"     * @return String representation of current date and time.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"    public static String getCurrentDateTime() {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"        return TIME_FORMATTER.format(LocalDateTime.now());","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaixin-hc":1,"elroygohjy":22}},{"path":"src/main/java/seedu/notor/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":2,"-":82}},{"path":"src/main/java/seedu/notor/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    private static final ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":5,"-":138}},{"path":"src/main/java/seedu/notor/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        return t.getMessage() + \"\\n\" + sw;","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":3,"-":65}},{"path":"src/main/java/seedu/notor/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException, ExecuteException;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"     * Executes instruction to save note of the person.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"     * @param person The person with yet to edit notes.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"     * @param editedPerson The person with newly edited notes.","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"     * @throws CommandException","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"    void executeSaveNote(Person person, Person editedPerson) throws CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"     * Returns the Notor.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"     * @see seedu.notor.model.Model#getNotor()","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"    ReadOnlyNotor getNotor();","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"     * Returns the user prefs\u0027 Notor file path.","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"kaixin-hc"},"content":"    Path getNotorFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kaixin-hc":13,"elroygohjy":14,"-":36}},{"path":"src/main/java/seedu/notor/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.NotorParser;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.Storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"    private final NotorParser notorParser;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"        notorParser \u003d new NotorParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException, ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"kaixin-hc"},"content":"        Command command \u003d notorParser.parseCommand(commandText);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"kaixin-hc"},"content":"            storage.saveNotor(model.getNotor());","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"     * Executes command to save Note of Person.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"     * @param person The person with yet to edit notes.","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"     * @param editedPerson The person with newly edited notes.","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"    public void executeSaveNote(Person person, Person editedPerson) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"        model.setPerson(person, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"kaixin-hc"},"content":"            storage.saveNotor(model.getNotor());","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"kaixin-hc"},"content":"    public ReadOnlyNotor getNotor() {","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kaixin-hc"},"content":"        return model.getNotor();","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"kaixin-hc"},"content":"    public Path getNotorFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kaixin-hc"},"content":"        return model.getNotorFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kaixin-hc":22,"elroygohjy":16,"-":59}},{"path":"src/main/java/seedu/notor/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"import seedu.notor.ui.WarningWindow;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":" * Clears Notor of all entries","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"public class ClearCommand implements Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Notor has been cleared!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"    public static final String CONFIRMATION_MESSAGE \u003d \"Do you want to proceed with clearing Notor?\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    public static final String MESSAGE_CANCEL \u003d \"Clearing of Notor has been cancelled.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"        WarningWindow warningWindow \u003d new WarningWindow(CONFIRMATION_MESSAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"        warningWindow.show();","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"        if (warningWindow.canContinue()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"            model.setNotor(new Notor());","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"            return new CommandResult(MESSAGE_CANCEL);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":7,"elroygohjy":9,"-":14}},{"path":"src/main/java/seedu/notor/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"public interface Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ExecuteException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":1,"-":12}},{"path":"src/main/java/seedu/notor/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"     * The application should exit.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"    /** The note should be shown for the respective user. */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"    private final boolean showNote;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"    private final Person person;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean showNote, Person person, boolean exit) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"        this.showNote \u003d showNote;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"        this(feedbackToUser, false, false, null, false);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"    public boolean isShowNote() {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"        return showNote;","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"    public Person person() {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"        return person;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"                \u0026\u0026 showNote \u003d\u003d otherCommandResult.showNote","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":2,"elroygohjy":28,"-":66}},{"path":"src/main/java/seedu/notor/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false,","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"                null, true);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kaixin-hc":3,"elroygohjy":2,"-":15}},{"path":"src/main/java/seedu/notor/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kaixin-hc":5,"-":37}},{"path":"src/main/java/seedu/notor/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"public class HelpCommand implements Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, null, false);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":3,"elroygohjy":1,"-":17}},{"path":"src/main/java/seedu/notor/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":" * Lists all persons in Notor to the user.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":5,"-":19}},{"path":"src/main/java/seedu/notor/logic/commands/NoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":" * Shows general note.","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"public class NoteCommand implements Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    public static final String COMMAND_WORD \u003d \"WAITING FOR REFACTOR OF PERSON NOTE\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Opened General Note.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, true, null, false);","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"elroygohjy":22}},{"path":"src/main/java/seedu/notor/logic/commands/TargetedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"public abstract class TargetedCommand implements Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"    public abstract CommandResult execute() throws CommandException, ExecuteException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute(Model model) throws CommandException, ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"        return this.execute();","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":9}},{"path":"src/main/java/seedu/notor/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kaixin-hc":1,"-":16}},{"path":"src/main/java/seedu/notor/logic/commands/group/GroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands.group;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.TargetedCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"public abstract class GroupCommand extends TargetedCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d \"Please use the help command to find out how to use the bot.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"group\";","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    protected final Index index;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    public GroupCommand(Index index) {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof GroupCommand)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"        // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        GroupCommand e \u003d (GroupCommand) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kaixin-hc":4,"Yukun99":28}},{"path":"src/main/java/seedu/notor/logic/commands/group/SubGroupCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.commands.group;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.group.GroupExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.group.SubGroupCreateExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.SubGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"public class SubGroupCreateCommand extends GroupCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a group. \"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"            + COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"            + \"GROUP \"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_TAG + \"TAGS... \"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            + \"Orbital\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    private final GroupExecutor executor;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"     * constructor for a SubGroupCreateCommand instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     * @param index Index of the Group to create a SubGroup for.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"     * @param subGroup SubGroup to be created.","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"    public SubGroupCreateCommand(Index index, SubGroup subGroup) {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        this.executor \u003d new SubGroupCreateExecutor(index, subGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"    @Override public CommandResult execute() throws CommandException, ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        return executor.execute();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":41}},{"path":"src/main/java/seedu/notor/logic/commands/group/SuperGroupCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.commands.group;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.group.GroupExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.group.SuperGroupCreateExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"public class SuperGroupCreateCommand extends GroupCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a group. \"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"            + COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"            + \"GROUP \"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_TAG + \"TAGS... \"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"            + \"Orbital\";","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    private final GroupExecutor executor;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"     * Creates a SuperGroupCreateCommand to add the specified {@code Group}","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"    public SuperGroupCreateCommand(Index index, SuperGroup superGroup) {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(superGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        this.executor \u003d new SuperGroupCreateExecutor(index, superGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        return executor.execute();","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":40}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonAddGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_GROUPNAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.person.PersonAddGroupExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.person.PersonExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"public class PersonAddGroupCommand extends PersonCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    // TODO: Change this to fit correct command structure","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to a group\"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_GROUPNAME + \"GROUP\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_GROUPNAME + \"Team\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    protected String groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    private final PersonExecutor executor;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     * Creates an PersonAddGroupCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    public PersonAddGroupCommand(Index index, String groupName) {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        executor \u003d new PersonAddGroupExecutor(index, groupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        return executor.execute();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":41}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonAddSubGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":" * Deprecated for now.","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":" * TODO: move this functionality into PersonAddGroupCommand since we do not have add subgroup command anymore","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"@Deprecated","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"public class PersonAddSubGroupCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"//    public static final String COMMAND_WORD \u003d \"person_add_subgroup\";","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"//    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to a subgroup\"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"//            + \"Parameters: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"//            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"//            + PREFIX_GROUP + \"GROUP\"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"//            + PREFIX_SUBGROUP + \"SUBGROUP\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"//            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"//            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"//            + PREFIX_GROUP + \"Orbital \"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"//            + PREFIX_SUBGROUP + \"Artemis\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"//    public static final String MESSAGE_SUCCESS \u003d \"Added person to the %s\";","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"//    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This person is already in the subgroup\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"//    protected String personName;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"//    protected String groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"//    protected String subGroupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"//    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"//     * Creates an PersonAddSubGroupCommand to add the specified {@code SubGroup}","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"//     *","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"//     * @param personName the name of the person to be added into the subgroup.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"//     * @param groupName the name of the group where the subgroup belongs to.","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"//     * @param subGroupName the name of the subGroup.","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"//     */","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"//    public PersonAddSubGroupCommand(String personName, String groupName, String subGroupName) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"//        this.personName \u003d personName;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"//        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"//        this.subGroupName \u003d subGroupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"//    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"//    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"//    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"//        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"//        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"//            Person personToEdit \u003d model.findPerson(personName);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"//            SuperGroup superGroup \u003d model.findGroup(groupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"//            superGroup.addSubGroup(subGroupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"//            SubGroup subGroup \u003d superGroup.findSubGroup(subGroupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"//            subGroup.addPerson(personToEdit);","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"//            personToEdit.addSubGroup(subGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"//            superGroup.findSubGroup(subGroupName).addPerson(personToEdit);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"//            model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"//            return new CommandResult(String.format(MESSAGE_SUCCESS, groupName + \"_\" + subGroupName));","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"//        } catch (DuplicateItemException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"//            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"//        }","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"//    }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":60}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.TargetedCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"public abstract class PersonCommand extends TargetedCommand {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d \"Please use the help command to find out how to use the bot.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"person\";","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    protected final Index index;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    protected PersonCommand(Index index) {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof PersonCommand)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        PersonCommand e \u003d (PersonCommand) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":29}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonCreateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_GROUPINDEX;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonCreateExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.person.PersonExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"public class PersonCreateCommand extends PersonCommand {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    private static final String COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"            \": Creates a person in the address book.\\n\";","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d PersonCommand.COMMAND_WORD + \" NAME \" + COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"            + COMMAND_DESCRIPTION","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_TAG + \"TAGS... \"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_GROUPINDEX + \"\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"            + \"Example: \" + PersonCommand.COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"            + \" John Doe \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_TAG + \"student,year1\"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_GROUPINDEX + 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"    private final PersonExecutor executor;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"    public PersonCreateCommand(Index index, Person person) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        this.executor \u003d new PersonCreateExecutor(index, person);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        return executor.execute();","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"                || (other instanceof PersonCreateCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"                \u0026\u0026 executor.equals(((PersonCreateCommand) other).executor));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        return Objects.hash(executor);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":10,"Yukun99":30,"-":29}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonDeleteExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.person.PersonExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"public class PersonDeleteCommand extends PersonCommand {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    private static final String COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"            \": Deletes the person identified by the index number used in the displayed person list.\\n\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d PersonCommand.COMMAND_WORD + \" INDEX \" + COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            + COMMAND_DESCRIPTION","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"            + \"Parameters: none\"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"            + \"Example: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"            + PersonCommand.COMMAND_WORD + \" 1 \" + COMMAND_WORD;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    private final PersonExecutor executor;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a PersonDeleteCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"     * @param index Index of the person to be deleted.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"    public PersonDeleteCommand(Index index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        this.executor \u003d new PersonDeleteExecutor(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        return executor.execute();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"                || (other instanceof PersonDeleteCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"                \u0026\u0026 executor.equals(((PersonDeleteCommand) other).executor)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":46}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":" * Edits the details of an existing person in the notor.","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"public class PersonEditCommand extends PersonCommand {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    private static final String COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"            \": Edits the details of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"                    + \"Existing values will be overwritten by the input values.\\n\";","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    private static final String MESSAGE_USAGE \u003d PersonCommand.COMMAND_WORD + \" INDEX \" + COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"            + COMMAND_DESCRIPTION","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"            + \"Parameters:\"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"            + \"Example: \" + PersonCommand.COMMAND_WORD + \" 1 \" + COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_NAME + \"Jane Deh \"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"    private final PersonExecutor executor;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"     * @param index Index of the person in the filtered person list to edit.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"     * @param personEditDescriptor Details to edit the person with.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"    public PersonEditCommand(Index index, PersonEditExecutor.PersonEditDescriptor personEditDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        requireAllNonNull(index, personEditDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        this.executor \u003d new PersonEditExecutor(index, personEditDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        return executor.execute();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof PersonEditCommand)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand e \u003d (PersonEditCommand) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"        return super.equals(other) \u0026\u0026 executor.equals(e.executor);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"        return Objects.hash(executor);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":11,"Yukun99":66}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonNoteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.person.PersonExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonNoteExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":" * Shows the Note of the person by the given index.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"public class PersonNoteCommand extends PersonCommand {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"    public static final String COMMAND_WORD \u003d \"note\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    private static final String COMMAND_DESCRIPTION \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"            \": Edits the notes of the person identified by the index number used in the current person listing.\\n\";","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d PersonCommand.COMMAND_WORD + \" INDEX \" + COMMAND_WORD","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"            + COMMAND_DESCRIPTION","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            + \"Parameters: none\"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"            + \"Example: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"            + PersonCommand.COMMAND_WORD + \" 1 \" + COMMAND_WORD;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    private final PersonExecutor executor;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"     * @param index Index of the person to edit note for.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"    public PersonNoteCommand(Index index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"        super(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"        this.executor \u003d new PersonNoteExecutor(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"        return executor.execute();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"        if (!(other instanceof PersonNoteCommand)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"        PersonNoteCommand e \u003d (PersonNoteCommand) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"        return executor.equals(e.executor);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":6,"elroygohjy":40,"Yukun99":10}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonRemoveGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_GROUPNAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.person.PersonExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.person.PersonRemoveGroupExecutor;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"public class PersonRemoveGroupCommand extends PersonCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    // TODO: Change this to fit correct command structure","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a person from a group\"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_GROUPNAME + \"GROUP\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_GROUPNAME + \"Team\";","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    protected String groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    private final PersonExecutor executor;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     * Creates an PersonRemoveGroupCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    public PersonRemoveGroupCommand(Index index, String groupName) {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        this.executor \u003d new PersonRemoveGroupExecutor(index, groupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        return executor.execute();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":41}},{"path":"src/main/java/seedu/notor/logic/commands/person/PersonRemoveSubGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.commands.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_GROUPNAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":" * Deprecated for now.","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":" * TODO: move this functionality into PersonRemoveGroupCommand since we do not have remove subgroup command anymore","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"@Deprecated","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"public class PersonRemoveSubGroupCommand implements Command {","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    public static final String COMMAND_WORD \u003d \"person_rm_subgroup\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes a person from a subgroup\"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_GROUPNAME + \"GROUP NAME\"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"            + PREFIX_GROUPNAME + \"Orbital\";","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Removed person from %s\";","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    public static final String MESSAGE_NOT_IN_SUBGROUP \u003d \"This person is not in the subgroup\";","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"    protected String personName;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    protected String groupName;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    protected String subGroupName;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"     * Creates an PersonRemoveSubGroupCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"    public PersonRemoveSubGroupCommand(String personName, String groupName, String subGroupName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        this.subGroupName \u003d subGroupName;","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"        Person personToEdit \u003d model.findPerson(personName);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        // SubGroup subGroup \u003d model.findGroup(groupName).findSubGroup(subGroupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        // subGroup.removePerson(personToEdit);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        // personToEdit.removeSuperGroup(subGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"        model.setPerson(personToEdit, personToEdit);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, groupName + \"_\" + subGroupName));","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":14,"EltonGohJH":40}},{"path":"src/main/java/seedu/notor/logic/commands/tag/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.commands.tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.TargetedCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"public abstract class TagCommand extends TargetedCommand {","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":7}},{"path":"src/main/java/seedu/notor/logic/executors/Executor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.executors;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"public abstract class Executor {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    protected static Model model;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    public static void setup(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"        Executor.model \u003d model;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    public abstract CommandResult execute() throws ExecuteException;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":4,"Yukun99":14}},{"path":"src/main/java/seedu/notor/logic/executors/exceptions/ExecuteException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.executors.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"public class ExecuteException extends Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"    public ExecuteException(String message) {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"        super(message);","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    public ExecuteException(String message, Throwable cause) {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"        super(message, cause);","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":14}},{"path":"src/main/java/seedu/notor/logic/executors/group/GroupExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.executors.group;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.Executor;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"public abstract class GroupExecutor extends Executor {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    protected final Index index;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    public GroupExecutor(Index index) {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    protected SuperGroup getGroup() throws ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"        List\u003cSuperGroup\u003e lastShownList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            throw new ExecuteException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"        return lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof GroupExecutor)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        GroupExecutor e \u003d (GroupExecutor) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"            return e.index \u003d\u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"kaixin-hc"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kaixin-hc":6,"Yukun99":43}},{"path":"src/main/java/seedu/notor/logic/executors/group/SubGroupCreateExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.executors.group;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.SubGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"public class SubGroupCreateExecutor extends GroupExecutor {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Subgroup %s created\";","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Subgroup already exists\";","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    private final SubGroup subGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a SubGroupCreateExecutor instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"     * @param index Index of the Group to create a SubGroup for.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"     * @param subGroup SubGroup to be created.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"    public SubGroupCreateExecutor(Index index, SubGroup subGroup) {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"        this.subGroup \u003d subGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    @Override public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"            if (model.getFilteredGroupList().size() \u003e index.getOneBased()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"                SuperGroup superGroup \u003d model.getFilteredGroupList().get(index.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"                superGroup.addSubGroup(subGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"                subGroup.setParent(superGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"                // TODO: stub error message, this is supposed to be for when index is out of bounds.","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"                throw new ExecuteException(\"\");","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, subGroup));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"            throw new ExecuteException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof SubGroupCreateExecutor)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        SubGroupCreateExecutor e \u003d (SubGroupCreateExecutor) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        return super.equals(other) \u0026\u0026 subGroup.equals(e.subGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":60}},{"path":"src/main/java/seedu/notor/logic/executors/group/SuperGroupCreateExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.executors.group;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"public class SuperGroupCreateExecutor extends GroupExecutor {","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Group %s created\";","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Group already exists\";","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    private final SuperGroup superGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a SuperGroupCreateExecutor instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"     * @param index Null value since Command requires no Index.","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"     * @param superGroup SuperGroup to be created.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    public SuperGroupCreateExecutor(Index index, SuperGroup superGroup) {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        this.superGroup \u003d superGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    @Override public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"            model.addSuperGroup(superGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, superGroup));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"            throw new ExecuteException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof SuperGroupCreateExecutor)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        SuperGroupCreateExecutor e \u003d (SuperGroupCreateExecutor) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        return super.equals(other) \u0026\u0026 superGroup.equals(e.superGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":52}},{"path":"src/main/java/seedu/notor/logic/executors/person/PersonAddGroupExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.executors.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":" * TODO: Add subgroup adding functionality from deprecated classes.","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"public class PersonAddGroupExecutor extends PersonExecutor {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added person to %s\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This person is already in the group\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    private final String groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a PersonAddGroupExecutor instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"     * @param index Index of Person to perform operation on.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     * @param groupName Name of Group to be added to the Person.","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    public PersonAddGroupExecutor(Index index, String groupName) {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"            Person person \u003d super.getPerson();","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"            Group group \u003d model.findGroup(groupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"            person.addGroup(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"            group.addPerson(person);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, groupName));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"            throw new ExecuteException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":42}},{"path":"src/main/java/seedu/notor/logic/executors/person/PersonCreateExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.executors.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":" * Executor for a PersonCreateCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"public class PersonCreateExecutor extends PersonExecutor {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    private final Person person;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a PersonCreateExecutor instance.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     * @param index Always null value for this command. Ignored for operations.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"     * @param person Person to be created.","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    public PersonCreateExecutor(Index index, Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        if (model.hasPerson(person)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"            throw new ExecuteException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        model.createPerson(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"            if (model.getFilteredGroupList().size() \u003e index.getOneBased()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"                Group group \u003d model.getFilteredGroupList().get(index.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"                group.addPerson(person);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"                person.addGroup(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"                // TODO: stub error message, this is supposed to be for when index is out of bounds.","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"                throw new ExecuteException(\"\");","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof PersonCreateExecutor)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"        PersonCreateExecutor e \u003d (PersonCreateExecutor) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        return super.equals(other) \u0026\u0026 person.equals(e.person);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":65}},{"path":"src/main/java/seedu/notor/logic/executors/person/PersonDeleteExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.executors.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"import seedu.notor.ui.WarningWindow;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"public class PersonDeleteExecutor extends PersonExecutor {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"    public static final String MESSAGE_DELETE_PERSON_CANCEL \u003d \"Deleting of Person: %1$s has been cancelled.\";","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    public static final String CONFIRMATION_MESSAGE \u003d \"Do you want to proceed with deleting Person: %1$s?\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    public PersonDeleteExecutor(Index index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"        Person toBeDeletedPerson \u003d super.getPerson();","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"        WarningWindow warningWindow \u003d new WarningWindow(String.format(CONFIRMATION_MESSAGE,","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"                toBeDeletedPerson.getName()));","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"        warningWindow.show();","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"        if (warningWindow.canContinue()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"            model.deletePerson(toBeDeletedPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, toBeDeletedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_CANCEL, toBeDeletedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":5,"elroygohjy":14,"Yukun99":13}},{"path":"src/main/java/seedu/notor/logic/executors/person/PersonEditExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.executors.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":" * Executor for a PersonEditCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"public class PersonEditExecutor extends PersonExecutor {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"    private final PersonEditDescriptor personEditDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"     * Constructor for a PersonEditExecutor instance.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"     * @param index                Index of the person to be edited.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"     * @param personEditDescriptor Descriptor for the edited person.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"    public PersonEditExecutor(Index index, PersonEditDescriptor personEditDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"        super(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"        requireAllNonNull(index, personEditDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"        this.personEditDescriptor \u003d personEditDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"        Person person \u003d super.getPerson();","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"        Person editedPerson \u003d createEditedPerson(person, personEditDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"        if (!person.isSame(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"            throw new ExecuteException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"        model.setPerson(person, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"    private static Person createEditedPerson(Person personToEdit, PersonEditDescriptor personEditDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"        Name updatedName \u003d personEditDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"        Phone updatedPhone \u003d personEditDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"        Email updatedEmail \u003d personEditDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"        Set\u003cTag\u003e updatedTags \u003d personEditDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"        Note updatedNote \u003d personEditDescriptor.getNote().orElse(personToEdit.getNote());","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedNote, updatedTags);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":81,"author":{"gitId":"elroygohjy"},"content":"        if (!(other instanceof PersonEditExecutor)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":85,"author":{"gitId":"elroygohjy"},"content":"        PersonEditExecutor e \u003d (PersonEditExecutor) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":88,"author":{"gitId":"elroygohjy"},"content":"        return super.equals(other) \u0026\u0026 personEditDescriptor.equals(e.personEditDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"elroygohjy"},"content":"    public static class PersonEditDescriptor {","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"        private Note note;","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"        public PersonEditDescriptor() {","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":109,"author":{"gitId":"elroygohjy"},"content":"        public PersonEditDescriptor(PersonEditDescriptor toCopy) {","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":114,"author":{"gitId":"Yukun99"},"content":"            setNote(toCopy.note);","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"Yukun99"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"Yukun99"},"content":"        public void setNote(Note note) {","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"Yukun99"},"content":"            this.note \u003d note;","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"Yukun99"},"content":"        public Optional\u003cNote\u003e getNote() {","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"Yukun99"},"content":"            return Optional.ofNullable(note);","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"EltonGohJH"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"elroygohjy"},"content":"            if (!(other instanceof PersonEditDescriptor)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"elroygohjy"},"content":"            PersonEditDescriptor e \u003d (PersonEditDescriptor) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"kaixin-hc":10,"elroygohjy":32,"Yukun99":12,"EltonGohJH":5,"-":134}},{"path":"src/main/java/seedu/notor/logic/executors/person/PersonExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.executors.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.Executor;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"public abstract class PersonExecutor extends Executor {","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    protected final Index index;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    public PersonExecutor(Index index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    protected Person getPerson() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"            throw new ExecuteException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"        return lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof PersonExecutor)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"        PersonExecutor e \u003d (PersonExecutor) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"            return e.index \u003d\u003d null;","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        return index.equals(e.index);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        return Objects.hash(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":6,"Yukun99":49}},{"path":"src/main/java/seedu/notor/logic/executors/person/PersonNoteExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.executors.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":" * Executor for a PersonNoteCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"public class PersonNoteExecutor extends PersonExecutor {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    public static final String MESSAGE_OPEN_NOTE_SUCCESS \u003d \"Opened note to Person: %1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"     * Constructor for a PersonNoteExecutor instance.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"     * @param index Index of the person to add a note to.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"    public PersonNoteExecutor(Index index) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"        super(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"    public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        Person storedPerson \u003d super.getPerson();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"                storedPerson.getName(), storedPerson.getPhone(), storedPerson.getEmail(),","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"                storedPerson.getNote(), storedPerson.getTags());","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson), false, true, editedPerson, false);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"     * the note is added.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"        return String.format(MESSAGE_OPEN_NOTE_SUCCESS, personToEdit);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"        if (!(other instanceof PersonNoteExecutor)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"        PersonNoteExecutor e \u003d (PersonNoteExecutor) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"        // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"        return super.equals(other);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":6,"elroygohjy":58}},{"path":"src/main/java/seedu/notor/logic/executors/person/PersonRemoveGroupExecutor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.executors.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":" * TODO: Add subgroup removing functionality from deprecated classes.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"public class PersonRemoveGroupExecutor extends PersonExecutor {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Removed person from %s\";","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    public static final String MESSAGE_NOT_IN_GROUP \u003d \"This person is not in the group\";","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    private final String groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a PersonRemoveGroupExecutor instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     * @param index Index of the Person to remove a Group from.","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"     * @param groupName Name of the Group to be removed from the Person.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    public PersonRemoveGroupExecutor(Index index, String groupName) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        super(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    @Override public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"            Person personToEdit \u003d super.getPerson();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"            personToEdit.removeSuperGroup(groupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"            model.findGroup(groupName).removePerson(personToEdit);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, groupName));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        } catch (ItemNotFoundException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"            throw new ExecuteException(MESSAGE_NOT_IN_GROUP);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":42}},{"path":"src/main/java/seedu/notor/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"     **/","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":3,"-":58}},{"path":"src/main/java/seedu/notor/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param prefixes Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefixes Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"        prefixPositions.sort(Comparator.comparingInt(PrefixPosition::getStartPosition));","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"Yukun99"},"content":"        private final int startPosition;","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":3,"-":145}},{"path":"src/main/java/seedu/notor/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n:\");","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p:\");","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e:\");","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t:\");","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    public static final Prefix PREFIX_GROUPINDEX \u003d new Prefix(\"g:\");","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    public static final Prefix PREFIX_GROUPNAME \u003d new Prefix(\"g:\");","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":6,"-":7}},{"path":"src/main/java/seedu/notor/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.FindCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"public class FindCommandParser extends Parser\u003cFindCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"     * TODO: Stub command right now. Needs to have functionality moved over and converted to new command structure.","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"    public FindCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        return null;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":9,"-":27}},{"path":"src/main/java/seedu/notor/logic/parser/NotorParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.group.GroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.group.SubGroupCreateCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.group.SuperGroupCreateCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonAddGroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonNoteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonRemoveGroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.tag.TagCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.group.SubGroupCreateCommandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.group.SuperGroupCreateCommandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.person.PersonAddGroupCommandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.person.PersonCreateCommandParser;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.person.PersonDeleteCommandParser;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.person.PersonEditCommandParser;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.person.PersonNoteCommandParser;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.person.PersonRemoveGroupCommandParser;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"kaixin-hc"},"content":"public class NotorParser {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    private static final Pattern GENERAL_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)\");","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"    private static final Pattern TARGETED_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"            \"(?\u003ccommandWord\u003e\\\\w+)\\\\s+\" // command word and any trailing spaces","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"                    + \"/(?\u003csubCommandWord\u003e\\\\w+)\" // subcommand word and any trailing spaces","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"                    + \"(?\u003carguments\u003e(\\\\s+.*)|(.*))\"); // remaining arguments of the command","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"    private static final Pattern TARGETED_INDEX_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"            \"(?\u003ccommandWord\u003e\\\\w+)\\\\s+\" // command word and any trailing spaces","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"                    + \"(?\u003cindex\u003e\\\\d+\\\\s+)\" // index or name and any trailing spaces","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"                    + \"/(?\u003csubCommandWord\u003e\\\\w*)\" // subcommand word","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"                    + \"(?\u003carguments\u003e(\\\\s+.*)|(.*))\"); // remaining arguments of the command or trailing spaces","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"    private static final Pattern TARGETED_NAME_COMMAND_FORMAT \u003d Pattern.compile(","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"            \"(?\u003ccommandWord\u003e\\\\w+)\\\\s+\" // command word and any trailing spaces","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"                    + \"(?\u003cname\u003e[A-Z][a-zA-Z ]+\\\\s+)\" // index or name and any trailing spaces","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"                    + \"/(?\u003csubCommandWord\u003e\\\\w+)\" // subcommand word and any trailing spaces","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"                    + \"(?\u003carguments\u003e(\\\\s+.*)|(.*))\"); // remaining arguments of the command","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"        Matcher generalMatcher \u003d GENERAL_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        Matcher targetedMatcher \u003d TARGETED_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        Matcher targetedIndexMatcher \u003d TARGETED_INDEX_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        Matcher targetedNameMatcher \u003d TARGETED_NAME_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"        if (generalMatcher.matches()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"            final String commandWord \u003d generalMatcher.group(\"commandWord\");","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"Yukun99"},"content":"            case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"            case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Yukun99"},"content":"            case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"Yukun99"},"content":"                return new ClearCommand();","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Yukun99"},"content":"            default:","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Yukun99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"Yukun99"},"content":"        if (targetedNameMatcher.matches()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"            final String commandWord \u003d targetedNameMatcher.group(\"commandWord\").trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"            final String name \u003d targetedNameMatcher.group(\"name\").trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"            final String subCommandWord \u003d targetedNameMatcher.group(\"subCommandWord\").trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"            final String arguments \u003d targetedNameMatcher.group(\"arguments\");","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"            switch (commandWord) {","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"            case PersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"                if (subCommandWord.equals(PersonCreateCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Yukun99"},"content":"                    return new PersonCreateCommandParser(name, arguments).parse();","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Yukun99"},"content":"                }","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Yukun99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"Yukun99"},"content":"            case GroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Yukun99"},"content":"                if (subCommandWord.equals(SuperGroupCreateCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"Yukun99"},"content":"                    return new SuperGroupCreateCommandParser(name, arguments).parse();","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"                }","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"Yukun99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"            default:","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"Yukun99"},"content":"        if (targetedIndexMatcher.matches()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Yukun99"},"content":"            final String commandWord \u003d targetedIndexMatcher.group(\"commandWord\").trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":107,"author":{"gitId":"Yukun99"},"content":"            final String index \u003d targetedIndexMatcher.group(\"index\").trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"Yukun99"},"content":"            final String subCommandWord \u003d targetedIndexMatcher.group(\"subCommandWord\").trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"Yukun99"},"content":"            final String arguments \u003d targetedIndexMatcher.group(\"arguments\");","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"Yukun99"},"content":"            switch (commandWord) {","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"Yukun99"},"content":"            case PersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"Yukun99"},"content":"                switch (subCommandWord) {","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"Yukun99"},"content":"                case PersonDeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"Yukun99"},"content":"                    return new PersonDeleteCommandParser(index).parse();","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"Yukun99"},"content":"                case PersonEditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"Yukun99"},"content":"                    return new PersonEditCommandParser(index, arguments).parse();","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"Yukun99"},"content":"                case PersonNoteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Yukun99"},"content":"                    return new PersonNoteCommandParser(index).parse();","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"EltonGohJH"},"content":"                case PersonAddGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"Yukun99"},"content":"                    return new PersonAddGroupCommandParser(index, arguments).parse();","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"EltonGohJH"},"content":"                case PersonRemoveGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"Yukun99"},"content":"                    return new PersonRemoveGroupCommandParser(index, arguments).parse();","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"Yukun99"},"content":"                default:","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"                    throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"Yukun99"},"content":"                }","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"Yukun99"},"content":"            case GroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"Yukun99"},"content":"                if (subCommandWord.equals(SubGroupCreateCommand.COMMAND_WORD)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"Yukun99"},"content":"                    return new SubGroupCreateCommandParser(index, arguments).parse();","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"Yukun99"},"content":"                }","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"Yukun99"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"Yukun99"},"content":"            case TagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"Yukun99"},"content":"                // TODO: Implement tag command.","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            default:","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"Yukun99"},"content":"        if (targetedMatcher.matches()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"Yukun99"},"content":"            final String commandWord \u003d targetedMatcher.group(\"commandWord\");","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"Yukun99"},"content":"            final String subCommandWord \u003d targetedMatcher.group(\"subCommandWord\");","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"Yukun99"},"content":"            final String arguments \u003d targetedMatcher.group(\"arguments\");","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"Yukun99"},"content":"            // TODO: List command conversion/find command conversion","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"Yukun99"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":17,"Yukun99":99,"EltonGohJH":2,"-":30}},{"path":"src/main/java/seedu/notor/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"public abstract class Parser\u003cT extends Command\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    public abstract T parse() throws ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":3,"-":10}},{"path":"src/main/java/seedu/notor/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"EltonGohJH"},"content":"     * Parses a {@code String group} into a {@code SuperGroup}.","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"     * @throws ParseException if the given {@code SuperGroup} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"EltonGohJH"},"content":"    public static SuperGroup parseSuperGroup(String sg) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"EltonGohJH"},"content":"        requireNonNull(sg);","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"EltonGohJH"},"content":"        // TODO: Check if that edge cases is covered. Such as no colon etc","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"EltonGohJH"},"content":"        String trimmedGroup \u003d sg.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"EltonGohJH"},"content":"        if (!SuperGroup.isValidGroupName(trimmedGroup)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"            throw new ParseException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"Yukun99"},"content":"        Name name \u003d new Name(trimmedGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"Yukun99"},"content":"        return new SuperGroup(name);","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"Yukun99"},"content":"    public static Set\u003cTag\u003e parseTags(String tags) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"Yukun99"},"content":"        final String trimmedTags \u003d tags.trim();","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"Yukun99"},"content":"        if (trimmedTags.equals(\"\")) {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"Yukun99"},"content":"            return tagSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"        String[] splitTags \u003d tags.split(\",\");","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"Yukun99"},"content":"        for (String tagName : splitTags) {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"Yukun99"},"content":"    public static Index parseGroupIndex(String index) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"Yukun99"},"content":"        return parseIndex(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kaixin-hc":9,"Yukun99":15,"EltonGohJH":15,"-":95}},{"path":"src/main/java/seedu/notor/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kaixin-hc":1,"-":38}},{"path":"src/main/java/seedu/notor/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"kaixin-hc":2,"-":15}},{"path":"src/main/java/seedu/notor/logic/parser/group/GroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser.group;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.group.GroupCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"public abstract class GroupCommandParser extends Parser\u003cGroupCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    protected String arguments;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    protected Index index;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    protected GroupCommandParser(String unparsedIndex, String arguments) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"        parseIndex(unparsedIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    private void parseIndex(String unparsedIndex) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        if (unparsedIndex \u003d\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            index \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"            try {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"                index \u003d ParserUtil.parseIndex(unparsedIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, GroupCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"                        pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    public abstract GroupCommand parse() throws ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kaixin-hc":4,"Yukun99":30}},{"path":"src/main/java/seedu/notor/logic/parser/group/SubGroupCreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.parser.group;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.group.GroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.group.SubGroupCreateCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.Prefix;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.SubGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"public class SubGroupCreateCommandParser extends GroupCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    public SubGroupCreateCommandParser(String uncheckedIndex, String arguments)","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        super(uncheckedIndex, arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code GroupCommand} and","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"     * returns a {@code GroupCommand} object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    public GroupCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(arguments, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SubGroupCreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        assert argMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        String uncheckedName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        if (!Name.isValidName(uncheckedName)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonCreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        Name name \u003d new Name(uncheckedName);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        SubGroup subGroup \u003d new SubGroup(name, tagList);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"        return new SubGroupCreateCommand(index, subGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":70}},{"path":"src/main/java/seedu/notor/logic/parser/group/SuperGroupCreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.parser.group;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.group.GroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.group.SuperGroupCreateCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":" * Parses input arguments to create a group command.","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"public class SuperGroupCreateCommandParser extends GroupCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    private final String uncheckedName;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a SuperGroupCreateCommandParser instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"     * @param uncheckedName Unchecked name of the SuperGroup to be parsed.","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"     * @param arguments Arguments to be parsed.","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"     * @throws ParseException If arguments could not be parsed.","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"    public SuperGroupCreateCommandParser(String uncheckedName, String arguments) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"        super(null, arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        this.uncheckedName \u003d uncheckedName;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code GroupCommand} and","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"     * returns a {@code GroupCommand} object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"    public GroupCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(arguments, PREFIX_TAG);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        if (!Name.isValidName(uncheckedName)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonCreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        Name name \u003d new Name(uncheckedName);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"        SuperGroup superGroup \u003d new SuperGroup(name, tagList);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"        return new SuperGroupCreateCommand(index, superGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":64}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonAddGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_GROUPNAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonAddGroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.Prefix;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":" * Parses input arguments to create a person command.","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"public class PersonAddGroupCommandParser extends PersonCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    public PersonAddGroupCommandParser(String unparsedIndex, String arguments) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        super(unparsedIndex, arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"    public PersonCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(arguments, PREFIX_GROUPNAME);","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUPNAME)","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonAddGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        assert argMultimap.getValue(PREFIX_GROUPNAME).isPresent();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"        String groupName \u003d argMultimap.getValue(PREFIX_GROUPNAME).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        return new PersonAddGroupCommand(index, groupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":52}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonAddSubGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":" * Deprecated for now.","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":" * TODO: move this functionality into PersonAddGroupCommandParser since we do not have add subgroup command anymore","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"@Deprecated","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"public class PersonAddSubGroupCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"//    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"//     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"//     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"//     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"//     */","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"//    public PersonAddSubGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"//        requireNonNull(args);","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUP, PREFIX_SUBGROUP);","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"//        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP, PREFIX_NAME, PREFIX_SUBGROUP)","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"//            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"//            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"//                PersonAddSubGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"//        }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"//        String personName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"//        String groupName \u003d argMultimap.getValue(PREFIX_GROUP).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"//        String subGroupName \u003d argMultimap.getValue(PREFIX_SUBGROUP).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"//        return new PersonAddSubGroupCommand(personName, groupName, subGroupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"//    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"//    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"//     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"//     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"//     */","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"//    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"//        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"//    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":38}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.Parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"public abstract class PersonCommandParser extends Parser\u003cPersonCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    protected String arguments;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    protected Index index;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    protected PersonCommandParser(String unparsedIndex, String arguments) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"        parseIndex(unparsedIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    private void parseIndex(String unparsedIndex) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        if (unparsedIndex \u003d\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"            index \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"            try {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"                index \u003d ParserUtil.parseIndex(unparsedIndex);","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"                        pe);","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    public abstract PersonCommand parse() throws ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kaixin-hc":7,"Yukun99":27}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonCreateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_GROUPINDEX;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"public class PersonCreateCommandParser extends PersonCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    private final String uncheckedName;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a PersonCreateCommandParser instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     * @param uncheckedName Unchecked name of the person to be created.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"     * @param arguments Arguments to be parsed.","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"     * @throws ParseException If arguments cannot be successfully parsed.","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    public PersonCreateCommandParser(String uncheckedName, String arguments) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        super(null, arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"        this.uncheckedName \u003d uncheckedName;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"    public PersonCreateCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_TAG, PREFIX_GROUPINDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        if (!Name.isValidName(uncheckedName)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonCreateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        Name name \u003d new Name(uncheckedName);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        Phone phone \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"            phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        Email email \u003d null;","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"            tagList \u003d ParserUtil.parseTags(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        if (argMultimap.getValue(PREFIX_GROUPINDEX).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"            index \u003d ParserUtil.parseGroupIndex(argMultimap.getValue(PREFIX_GROUPINDEX).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"        Person person \u003d new Person(name, phone, email, tagList);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"        return new PersonCreateCommand(index, person);","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"kaixin-hc":14,"elroygohjy":1,"Yukun99":41,"-":18}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"public class PersonDeleteCommandParser extends PersonCommandParser {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"    public PersonDeleteCommandParser(String unparsedIndex) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"        super(unparsedIndex, null);","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"     * Parses the given {@code Index} of arguments in the context of the DeleteCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    public PersonDeleteCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"        return new PersonDeleteCommand(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":18}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"public class PersonEditCommandParser extends PersonCommandParser {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    public PersonEditCommandParser(String unparsedIndex, String arguments) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"        super(unparsedIndex, arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    public PersonCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL);","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        PersonEditExecutor.PersonEditDescriptor personEditDescriptor \u003d new PersonEditExecutor.PersonEditDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"            personEditDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"            personEditDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"            personEditDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        if (!personEditDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"            throw new ParseException(PersonEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        return new PersonEditCommand(index, personEditDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"kaixin-hc":10,"Yukun99":17,"-":21}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonNoteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonNoteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"public class PersonNoteCommandParser extends PersonCommandParser {","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"    public PersonNoteCommandParser(String unparsedIndex) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"        super(unparsedIndex, null);","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"     * Parses the given {@code String} of arguments in the context of the NoteCommand","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"     * and returns a NoteCommand object for execution.","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    public PersonNoteCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"        return new PersonNoteCommand(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kaixin-hc":3,"elroygohjy":3,"Yukun99":14}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonRemoveGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_GROUPNAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonRemoveGroupCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.Prefix;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":" * Parses input arguments to create a person command.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"public class PersonRemoveGroupCommandParser extends PersonCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    public PersonRemoveGroupCommandParser(String unparsedIndex, String arguments) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"        super(unparsedIndex, arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    public PersonRemoveGroupCommand parse() throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(arguments, PREFIX_GROUPNAME);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUPNAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"                    PersonRemoveGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        assert argMultimap.getValue(PREFIX_GROUPNAME).isPresent();","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        String groupName \u003d argMultimap.getValue(PREFIX_GROUPNAME).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        return new PersonRemoveGroupCommand(index, groupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":20,"EltonGohJH":28}},{"path":"src/main/java/seedu/notor/logic/parser/person/PersonRemoveSubGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.logic.parser.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":" * Deprecated for now.","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":" * TODO: move this functionality into PersonRemoveGroupCommandParser since we do not have remove subgroup command","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":" * anymore","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"@Deprecated","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"public class PersonRemoveSubGroupCommandParser {","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"//    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"//     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"//     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"//     *","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"//     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"//     */","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"//    public PersonRemoveSubGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"//        requireNonNull(args);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"//        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_GROUP, PREFIX_SUBGROUP);","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"//        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GROUP, PREFIX_SUBGROUP)","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"//                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"//            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"//                    PersonAddSubGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"//        }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"//        String personName \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"//        String groupName \u003d argMultimap.getValue(PREFIX_GROUP).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"//        String subGroupName \u003d argMultimap.getValue(PREFIX_SUBGROUP).get();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"//        return new PersonRemoveSubGroupCommand(personName, groupName, subGroupName);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"//    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"//","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"//    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"//     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"//     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"//     */","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"//    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"//        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"//    }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":40}},{"path":"src/main/java/seedu/notor/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    // TODO: List","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    // Predicate\u003cGroup\u003e PREDICATE_SHOW_ALL_GROUPS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"    Path getNotorFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"    void setNotorFilePath(Path notorFilePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Notor \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"kaixin-hc"},"content":"     * Replaces Notor data (of the list) with the data in {@code notor}.","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"kaixin-hc"},"content":"    void setNotor(ReadOnlyNotor notor);","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"     * Returns the Notor data (lists and the like)","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"kaixin-hc"},"content":"    ReadOnlyNotor getNotor();","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"kaixin-hc"},"content":"     * Returns true if a person with the same identity as {@code person} exists in Notor.","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"kaixin-hc"},"content":"     * {@code person} must not already exist in Notor.","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"Yukun99"},"content":"    void createPerson(Person person);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"     * Finds the given person.","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"    Person findPerson(String name);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"     * Returns true if the SuperGroup exist.","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"    boolean hasSuperGroup(SuperGroup superGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"    void addSuperGroup(SuperGroup superGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"    void addSuperGroup(String superGroup) throws ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"    void deleteSuperGroup(SuperGroup superGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"Yukun99"},"content":"    Group findGroup(String name);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"Yukun99"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"     * Returns an unmodifiable view of the filtered group list","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"Yukun99"},"content":"    ObservableList\u003cSuperGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"Yukun99"},"content":"     * Updates the filter of the filtered group list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"Yukun99"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"Yukun99"},"content":"    void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kaixin-hc":16,"Yukun99":27,"EltonGohJH":18,"-":73}},{"path":"src/main/java/seedu/notor/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":" * Represents the in-memory model of Notor\u0027s data.","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"    private final Notor notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    private final FilteredList\u003cSuperGroup\u003e filteredGroups;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"    public ModelManager(ReadOnlyNotor notor, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"        requireAllNonNull(notor, userPrefs);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"kaixin-hc"},"content":"        logger.fine(\"Initializing with: \" + notor + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"kaixin-hc"},"content":"        this.notor \u003d new Notor(notor);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"kaixin-hc"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.notor.getPersonList());","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.notor.getSuperGroups());","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"kaixin-hc"},"content":"        this(new Notor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"kaixin-hc"},"content":"    public Path getNotorFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kaixin-hc"},"content":"        return userPrefs.getNotorFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"kaixin-hc"},"content":"    public void setNotorFilePath(Path notorFilePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"kaixin-hc"},"content":"        requireNonNull(notorFilePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"kaixin-hc"},"content":"        userPrefs.setNotorFilePath(notorFilePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"kaixin-hc"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Notor \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"    public void setNotor(ReadOnlyNotor notor) {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"kaixin-hc"},"content":"        this.notor.resetData(notor);","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"kaixin-hc"},"content":"    public ReadOnlyNotor getNotor() {","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"kaixin-hc"},"content":"        return notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"kaixin-hc"},"content":"        return notor.hasPerson(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"kaixin-hc"},"content":"        notor.removePerson(target);","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":108,"author":{"gitId":"Yukun99"},"content":"    public void createPerson(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"kaixin-hc"},"content":"        notor.addPerson(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"    public Person findPerson(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"kaixin-hc"},"content":"        return notor.findPerson(name);","lastModifiedDate":"2021-10-14"},{"lineNumber":116,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"kaixin-hc"},"content":"        notor.setPerson(target, editedPerson);","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"EltonGohJH"},"content":"    public boolean hasSuperGroup(SuperGroup superGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"EltonGohJH"},"content":"        requireNonNull(superGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"kaixin-hc"},"content":"        return notor.hasSuperGroup(superGroup);","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"EltonGohJH"},"content":"    public void addSuperGroup(SuperGroup superGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"kaixin-hc"},"content":"        notor.addSuperGroup(superGroup);","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"EltonGohJH"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"Yukun99"},"content":"    public void addSuperGroup(String superGroup) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"EltonGohJH"},"content":"        notor.addSuperGroup(superGroup);","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"EltonGohJH"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"EltonGohJH"},"content":"    public void deleteSuperGroup(SuperGroup superGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"kaixin-hc"},"content":"        notor.deleteSuperGroup(superGroup);","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"EltonGohJH"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"Yukun99"},"content":"    public Group findGroup(String name) {","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"Yukun99"},"content":"        return notor.findGroup(name);","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"Yukun99"},"content":"    public ObservableList\u003cSuperGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"Yukun99"},"content":"        return filteredGroups;","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"Yukun99"},"content":"    @Override public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"Yukun99"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"kaixin-hc"},"content":"        return notor.equals(other.notor)","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":33,"Yukun99":18,"EltonGohJH":27,"-":122}},{"path":"src/main/java/seedu/notor/model/Notor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.util.UniqueList;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"public class Notor implements ReadOnlyNotor {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    private final UniqueList\u003cPerson\u003e persons;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    private final UniqueList\u003cSuperGroup\u003e superGroups;","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"    {","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        persons \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        superGroups \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"kaixin-hc"},"content":"    public Notor() {}","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"     * Creates an Notor using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"    public Notor(ReadOnlyNotor toBeCopied) {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        this.persons.setItems(persons);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"     * Replaces the contents of the person list with {@code SuperGroups}.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"     * {@code SuperGroups} must not contain duplicate SuperGroups.","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"    public void setSuperGroups(List\u003cSuperGroup\u003e superGroups) {","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        this.superGroups.setItems(superGroups);","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"kaixin-hc"},"content":"     * Resets the existing data of this {@code Notor} with {@code newData}.","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"kaixin-hc"},"content":"    public void resetData(ReadOnlyNotor newData) {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        setSuperGroups(newData.getSuperGroups());","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"        persons.add(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"     * Gets Person based on name.","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"    public Person findPerson(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"EltonGohJH"},"content":"            if (person.getName().fullName.equals(name)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"EltonGohJH"},"content":"                return person;","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"        return null;","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"Yukun99"},"content":"        persons.setItem(target, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"kaixin-hc"},"content":"     * Removes {@code key} from this {@code Notor}.","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"EltonGohJH"},"content":"    //// Group-level operations","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"kaixin-hc"},"content":"     * Adds superGroup into the Notor.","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"kaixin-hc"},"content":"     * @param sg the SuperGroup to be added into Notor.","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"EltonGohJH"},"content":"    public void addSuperGroup(SuperGroup sg) {","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"EltonGohJH"},"content":"        superGroups.add(sg);","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"EltonGohJH"},"content":"     * Adds superGroup into the Notor.","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"EltonGohJH"},"content":"     * @param sg the name of the SuperGroup to be added into Notor.","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"Yukun99"},"content":"    public void addSuperGroup(String sg) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"Yukun99"},"content":"        superGroups.add(ParserUtil.parseSuperGroup(sg));","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"EltonGohJH"},"content":"    public void deleteSuperGroup(SuperGroup sg) {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"EltonGohJH"},"content":"        superGroups.remove(sg);","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"Yukun99"},"content":"     * Finds a Group based on display name.","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"Yukun99"},"content":"     * @param name Display name of the Group.","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"Yukun99"},"content":"     * @return Group with the specified display name.","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"Yukun99"},"content":"    public Group findGroup(String name) {","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"Yukun99"},"content":"        if (name.contains(\":\")) {","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"Yukun99"},"content":"            String[] splitName \u003d name.split(\":\");","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"Yukun99"},"content":"            return findSuperGroup(splitName[0]).findSubGroup(splitName[1]);","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"Yukun99"},"content":"        return findSuperGroup(name);","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"EltonGohJH"},"content":"     * Gets SuperGroup based on group name.","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"EltonGohJH"},"content":"    public SuperGroup findSuperGroup(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"EltonGohJH"},"content":"        // TODO: Change this method when UniqueList is updated.","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"EltonGohJH"},"content":"        for (SuperGroup superGroup : superGroups) {","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"EltonGohJH"},"content":"            if (superGroup.getName().equals(name)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"EltonGohJH"},"content":"                return superGroup;","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"EltonGohJH"},"content":"        return null;","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"EltonGohJH"},"content":"     * Returns true if SuperGroup exists.","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"EltonGohJH"},"content":"    public boolean hasSuperGroup(SuperGroup superGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"EltonGohJH"},"content":"        // TODO: Change this method when UniqueList is updated.","lastModifiedDate":"2021-10-15"},{"lineNumber":180,"author":{"gitId":"EltonGohJH"},"content":"        requireNonNull(superGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"EltonGohJH"},"content":"        return superGroups.contains(superGroup);","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":198,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"EltonGohJH"},"content":"    public ObservableList\u003cSuperGroup\u003e getSuperGroups() {","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"EltonGohJH"},"content":"        return superGroups.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":205,"author":{"gitId":"EltonGohJH"},"content":"        // TODO: Add Group","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"kaixin-hc"},"content":"                || (other instanceof Notor // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":208,"author":{"gitId":"kaixin-hc"},"content":"                \u0026\u0026 persons.equals(((Notor) other).persons));","lastModifiedDate":"2021-10-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":15,"Yukun99":29,"EltonGohJH":71,"-":100}},{"path":"src/main/java/seedu/notor/model/ReadOnlyNotor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":" * Unmodifiable view of Notor","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"public interface ReadOnlyNotor {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    ObservableList\u003cSuperGroup\u003e getSuperGroups();","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":5,"EltonGohJH":1,"-":13}},{"path":"src/main/java/seedu/notor/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"    Path getNotorFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kaixin-hc":3,"-":13}},{"path":"src/main/java/seedu/notor/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"    private Path notorFilePath \u003d Paths.get(\"data\", \"notor.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"        setNotorFilePath(newUserPrefs.getNotorFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"    public Path getNotorFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kaixin-hc"},"content":"        return notorFilePath;","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"    public void setNotorFilePath(Path notorFilePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"        requireNonNull(notorFilePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"        this.notorFilePath \u003d notorFilePath;","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"kaixin-hc"},"content":"                \u0026\u0026 notorFilePath.equals(o.notorFilePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"kaixin-hc"},"content":"        return Objects.hash(guiSettings, notorFilePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"kaixin-hc"},"content":"        sb.append(\"\\nLocal data file location : \" + notorFilePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":12,"-":75}},{"path":"src/main/java/seedu/notor/model/common/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.model.common;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":" * Represents a name in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":2,"-":56}},{"path":"src/main/java/seedu/notor/model/common/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.model.common;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":" * Represents a note that is opened upon the execution of note command.","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"public class Note {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"    public static final Note EMPTY_NOTE \u003d new EmptyNote();","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"    /** regex to remove newLine **/","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"    private static final String REMOVE_EMPTY_LINES \u003d \"(?m)^\\\\s*$[\\n\\r]{1,}\";","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"     * content of note","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"     **/","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    public final String value;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    private final String savedDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a Note instance.","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"     * @param value Value of the note.","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"    public Note(String value, String savedDate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"        this.savedDate \u003d savedDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"     * Returns string representation of saved date.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"     * @return String representation of saved date","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"    public String getSavedDate() {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"        return savedDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"            return true;","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"            return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        Note noteOther \u003d (Note) other;","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"        return value.equals(noteOther.value) \u0026\u0026 savedDate.equals(noteOther.savedDate); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"    public String getNoEmptyLineNote() {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"        return value.replaceAll(REMOVE_EMPTY_LINES, \"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"        return value;","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"    private static final class EmptyNote extends Note {","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"        public EmptyNote() {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"            super(\"\", \"\");","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"            return other \u003d\u003d this;","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"elroygohjy":22,"Yukun99":50}},{"path":"src/main/java/seedu/notor/model/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":" * Signals that the operation will result in duplicate Persons/Groups (Persons/Groups are considered duplicates if they","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":" * have the same identity).","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"        super(\"Operation would result in duplicated persons/groups.\");","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":10}},{"path":"src/main/java/seedu/notor/model/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.exceptions;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":" * Signals that the operation is unable to find the specified person/group.","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"public class ItemNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":5}},{"path":"src/main/java/seedu/notor/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.group;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":" * Represents a group which a person can belong to.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"public abstract class Group {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group should not contain colon or slash\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    protected Name name;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    protected Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"    protected Note note \u003d Note.EMPTY_NOTE;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    protected HashMap\u003cString, Person\u003e people;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    // TODO: RequireAllNonNull assertions/checks","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a Group instance.","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     * @param name the name of the group.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"    public Group(Name name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"        people \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a Group instance.","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"     * @param name the name of the group.","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"    public Group(Name name, Set\u003cTag\u003e tags, Note note) {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        people \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"        Group group \u003d (Group) o;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"        return Objects.equals(name, group.name);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"        return Objects.hash(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"    public abstract String getName();","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"    public HashMap\u003cString, Person\u003e getPeople() {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"        return people;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"     * Returns true if a given string is a valid group name.","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"    public static boolean isValidGroupName(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"        // TODO: Check if this is the only condition.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"        return !test.matches(\".*[:/].*\");","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"        people.put(p.getName().toString(), p);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"     * Remvoes the person from the group.","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"     * @param p The person object to be removed.","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"     * @throws ItemNotFoundException if Person is not found.","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"    public void removePerson(Person p) throws ItemNotFoundException {","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"        if (!people.containsKey(p.getName().toString())) {","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"        people.remove(p.getName().toString());","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaixin-hc":2,"EltonGohJH":67,"Yukun99":28}},{"path":"src/main/java/seedu/notor/model/group/SubGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.group;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.util.Unique;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":" * Represents a group that can be part of a SuperGroup.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"public class SubGroup extends Group implements Unique\u003cSubGroup\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    protected String parent;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"    public SubGroup(Name name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"        super(name, tags);","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     * Creates a new subGroup where name is the name of the subGroup.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"     * @param name the name of the SubGroup.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"     * @param parent the parent of the SubGroup.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    public SubGroup(Name name, Set\u003cTag\u003e tags, String parent) {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        super(name, tags);","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a SubGroup instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"     * @param name Name of the SubGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"     * @param tags Tags included in the SubGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"     * @param note Notes taken on the SubGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"     * @param parent Parent of the SubGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    public SubGroup(Name name, Set\u003cTag\u003e tags, Note note, String parent) {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        super(name, tags, note);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        return Objects.hash(parent, name);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"        return parent + \"_\" + this.name;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"    public String getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        return name.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"    public String getParent() {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        return parent;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"    public void setParent(SuperGroup parent) {","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        this.parent \u003d parent.getName();","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"    public boolean isSame(SubGroup other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        return other.toString().equals(this.toString());","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaixin-hc":1,"EltonGohJH":43,"Yukun99":30}},{"path":"src/main/java/seedu/notor/model/group/SuperGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.group;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.util.Unique;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.util.UniqueList;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":" * Represents a group that has many subgroups.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"public class SuperGroup extends Group implements Unique\u003cSuperGroup\u003e {","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    protected UniqueList\u003cSubGroup\u003e subGroups;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a SuperGroup instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"     * @param name Name of the SuperGroup to be created.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    public SuperGroup(Name name) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        super(name, new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        subGroups \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     * Creates a new SuperGroup where name is the name of the group.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"     * @param name Name of the SuperGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"     * @param tags Tags in the SuperGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    public SuperGroup(Name name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        super(name, tags);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        subGroups \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"     * Constructor for a SuperGroup instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"     * @param name Name of the SuperGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"     * @param tags Tags in the SuperGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"     * @param note Notes taken on the SuperGroup.","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"    public SuperGroup(Name name, Set\u003cTag\u003e tags, Note note) {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        super(name, tags, note);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        subGroups \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    public String getName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        return this.name.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"     * Adds SubGroup into SuperGroup.","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"     * @param subGroup the subGroup to be added into the SuperGroup.","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    public void addSubGroup(SubGroup subGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"        requireNonNull(subGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"        subGroups.add(subGroup);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"     * Adds SubGroup into SuperGroup.","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"     * TODO: Discuss whether to transfer SuperGroup name to SubGroup.","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"     * @param subGroup the String of the subGroup to be added into the SuperGroup.","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"    public void addSubGroup(String subGroup) {","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"        requireNonNull(subGroup);","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"        subGroups.add(new SubGroup(name, tags, getName()));","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"    public UniqueList\u003cSubGroup\u003e getSubGroups() {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"        return subGroups;","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"     * Finds the SubGroup given the SubGroup name.","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"     * @param name the Name of the SubGroup.","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"     * @return SubGroup","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"    public SubGroup findSubGroup(String name) {","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"        for (SubGroup subGroup : subGroups) {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"            if (subGroup.name.toString().equals(name)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"                return subGroup;","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"        return null;","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"EltonGohJH"},"content":"    public void addPersonToSubGroup(String subGroupName, Person p) {","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"EltonGohJH"},"content":"        findSubGroup(subGroupName).addPerson(p);","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"Yukun99"},"content":"        return name.toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"EltonGohJH"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"EltonGohJH"},"content":"    public boolean isSame(SuperGroup other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"        return other.name.equals(this.name);","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaixin-hc":1,"EltonGohJH":72,"Yukun99":38}},{"path":"src/main/java/seedu/notor/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":2,"-":69}},{"path":"src/main/java/seedu/notor/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kaixin-hc":2,"-":29}},{"path":"src/main/java/seedu/notor/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SubGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.util.Unique;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"public class Person implements Unique\u003cPerson\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    private Note note \u003d Note.EMPTY_NOTE;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    private HashSet\u003cString\u003e displaySuperGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    private HashSet\u003cString\u003e displaySubGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    public Person(Name name, Phone phone, Email email, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"    public Person(Name name, Phone phone, Email email, Note note, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"     * Creates a person with groups and subgroups.","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    public Person(Name name, Phone phone, Email email, Note note, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"                  HashSet\u003cString\u003e displaySuperGroups, HashSet\u003cString\u003e displaySubGroups) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"        requireAllNonNull(name, phone, email, tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        this.displaySuperGroups \u003d displaySuperGroups;","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        this.displaySubGroups \u003d displaySubGroups;","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"    public Note getNote() {","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"        return note;","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"elroygohjy"},"content":"    public String getNoteSavedDate() {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"        return note.getSavedDate();","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"Yukun99"},"content":"     * Adds a group to the current Person instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"     * @param group Group to be added to the current Person instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"Yukun99"},"content":"     * @throws DuplicateItemException If group has already been added to the current Person instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"    public void addGroup(Group group) throws DuplicateItemException {","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"Yukun99"},"content":"        if (group instanceof SuperGroup) {","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"Yukun99"},"content":"            addSuperGroup((SuperGroup) group);","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"Yukun99"},"content":"        if (group instanceof SubGroup) {","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"Yukun99"},"content":"            addSubGroup((SubGroup) group);","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"EltonGohJH"},"content":"     * Adds a SuperGroup to person.","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"EltonGohJH"},"content":"     * @param superGroup the SuperGroup to be added to that person.","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DuplicateItemException if person is already in the group.","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"EltonGohJH"},"content":"    public void addSuperGroup(SuperGroup superGroup) throws DuplicateItemException {","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"EltonGohJH"},"content":"        if (displaySuperGroups.contains(superGroup.toString())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"EltonGohJH"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"EltonGohJH"},"content":"        displaySuperGroups.add(superGroup.toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"EltonGohJH"},"content":"     * Adds a SuperGroup to person.","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"EltonGohJH"},"content":"     * @param superGroup the name of the SuperGroup to be added to that person.","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DuplicateItemException if person is already in the group.","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"EltonGohJH"},"content":"    public void addSuperGroup(String superGroup) throws DuplicateItemException {","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"EltonGohJH"},"content":"        if (displaySuperGroups.contains(superGroup)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"EltonGohJH"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"EltonGohJH"},"content":"        displaySuperGroups.add(superGroup);","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"EltonGohJH"},"content":"     * Adds a SubGroup to person.","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"EltonGohJH"},"content":"     * @param subGroup the SubGroup to be added to that person.","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"EltonGohJH"},"content":"     * @throws DuplicateItemException if person is already in the group.","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"EltonGohJH"},"content":"    public void addSubGroup(SubGroup subGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"EltonGohJH"},"content":"        if (displaySubGroups.contains(subGroup.toString())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"EltonGohJH"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"EltonGohJH"},"content":"        displaySubGroups.add(subGroup.toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"EltonGohJH"},"content":"     * Removes a SuperGroup from the person.","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"EltonGohJH"},"content":"     * @param superGroup the name of the SuperGroup to be removed to that person.","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"EltonGohJH"},"content":"     * @throws ItemNotFoundException if person is not in in the group.","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"EltonGohJH"},"content":"    public void removeSuperGroup(String superGroup) throws ItemNotFoundException {","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"EltonGohJH"},"content":"        if (!displaySuperGroups.contains(superGroup)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"EltonGohJH"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"EltonGohJH"},"content":"        displaySubGroups.removeIf(subGroup -\u003e subGroup.split(\"_\")[0].equals(superGroup));","lastModifiedDate":"2021-10-20"},{"lineNumber":160,"author":{"gitId":"EltonGohJH"},"content":"        displaySuperGroups.remove(superGroup);","lastModifiedDate":"2021-10-20"},{"lineNumber":161,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"EltonGohJH"},"content":"     * Removes a subgroup from the person.","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"EltonGohJH"},"content":"     * @param subGroup the subgroup to be removed.","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"EltonGohJH"},"content":"     * @throws ItemNotFoundException if SubGroup is not found.","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"EltonGohJH"},"content":"    public void removeSuperGroup(SubGroup subGroup) throws ItemNotFoundException {","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"EltonGohJH"},"content":"        if (!displaySubGroups.contains(subGroup.toString())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"EltonGohJH"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"EltonGohJH"},"content":"        displaySubGroups.remove(subGroup.toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":175,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"EltonGohJH"},"content":"    public HashSet\u003cString\u003e getSuperGroups() {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"EltonGohJH"},"content":"        return displaySuperGroups;","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"EltonGohJH"},"content":"    public HashSet\u003cString\u003e getDisplaySubGroups() {","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"EltonGohJH"},"content":"        return displaySubGroups;","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":197,"author":{"gitId":"elroygohjy"},"content":"    public boolean isSame(Person otherPerson) {","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":229,"author":{"gitId":"Yukun99"},"content":"        return Objects.hash(name, phone, email, tags);","lastModifiedDate":"2021-09-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":239,"author":{"gitId":"elroygohjy"},"content":"                .append(getEmail());","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":241,"author":{"gitId":"elroygohjy"},"content":"        String noteSavedDate \u003d note.getSavedDate();","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"elroygohjy"},"content":"        if (!noteSavedDate.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":243,"author":{"gitId":"elroygohjy"},"content":"            builder.append(\"; Last Edited: \")","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"elroygohjy"},"content":"                    .append(getNoteSavedDate());","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":247,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":252,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":6,"elroygohjy":15,"Yukun99":42,"EltonGohJH":89,"-":104}},{"path":"src/main/java/seedu/notor/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":2,"-":51}},{"path":"src/main/java/seedu/notor/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kaixin-hc":2,"-":52}},{"path":"src/main/java/seedu/notor/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":" * Contains utility methods for populating {@code Notor} with sample data.","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"    public static final Note EMPTY_NOTE \u003d new Note(\"\", \"\");","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"    // @formatter:off","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"                    EMPTY_NOTE, getTagSet(\"friends\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"                    EMPTY_NOTE, getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"                    EMPTY_NOTE, getTagSet(\"neighbours\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"                    EMPTY_NOTE, getTagSet(\"family\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"                    EMPTY_NOTE, getTagSet(\"classmates\")),","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"                    EMPTY_NOTE, getTagSet(\"colleagues\"))","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"    public static ReadOnlyNotor getSampleNotor() {","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kaixin-hc"},"content":"        Notor sampleAb \u003d new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"kaixin-hc":9,"elroygohjy":8,"Yukun99":3,"EltonGohJH":1,"-":36}},{"path":"src/main/java/seedu/notor/model/util/Unique.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"public interface Unique\u003cT\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"    boolean isSame(T other);","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":4}},{"path":"src/main/java/seedu/notor/model/util/UniqueList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"public class UniqueList\u003cT extends Unique\u003cT\u003e\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"     * Returns true if the list contains an equivalent item as the given argument.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"     * Adds an item to the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"     * The item must not already exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"     * Replaces the item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"     * The item {@code editedItem} must not be the same as another existing item in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        if (!target.isSame(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"     * The person must exist in the list.","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"    public void setItems(UniqueList\u003cT\u003e replacement) {","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Yukun99"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Yukun99"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Yukun99"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Yukun99"},"content":"        if (!onlyContainsUnique(items)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Yukun99"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"        internalList.setAll(items);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Yukun99"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"Yukun99"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"Yukun99"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"Yukun99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"Yukun99"},"content":"                || (other instanceof UniqueList // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"Yukun99"},"content":"                \u0026\u0026 internalList.equals(((UniqueList\u003c?\u003e) other).internalList));","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"Yukun99"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"Yukun99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"Yukun99"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"Yukun99"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"Yukun99"},"content":"    private boolean onlyContainsUnique(List\u003cT\u003e items) {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"Yukun99"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"Yukun99"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Yukun99"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"Yukun99"},"content":"                    return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"Yukun99"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"Yukun99"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"Yukun99"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"Yukun99"},"content":"        return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":4,"Yukun99":121}},{"path":"src/main/java/seedu/notor/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SubGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    private final String note;","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"    private final String noteDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"    private final List\u003cString\u003e superGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    private final List\u003cString\u003e subGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"note\") String note,","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"            @JsonProperty(\"noteDate\") String noteDate, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"            @JsonProperty(\"superGroups\") List\u003cString\u003e superGroups, @JsonProperty(\"subGroups\") List\u003cString\u003e subGroups) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        this.note \u003d note;","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"        this.noteDate \u003d noteDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"        this.superGroups.addAll(superGroups);","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"        this.subGroups.addAll(subGroups);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        note \u003d source.getNote().value;","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"        noteDate \u003d source.getNote().getSavedDate();","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        superGroups.addAll(source.getSuperGroups());","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        subGroups.addAll(source.getDisplaySubGroups());","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"Yukun99"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"Yukun99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"elroygohjy"},"content":"        if (noteDate \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"elroygohjy"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"elroygohjy"},"content":"                    Note.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"elroygohjy"},"content":"        final Note modelNote \u003d new Note(note, noteDate);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"EltonGohJH"},"content":"        if (!superGroups.stream().allMatch(SuperGroup::isValidGroupName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"EltonGohJH"},"content":"            throw new IllegalValueException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"EltonGohJH"},"content":"        if (!subGroups.stream().allMatch(SubGroup::isValidGroupName)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"EltonGohJH"},"content":"            throw new IllegalValueException(Group.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"EltonGohJH"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelNote, modelTags,","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"EltonGohJH"},"content":"                new HashSet\u003c\u003e(superGroups), new HashSet\u003c\u003e(subGroups));","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaixin-hc":9,"elroygohjy":9,"EltonGohJH":17,"Yukun99":7,"-":90}},{"path":"src/main/java/seedu/notor/storage/JsonAdaptedSubGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SubGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"public class JsonAdaptedSubGroup {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s format is wrong!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    private final String name;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    private String parent;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"     * Constructs a {@code JsonAdaptedSuperGroup} with the given subGroup details.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    public JsonAdaptedSubGroup(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"            @JsonProperty(\"Group\") String parent) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    public JsonAdaptedSubGroup(SubGroup source) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        this.name \u003d source.getName();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        this.parent \u003d source.getParent();","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"     * Converts this Jackson-friendly adapted SuperGroup object into the model\u0027s {@code SuperGroup}","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"     * and {@code SuperGroup} objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"     * TODO: take in actual tags instead of just using empty HashSet.","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"    public SubGroup toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        return new SubGroup(new Name(name), new HashSet\u003c\u003e(), parent);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":6,"EltonGohJH":38}},{"path":"src/main/java/seedu/notor/storage/JsonAdaptedSuperGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.util.List;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"public class JsonAdaptedSuperGroup {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s format is wrong!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    private final String name;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    private List\u003cJsonAdaptedSubGroup\u003e subGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"     * Constructs a {@code JsonAdaptedSuperGroup} with the given group details.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    public JsonAdaptedSuperGroup(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"            @JsonProperty(\"subGroups\") List\u003cJsonAdaptedSubGroup\u003e subGroups) {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"        this.subGroups.addAll(subGroups);","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"    public JsonAdaptedSuperGroup(SuperGroup source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"        this.name \u003d source.getName();","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        subGroups.addAll(source.getSubGroups().asUnmodifiableObservableList().stream()","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"                .map(JsonAdaptedSubGroup::new)","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"     * Converts this Jackson-friendly adapted SuperGroup object into the model\u0027s {@code SuperGroup}","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"     * and {@code SuperGroup} objects.","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    public SuperGroup toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        SuperGroup group \u003d ParserUtil.parseSuperGroup(name);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"        for (JsonAdaptedSubGroup subGroup : this.subGroups) {","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"            group.addSubGroup(subGroup.toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"        return group;","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":3,"EltonGohJH":48}},{"path":"src/main/java/seedu/notor/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaixin-hc":3,"-":45}},{"path":"src/main/java/seedu/notor/storage/JsonNotorStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.FileUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.JsonUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":" * A class to access Notor data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"public class JsonNotorStorage implements NotorStorage {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonNotorStorage.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    private final Path filePath;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"    public JsonNotorStorage(Path filePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"    public Path getNotorFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"    public Optional\u003cReadOnlyNotor\u003e readNotor() throws DataConversionException {","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kaixin-hc"},"content":"        return readNotor(filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"     * Similar to {@link #readNotor()}.","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"kaixin-hc"},"content":"    public Optional\u003cReadOnlyNotor\u003e readNotor(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"        Optional\u003cJsonSerializableNotor\u003e jsonNotor \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kaixin-hc"},"content":"                filePath, JsonSerializableNotor.class);","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"        if (!jsonNotor.isPresent()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"            return Optional.of(jsonNotor.get().toModelType());","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"kaixin-hc"},"content":"    public void saveNotor(ReadOnlyNotor notor) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"kaixin-hc"},"content":"        saveNotor(notor, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"kaixin-hc"},"content":"     * Similar to {@link #saveNotor(ReadOnlyNotor)}.","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"kaixin-hc"},"content":"    public void saveNotor(ReadOnlyNotor notor, Path filePath) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kaixin-hc"},"content":"        requireNonNull(notor);","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"kaixin-hc"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableNotor(notor), filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaixin-hc":26,"Yukun99":1,"-":53}},{"path":"src/main/java/seedu/notor/storage/JsonSerializableNotor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":" * An Immutable Notor that is serializable to JSON format.","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"@JsonRootName(value \u003d \"notor\")","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"class JsonSerializableNotor {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"    private final List\u003cJsonAdaptedSuperGroup\u003e superGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"     * Constructs a {@code JsonSerializableNotor} with the given persons.","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"    public JsonSerializableNotor(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        @JsonProperty(\"superGroups\") List\u003cJsonAdaptedSuperGroup\u003e superGroups) {","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"        this.superGroups.addAll(superGroups);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"     * Converts a given {@code ReadOnlyNotor} into this class for Jackson use.","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableNotor}.","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"kaixin-hc"},"content":"    public JsonSerializableNotor(ReadOnlyNotor source) {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"            Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        superGroups","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"            .addAll(source.getSuperGroups().stream().map(JsonAdaptedSuperGroup::new).collect(","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"            Collectors.toList()));","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"kaixin-hc"},"content":"     * Converts this notor into the model\u0027s {@code Notor} object.","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"    public Notor toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"kaixin-hc"},"content":"        Notor notor \u003d new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"EltonGohJH"},"content":"        for (JsonAdaptedSuperGroup jsonAdaptedSuperGroup : superGroups) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"EltonGohJH"},"content":"            SuperGroup superGroup \u003d jsonAdaptedSuperGroup.toModelType();","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"kaixin-hc"},"content":"            if (!notor.hasSuperGroup(superGroup)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"kaixin-hc"},"content":"                notor.addSuperGroup(superGroup);","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"kaixin-hc"},"content":"            if (notor.hasPerson(person)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"            for (String superGroup : person.getSuperGroups()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"kaixin-hc"},"content":"                notor.findSuperGroup(superGroup).addPerson(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"            for (String subGroup : person.getDisplaySubGroups()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"                String[] split \u003d subGroup.split(\"_\");","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"                // TODO: Create method to check for validity","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"                notor.findSuperGroup(split[0]).addPersonToSubGroup(split[1], person);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"kaixin-hc"},"content":"            notor.addPerson(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"kaixin-hc"},"content":"        return notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaixin-hc":23,"EltonGohJH":31,"-":30}},{"path":"src/main/java/seedu/notor/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.JsonUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    private final Path filePath;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":2,"-":41}},{"path":"src/main/java/seedu/notor/storage/NotorStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":" * Represents a storage for {@link Notor}.","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"public interface NotorStorage {","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"    Path getNotorFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"     * Returns Notor data as a {@link ReadOnlyNotor}.","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"    Optional\u003cReadOnlyNotor\u003e readNotor() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"     * @see #getNotorFilePath()","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"    Optional\u003cReadOnlyNotor\u003e readNotor(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kaixin-hc"},"content":"     * Saves the given {@link ReadOnlyNotor} to the storage.","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kaixin-hc"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"     * @param notor cannot be null.","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kaixin-hc"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kaixin-hc"},"content":"    void saveNotor(ReadOnlyNotor notor) throws IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kaixin-hc"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kaixin-hc"},"content":"     * @see #saveNotor(ReadOnlyNotor)","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kaixin-hc"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"kaixin-hc"},"content":"    void saveNotor(ReadOnlyNotor notor, Path filePath) throws IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kaixin-hc":48}},{"path":"src/main/java/seedu/notor/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"public interface Storage extends NotorStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"    Path getNotorFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"    Optional\u003cReadOnlyNotor\u003e readNotor() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"    void saveNotor(ReadOnlyNotor notor) throws IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kaixin-hc":9,"-":23}},{"path":"src/main/java/seedu/notor/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":" * Manages storage of Notor data in local storage.","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"    private final NotorStorage notorStorage;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"     * Creates a {@code StorageManager} with the given {@code NotorStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"    public StorageManager(NotorStorage notorStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"        this.notorStorage \u003d notorStorage;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Notor methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"kaixin-hc"},"content":"    public Path getNotorFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"        return notorStorage.getNotorFilePath();","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"kaixin-hc"},"content":"    public Optional\u003cReadOnlyNotor\u003e readNotor() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kaixin-hc"},"content":"        return readNotor(notorStorage.getNotorFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"kaixin-hc"},"content":"    public Optional\u003cReadOnlyNotor\u003e readNotor(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"        return notorStorage.readNotor(filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"    public void saveNotor(ReadOnlyNotor notor) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"kaixin-hc"},"content":"        saveNotor(notor, notorStorage.getNotorFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"kaixin-hc"},"content":"    public void saveNotor(ReadOnlyNotor notor, Path filePath) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"kaixin-hc"},"content":"        notorStorage.saveNotor(notor, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":22,"Yukun99":1,"-":56}},{"path":"src/main/java/seedu/notor/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":" * Represents a storage for {@link seedu.notor.model.UserPrefs}.","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"     * Saves the given {@link seedu.notor.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kaixin-hc":6,"Yukun99":2,"-":30}},{"path":"src/main/java/seedu/notor/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        } catch (CommandException | ParseException | ExecuteException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"kaixin-hc"},"content":"         * @see seedu.notor.logic.Logic#execute(String)","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"Yukun99"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException, ExecuteException;","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"kaixin-hc":6,"Yukun99":2,"-":78}},{"path":"src/main/java/seedu/notor/ui/ConfirmationWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"public class ConfirmationWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    private static final String FXML \u003d \"ConfirmationWindow.fxml\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"    private static final String SAVE_MESSAGE \u003d \"Do you want to save the notes for %s?\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"    private TextFlow textFlow;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"    private final NoteWindow noteWindow;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"     * Creates a Confirmation Window if user attempts to exits without saving.","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"     * @param personName of NoteWindow.","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"    public ConfirmationWindow(String personName, NoteWindow noteWindow) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"        Text text \u003d new Text(String.format(SAVE_MESSAGE, personName));","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"        textFlow.getChildren().add(text);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        this.noteWindow \u003d noteWindow;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setTitle(\"Note\");","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"        getRoot().initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setResizable(false);","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"     * Shows Confirmation Window.","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"    public void show() {","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"     * Saves and exits both Note Window and Confirmation Window upon clicking save button.","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"     * @throws CommandException commandException","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"    public void onClickSave() throws CommandException, InterruptedException {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"        getRoot().close();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"        noteWindow.handleSaveAndExit();","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"     * Exits both Note Window and Confirmation Window without saving note upon clicking don\u0027t save button.","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"    public void onClickDoNotSave() throws InterruptedException {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"        getRoot().close();","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"        noteWindow.exit();","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"     * Exits Confirmation Window upon clicking cancel button.","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"    public void onClickCancel() {","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"        getRoot().close();","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"elroygohjy":73}},{"path":"src/main/java/seedu/notor/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w08-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":2,"-":97}},{"path":"src/main/java/seedu/notor/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.Logic;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    private final Logic logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"kaixin-hc"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getNotorFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"elroygohjy"},"content":"     * Opens the note window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"elroygohjy"},"content":"    public void handleNote(Person person, Logic logic) {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"elroygohjy"},"content":"        NoteWindow noteWindow \u003d new NoteWindow(person, logic, resultDisplay);","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"elroygohjy"},"content":"        if (!NoteWindow.OPENED_NOTE_WINDOWS.contains(noteWindow)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"elroygohjy"},"content":"            NoteWindow.OPENED_NOTE_WINDOWS.add(noteWindow);","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"elroygohjy"},"content":"            noteWindow.show();","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"elroygohjy"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"elroygohjy"},"content":"            int indexOfNoteWindow \u003d NoteWindow.OPENED_NOTE_WINDOWS.indexOf(noteWindow);","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"elroygohjy"},"content":"            NoteWindow.OPENED_NOTE_WINDOWS.get(indexOfNoteWindow).focus();","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"elroygohjy"},"content":"        NoteWindow.OPENED_NOTE_WINDOWS.forEach(NoteWindow::hide);","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"kaixin-hc"},"content":"     * @see seedu.notor.logic.Logic#execute(String)","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"elroygohjy"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException, ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"elroygohjy"},"content":"            if (commandResult.isShowNote()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"elroygohjy"},"content":"                handleNote(commandResult.person(), logic);","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"elroygohjy"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"elroygohjy"},"content":"        } catch (CommandException | ParseException | ExecuteException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kaixin-hc":11,"elroygohjy":22,"Yukun99":3,"-":181}},{"path":"src/main/java/seedu/notor/ui/NoteWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.input.KeyCodeCombination;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.input.KeyCombination.Modifier;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.DateUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.Logic;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"public class NoteWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"    protected static final ArrayList\u003cNoteWindow\u003e OPENED_NOTE_WINDOWS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"    private static final String MESSAGE_SAVE_NOTE_SUCCESS \u003d \"Saved Note to Person: %1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"    private static final String MESSAGE_EXIT_NOTE_SUCCESS \u003d \"Exited Note of Person: %1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"    private static final int WIDTH \u003d 616;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"    private static final int HEIGHT \u003d 390;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"    private static final int OFFSET \u003d 10;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"    private static final int SCREEN_X \u003d Toolkit.getDefaultToolkit().getScreenSize().width;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"    private static final int SCREEN_Y \u003d Toolkit.getDefaultToolkit().getScreenSize().height;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"    private static final int CENTER_X \u003d (SCREEN_X - WIDTH) / 2;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"    private static final int CENTER_Y \u003d (SCREEN_Y - HEIGHT) / 2;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"    private static final String FXML \u003d \"NoteWindow.fxml\";","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"    private static final Modifier CTRL \u003d KeyCombination.CONTROL_DOWN;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"    private static final KeyCombination SAVE_KEY \u003d new KeyCodeCombination(KeyCode.S, CTRL);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"    private static final KeyCombination EXIT_AND_SAVE_KEY \u003d new KeyCodeCombination(KeyCode.Q, CTRL);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"    private static final KeyCombination EXIT_KEY \u003d new KeyCodeCombination(KeyCode.W, CTRL);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"    private static final KeyCombination TIME_STAMP_KEY \u003d new KeyCodeCombination(KeyCode.T, CTRL);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"    private TextArea noteTextArea;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    private Person person;","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"    private final Logic logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"    private final seedu.notor.ui.ConfirmationWindow confirmationWindow;","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"    private final ResultDisplay resultDisplay;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"     * Creates a new NoteWindow.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"    public NoteWindow(Person person, Logic logic, ResultDisplay resultDisplay) {","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"        super(FXML);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"        noteTextArea.setText(person.getNote().value);","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"        this.resultDisplay \u003d resultDisplay;","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"        confirmationWindow \u003d new ConfirmationWindow(person.getName().toString(), this);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setTitle(person.getName().toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"        noteTextArea.setWrapText(true);","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setOnCloseRequest(e -\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"            e.consume();","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"            handleExit();","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"        });","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"     * Returns current DateTime in this string format: Last Modified: E, MMM dd yyyy HH:mm","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"elroygohjy"},"content":"    public static String noteLastModified() {","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"elroygohjy"},"content":"        return \"Last Modified: (\" + DateUtil.getCurrentDateTime() + \")\";","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"elroygohjy"},"content":"     * Shows the noteWindow.","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"elroygohjy"},"content":"    public void show() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"elroygohjy"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"elroygohjy"},"content":"        int newX \u003d Math.min(CENTER_X + (OPENED_NOTE_WINDOWS.size() - 1) * OFFSET, SCREEN_X - WIDTH);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"elroygohjy"},"content":"        int newY \u003d Math.min(CENTER_Y + (OPENED_NOTE_WINDOWS.size() - 1) * OFFSET, SCREEN_Y - HEIGHT);","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setX(newX);","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setY(newY);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"elroygohjy"},"content":"     * Returns true if the note window is currently being shown.","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"elroygohjy"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"elroygohjy"},"content":"     * Hides the note window.","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"elroygohjy"},"content":"    public void hide() {","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"elroygohjy"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"elroygohjy"},"content":"     * Focuses on the note window.","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"elroygohjy"},"content":"    public void focus() {","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setIconified(false);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"elroygohjy"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":112,"author":{"gitId":"elroygohjy"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"elroygohjy"},"content":"     * the note is added.","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"elroygohjy"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"elroygohjy"},"content":"    private String generateSuccessMessage(String message, Person personToEdit) {","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"elroygohjy"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"elroygohjy"},"content":"     * Saves the file","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"elroygohjy"},"content":"    public void handleSave() throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"elroygohjy"},"content":"        String paragraph \u003d noteTextArea.getText();","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"elroygohjy"},"content":"        Note editedNote \u003d new Note(paragraph, noteLastModified());","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"elroygohjy"},"content":"        Person editedPerson \u003d new Person(person.getName(), person.getPhone(), person.getEmail(),","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"elroygohjy"},"content":"                editedNote, person.getTags());","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"elroygohjy"},"content":"        person \u003d editedPerson;","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"elroygohjy"},"content":"        logic.executeSaveNote(person, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"elroygohjy"},"content":"        resultDisplay.setFeedbackToUser(generateSuccessMessage(MESSAGE_SAVE_NOTE_SUCCESS, person));","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"elroygohjy"},"content":"     * Checks if current Note is saved.","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"elroygohjy"},"content":"    private boolean isSave() {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"elroygohjy"},"content":"        return person.getNote().value.equals(noteTextArea.getText());","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"elroygohjy"},"content":"     * Exits the note window if note is saved or user wants to exit without saving. Shows confirmation window if","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"elroygohjy"},"content":"     * note is not saved.","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"elroygohjy"},"content":"    public void handleExit() {","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"elroygohjy"},"content":"        if (isSave()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"elroygohjy"},"content":"            exit();","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"elroygohjy"},"content":"        } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"elroygohjy"},"content":"            confirmationWindow.show();","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"elroygohjy"},"content":"     * Exits the note Window.","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"elroygohjy"},"content":"    public void exit() {","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"elroygohjy"},"content":"        getRoot().close();","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"elroygohjy"},"content":"        OPENED_NOTE_WINDOWS.remove(this);","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"elroygohjy"},"content":"        resultDisplay.setFeedbackToUser(generateSuccessMessage(MESSAGE_EXIT_NOTE_SUCCESS, person));","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"elroygohjy"},"content":"     * Exits and saves the note window.","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"elroygohjy"},"content":"    public void handleSaveAndExit() throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"elroygohjy"},"content":"        handleSave();","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"elroygohjy"},"content":"        handleExit();","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"elroygohjy"},"content":"    private void timeStampNote() {","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"elroygohjy"},"content":"        int noOfCharsTillCursor \u003d noteTextArea.getCaretPosition();","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"elroygohjy"},"content":"        String noteBeforeLine \u003d noOfCharsTillCursor \u003d\u003d 0 ? \"\" : noteTextArea.getText(0, noOfCharsTillCursor);","lastModifiedDate":"2021-10-11"},{"lineNumber":176,"author":{"gitId":"elroygohjy"},"content":"        String noteAfterLine \u003d noteTextArea.getText(noOfCharsTillCursor, noteTextArea.getLength());","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"elroygohjy"},"content":"        String dateTime \u003d DateUtil.getCurrentDateTime();","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"elroygohjy"},"content":"        noteTextArea.setText(noteBeforeLine + dateTime + noteAfterLine);","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"elroygohjy"},"content":"        noteTextArea.selectPositionCaret(noOfCharsTillCursor + dateTime.length());","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"elroygohjy"},"content":"        noteTextArea.deselect();","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"elroygohjy"},"content":"     * Reads user key event. Saves on pressing CTRL + S. Exits on pressing CTRL + W. Exits and saves on pressing","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"elroygohjy"},"content":"     * CTRL + Q. TimeStamps on the current line when CTRL + T is pressed.","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"elroygohjy"},"content":"     * @param event User key Event","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"kaixin-hc"},"content":"     * @see seedu.notor.logic.Logic#executeSaveNote(Person, Person)","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"elroygohjy"},"content":"    public void handleOnKeyPressed(KeyEvent event) throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"elroygohjy"},"content":"        if (SAVE_KEY.match(event)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"elroygohjy"},"content":"            handleSave();","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"elroygohjy"},"content":"        if (EXIT_AND_SAVE_KEY.match(event)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"elroygohjy"},"content":"            handleSaveAndExit();","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"elroygohjy"},"content":"        if (EXIT_KEY.match(event)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"elroygohjy"},"content":"            handleExit();","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"elroygohjy"},"content":"            return;","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"elroygohjy"},"content":"        if (TIME_STAMP_KEY.match(event)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"elroygohjy"},"content":"            timeStampNote();","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"elroygohjy"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"elroygohjy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"elroygohjy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"elroygohjy"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"elroygohjy"},"content":"        if (!(other instanceof NoteWindow)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"elroygohjy"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":220,"author":{"gitId":"elroygohjy"},"content":"        NoteWindow otherPerson \u003d (NoteWindow) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":221,"author":{"gitId":"elroygohjy"},"content":"        return otherPerson.person.equals(this.person);","lastModifiedDate":"2021-10-08"},{"lineNumber":222,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":223,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":225,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kaixin-hc":6,"elroygohjy":218,"Yukun99":1}},{"path":"src/main/java/seedu/notor/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"    private Label note;","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"    private Label noteLastModified;","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"    private VBox vBox;","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"    @FXML","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    private Label groups;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    private Label subGroups;","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"EltonGohJH"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"elroygohjy"},"content":"        if (!person.getNoteSavedDate().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"elroygohjy"},"content":"            note.setText(person.getNote().getNoEmptyLineNote());","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"            noteLastModified.setText(person.getNoteSavedDate());","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"elroygohjy"},"content":"            noteLastModified.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"elroygohjy"},"content":"        } else {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"elroygohjy"},"content":"            vBox.setManaged(false);","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"elroygohjy"},"content":"            note.setManaged(false);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"elroygohjy"},"content":"            noteLastModified.setManaged(false);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"        groups.setText(Arrays.toString(person.getSuperGroups().toArray()));","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"        subGroups.setText(Arrays.toString(person.getDisplaySubGroups().toArray()));","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kaixin-hc":2,"elroygohjy":16,"EltonGohJH":7,"Yukun99":1,"-":72}},{"path":"src/main/java/seedu/notor/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kaixin-hc":3,"-":46}},{"path":"src/main/java/seedu/notor/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kaixin-hc":1,"-":27}},{"path":"src/main/java/seedu/notor/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":1,"-":27}},{"path":"src/main/java/seedu/notor/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":3,"-":11}},{"path":"src/main/java/seedu/notor/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.MainApp;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.Logic;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    private final Logic logic;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":1,"-":83}},{"path":"src/main/java/seedu/notor/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.MainApp;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":6,"-":85}},{"path":"src/main/java/seedu/notor/ui/WarningWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"import javafx.scene.text.TextFlow;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"import javafx.stage.Modality;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"public class WarningWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"    private static final String FXML \u003d \"WarningWindow.fxml\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    private boolean canContinue;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    private TextFlow textFlow;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"     * Creates a Warning Window if user attempts to delete Person or clear Notor.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"     * @param message of Warning Window.","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"    public WarningWindow(String message) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"        super(FXML);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"        this.canContinue \u003d false;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"        Text text \u003d new Text(message);","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"        textFlow.getChildren().add(text);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setTitle(\"Warning\");","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"        getRoot().initModality(Modality.APPLICATION_MODAL);","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        getRoot().setResizable(false);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"     * Shows Warning Window.","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"    public void show() {","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"        getRoot().showAndWait();","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"     * Saves and exits both Warning Window upon clicking continue button.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"     * @throws CommandException commandException","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"    public void onClickContinue() throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"        getRoot().close();","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"        canContinue \u003d true;","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"    public boolean canContinue() {","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":"        return canContinue;","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"elroygohjy"},"content":"     * Exits Warning Window upon clicking cancel button.","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"elroygohjy"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"elroygohjy"},"content":"    @FXML","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"elroygohjy"},"content":"    public void onClickCancel() {","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"        getRoot().close();","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"elroygohjy":64}},{"path":"src/main/resources/view/ConfirmationWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.control.ButtonBar?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\u003cStage xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"        \u003cScene stylesheets\u003d\"@GeneralWindow.css\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"            \u003cAnchorPane prefHeight\u003d\"151.0\" prefWidth\u003d\"385.0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"               \u003cTextFlow fx:id\u003d\"textFlow\" layoutX\u003d\"14.0\" layoutY\u003d\"27.0\" prefHeight\u003d\"71.0\" prefWidth\u003d\"373.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"               \u003cButtonBar layoutY\u003d\"112.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #ECECEC;\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"                  \u003cbuttons\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"                     \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickSave\" text\u003d\"Save\" translateX\u003d\"-10.0\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"                           \u003cFont name\u003d\"Calibri\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"                     \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickDoNotSave\" text\u003d\"Don\u0027t Save\" translateX\u003d\"-10.0\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"                           \u003cFont name\u003d\"Calibri\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"                     \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickCancel\" prefHeight\u003d\"22.0\" text\u003d\"Return to note\" translateX\u003d\"-10.0\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"                           \u003cFont name\u003d\"Calibri\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"                  \u003c/buttons\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"               \u003c/ButtonBar\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"         \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"elroygohjy"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"elroygohjy"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"\u003c/Stage\u003e","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"elroygohjy":50}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"elroygohjy"},"content":".","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"    -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"elroygohjy"},"content":".text_area {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"elroygohjy"},"content":"    -fx-control-inner-background: \u0027#808080\u0027;","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"elroygohjy"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"elroygohjy"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"elroygohjy"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"elroygohjy"},"content":"    -fx-focus-color: -fx-control-inner-background;","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"elroygohjy"},"content":"    -fx-faint-focus-color: -fx-control-inner-background;","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"elroygohjy"},"content":"    -fx-text-box-border: -fx-control-inner-background;","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"elroygohjy"},"content":"    -fx-border-width: 5px;","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"elroygohjy":12,"Yukun99":1,"-":346}},{"path":"src/main/resources/view/GeneralWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"#textFlow \u003e Text {","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"    -fx-fill: #2E5984;","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"    -fx-font-size : 18px;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":".button {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"  -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"  -fx-font-size : 12px;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"elroygohjy":11}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                            \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                            \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"Yukun99":3,"-":42}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\"/\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                           minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"                \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\"","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"                      VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                        \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Yukun99":4,"-":57}},{"path":"src/main/resources/view/NoteWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"\u003cStage xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"         \u003cVBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"                  \u003cAnchorPane prefHeight\u003d\"0.0\" prefWidth\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"               \u003cMenuBar prefHeight\u003d\"25.0\" prefWidth\u003d\"470.0\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"                  \u003cmenus\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"                     \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"                        \u003citems\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"                           \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Save\" onAction\u003d\"#handleSave\"/\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"                           \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\" onAction\u003d\"#handleExit\"/\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/items\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"                     \u003c/Menu\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"                  \u003c/menus\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"                  \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"                     \u003cInsets /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"                  \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"               \u003c/MenuBar\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"               \u003cTextArea fx:id\u003d\"noteTextArea\" onKeyPressed\u003d\"#handleOnKeyPressed\" prefHeight\u003d\"326.0\" prefWidth\u003d\"600.0\" text\u003d\"\u0026#10;\u0026#10;\u0026#10;\u0026#10;\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"                     \u003cFont name\u003d\"Calibri\" size\u003d\"13.0\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"               \u003c/TextArea\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"\u003c/Stage\u003e","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"elroygohjy":42}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" prefHeight\u003d\"195.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"         \u003cVBox fx:id\u003d\"vBox\" prefHeight\u003d\"105.0\" prefWidth\u003d\"130.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"               \u003cLabel fx:id\u003d\"note\" alignment\u003d\"TOP_LEFT\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"90.0\" prefWidth\u003d\"130.0\" style\u003d\"-fx-background-color: #808080; -fx-background-radius: 5 5 0 0;\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"                  \u003cLabel fx:id\u003d\"noteLastModified\" maxWidth\u003d\"Infinity\" nodeOrientation\u003d\"RIGHT_TO_LEFT\" prefHeight\u003d\"17.0\" prefWidth\u003d\"200.0\" style\u003d\"-fx-background-color: #888888; -fx-background-radius: 0 0 5 5;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$noteLastSaved\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"EltonGohJH"},"content":"            \u003cLabel fx:id\u003d\"groups\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$groups\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"            \u003cLabel fx:id\u003d\"subGroups\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$subGroups\" /\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"elroygohjy"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"elroygohjy"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"elroygohjy":15,"EltonGohJH":2,"-":30}},{"path":"src/main/resources/view/WarningWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elroygohjy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.control.ButtonBar?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.scene.text.TextFlow?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"elroygohjy"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"elroygohjy"},"content":"\u003cStage xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"        \u003cScene stylesheets\u003d\"@GeneralWindow.css\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"            \u003cAnchorPane prefHeight\u003d\"151.0\" prefWidth\u003d\"368.0\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"               \u003cTextFlow fx:id\u003d\"textFlow\" layoutX\u003d\"19.0\" layoutY\u003d\"29.0\" prefHeight\u003d\"71.0\" prefWidth\u003d\"330.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"               \u003cButtonBar layoutY\u003d\"112.0\" prefHeight\u003d\"40.0\" prefWidth\u003d\"368.0\" style\u003d\"-fx-background-color: #ECECEC;\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"                  \u003cbuttons\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"                     \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickContinue\" text\u003d\"Continue\" translateX\u003d\"-10.0\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"elroygohjy"},"content":"                           \u003cFont name\u003d\"Calibri\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"elroygohjy"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"elroygohjy"},"content":"                     \u003cButton mnemonicParsing\u003d\"false\" onAction\u003d\"#onClickCancel\" text\u003d\"Cancel\" translateX\u003d\"-10.0\"\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"elroygohjy"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"                           \u003cFont name\u003d\"Calibri\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"                     \u003c/Button\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"                  \u003c/buttons\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"               \u003c/ButtonBar\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"            \u003c/children\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"         \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"elroygohjy"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"\u003c/Stage\u003e","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"elroygohjy":42}},{"path":"src/test/data/JsonNotorStorageTest/invalidAndValidPersonNotor.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    \"note\" : \"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    \"note\" : \"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"  \"superGroups\" : [ ]","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EltonGohJH":12,"-":10}},{"path":"src/test/data/JsonNotorStorageTest/invalidPersonNotor.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    \"note\" : \"\",","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"  } ],","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"  \"superGroups\" : [ ]","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EltonGohJH":7,"-":6}},{"path":"src/test/data/JsonSerializableNotorTest/duplicatePersonNotor.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"    \"note\" : \"\",","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"    \"noteDate\" : \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"    \"note\" : \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"    \"noteDate\" : \"\",","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"  \"superGroups\" : [ ]","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"elroygohjy":3,"Yukun99":1,"EltonGohJH":8,"-":10}},{"path":"src/test/data/JsonSerializableNotorTest/invalidPersonNotor.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"    \"note\" : \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"  \"superGroups\" : [ ]","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"EltonGohJH":7,"-":5}},{"path":"src/test/data/JsonSerializableNotorTest/typicalPersonsNotor.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"  \"_comment\": \"Notor save file which contains the same Person values as in TypicalPersons#getTypicalNotor()\",","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"    \"note\": \"She lives in the Wonderland.\",","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"    \"noteDate\": \"Thu., 11/11/2011\",","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"    \"note\": \"He is Ben\u0027s son.\",","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"    \"noteDate\":\"Fri, 11/11/2010\",","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"    \"superGroups\" : [ \"Orbital\", \"CS2103\" ],","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"    \"subGroups\" : [ \"Orbital_Group1\" ]","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    \"note\": \"\",","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"elroygohjy"},"content":"    \"noteDate\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"    \"note\": \"\",","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"    \"noteDate\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"    \"note\": \"\",","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"    \"noteDate\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"    \"note\": \"\",","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"elroygohjy"},"content":"    \"noteDate\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"    \"note\": \"\",","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"elroygohjy"},"content":"    \"noteDate\": \"\",","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"    \"superGroups\" : [ ],","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"  } ],","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"kaixin-hc"},"content":"  \"superGroups\" : [ {","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"kaixin-hc"},"content":"    \"name\" : \"Orbital\",","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"    \"subGroups\" : [ {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"kaixin-hc"},"content":"      \"name\" : \"Group1\",","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"kaixin-hc"},"content":"      \"parent\" : \"Orbital\"","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"kaixin-hc"},"content":"    } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"  }, {","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"    \"name\" : \"CS2103\",","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"    \"subGroups\" : [ ]","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"  } ]","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaixin-hc":13,"elroygohjy":5,"EltonGohJH":24,"Yukun99":5,"-":30}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\": 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\": 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\": \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\": 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\": 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\": 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"  \"notor\": \"notor.json\"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kaixin-hc":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\": 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\": 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\": {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\": 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\": 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"  \"notorFilePath\": \"data/notor.json\"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kaixin-hc":1,"-":10}},{"path":"src/test/java/seedu/notor/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":1,"-":56}},{"path":"src/test/java/seedu/notor/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        assertEquals(defaultConfig, defaultConfig);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":1,"-":21}},{"path":"src/test/java/seedu/notor/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        assertTrue(version.isEarlyAccess());","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        assertEquals(0, one.compareTo(another));","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"        assertEquals(0, one.compareTo(another));","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"        assertEquals(one, another);","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"Yukun99"},"content":"        assertEquals(one, another);","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":5,"-":128}},{"path":"src/test/java/seedu/notor/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.core.index;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        assertEquals(fifthPersonIndex, Index.fromOneBased(5));","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        assertEquals(fifthPersonIndex, Index.fromZeroBased(4));","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        assertEquals(fifthPersonIndex, fifthPersonIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, fifthPersonIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(5.0f, fifthPersonIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(fifthPersonIndex, Index.fromOneBased(1));","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":7,"-":50}},{"path":"src/test/java/seedu/notor/commons/core/trie/TrieTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.commons.core.trie;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.testutil.TypicalTries;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":" * Implementation of a Trie data structure for command and tag autocompletion.","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"public class TrieTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"    private final Map\u003cString, Integer\u003e testMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"    private void setup() {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        Trie.setup();","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"    private void setupOneElement() {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        setup();","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"        testMap.put(\"aaaaa\", 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"    private void setupTwoElements() {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        setup();","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        setupOneElement();","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        testMap.put(\"bbbbb\", 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    private void setupOneElementTwoCount() {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        setup();","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        testMap.put(\"aaaaa\", 2);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"    public void addItem() {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        setupOneElement();","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        Trie testTrie \u003d TypicalTries.getTypicalTries().get(0);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        testTrie.add(\"aaaaa\");","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        assertEquals(testTrie.toString(), testMap.keySet().toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"    public void deleteItem_singleItemTrie_success() throws IllegalValueException {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        setupOneElement();","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        testMap.remove(\"aaaaa\");","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        Trie testTrie \u003d TypicalTries.getTypicalTries().get(1);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        testTrie.remove(\"aaaaa\");","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"        assertEquals(testTrie.toString(), testMap.keySet().toString());","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"    public void deleteItem_singleItemTrie_fail() {","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"        Trie testTrie \u003d TypicalTries.getTypicalTries().get(0);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"        assertThrows(IllegalValueException.class, () -\u003e testTrie.remove(\"abc\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"    public void findItem_twoItemTrie_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        setup();","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        Trie testTrie \u003d TypicalTries.getTypicalTries().get(2);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"        assertEquals(\"aaaaa\", testTrie.findSingle(\"aa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"        assertEquals(\"bbbbb\", testTrie.findSingle(\"b\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"        assertEquals(\"bbbbb\", testTrie.findSingle(\"bbbbb\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"    public void findAllItems_fourItemTrie_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"        setup();","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Yukun99"},"content":"        Trie testTrie \u003d TypicalTries.getTypicalTries().get(3);","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"Yukun99"},"content":"        List\u003cString\u003e expectedSuccess \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Yukun99"},"content":"        expectedSuccess.add(\"aaaaa\");","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Yukun99"},"content":"        expectedSuccess.add(\"aaabb\");","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"Yukun99"},"content":"        assertEquals(expectedSuccess, testTrie.findAllMatches(\"aaa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Yukun99"},"content":"        // Try searching with wider bounds.","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Yukun99"},"content":"        expectedSuccess.add(\"aabbb\");","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Yukun99"},"content":"        assertEquals(expectedSuccess, testTrie.findAllMatches(\"aa\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"    public void findAllItem_fourItemTrie_fail() {","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"        setup();","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"        Trie testTrie \u003d TypicalTries.getTypicalTries().get(3);","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"        List\u003cString\u003e expectedFail \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Yukun99"},"content":"        assertEquals(expectedFail, testTrie.findAllMatches(\"abc\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":94}},{"path":"src/test/java/seedu/notor/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kaixin-hc":2,"-":34}},{"path":"src/test/java/seedu/notor/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", 1));","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":1,"-":104}},{"path":"src/test/java/seedu/notor/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.Config;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kaixin-hc":4,"-":112}},{"path":"src/test/java/seedu/notor/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":2,"-":21}},{"path":"src/test/java/seedu/notor/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.TestUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":3,"-":42}},{"path":"src/test/java/seedu/notor/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.commons.util;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"@SuppressWarnings(\"NumericOverflow\")","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"    // @formatter:off","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"    // @formatter:off","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":3,"-":141}},{"path":"src/test/java/seedu/notor/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.CommandResult;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.Executor;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.JsonNotorStorage;","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.storage.StorageManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"kaixin-hc"},"content":"        JsonNotorStorage notorStorage \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"                new JsonNotorStorage(temporaryFolder.resolve(\"notor.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"        StorageManager storage \u003d new StorageManager(notorStorage, userPrefsStorage);","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        Executor.setup(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"        String deleteCommand \u003d \"person 9 /delete\";","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"        assertExecuteException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"    // TODO: Add this back when list command is supported","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"    //    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"    //    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"    //        String listCommand \u003d \"person /list\";","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"    //        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"EltonGohJH"},"content":"    //    }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"kaixin-hc"},"content":"        // Setup LogicManager with JsonNotorIoExceptionThrowingStub","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"kaixin-hc"},"content":"        JsonNotorStorage notorStorage \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"kaixin-hc"},"content":"                new JsonNotorIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionNotor.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"kaixin-hc"},"content":"        StorageManager storage \u003d new StorageManager(notorStorage, userPrefsStorage);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"        String addCommand \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"                PersonCommand.COMMAND_WORD + \" \" + VALID_NAME_AMY + \" /\" + PersonCreateCommand.COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"                        + PHONE_DESC_AMY + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"        expectedModel.createPerson(expectedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"Yukun99"},"content":"     * @see #assertExecuteFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"Yukun99"},"content":"            Model expectedModel) throws CommandException, ParseException, ExecuteException {","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"Yukun99"},"content":"     * @see #assertExecuteFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"Yukun99"},"content":"     * Executes the command, confirms that a ExecuteException is thrown and that the result message is correct.","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"Yukun99"},"content":"     * @see #assertExecuteFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"Yukun99"},"content":"    private void assertExecuteException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(inputCommand, ExecuteException.class, expectedMessage);","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"Yukun99"},"content":"     * @see #assertExecuteFailure(String, Class, String, Model)","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"Yukun99"},"content":"    private void assertExecuteFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"kaixin-hc"},"content":"        Model expectedModel \u003d new ModelManager(model.getNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"Yukun99"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"Yukun99"},"content":"    private void assertExecuteFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"kaixin-hc"},"content":"    private static class JsonNotorIoExceptionThrowingStub extends JsonNotorStorage {","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"kaixin-hc"},"content":"        private JsonNotorIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"kaixin-hc"},"content":"        public void saveNotor(ReadOnlyNotor notor, Path filePath) throws IOException {","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"kaixin-hc":29,"Yukun99":31,"EltonGohJH":8,"-":104}},{"path":"src/test/java/seedu/notor/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"    public void execute_emptyNotor_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"        CommandTestUtil.assertExecuteSuccess(new ClearCommandStub(), model, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"                expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"    public void execute_nonEmptyNotor_success() {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"        Model model \u003d new ModelManager(getTypicalNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"        expectedModel.setNotor(new Notor());","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        CommandTestUtil.assertExecuteSuccess(new ClearCommandStub(), model, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"elroygohjy"},"content":"                expectedModel);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"    private static class ClearCommandStub extends ClearCommand {","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"elroygohjy"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"elroygohjy"},"content":"        public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"elroygohjy"},"content":"            requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"elroygohjy"},"content":"            model.setNotor(new Notor());","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"elroygohjy"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kaixin-hc":11,"elroygohjy":13,"-":18}},{"path":"src/test/java/seedu/notor/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"elroygohjy"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\", false, false, null, false));","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"        assertEquals(commandResult, commandResult);","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, commandResult);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(0.5f, commandResult);","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(commandResult, new CommandResult(\"different\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"        assertNotEquals(commandResult, new CommandResult(\"feedback\", true, false, null, false));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"elroygohjy"},"content":"        assertNotEquals(commandResult, new CommandResult(\"feedback\", false, false, null, true));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"elroygohjy"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, null, false).hashCode());","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"elroygohjy"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, null, true).hashCode());","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"kaixin-hc":1,"elroygohjy":5,"Yukun99":5,"-":41}},{"path":"src/test/java/seedu/notor/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonEditDescriptorBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"EltonGohJH"},"content":"    // TODO: Change name to fullname after Yukun fix bug.","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"EltonGohJH"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy\";","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob\";","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    public static final String INVALID_NAME_JAMES \u003d \"James\u0026\";","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    public static final String VALID_NOTE_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    public static final String VALID_NOTE_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"    public static final String TAG_MULTIPLE_TAGS \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND + \", \" + VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"    public static final PersonEditExecutor.PersonEditDescriptor DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"    public static final PersonEditExecutor.PersonEditDescriptor DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"        DESC_AMY \u003d new PersonEditDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"                .build();","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        DESC_BOB \u003d new PersonEditDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"                .build();","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"Yukun99"},"content":"    public static void assertExecuteSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"Yukun99"},"content":"        } catch (CommandException | ExecuteException ce) {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"     * Convenience wrapper to {@link #assertExecuteSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"Yukun99"},"content":"    public static void assertExecuteSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"Yukun99"},"content":"        assertExecuteSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"     * - the ExecuteException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"kaixin-hc"},"content":"     * - the Notor, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"Yukun99"},"content":"    public static void assertExecuteFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"kaixin-hc"},"content":"        Notor expectedNotor \u003d new Notor(actualModel.getNotor());","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"Yukun99"},"content":"        assertThrows(ExecuteException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(expectedNotor, actualModel.getNotor());","lastModifiedDate":"2021-10-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"kaixin-hc"},"content":"     * {@code model}\u0027s Notor.","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(List.of(splitName[0])));","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kaixin-hc":19,"EltonGohJH":6,"Yukun99":20,"-":84}},{"path":"src/test/java/seedu/notor/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.assertExecuteSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, false, null, true);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"        assertExecuteSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kaixin-hc":5,"elroygohjy":2,"Yukun99":2,"-":11}},{"path":"src/test/java/seedu/notor/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"    private final Model model \u003d new ModelManager(getTypicalNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kaixin-hc":12,"Yukun99":8,"-":61}},{"path":"src/test/java/seedu/notor/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.assertExecuteSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, null, false);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"elroygohjy"},"content":"        assertExecuteSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kaixin-hc":5,"elroygohjy":2,"Yukun99":2,"-":11}},{"path":"src/test/java/seedu/notor/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"        model \u003d new ModelManager(getTypicalNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"        expectedModel \u003d new ModelManager(model.getNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kaixin-hc":9,"Yukun99":2,"-":27}},{"path":"src/test/java/seedu/notor/logic/commands/PersonCreateCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.assertExecuteFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.Executor;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonCreateExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"public class PersonCreateCommandIntegrationTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"        model \u003d new ModelManager(getTypicalNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        Executor.setup(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"    public void execute_newPerson_success() throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"kaixin-hc"},"content":"        Model expectedModel \u003d new ModelManager(model.getNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        expectedModel.createPerson(validPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(new PersonCreateCommand(null, validPerson), model,","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"                String.format(PersonCreateExecutor.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"    public void execute_duplicatePerson_throwsCommandException() throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"kaixin-hc"},"content":"        Person personInList \u003d model.getNotor().getPersonList().get(0);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(new PersonCreateCommand(null, personInList), model,","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"                PersonCreateExecutor.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kaixin-hc":15,"Yukun99":9,"-":26}},{"path":"src/test/java/seedu/notor/logic/commands/PersonCreateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.Executor;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonCreateExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"public class PersonCreateCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PersonCreateCommand(null, null));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        Executor.setup(modelStub);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        CommandResult commandResult \u003d new PersonCreateCommand(null, validPerson).execute(modelStub);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        assertEquals(String.format(PersonCreateExecutor.MESSAGE_SUCCESS, validPerson),","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"    // @formatter:off","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"    public void execute_duplicatePerson_throwsCommandException() throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        PersonCreateCommand personCreateCommand \u003d new PersonCreateCommand(null, validPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"        Executor.setup(modelStub);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"        assertThrows(ExecuteException.class, PersonCreateExecutor.MESSAGE_DUPLICATE_PERSON, ()","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"            -\u003e personCreateCommand.execute(modelStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"        PersonCreateCommand addAliceCommand \u003d new PersonCreateCommand(null, alice);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"        PersonCreateCommand addBobCommand \u003d new PersonCreateCommand(null, bob);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"        PersonCreateCommand addAliceCommandCopy \u003d new PersonCreateCommand(null, alice);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"kaixin-hc"},"content":"        public Path getNotorFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"kaixin-hc"},"content":"        public void setNotorFilePath(Path notorFilePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"        public void createPerson(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"EltonGohJH"},"content":"        public Person findPerson(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"EltonGohJH"},"content":"            return null;","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"EltonGohJH"},"content":"        public boolean hasSuperGroup(SuperGroup superGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"EltonGohJH"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"EltonGohJH"},"content":"        public void addSuperGroup(SuperGroup superGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"EltonGohJH"},"content":"        public void addSuperGroup(String superGroup) {","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"EltonGohJH"},"content":"        public void deleteSuperGroup(SuperGroup superGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"Yukun99"},"content":"        public Group findGroup(String name) {","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"EltonGohJH"},"content":"            return null;","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"kaixin-hc"},"content":"        public void setNotor(ReadOnlyNotor newData) {","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"kaixin-hc"},"content":"        public ReadOnlyNotor getNotor() {","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"EltonGohJH"},"content":"        public ObservableList\u003cSuperGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"EltonGohJH"},"content":"            return null;","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":198,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"EltonGohJH"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"Yukun99"},"content":"            return this.person.isSame(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"Yukun99"},"content":"            return personsAdded.stream().anyMatch(person::isSame);","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"Yukun99"},"content":"        public void createPerson(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"kaixin-hc"},"content":"        public ReadOnlyNotor getNotor() {","lastModifiedDate":"2021-10-14"},{"lineNumber":243,"author":{"gitId":"kaixin-hc"},"content":"            return new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kaixin-hc":21,"Yukun99":23,"EltonGohJH":39,"-":164}},{"path":"src/test/java/seedu/notor/logic/commands/PersonDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"elroygohjy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.assertExecuteFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.assertExecuteSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.Executor;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"elroygohjy"},"content":"import seedu.notor.logic.executors.exceptions.ExecuteException;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonDeleteExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"public class PersonDeleteCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"    private final Model model \u003d new ModelManager(getTypicalNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        Executor.setup(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"elroygohjy"},"content":"        PersonDeleteCommand deleteCommand \u003d new PersonDeleteCommandStub(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        String expectedMessage \u003d String.format(PersonDeleteExecutor.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"elroygohjy"},"content":"        PersonDeleteCommand deleteCommand \u003d new PersonDeleteCommandStub(outOfBoundIndex);","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"elroygohjy"},"content":"        PersonDeleteCommand deleteCommand \u003d new PersonDeleteCommandStub(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"        String expectedMessage \u003d String.format(PersonDeleteExecutor.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"kaixin-hc"},"content":"        Model expectedModel \u003d new ModelManager(model.getNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"        assertExecuteSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"kaixin-hc"},"content":"        // ensures that outOfBoundIndex is still in bounds of notor list","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"kaixin-hc"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNotor().getPersonList().size());","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"        PersonDeleteCommand deleteCommand \u003d new PersonDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"Yukun99"},"content":"        PersonDeleteCommand deleteFirstCommand \u003d new PersonDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"Yukun99"},"content":"        PersonDeleteCommand deleteSecondCommand \u003d new PersonDeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"Yukun99"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"        PersonDeleteCommand deleteFirstCommandCopy \u003d new PersonDeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"elroygohjy"},"content":"    private static class PersonDeleteExecutorStub extends PersonDeleteExecutor {","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"elroygohjy"},"content":"        public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":125,"author":{"gitId":"elroygohjy"},"content":"        public PersonDeleteExecutorStub(Index index) {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"elroygohjy"},"content":"            super(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":128,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":129,"author":{"gitId":"elroygohjy"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"elroygohjy"},"content":"        public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-18"},{"lineNumber":131,"author":{"gitId":"elroygohjy"},"content":"            Person toBeDeletedPerson \u003d super.getPerson();","lastModifiedDate":"2021-10-18"},{"lineNumber":132,"author":{"gitId":"elroygohjy"},"content":"            model.deletePerson(toBeDeletedPerson);","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"elroygohjy"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, toBeDeletedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"elroygohjy"},"content":"    private static class PersonDeleteCommandStub extends PersonDeleteCommand {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"elroygohjy"},"content":"        private final PersonDeleteExecutorStub executor;","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"elroygohjy"},"content":"        /**","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"elroygohjy"},"content":"         * Constructor for a PersonDeleteCommand.","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"elroygohjy"},"content":"         *","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"elroygohjy"},"content":"         * @param index Index of the person to be deleted.","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"elroygohjy"},"content":"         */","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"elroygohjy"},"content":"        public PersonDeleteCommandStub(Index index) {","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"elroygohjy"},"content":"            super(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"elroygohjy"},"content":"            requireNonNull(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"elroygohjy"},"content":"            this.executor \u003d new PersonDeleteExecutorStub(index);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"elroygohjy"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"elroygohjy"},"content":"        public CommandResult execute() throws ExecuteException {","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"elroygohjy"},"content":"            return executor.execute();","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"elroygohjy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kaixin-hc":21,"elroygohjy":43,"Yukun99":24,"-":71}},{"path":"src/test/java/seedu/notor/logic/commands/PersonEditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.assertExecuteFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.Executor;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor.PersonEditDescriptor;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonEditDescriptorBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"public class PersonEditCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"kaixin-hc"},"content":"    private final Model model \u003d new ModelManager(getTypicalNotor(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"        Executor.setup(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        String expectedMessage \u003d String.format(PersonEditExecutor.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"        Model expectedModel \u003d new ModelManager(new Notor(model.getNotor()), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(personEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"Yukun99"},"content":"        String expectedMessage \u003d String.format(PersonEditExecutor.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"kaixin-hc"},"content":"        Model expectedModel \u003d new ModelManager(new Notor(model.getNotor()), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(personEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"                personEditCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON, new PersonEditDescriptor());","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"        String expectedMessage \u003d String.format(PersonEditExecutor.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"kaixin-hc"},"content":"        Model expectedModel \u003d new ModelManager(new Notor(model.getNotor()), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(personEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"Yukun99"},"content":"                new PersonEditDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"Yukun99"},"content":"        String expectedMessage \u003d String.format(PersonEditExecutor.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"kaixin-hc"},"content":"        Model expectedModel \u003d new ModelManager(new Notor(model.getNotor()), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"Yukun99"},"content":"        CommandTestUtil.assertExecuteSuccess(personEditCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(personEditCommand, model, PersonEditExecutor.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"kaixin-hc"},"content":"        // edit person in filtered list into a duplicate in notor","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"kaixin-hc"},"content":"        Person personInList \u003d model.getNotor().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"Yukun99"},"content":"                new PersonEditDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(personEditCommand, model, PersonEditExecutor.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(personEditCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"kaixin-hc"},"content":"     * but smaller than size of Notor","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"kaixin-hc"},"content":"        // ensures that outOfBoundIndex is still in bounds of notor list","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"kaixin-hc"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getNotor().getPersonList().size());","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand personEditCommand \u003d new PersonEditCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"Yukun99"},"content":"                new PersonEditDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"Yukun99"},"content":"        assertExecuteFailure(personEditCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"Yukun99"},"content":"        final PersonEditCommand standardCommand \u003d new PersonEditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor copyDescriptor \u003d new PersonEditDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"Yukun99"},"content":"                commandWithSameValues \u003d new PersonEditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"Yukun99"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"Yukun99"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(standardCommand, new PersonEditCommand(INDEX_SECOND_PERSON, DESC_AMY));","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(standardCommand, new PersonEditCommand(INDEX_FIRST_PERSON, DESC_BOB));","lastModifiedDate":"2021-10-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"kaixin-hc":34,"Yukun99":47,"-":103}},{"path":"src/test/java/seedu/notor/logic/commands/PersonEditDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor.PersonEditDescriptor;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonEditDescriptorBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"public class PersonEditDescriptorTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor descriptorWithSameValues \u003d new PersonEditDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"        assertEquals(DESC_AMY, descriptorWithSameValues);","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"        assertEquals(DESC_AMY, DESC_AMY);","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, DESC_AMY);","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(5, DESC_AMY);","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(DESC_AMY, DESC_BOB);","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"                editedAmy \u003d new PersonEditDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"        editedAmy \u003d new PersonEditDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"        editedAmy \u003d new PersonEditDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"        editedAmy \u003d new PersonEditDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(DESC_AMY, editedAmy);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kaixin-hc":9,"Yukun99":18,"-":27}},{"path":"src/test/java/seedu/notor/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"        assert argMultimap.getValue(prefix).isPresent();","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":1,"-":149}},{"path":"src/test/java/seedu/notor/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    public static void assertParseSuccess(Command commandCreated, Command expectedCommand) {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"        assertEquals(expectedCommand, commandCreated);","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    public static void assertParseFailure(NotorParser parser, String input, String expectedMessage) {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"            parser.parseCommand(input);","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"kaixin-hc":3,"EltonGohJH":3,"Yukun99":1,"-":26}},{"path":"src/test/java/seedu/notor/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"    // TODO: After find command is created","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    //    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    //    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    //        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    //        .MESSAGE_USAGE));","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    //    }","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    //","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    //    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"    //    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    //        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    //        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    //                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"    //        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    //","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"    //        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    //        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    //    }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"kaixin-hc":1,"Yukun99":3,"EltonGohJH":16,"-":7}},{"path":"src/test/java/seedu/notor/logic/parser/NotorParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonNoteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.testutil.PersonUtil;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"public class NotorParserTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"    private final NotorParser parser \u003d new NotorParser();","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        PersonCreateCommand command \u003d (PersonCreateCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        assertEquals(new PersonCreateCommand(null, person), command);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"EltonGohJH"},"content":"        PersonDeleteCommand command \u003d (PersonDeleteCommand) parser.parseCommand(\"person 1 /delete\");","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"elroygohjy"},"content":"        assertEquals(new PersonDeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"    // TODO: Elton cannot fix this. This is caused by tags being different in both commands.","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"    // One has empty optional, the other has optional with empty set.","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"    //    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"    //    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"    //        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"    //        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder(person).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"    //","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"    //        PersonEditCommand command \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"    //                (PersonEditCommand) parser.parseCommand(PersonUtil.getEditPersonDescriptorCommand(1, descriptor));","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"    //        assertEquals(new PersonEditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"    //    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"    // TODO: When find command is added","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"EltonGohJH"},"content":"    //    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"    //    public void parseCommand_find() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"    //        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"    //        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"EltonGohJH"},"content":"    //                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2021-10-18"},{"lineNumber":69,"author":{"gitId":"EltonGohJH"},"content":"    //        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"    //    }","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"    // TODO: When list command is added","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"    //    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"    //    public void parseCommand_list() throws Exception {","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"    //        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"    //        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"    //    }","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"Yukun99"},"content":"    @Test","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"    public void parseCommand_note() throws Exception {","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"elroygohjy"},"content":"        final Note note \u003d new Note(\"Test note\", \"\");","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"        PersonNoteCommand command \u003d (PersonNoteCommand) parser.parseCommand(\"person 1 /note\");","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"elroygohjy"},"content":"        assertEquals(new PersonNoteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"elroygohjy"},"content":"    // @formatter:off","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"Yukun99"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"Yukun99"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kaixin-hc":13,"elroygohjy":4,"Yukun99":20,"EltonGohJH":27,"-":39}},{"path":"src/test/java/seedu/notor/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"@SuppressWarnings(\"NumericOverflow\")","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"    // @formatter:off","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":156,"author":{"gitId":"Yukun99"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(VALID_TAG_1 + \",\" + INVALID_TAG));","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"Yukun99"},"content":"        assertTrue(ParserUtil.parseTags(\"\").isEmpty());","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"Yukun99"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(VALID_TAG_1 + \",\" + VALID_TAG_2);","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"Yukun99"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"kaixin-hc":7,"Yukun99":11,"-":153}},{"path":"src/test/java/seedu/notor/logic/parser/PersonCreateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"EltonGohJH"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.INVALID_NAME_JAMES;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.TAG_MULTIPLE_TAGS;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.logic.commands.person.PersonCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonCreateCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"Yukun99"},"content":"public class PersonCreateCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"EltonGohJH"},"content":"    private final NotorParser notorParser \u003d new NotorParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        String multiplePhones \u003d String.format(\"person %s /create%s%s%s%s\", VALID_NAME_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"                PHONE_DESC_AMY, PHONE_DESC_BOB, EMAIL_DESC_BOB, TAG_DESC_FRIEND);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(multiplePhones), new PersonCreateCommand(null, expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"EltonGohJH"},"content":"        String multipleEmails \u003d String.format(\"person %s /create%s%s%s%s\", VALID_NAME_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"EltonGohJH"},"content":"                PHONE_DESC_BOB, EMAIL_DESC_AMY, EMAIL_DESC_BOB, TAG_DESC_FRIEND);","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(multipleEmails), new PersonCreateCommand(null, expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"Yukun99"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"                .build();","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"        String multipleTags \u003d String.format(\"person %s /create%s%s%s\", VALID_NAME_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"                PHONE_DESC_BOB, EMAIL_DESC_BOB, TAG_MULTIPLE_TAGS);","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        assertParseSuccess(notorParser.parseCommand(multipleTags),","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"                new PersonCreateCommand(null, expectedPersonMultipleTags));","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"    public void parse_optionalFieldsMissing_success() throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"        String noTag \u003d PersonCommand.COMMAND_WORD + \" \" + VALID_NAME_BOB + \" /\" + PersonCreateCommand.COMMAND_WORD","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"Yukun99"},"content":"        Person expectedPerson \u003d new Person(BOB.getName(), BOB.getPhone(), BOB.getEmail(), new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(noTag), new PersonCreateCommand(null, expectedPerson));","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"EltonGohJH"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"        String noName \u003d String.format(\"person /create %s%s%s\", VALID_NAME_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"Yukun99"},"content":"                PHONE_DESC_BOB, EMAIL_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, noName, expectedMessage);","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"        String invalidCommand \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"        String invalidName \u003d String.format(\"person %s /create %s%s%s%s\", INVALID_NAME_JAMES,","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"                PHONE_DESC_AMY, PHONE_DESC_BOB, EMAIL_DESC_BOB, TAG_DESC_FRIEND);","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidName, invalidCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"        String invalidPhone \u003d String.format(\"person %s /create %s%s%s%s\", VALID_NAME_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"                PHONE_DESC_AMY, INVALID_PHONE_DESC, EMAIL_DESC_BOB, TAG_DESC_FRIEND);","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidPhone, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"EltonGohJH"},"content":"        String invalidEmail \u003d String.format(\"person %s /create %s%s%s%s\", VALID_NAME_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"                PHONE_DESC_AMY, PHONE_DESC_BOB, INVALID_EMAIL_DESC, TAG_DESC_FRIEND);","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidEmail, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"EltonGohJH"},"content":"        String invalidTag \u003d String.format(\"person %s /create %s%s%s%s\", VALID_NAME_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"                PHONE_DESC_AMY, PHONE_DESC_BOB, EMAIL_DESC_BOB, INVALID_TAG_DESC);","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidTag, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kaixin-hc":23,"EltonGohJH":27,"Yukun99":18,"-":36}},{"path":"src/test/java/seedu/notor/logic/parser/PersonDeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonDeleteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"public class PersonDeleteCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    private final NotorParser notorParser \u003d new NotorParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"    public void parse_validArgs_returnsDeleteCommand() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"EltonGohJH"},"content":"        String deleteFirstPerson \u003d \"person 1 /delete\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(deleteFirstPerson), new PersonDeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"        String invalidCommand \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"        String deleteFirstPerson \u003d \"person a /delete\";","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, deleteFirstPerson, invalidCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kaixin-hc":6,"Yukun99":2,"EltonGohJH":9,"-":19}},{"path":"src/test/java/seedu/notor/logic/parser/PersonEditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonEditCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor.PersonEditDescriptor;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonEditDescriptorBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"public class PersonEditCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"EltonGohJH"},"content":"    private final NotorParser notorParser \u003d new NotorParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        String invalidCommand \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"EltonGohJH"},"content":"        String noIndex \u003d String.format(\"person /edit%s\", NAME_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, noIndex, invalidCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"EltonGohJH"},"content":"        String noField \u003d \"person 1 /edit\";","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, noField, PersonEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"EltonGohJH"},"content":"        String noIndexField \u003d \"person /edit\";","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, noIndexField, invalidCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"EltonGohJH"},"content":"        String invalidCommand \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"EltonGohJH"},"content":"        String negativeIndex \u003d String.format(\"person -1 /edit%s\", NAME_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, negativeIndex, invalidCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"        String zeroIndex \u003d String.format(\"person -1 /edit%s\", NAME_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, zeroIndex, invalidCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"EltonGohJH"},"content":"        String invalidIndex \u003d String.format(\"person 1 some random string /edit%s\", NAME_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidIndex, invalidCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"        String invalidPrefix \u003d String.format(\"person 1 n:apple /edit%s\", NAME_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidPrefix, invalidCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"        // invalid Name","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"        String invalidName \u003d String.format(\"person 1 /edit%s\", INVALID_NAME_DESC);","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidName, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"        // invalid phone","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"        String invalidPhone \u003d String.format(\"person 1 /edit%s\", INVALID_PHONE_DESC);","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidPhone, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"        // invalid email","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"        String invalidEmail \u003d String.format(\"person 1 /edit%s\", INVALID_EMAIL_DESC);","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidEmail, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"EltonGohJH"},"content":"        String invalidPhoneValidTag \u003d String.format(\"person 1 /edit%s%s\", PHONE_DESC_BOB, VALID_EMAIL_AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidPhoneValidTag, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"EltonGohJH"},"content":"        // valid phone followed by invalid phone.","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"EltonGohJH"},"content":"        String invalidPhoneValidPhone \u003d String.format(\"person 1 /edit%s%s\", PHONE_DESC_BOB, INVALID_PHONE_DESC);","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, invalidPhoneValidPhone, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"EltonGohJH"},"content":"        String multipleInvalid \u003d String.format(\"person 1 /edit%s%s%s\", INVALID_NAME_DESC, PHONE_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"EltonGohJH"},"content":"                INVALID_PHONE_DESC);","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"        assertParseFailure(notorParser, multipleInvalid, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"EltonGohJH"},"content":"    public void parse_allFieldsSpecified_success() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":108,"author":{"gitId":"EltonGohJH"},"content":"        String allFields \u003d String.format(\"person 2 /edit%s%s%s\", PHONE_DESC_BOB,","lastModifiedDate":"2021-10-18"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"                EMAIL_DESC_AMY, NAME_DESC_AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"EltonGohJH"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(allFields), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"EltonGohJH"},"content":"    public void parse_someFieldsSpecified_success() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":122,"author":{"gitId":"EltonGohJH"},"content":"        String someFields \u003d String.format(\"person 2 /edit%s%s\", PHONE_DESC_BOB, NAME_DESC_AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":123,"author":{"gitId":"EltonGohJH"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"EltonGohJH"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"EltonGohJH"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(someFields), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"EltonGohJH"},"content":"    public void parse_oneFieldSpecified_success() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"Yukun99"},"content":"        // name","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"EltonGohJH"},"content":"        String validName \u003d String.format(\"person 3 /edit%s\", NAME_DESC_AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(validName), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"EltonGohJH"},"content":"        String validPhone \u003d String.format(\"person 3 /edit%s\", PHONE_DESC_AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"Yukun99"},"content":"        descriptor \u003d new PersonEditDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"Yukun99"},"content":"        expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(validPhone), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"EltonGohJH"},"content":"        String validEmail \u003d String.format(\"person 3 /edit%s\", EMAIL_DESC_AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"Yukun99"},"content":"        descriptor \u003d new PersonEditDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"Yukun99"},"content":"        expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(validEmail), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"EltonGohJH"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"EltonGohJH"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"EltonGohJH"},"content":"        String validEmail \u003d String.format(\"person 3 /edit%s%s%s%s\",","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"EltonGohJH"},"content":"                PHONE_DESC_BOB, PHONE_DESC_AMY, EMAIL_DESC_BOB, EMAIL_DESC_AMY);","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"EltonGohJH"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder().withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"EltonGohJH"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(validEmail), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"EltonGohJH"},"content":"    public void parse_invalidValueFollowedByValidValue_success() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":170,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"Yukun99"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"EltonGohJH"},"content":"        String invalidPhoneValidPhone \u003d String.format(\"person 1 /edit%s%s\", INVALID_PHONE_DESC, PHONE_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"Yukun99"},"content":"        PersonEditDescriptor descriptor \u003d new PersonEditDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"Yukun99"},"content":"        PersonEditCommand expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":175,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(invalidPhoneValidPhone), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"EltonGohJH"},"content":"        String otherValid \u003d String.format(\"person 1 /edit%s%s%s\", EMAIL_DESC_BOB, INVALID_PHONE_DESC, PHONE_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":179,"author":{"gitId":"Yukun99"},"content":"        descriptor \u003d new PersonEditDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-11"},{"lineNumber":180,"author":{"gitId":"Yukun99"},"content":"        expectedCommand \u003d new PersonEditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(otherValid), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"kaixin-hc":26,"EltonGohJH":73,"Yukun99":21,"-":63}},{"path":"src/test/java/seedu/notor/logic/parser/PersonNoteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.logic.parser;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"elroygohjy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.commands.person.PersonNoteCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"elroygohjy"},"content":"public class PersonNoteCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"    private final NotorParser notorParser \u003d new NotorParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"elroygohjy"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"elroygohjy"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"    public void parse_indexSpecified_success() throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"elroygohjy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"elroygohjy"},"content":"        PersonNoteCommand expectedCommand \u003d new PersonNoteCommand(targetIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        String validNoteCommand \u003d String.format(\"person 1 /note%s%s\", INVALID_PHONE_DESC, PHONE_DESC_BOB);","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"        assertParseSuccess(notorParser.parseCommand(validNoteCommand), expectedCommand);","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"elroygohjy"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"kaixin-hc":5,"elroygohjy":11,"EltonGohJH":7,"Yukun99":1}},{"path":"src/test/java/seedu/notor/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.NotorBuilder;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(new Notor(), new Notor(modelManager.getNotor()));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"kaixin-hc"},"content":"        userPrefs.setNotorFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"        userPrefs.setNotorFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"    public void setNotorFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setNotorFilePath(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"kaixin-hc"},"content":"    public void setNotorFilePath_validPath_setsNotorFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"kaixin-hc"},"content":"        modelManager.setNotorFilePath(path);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(path, modelManager.getNotorFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"kaixin-hc"},"content":"    public void hasPerson_personNotInNotor_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"    public void hasPerson_personInNotor_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"        modelManager.createPerson(ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"kaixin-hc"},"content":"        Notor notor \u003d new NotorBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"kaixin-hc"},"content":"        Notor differentNotor \u003d new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"kaixin-hc"},"content":"        modelManager \u003d new ModelManager(notor, userPrefs);","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"kaixin-hc"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(notor, userPrefs);","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"Yukun99"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"Yukun99"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"kaixin-hc"},"content":"        // different notor -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"kaixin-hc"},"content":"        assertNotEquals(modelManager, new ModelManager(differentNotor, userPrefs));","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"kaixin-hc"},"content":"        assertNotEquals(modelManager, new ModelManager(notor, userPrefs));","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"kaixin-hc"},"content":"        differentUserPrefs.setNotorFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"kaixin-hc"},"content":"        assertNotEquals(modelManager, new ModelManager(notor, differentUserPrefs));","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"kaixin-hc":27,"Yukun99":6,"-":100}},{"path":"src/test/java/seedu/notor/model/NotorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"public class NotorTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"    private final Notor notor \u003d new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(Collections.emptyList(), notor.getPersonList());","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(NullPointerException.class, () -\u003e notor.resetData(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"    public void resetData_withValidReadOnlyNotor_replacesData() {","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kaixin-hc"},"content":"        Notor newData \u003d getTypicalNotor();","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"        notor.resetData(newData);","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(newData, notor);","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(NullPointerException.class, () -\u003e notor.hasPerson(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"    public void hasPerson_personNotInNotor_returnsFalse() {","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kaixin-hc"},"content":"        assertFalse(notor.hasPerson(ALICE));","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"    public void hasPerson_personInNotor_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"        notor.addPerson(ALICE);","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"        assertTrue(notor.hasPerson(ALICE));","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"kaixin-hc"},"content":"    public void hasPerson_personWithSameIdentityFieldsInNotor_returnsTrue() {","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"kaixin-hc"},"content":"        notor.addPerson(ALICE);","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"        assertTrue(notor.hasPerson(editedAlice));","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":70,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e notor.getPersonList().remove(0));","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"kaixin-hc"},"content":"     * A stub ReadOnlyNotor whose persons list can violate interface constraints.","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"kaixin-hc"},"content":"    private static class NotorStub implements ReadOnlyNotor {","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"kaixin-hc"},"content":"        NotorStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"        public ObservableList\u003cSuperGroup\u003e getSuperGroups() {","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"            return null;","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"kaixin-hc":29,"EltonGohJH":6,"Yukun99":1,"-":58}},{"path":"src/test/java/seedu/notor/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"    public void setNotorFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setNotorFilePath(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"kaixin-hc":4,"-":17}},{"path":"src/test/java/seedu/notor/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kaixin-hc":2,"-":66}},{"path":"src/test/java/seedu/notor/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"Yukun99"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(List.of(\"Carol\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\").withEmail(\"alice@email.com\")","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"                .build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":10,"-":65}},{"path":"src/test/java/seedu/notor/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kaixin-hc":2,"Yukun99":2,"-":38}},{"path":"src/test/java/seedu/notor/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"Yukun99"},"content":"    public void isSame() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        assertTrue(ALICE.isSame(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        assertFalse(ALICE.isSame(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"        assertTrue(ALICE.isSame(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"        assertFalse(ALICE.isSame(editedAlice));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"        assertFalse(BOB.isSame(editedBob));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"        assertFalse(BOB.isSame(editedBob));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"Yukun99"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":86,"author":{"gitId":"Yukun99"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kaixin-hc":9,"Yukun99":19,"-":60}},{"path":"src/test/java/seedu/notor/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"kaixin-hc":2,"-":38}},{"path":"src/test/java/seedu/notor/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.person;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.exceptions.DuplicateItemException;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.util.UniqueList;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.PersonBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"Yukun99"},"content":"    private final UniqueList\u003cPerson\u003e uniquePersonList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setItem(null, ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setItem(ALICE, null));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniquePersonList.setItem(ALICE, ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"Yukun99"},"content":"        uniquePersonList.setItem(ALICE, ALICE);","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Yukun99"},"content":"        UniqueList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"Yukun99"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"Yukun99"},"content":"        uniquePersonList.setItem(ALICE, editedAlice);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"        UniqueList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"Yukun99"},"content":"        uniquePersonList.setItem(ALICE, BOB);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"Yukun99"},"content":"        UniqueList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"Yukun99"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePersonList.setItem(ALICE, BOB));","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"Yukun99"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"Yukun99"},"content":"        UniqueList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setItems((UniqueList\u003cPerson\u003e) null));","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"Yukun99"},"content":"        UniqueList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"Yukun99"},"content":"        uniquePersonList.setItems(expectedUniquePersonList);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setItems((List\u003cPerson\u003e) null));","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"Yukun99"},"content":"        uniquePersonList.setItems(personList);","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"Yukun99"},"content":"        UniqueList\u003cPerson\u003e expectedUniquePersonList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"Yukun99"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e uniquePersonList.setItems(listWithDuplicatePersons));","lastModifiedDate":"2021-10-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"Yukun99"},"content":"    // @formatter:off","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"kaixin-hc":9,"Yukun99":24,"-":136}},{"path":"src/test/java/seedu/notor/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.model.tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"kaixin-hc":2,"-":24}},{"path":"src/test/java/seedu/notor/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"    private static final String INVALID_GROUP \u003d \"test::/test\";","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    private static final String VALID_NOTE \u003d BENSON.getNote().toString();","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"elroygohjy"},"content":"    private static final String VALID_NOTE_DATE \u003d BENSON.getNote().getSavedDate();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    private static final List\u003cString\u003e VALID_GROUPS \u003d new ArrayList\u003c\u003e(BENSON.getSuperGroups());","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    private static final List\u003cString\u003e VALID_SUBGROUPS \u003d new ArrayList\u003c\u003e(BENSON.getDisplaySubGroups());","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"elroygohjy"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_NOTE, VALID_NOTE_DATE, VALID_TAGS,","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EltonGohJH"},"content":"                        VALID_GROUPS, VALID_SUBGROUPS);","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"elroygohjy"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_NOTE, VALID_NOTE_DATE, VALID_TAGS,","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"                        VALID_GROUPS, VALID_SUBGROUPS);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"elroygohjy"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_NOTE, VALID_NOTE_DATE, VALID_TAGS,","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"EltonGohJH"},"content":"                        VALID_GROUPS, VALID_SUBGROUPS);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Yukun99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"elroygohjy"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_NOTE, VALID_NOTE_DATE, VALID_TAGS,","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EltonGohJH"},"content":"                        VALID_GROUPS, VALID_SUBGROUPS);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"elroygohjy"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_NOTE, VALID_NOTE_DATE, VALID_TAGS,","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"                        VALID_GROUPS, VALID_SUBGROUPS);","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"Yukun99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"elroygohjy"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_NOTE, VALID_NOTE_DATE, VALID_TAGS,","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"EltonGohJH"},"content":"                        VALID_GROUPS, VALID_SUBGROUPS);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"elroygohjy"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_NOTE, VALID_NOTE_DATE, invalidTags,","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"EltonGohJH"},"content":"                        VALID_GROUPS, VALID_SUBGROUPS);","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"EltonGohJH"},"content":"    public void toModelType_invalidGroup_throwsIllegalValueException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"EltonGohJH"},"content":"        List\u003cString\u003e invalidGroups \u003d new ArrayList\u003c\u003e(VALID_GROUPS);","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"EltonGohJH"},"content":"        invalidGroups.add(INVALID_GROUP);","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"elroygohjy"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_NOTE, VALID_NOTE_DATE, VALID_TAGS,","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"EltonGohJH"},"content":"                        invalidGroups, VALID_SUBGROUPS);","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaixin-hc":6,"elroygohjy":9,"Yukun99":6,"EltonGohJH":14,"-":82}},{"path":"src/test/java/seedu/notor/storage/JsonNotorStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"public class JsonNotorStorageTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonNotorStorageTest\");","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"    @TempDir","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"    public Path testFolder;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"    public void readNotor_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(NullPointerException.class, () -\u003e readNotor(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"    private java.util.Optional\u003cReadOnlyNotor\u003e readNotor(String filePath) throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"        return new JsonNotorStorage(Paths.get(filePath)).readNotor(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"kaixin-hc"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"kaixin-hc"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"kaixin-hc"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"kaixin-hc"},"content":"                : null;","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kaixin-hc"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"kaixin-hc"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"kaixin-hc"},"content":"        assertFalse(readNotor(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"kaixin-hc"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"kaixin-hc"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(DataConversionException.class, () -\u003e readNotor(\"notJsonFormatNotor.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"kaixin-hc"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"    public void readNotor_invalidPersonNotor_throwDataConversionException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(DataConversionException.class, () -\u003e readNotor(\"invalidPersonNotor.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"kaixin-hc"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kaixin-hc"},"content":"    public void readNotor_invalidAndValidPersonNotor_throwDataConversionException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(DataConversionException.class, () -\u003e readNotor(\"invalidAndValidPersonNotor.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"kaixin-hc"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"kaixin-hc"},"content":"    public void readAndSaveNotor_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"        Path filePath \u003d testFolder.resolve(\"TempNotor.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"kaixin-hc"},"content":"        Notor original \u003d getTypicalNotor();","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"kaixin-hc"},"content":"        JsonNotorStorage jsonNotorStorage \u003d new JsonNotorStorage(filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"kaixin-hc"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"kaixin-hc"},"content":"        jsonNotorStorage.saveNotor(original, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"kaixin-hc"},"content":"        ReadOnlyNotor readBack \u003d jsonNotorStorage.readNotor(filePath).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(original, new Notor(readBack));","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"kaixin-hc"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"kaixin-hc"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"kaixin-hc"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"kaixin-hc"},"content":"        jsonNotorStorage.saveNotor(original, filePath);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"kaixin-hc"},"content":"        readBack \u003d jsonNotorStorage.readNotor(filePath).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(original, new Notor(readBack));","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"kaixin-hc"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"kaixin-hc"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"kaixin-hc"},"content":"        jsonNotorStorage.saveNotor(original); // file path not specified","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"kaixin-hc"},"content":"        readBack \u003d jsonNotorStorage.readNotor().get(); // file path not specified","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(original, new Notor(readBack));","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"kaixin-hc"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"kaixin-hc"},"content":"    public void saveNotor_nullNotor_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveNotor(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"kaixin-hc"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"kaixin-hc"},"content":"     * Saves {@code Notor} at the specified {@code filePath}.","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"kaixin-hc"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"kaixin-hc"},"content":"    private void saveNotor(ReadOnlyNotor notor, String filePath) {","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"kaixin-hc"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"kaixin-hc"},"content":"            new JsonNotorStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"kaixin-hc"},"content":"                    .saveNotor(notor, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"kaixin-hc"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"kaixin-hc"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-14"},{"lineNumber":103,"author":{"gitId":"kaixin-hc"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":105,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"kaixin-hc"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"kaixin-hc"},"content":"    public void saveNotor_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveNotor(new Notor(), null));","lastModifiedDate":"2021-10-14"},{"lineNumber":109,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"kaixin-hc"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kaixin-hc":110}},{"path":"src/test/java/seedu/notor/storage/JsonSerializableNotorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.util.JsonUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.testutil.TypicalPersons;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"public class JsonSerializableNotorTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableNotorTest\");","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsNotor.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonNotor.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonNotor.json\");","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"        JsonSerializableNotor dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"                JsonSerializableNotor.class).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"        Notor notorFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"        Notor typicalPersonsNotor \u003d TypicalPersons.getTypicalNotor();","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(notorFromFile, typicalPersonsNotor);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"        JsonSerializableNotor dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"kaixin-hc"},"content":"                JsonSerializableNotor.class).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"kaixin-hc"},"content":"        JsonSerializableNotor dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"kaixin-hc"},"content":"                JsonSerializableNotor.class).get();","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"kaixin-hc"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableNotor.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kaixin-hc":21,"-":26}},{"path":"src/test/java/seedu/notor/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"kaixin-hc"},"content":"        userPrefs.setNotorFilePath(Paths.get(\"data/notor.json\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"kaixin-hc":6,"-":117}},{"path":"src/test/java/seedu/notor/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.storage;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.TypicalPersons.getTypicalNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.GuiSettings;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.ReadOnlyNotor;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"        JsonNotorStorage notorStorage \u003d new JsonNotorStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"        storageManager \u003d new StorageManager(notorStorage, userPrefsStorage);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"kaixin-hc"},"content":"    public void notorReadSave() throws Exception {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"kaixin-hc"},"content":"         * {@link JsonNotorStorage} class.","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"kaixin-hc"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonNotorStorageTest} class.","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"kaixin-hc"},"content":"        Notor original \u003d getTypicalNotor();","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"kaixin-hc"},"content":"        storageManager.saveNotor(original);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"kaixin-hc"},"content":"        ReadOnlyNotor retrieved \u003d storageManager.readNotor().get();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"kaixin-hc"},"content":"        assertEquals(original, new Notor(retrieved));","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"kaixin-hc"},"content":"    public void getNotorFilePath() {","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"kaixin-hc"},"content":"        assertNotNull(storageManager.getNotorFilePath());","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":17,"-":51}},{"path":"src/test/java/seedu/notor/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"kaixin-hc":1,"-":33}},{"path":"src/test/java/seedu/notor/testutil/NotorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":" * A utility class to help with building Notor objects.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":" * {@code Notor ab \u003d new NotorBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"public class NotorBuilder {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"    private final Notor notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"    public NotorBuilder() {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"        notor \u003d new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"kaixin-hc"},"content":"    public NotorBuilder(Notor notor) {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"kaixin-hc"},"content":"        this.notor \u003d notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"kaixin-hc"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"kaixin-hc"},"content":"     * Adds a new {@code Person} to the {@code Notor} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"kaixin-hc"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"kaixin-hc"},"content":"    public NotorBuilder withPerson(Person person) {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"kaixin-hc"},"content":"        notor.addPerson(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"kaixin-hc"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"kaixin-hc"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"kaixin-hc"},"content":"    public Notor build() {","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"kaixin-hc"},"content":"        return notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"kaixin-hc"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"kaixin-hc"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"kaixin-hc":34}},{"path":"src/test/java/seedu/notor/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Note;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"    // TODO: Can change it back to full name once Yukun refactors","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"Yukun99"},"content":"    public static final String DEFAULT_NOTE \u003d \"Why is her last name Bee tho?\";","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"elroygohjy"},"content":"    public static final String DEFAULT_NOTE_DATE \u003d \"Thu., 11/02/2022\";","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"    private Note note;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"EltonGohJH"},"content":"    private HashSet\u003cString\u003e superGroups;","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"EltonGohJH"},"content":"    private HashSet\u003cString\u003e subGroups;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"elroygohjy"},"content":"        note \u003d new Note(DEFAULT_NOTE, DEFAULT_NOTE_DATE);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"EltonGohJH"},"content":"        superGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"EltonGohJH"},"content":"        subGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"        note \u003d personToCopy.getNote();","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"EltonGohJH"},"content":"        superGroups \u003d new HashSet\u003c\u003e(personToCopy.getSuperGroups());","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"EltonGohJH"},"content":"        subGroups \u003d new HashSet\u003c\u003e(personToCopy.getDisplaySubGroups());","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"EltonGohJH"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"EltonGohJH"},"content":"    public PersonBuilder withSuperGroups(String... superGroups) {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"        this.superGroups \u003d new HashSet\u003c\u003e(Arrays.asList(superGroups));","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"EltonGohJH"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"EltonGohJH"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"    public PersonBuilder withSubGroups(String... subGroups) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"EltonGohJH"},"content":"        this.subGroups \u003d new HashSet\u003c\u003e(Arrays.asList(subGroups));","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"EltonGohJH"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"Yukun99"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"Yukun99"},"content":"     * Sets the {@code Note} of the {@code Person} that we are building.","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"Yukun99"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"elroygohjy"},"content":"    public PersonBuilder withNote(String note, String noteSavedDate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"elroygohjy"},"content":"        this.note \u003d new Note(note, noteSavedDate);","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"Yukun99"},"content":"        return this;","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":117,"author":{"gitId":"EltonGohJH"},"content":"        return new Person(name, phone, email, note, tags, superGroups, subGroups);","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"kaixin-hc":5,"elroygohjy":4,"EltonGohJH":26,"Yukun99":12,"-":73}},{"path":"src/test/java/seedu/notor/testutil/PersonEditDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor.PersonEditDescriptor;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.model.person.Email;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.tag.Tag;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"public class PersonEditDescriptorBuilder {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    private final PersonEditDescriptor descriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"Yukun99"},"content":"    public PersonEditDescriptorBuilder() {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Yukun99"},"content":"        descriptor \u003d new PersonEditDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"    public PersonEditDescriptorBuilder(PersonEditDescriptor descriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Yukun99"},"content":"        this.descriptor \u003d new PersonEditDescriptor(descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"Yukun99"},"content":"    public PersonEditDescriptorBuilder(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Yukun99"},"content":"        descriptor \u003d new PersonEditDescriptor();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        descriptor.setNote(person.getNote());","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"    public PersonEditDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"Yukun99"},"content":"    public PersonEditDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"Yukun99"},"content":"    public PersonEditDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"    public PersonEditDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"    public PersonEditDescriptor build() {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"kaixin-hc":5,"Yukun99":16,"-":57}},{"path":"src/test/java/seedu/notor/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.logic.executors.person.PersonEditExecutor;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"        return String.format(\"person %s /create p:%s e:%s\", person.getName(),","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"                person.getPhone(), person.getEmail());","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    public static String getEditPersonDescriptorCommand(int index, PersonEditExecutor.PersonEditDescriptor descriptor) {","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"        String command \u003d String.format(\"person %d /edit n:%s p:%s e:%s\", index, descriptor.getName().get(),","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"EltonGohJH"},"content":"                descriptor.getPhone().get(), descriptor.getEmail().get());","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"EltonGohJH"},"content":"        return command;","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"kaixin-hc":3,"EltonGohJH":6,"-":18}},{"path":"src/test/java/seedu/notor/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":1,"-":71}},{"path":"src/test/java/seedu/notor/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kaixin-hc":4,"-":51}},{"path":"src/test/java/seedu/notor/testutil/TypicalGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"public class TypicalGroups {","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    public static final SuperGroup ORBITAL \u003d new SuperGroup(new Name(\"Orbital\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"    public static final SuperGroup CS2103 \u003d new SuperGroup(new Name(\"CS2103\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"    public static final List\u003cSuperGroup\u003e getSuperGroups() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"        if (ORBITAL.findSubGroup(\"Group1\") \u003d\u003d null) {","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"            ORBITAL.addSubGroup(TypicalSubGroups.ORBITAL_GROUP1);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cSuperGroup\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"EltonGohJH"},"content":"        temp.add(ORBITAL);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"EltonGohJH"},"content":"        temp.add(CS2103);","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"EltonGohJH"},"content":"        return temp;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"kaixin-hc":2,"EltonGohJH":21}},{"path":"src/test/java/seedu/notor/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kaixin-hc":2,"-":10}},{"path":"src/test/java/seedu/notor/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.Notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SuperGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"elroygohjy"},"content":"            .withNote(\"She lives in the Wonderland.\", \"Thu., 11/11/2011\")","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Yukun99"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"elroygohjy"},"content":"            .withNote(\"He is Ben\u0027s son.\", \"Fri, 11/11/2010\")","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"EltonGohJH"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"EltonGohJH"},"content":"            .withSuperGroups(\"Orbital\", \"CS2103\")","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"EltonGohJH"},"content":"            .withSubGroups(\"Orbital_Group1\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"heinz@example.com\").build();","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Yukun99"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Yukun99"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Yukun99"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"werner@example.com\").build();","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Yukun99"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Yukun99"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"lydia@example.com\").build();","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Yukun99"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Yukun99"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"anna@example.com\").build();","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"Yukun99"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Yukun99"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"stefan@example.com\").build();","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"Yukun99"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"Yukun99"},"content":"            .withEmail(\"hans@example.com\").build();","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Yukun99"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"Yukun99"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"EltonGohJH"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(\"Bob\")","lastModifiedDate":"2021-10-18"},{"lineNumber":67,"author":{"gitId":"Yukun99"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"kaixin-hc"},"content":"     * Returns an {@code Notor} with all the typical persons.","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"kaixin-hc"},"content":"    public static Notor getTypicalNotor() {","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"EltonGohJH"},"content":"        Notor notor \u003d new Notor();","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"EltonGohJH"},"content":"        for (SuperGroup superGroup: TypicalGroups.getSuperGroups()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"EltonGohJH"},"content":"            notor.addSuperGroup(superGroup);","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"EltonGohJH"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"EltonGohJH"},"content":"            notor.addPerson(person);","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":87,"author":{"gitId":"EltonGohJH"},"content":"        return notor;","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"kaixin-hc":13,"elroygohjy":2,"Yukun99":32,"EltonGohJH":10,"-":36}},{"path":"src/test/java/seedu/notor/testutil/TypicalSubGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EltonGohJH"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EltonGohJH"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EltonGohJH"},"content":"import seedu.notor.model.common.Name;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.model.group.SubGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EltonGohJH"},"content":"public class TypicalSubGroups {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EltonGohJH"},"content":"    public static final SubGroup ORBITAL_GROUP1 \u003d new SubGroup(new Name(\"Group1\"), null, \"Orbital\");","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EltonGohJH"},"content":"    public static final List\u003cSubGroup\u003e getSubGroups() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EltonGohJH"},"content":"        ArrayList\u003cSubGroup\u003e temp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EltonGohJH"},"content":"        temp.add(ORBITAL_GROUP1);","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EltonGohJH"},"content":"        return temp;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EltonGohJH"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EltonGohJH"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EltonGohJH"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kaixin-hc":2,"EltonGohJH":16}},{"path":"src/test/java/seedu/notor/testutil/TypicalTries.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Yukun99"},"content":"package seedu.notor.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"Yukun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"Yukun99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Yukun99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Yukun99"},"content":"import seedu.notor.commons.core.trie.Trie;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Yukun99"},"content":"public class TypicalTries {","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Yukun99"},"content":"    public static final Trie ZERO_ITEM \u003d new Trie();","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"Yukun99"},"content":"    public static final Trie ONE_ITEM \u003d Trie.createTrie(\"aaaaa\");","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"Yukun99"},"content":"    public static final Trie TWO_ITEM \u003d Trie.createTrie(\"aaaaa\", \"bbbbb\");","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"Yukun99"},"content":"    public static final Trie FOUR_ITEM \u003d Trie.createTrie(\"aaaaa\", \"aaabb\", \"aabbb\", \"bbbbb\");","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"Yukun99"},"content":"    private TypicalTries() {}","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"Yukun99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"Yukun99"},"content":"    public static List\u003cTrie\u003e getTypicalTries() {","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"Yukun99"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ZERO_ITEM, ONE_ITEM, TWO_ITEM, FOUR_ITEM));","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"Yukun99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Yukun99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Yukun99":20}},{"path":"src/test/java/seedu/notor/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kaixin-hc":1,"-":34}},{"path":"src/test/java/seedu/notor/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kaixin-hc"},"content":"package seedu.notor.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kaixin-hc"},"content":"import static seedu.notor.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"kaixin-hc"},"content":"import seedu.notor.MainApp;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e((URL) null));","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e((URL) null, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"Yukun99"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(missingFileUrl));","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"Yukun99"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"Yukun99"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(invalidFileUrl));","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Yukun99"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"Yukun99"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003c\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e((String) null));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e((String) null, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"Yukun99"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003c\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"Yukun99"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"Yukun99"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003c\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"Yukun99"},"content":"    @SuppressWarnings(\"JavadocReference\") private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kaixin-hc":3,"Yukun99":14,"-":97}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"\u003c?import seedu.notor.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"kaixin-hc":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"kaixin-hc"},"content":"\u003c?import seedu.notor.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kaixin-hc"},"content":"\u003cfx:root type\u003d\"seedu.notor.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kaixin-hc":2,"-":5}}]
